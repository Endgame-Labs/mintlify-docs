{
  "numStartups": 1262,
  "installMethod": "global",
  "autoUpdates": true,
  "tipsHistory": {
    "terminal-setup": 1,
    "shift-enter": 1244,
    "memory-command": 770,
    "theme-command": 1258,
    "prompt-queue": 218,
    "git-worktrees": 1234,
    "todo-list": 1239,
    "enter-to-steer-in-relatime": 1222,
    "claude-opus-welcome": 214,
    "# for memory": 1248,
    "install-github-app": 553,
    "permissions": 1254,
    "drag-and-drop-images": 1257,
    "double-esc": 1261,
    "continue": 1256,
    "custom-commands": 1247,
    "shift-tab": 1246
  },
  "memoryUsageCount": 5,
  "promptQueueUseCount": 61,
  "autoUpdaterStatus": "enabled",
  "userID": "7ee8dab157d4f8a02ca8d3c171475157a7294516c5051874968f07eed6029408",
  "hasCompletedOnboarding": true,
  "lastOnboardingVersion": "1.0.22",
  "projects": {
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src": {
      "allowedTools": [],
      "history": [
        {
          "display": "update @briefs/briefs/threads/cli.py to include the new feedback feature from this branch.  when a message comes back, IF --feedback-mode is set, it should ask if the user wants to provide feedback.",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "let's not add it to interactive mode just yet;  just make it a command-line flag for now",
          "pastedContents": {}
        },
        {
          "display": "update @briefs/briefs/threads/cli.py to include the new feedback feature from this branch",
          "pastedContents": {}
        },
        {
          "display": "/install-github-app ",
          "pastedContents": {}
        },
        {
          "display": "run all type-check and linting in @app-frontend/ and @briefs/ ",
          "pastedContents": {}
        },
        {
          "display": "I've added various file writes to @briefs/briefs/threads/agno_manager.py to see why i'm not getting a user id\n\nso far, it's None in each of those places\n\nhelp me add more throughout the stack so we can see where it's falling down",
          "pastedContents": {}
        },
        {
          "display": "Does each message creation from the frontend also include the user id?  Or only the initial thread creation?",
          "pastedContents": {}
        },
        {
          "display": "fix it",
          "pastedContents": {}
        },
        {
          "display": "> Now that AgnoManager can show me user context, help me understand why, when I create a thread via webapp @app-frontend/  it still doesn't seem to know who the user is",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "Now that AgnoManager can show me user context, help me understand why, when I create a thread via webapp @app-frontend/  it still doesn't seem to know who the user is",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "if this branch works, why does Threads via web give me this?\n\n[Pasted text #1 +16 lines]\n\n\n",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "what do you know about me, the USER\nwhat do you know about me, the USER\nAnswer\nSources\n\nYou work at Endgame (endgame.io), specializing in AI-powered account research to support sales teams. Your role involves engaging with target accounts, and you are currently focused on Grafana Labs—a company known for its open-source analytics and visualization platform.\nIf you’d like me to reference your exact title, responsibilities, or contact details, please provide them—otherwise, my responses are based on your actions and inquiries as a representative of Endgame. Let me know how I can assist your sales process for Grafana Labs or share information relevant to your work!\nJun 5, 2025, 3:53 PM\n\nname? email?\nname? email?\nAnswer\nSources\n\nI do not have your name or email address on file. For privacy and security, this information is not displayed unless you provide it directly or it is available in your user profile, which is not currently accessible to me.\nIf you’d like to personalize responses or use your name/title in outreach, please share that information and I’ll update my context accordingly. Let me know how you’d like to proceed!\n"
            }
          }
        },
        {
          "display": "how close is this to how the direct tool usage works in @briefs/briefs/ ",
          "pastedContents": {}
        },
        {
          "display": "commit all my changes",
          "pastedContents": {}
        },
        {
          "display": "do these new tests act like our other briefs tests?    does `make everything` run them?",
          "pastedContents": {}
        },
        {
          "display": "figure out how to test it, and test it.",
          "pastedContents": {}
        },
        {
          "display": "figure out how to test it, and test it",
          "pastedContents": {}
        },
        {
          "display": "i liked the idea of putting it into a method, actually.",
          "pastedContents": {}
        },
        {
          "display": "does that method exist?",
          "pastedContents": {}
        },
        {
          "display": "Okay, carry on.  Add comments to that effect too.",
          "pastedContents": {}
        },
        {
          "display": "Why aren't we forced to do this with the Account or the Vendor?  or are we?",
          "pastedContents": {}
        },
        {
          "display": "actually we don't need to change anything in briefs/briefs, that's a legacy system",
          "pastedContents": {}
        },
        {
          "display": "Let's work through implementation of @briefs/briefs/threads/user_context_plan.md ",
          "pastedContents": {}
        },
        {
          "display": "make the plan.md",
          "pastedContents": {}
        },
        {
          "display": "Compare the briefs LD setup to the @summarizer/ LD setup first, tell me how we did it before (that is a dead service but there may be a decent implementation pattern for LD)",
          "pastedContents": {}
        },
        {
          "display": "Make me a plan.md for how to implement this:\n\n- Two new launchdarkly flags, \"threads_force_model_openai_gpt-4.1\" and \"threads_force_model_openai_o3\"\n- Honored by @briefs/briefs/threads/agno_manager.py in the AgentBuilder (if both are true, just use o3;  if both are false, use the logic as it stands today where 5280 is on 4.1 and the others orgs are on o3)\n- This means we'll need basic feature flag checking in @briefs/ \n- This probably means we'll need a key in @briefs/.env.op\n- Figure out if we need any frontend changes to show the new flags in the debug toolbar.",
          "pastedContents": {}
        },
        {
          "display": "What's the difference between 1 and 2",
          "pastedContents": {}
        },
        {
          "display": "Which summarizer service",
          "pastedContents": {}
        },
        {
          "display": "where is launchdarkly being used and how?",
          "pastedContents": {}
        },
        {
          "display": "are you using LaunchDarkly flags that will be available in the debug view?",
          "pastedContents": {}
        },
        {
          "display": "force_o3_model_in_threads",
          "pastedContents": {}
        },
        {
          "display": "I need to introduce a feature-flag that forces o3 to be the model in @briefs/briefs/threads/ ",
          "pastedContents": {}
        },
        {
          "display": "does the new facts iterator mean we have vestigial code?",
          "pastedContents": {}
        },
        {
          "display": "update migrate-facts to do the embedding calls in batch",
          "pastedContents": {}
        },
        {
          "display": "we might not even need that salesforce_account_mart_fe table.  the facts tables probably have everything we need, as long as we can get all the fields we'll need to make a @briefs/briefs/tpuf/models.py FactData and FactDocument.\n\nno longer do we need to iterate through accounts, since now we just want to do a full-scale migration",
          "pastedContents": {}
        },
        {
          "display": "i see you made this @briefs/briefs/tpuf/better_facts_iterator.py \n\ncan you help me update @briefs/briefs/tpuf/cli/main.py migrate-facts to use the new thing?",
          "pastedContents": {}
        },
        {
          "display": "where were we?",
          "pastedContents": {}
        },
        {
          "display": "I can't figure out why @briefs/briefs/tpuf/cli/main.py migrate-facts isn't finding anything for org 6027, when I can clearly see huge amounts of facts in the BQ database.",
          "pastedContents": {}
        },
        {
          "display": "> The migrate-facts job in @briefs/tpuf/cli/  seems brittle, perhaps because I'm going through BigQuery directly and don't really know what I'm doing.\n\n  Can you inspect the rest of our python code to look for better ways to route to the Facts?  I really just want a giant list of Facts to iterate across, for a given org, within my data mesh tables.",
          "pastedContents": {}
        },
        {
          "display": "do all the linting and type-checking you can find in all my READMEs",
          "pastedContents": {}
        },
        {
          "display": "!git status",
          "pastedContents": {}
        },
        {
          "display": "no, don't do this.  also revert that last change.   let's not violate DRY here.  just add the file write lines RIGHT before it returns, so i can see the literal string it's giving the Agent.",
          "pastedContents": {}
        },
        {
          "display": "I think the tool is returning too much stuff, AND / OR it's asking for too many search results.  Please add some code to have it write its full search query, and its full tool output, to tempfoo.txt, so I can read through it\n\n[Pasted text #1 +32 lines]\n\n",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "^[[A[May 28, 2025 07:51:14 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER_FACTS] Tool called with query: Tope, account_id: 0018a00002HFfdqAAD\n[May 28, 2025 07:51:14 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER] Using namespace: dev_kyle_5280_facts\n[May 28, 2025 07:51:14 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER] Search completed: query='Tope', type=keyword, results=20, timing={'search_ms': 224.73204089328647, 'total_ms': 224.73204089328647}\n[May 28, 2025 07:51:22 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER_FACTS] Tool called with query: Tope Iluyomade title, account_id: 0018a00002HFfdqAAD\n[May 28, 2025 07:51:22 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER] Using namespace: dev_kyle_5280_facts\n[May 28, 2025 07:51:22 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER] Search completed: query='Tope Iluyomade title', type=keyword, results=10, timing={'search_ms': 225.92825000174344, 'total_ms': 225.92825000174344}\n[May 28, 2025 07:51:27 PDT] [INFO | turbopuffer_linkedin] [TURBOPUFFER_LINKEDIN] Tool called with query: Tope Iluyomade BetterUp\n[May 28, 2025 07:51:27 PDT] [INFO | turbopuffer_linkedin] Turbopuffer LinkedIn search completed: 5 results, timing={'search_ms': 304.5597079908475, 'total_ms': 304.5597079908475}\n[May 28, 2025 07:51:37 PDT] [INFO | httptools_impl] 127.0.0.1:57877 - \"POST /v3/5280/threads HTTP/1.1\" 200\n[May 28, 2025 07:51:37 PDT] [INFO | httptools_impl] 127.0.0.1:57877 - \"GET /v3/5280/threads/01JWBP17G293GJKD6GNASXVS9A HTTP/1.1\" 200\n[May 28, 2025 07:51:37 PDT] [INFO | httptools_impl] 127.0.0.1:57877 - \"GET /v3/5280/threads/01JWBP17G293GJKD6GNASXVS9A HTTP/1.1\" 200\n[May 28, 2025 07:51:44 PDT] [INFO | firestore_queue] Enqueued new task: bcdf02e0879f921dcdf48f872d495dd4e245c806\n[May 28, 2025 07:51:44 PDT] [INFO | httptools_impl] 127.0.0.1:57888 - \"POST /v3/5280/threads/01JWBP17G293GJKD6GNASXVS9A/messages HTTP/1.1\" 200\n[May 28, 2025 07:51:44 PDT] [INFO | httptools_impl] 127.0.0.1:57888 - \"GET /v3/5280/threads/01JWBP17G293GJKD6GNASXVS9A/messages/01JWBP1EE5RC92CM17Q6RF7C9K/stream HTTP/1.1\" 200\n[May 28, 2025 07:51:46 PDT] [INFO | firestore_queue] Claimed bcdf02e0879f921dcdf48f872d495dd4e245c806\n[May 28, 2025 07:51:46 PDT] [INFO | firestore_queue] Processing item bcdf02e0879f921dcdf48f872d495dd4e245c806\n[May 28, 2025 07:51:46 PDT] [INFO | flow] [FLOW] Adding Turbopuffer tools with namespace_prefix: dev_kyle\n[May 28, 2025 07:51:46 PDT] [INFO | flow] [FLOW] Added TurbopufferFactSearchTool\n[May 28, 2025 07:51:46 PDT] [INFO | flow] [FLOW] Added TurbopufferLinkedInSearchTool\n[May 28, 2025 07:51:54 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER_FACTS] Tool called with query: Austin, account_id: 0018a00002HFfdqAAD\n[May 28, 2025 07:51:54 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER] Using namespace: dev_kyle_5280_facts\n[May 28, 2025 07:51:55 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER] Search completed: query='Austin', type=semantic, results=15, timing={'embedding_ms': 308.87941701803356, 'search_ms': 292.745582992211, 'total_ms': 601.6250000102445}\n[May 28, 2025 07:52:03 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER_FACTS] Tool called with query: Austin Johnsey, account_id: 0018a00002HFfdqAAD\n[May 28, 2025 07:52:03 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER] Using namespace: dev_kyle_5280_facts\n[May 28, 2025 07:52:04 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER] Search completed: query='Austin Johnsey', type=keyword, results=15, timing={'search_ms': 193.8648329814896, 'total_ms': 193.8648329814896}\n[May 28, 2025 07:53:22 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER_FACTS] Tool called with query: Tope invited, account_id: 0018a00002HFfdqAAD\n[May 28, 2025 07:53:22 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER] Using namespace: dev_kyle_5280_facts\n[May 28, 2025 07:53:23 PDT] [INFO | turbopuffer_facts] [TURBOPUFFER] Search completed: query='Tope invited', type=keyword, results=10, timing={'search_ms': 217.24945900496095, 'total_ms': 217.24945900496095}\n[May 28, 2025 07:53:48 PDT] [INFO | app] Completed message generation for thread 01JWBP17G293GJKD6GNASXVS9A, message 01JWBP1EE5RC92CM17Q6RF7C9K\n[May 28, 2025 07:53:48 PDT] [INFO | firestore_queue] Task completed: bcdf02e0879f921dcdf48f872d495dd4e245c806\n[May 28, 2025 07:53:59 PDT] [INFO | app] Completed message generation for thread 01JWBNXSKZA5M07N79C6PWR7EV, message 01JWBNYQ1J4W65ABGH4FMXWYD9\n[May 28, 2025 07:53:59 PDT] [INFO | firestore_queue] Task completed: f81f91154c5ec431601017ffd1eb8c26272f2b13\n"
            }
          }
        },
        {
          "display": "│ > Update my threads CLI @briefs/briefs/thread_playground.py  to be based on Typer instead of click.   test thoroughly, then remove click dependencies                                                                    ",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "that account ID isn't real.  use 0018a00002HFfdqAAD",
          "pastedContents": {}
        },
        {
          "display": "test agent again",
          "pastedContents": {}
        },
        {
          "display": "suggest an update to the file that does these things",
          "pastedContents": {}
        },
        {
          "display": "read the agent's Agent Instructions in @briefs/briefs/threads/agno_manager.py to get a feeling for why it might not be callin the tools as you expect.",
          "pastedContents": {}
        },
        {
          "display": "where is the timeout you're referring to being set",
          "pastedContents": {}
        },
        {
          "display": "you try this bc it didn't work fo rme:    uv run python briefs/thread_playground.py --org-id 5280 --message \"Use the turbopuffer_search_facts tool to search for budget discussions\"",
          "pastedContents": {}
        },
        {
          "display": "so the tool works great but the agent refuses to use it?  what gives?",
          "pastedContents": {}
        },
        {
          "display": "i think the way the linkedin tool is responding to the agent is a little over-structured.  I prefer the simple detail view from the @briefs/briefs/tpuf_spike/cli/ with --agent-mode on",
          "pastedContents": {}
        },
        {
          "display": "the linkedin tool via Agno never seems to respond, even though this works great:   uv run tpuf-cli search-linkedin --query \"nerd\"",
          "pastedContents": {}
        },
        {
          "display": "/cost ",
          "pastedContents": {}
        },
        {
          "display": "how about the linkedin tool?",
          "pastedContents": {}
        },
        {
          "display": "Usage: thread_playground.py [OPTIONS]\nTry 'thread_playground.py --help' for help.\n\nError: No such option: --non-interactive",
          "pastedContents": {}
        },
        {
          "display": "give me non-interactive mode commands for each of these",
          "pastedContents": {}
        },
        {
          "display": "give me some example commands for the playground so I can see it for myself",
          "pastedContents": {}
        },
        {
          "display": "are we all done then?",
          "pastedContents": {}
        },
        {
          "display": "don't use v2, go back to the o.g.",
          "pastedContents": {}
        },
        {
          "display": "do it with a limit of 1, and not dry-run",
          "pastedContents": {}
        },
        {
          "display": "don't re-create it, just set the schema by running fact-migration via that CLI",
          "pastedContents": {}
        },
        {
          "display": "before you do anything rash, test the tpuf CLI @briefs/briefs/tpuf_spike/cli/main.py which seems to work fine.",
          "pastedContents": {}
        },
        {
          "display": "wait. we need that field  (account_id) to become filterable.",
          "pastedContents": {}
        },
        {
          "display": "account ID is different that org_id.  org must be 5280.  account ID is optional, and represents the customer AKA account being referenced by the data in the  searched documents  (see how @briefs/briefs/tpuf_spike/tpuf_searcher.py and its own CLI work)",
          "pastedContents": {}
        },
        {
          "display": "actually dev_kyle is the namespace i expect to work.\n\nfrom turbopuffer console:\n\nNamespace\nCreated    Documents    Size    Region\ndev_kyle_5280_facts    2025-05-27 16:15:31    101,621    1.42 GB    gcp-us-central1\ndev_kyle_5280_facts_backup    2025-05-26 20:08:32    101,621    1.42 GB    gcp-us-central1\ndev_kyle_6027_facts    2025-05-25 01:54:22    196    2.56 MB    gcp-us-central1\ndev_kyle_public_linkedin_profiles    2025-05-26 21:00:44    300,559    6.52 GB    gcp-us-central1\ndev_kyle_public_linkedin_profiles_backup    2025-05-27 16:06:19    255,800    5.56 GB    gcp-us-central1\n\n\n",
          "pastedContents": {}
        },
        {
          "display": "but i want to use the new turbopuffer tools, not the old fact searching stuff that leans on BigQuery and Data-Mesh",
          "pastedContents": {}
        },
        {
          "display": "actually nevermind, let's just keep working on our plan.md in this branch.  we'll merge it all into main in a few days once Turbopuffer works well with chat.",
          "pastedContents": {}
        },
        {
          "display": "we made this CLI in the wrong branch.  what's more, this branch has diverged quite a bit from main.   I'd love for it to actually be in a different branch called `kyle/END-3863-thread-playground`",
          "pastedContents": {}
        },
        {
          "display": "we made this CLI in the wrong branch.  I'd love for it to actually be in a different branch called `kyle/END-3863-thread-playground`",
          "pastedContents": {}
        },
        {
          "display": "!git status",
          "pastedContents": {}
        },
        {
          "display": "always run python with uv",
          "pastedContents": {}
        },
        {
          "display": "test CLI first",
          "pastedContents": {}
        },
        {
          "display": "i don't want the pyyaml or the .yml config stuff.  keep it simple, just put the config at the top of the CLI file for now.",
          "pastedContents": {}
        },
        {
          "display": "Go.",
          "pastedContents": {}
        },
        {
          "display": "I think to start, you should make a CLI to exercise the Agno system, so we don't have to use the webapp to test out our change as you go.\n\nThere's a pretty bad script at @briefs/generate_thread_test_script.py but it does the basics.  What it can't do is consume the streaming GET endpoint after creating a new thread.  But otherwise it works.\n\nAdd to your markdown to first make a thread_playground CLI and get it working.  That way, you'll be able to use it in small doses throughout this larger build.",
          "pastedContents": {}
        },
        {
          "display": "Take your time and ultrathink, think step by step.\n\nCreate a plan, in a new plan.md file, for how to implement a solution.\n\nThe situation:  We have an Agno-based chat agent -- see @briefs/briefs/threads/agno_manager.py.\nIt has a variety of tools at its disposal -- see @briefs/briefs/tools/ especially  @briefs/briefs/tools/tool_box.py\n\nUnrelatedly:  we have a Turbopuffer document model @briefs/briefs/tpuf_spike/models.py and search engine bindings @briefs/briefs/tpuf_spike/tpuf_searcher.py and a fully-functional CLI @briefs/briefs/tpuf_spike/cli/ \nto learn about Turbopuffer itself, see https://turbopuffer.com/docs and read all the docs pages you find there.  Also inspect their python SDK at https://github.com/turbopuffer/turbopuffer-python \n\nWhat I want to do is expose Turbopuffer search as a tool that our chat agent (powered by Agno) can use.\n\nPlease read all the above and give me a plan.md file to describe how you would implement it.",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "Take your time and ultrathink, think step by step.\n\nCreate a plan, in a new plan.md file, for how to implement a solution.\n\nThe situation:  We have an Agno-based chat agent -- see @briefs/briefs/threads/agno_manager.py.\nIt has a variety of tools at its disposal -- see @briefs/briefs/tools/ especially  @briefs/briefs/tools/tool_box.py\n\nUnrelatedly:  we have a Turbopuffer document model @briefs/briefs/tpuf_spike/models.py and search engine bindings @briefs/briefs/tpuf_spike/tpuf_searcher.py and a fully-functional CLI @briefs/briefs/tpuf_spike/cli/ \nto learn about Turbopuffer itself, see https://turbopuffer.com/docs and read all the docs pages you find there.  Also inspect their python SDK at https://github.com/turbopuffer/turbopuffer-python \n\nWhat I want to do is expose Turbopuffer search as a tool that our chat agent (powered by Agno) can use.\n\nPlease read all the above and give me a plan.md file to describe how you would implement it.",
          "pastedContents": {}
        },
        {
          "display": "Help me figure out where we're storing full-resolution LinkedIn profiles.  I found a BQ table called \"linkedin_profile\" in each org's DBT dataset, and it has a column called \"profile_path.\"\n\nFor example, profile_path looks like this on one record:     ```org=public/raw/integration=linkedin/connection=0be231c3-d9b2-4e4a-ab47-fd26262eff62/ymd=2024-10-25/hour=01/3f625c95-ae8c-4e08-8439-0cce16a2e0dc-profile.json\n```\n\nShow me where the files are stored and how you found that out.",
          "pastedContents": {}
        },
        {
          "display": "i don't want that, i just want to download everything in the buckets",
          "pastedContents": {}
        },
        {
          "display": "Help me figure out where we're storing full-resolution LinkedIn profiles.  I found a BQ table called \"linkedin_profile\" in each org's DBT dataset, and it has a column called \"profile_path.\"\n\nFor example, profile_path looks like this on one record:     ```org=public/raw/integration=linkedin/connection=0be231c3-d9b2-4e4a-ab47-fd26262eff62/ymd=2024-10-25/hour=01/3f625c95-ae8c-4e08-8439-0cce16a2e0dc-profile.json\n```\n\nI need to figure out how to download those files, across all orgs.",
          "pastedContents": {}
        },
        {
          "display": "commit my changes",
          "pastedContents": {}
        },
        {
          "display": "there must be a prettier way to do this lol",
          "pastedContents": {}
        },
        {
          "display": "if you do git status you'll notice that I've moved some things and renamed them, into @briefs/briefs/tpuf_spike/ \n\nmake them runnable from inside that dir please",
          "pastedContents": {}
        },
        {
          "display": "go through my python code and give me an estimate of docstring coverage",
          "pastedContents": {}
        },
        {
          "display": "check all my docstrings",
          "pastedContents": {}
        },
        {
          "display": "where does the actual BigQuery table get created?",
          "pastedContents": {}
        },
        {
          "display": "where does dataset name get decided",
          "pastedContents": {}
        },
        {
          "display": "How do I define a new Datamesh table",
          "pastedContents": {}
        },
        {
          "display": "is claimify in there yet",
          "pastedContents": {}
        },
        {
          "display": "that clearly affects what i reclone locally, but what about preview environments?  those are deployed out of the GitHub PR, and as such they don't have access to my local environment ariables",
          "pastedContents": {}
        },
        {
          "display": "How do i control which org IDs are cloned into Preview environments in data mesh?",
          "pastedContents": {}
        },
        {
          "display": "seems like it's no longer fetching org now that we've changed this",
          "pastedContents": {}
        },
        {
          "display": "make everything",
          "pastedContents": {}
        },
        {
          "display": "any more toolbox stuff to clean up?",
          "pastedContents": {}
        },
        {
          "display": "okay let's go with the protocol",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "hasTrustDialogAccepted": true,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "core.py",
        "summarizer.py"
      ],
      "exampleFilesGeneratedAt": 1749092476605,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 0.8979630499999995,
      "lastAPIDuration": 330315,
      "lastDuration": 652235,
      "lastLinesAdded": 81,
      "lastLinesRemoved": 2,
      "lastTotalInputTokens": 18827,
      "lastTotalOutputTokens": 10812,
      "lastTotalCacheCreationInputTokens": 68501,
      "lastTotalCacheReadInputTokens": 1572249,
      "lastSessionId": "afa47ce6-8602-4b73-b66c-96bea95a0e90"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/app-frontend": {
      "allowedTools": [
        "Bash(npm run lint:*)",
        "Bash(npx prettier:*)"
      ],
      "history": [
        {
          "display": "okay so that org ID was deleted.   but I gather that I'm somehow still set to \"impersonate\" that org.  is there a way, without the UI loading, to force myself to stop impersonating an org?",
          "pastedContents": {}
        },
        {
          "display": "ONLY add the logging",
          "pastedContents": {}
        },
        {
          "display": "no just add some loggging so i can see what's happening at least",
          "pastedContents": {}
        },
        {
          "display": "help me figure this bug out\n\nNotFoundError: No Organization found\n\nsrc/app/(authed)/_components/DebugBar/index.tsx (68:24) @ async OrgSelector\n\n\n  66 |\n  67 | async function OrgSelector({ userContext }: { userContext: UserContext }) {\n> 68 |   const organization = await prismaClient.organization.findFirstOrThrow({\n     |                        ^\n  69 |     where: { id: userContext.currentOrganizationId },\n  70 |   });\n  71 |\nCall Stack\n9\n\nShow 5 ignore-listed frame(s)\nasync OrgSelector\nsrc/app/(authed)/_components/DebugBar/index.tsx (68:24)\nDebugBarContainer\nsrc/app/(authed)/_components/DebugBar/DebugBarContainer.tsx (26:7)\n",
          "pastedContents": {}
        },
        {
          "display": "what route do I hit to logout",
          "pastedContents": {}
        },
        {
          "display": "tell me more about it",
          "pastedContents": {}
        },
        {
          "display": "which commits in git log cite Claude Code",
          "pastedContents": {}
        },
        {
          "display": "Make external links from chat responses do target=\"_blank\"",
          "pastedContents": {}
        },
        {
          "display": "on the Account page, Why are the briefs cards in the carousel not popping up until the Summary at the top is done?",
          "pastedContents": {}
        },
        {
          "display": "The chat modal should render responses from server as markdown",
          "pastedContents": {}
        },
        {
          "display": "We removed a tool called `summarize_person_interactions` recently.  Find places where we're relying on that.",
          "pastedContents": {}
        },
        {
          "display": "do bun lint",
          "pastedContents": {}
        },
        {
          "display": "Fix these linting issues.  ./src/app/_graphql/resolvers/accounts.ts\n396:1  Error: Delete `······`  prettier/prettier\n399:75  Error: Insert `⏎··········`  prettier/prettier\n409:28  Error: Insert `⏎···········`  prettier/prettier\n413:30  Error: Insert `⏎·············`  prettier/prettier\n418:79  Error: Replace `·cause:·summaryError` with `⏎············cause:·summaryError,⏎·········`  prettier/prettier\n\n./src/services/summaryService/index.ts\n63:30  Error: Replace ``Failed·to·get·summary·for·entity·${input.entityId}`,·{·cause:·error·}` with `⏎············`Failed·to·get·summary·for·entity·${input.entityId}`,⏎············{·cause:·error·},⏎··········`  prettier/prettier\n73:2  Error: Insert `⏎`  prettier/prettier",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "enableAllProjectMcpServers": false,
      "hasTrustDialogAccepted": false,
      "ignorePatterns": [],
      "exampleFiles": [
        "models.py",
        "app.py",
        "base.py",
        "summarizer.py",
        "core.py"
      ],
      "exampleFilesGeneratedAt": 1746813191584,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 0.10128219999999999,
      "lastAPIDuration": 242336,
      "lastDuration": 4713074,
      "lastLinesAdded": 2,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 24754,
      "lastTotalOutputTokens": 5946,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "312380b5-c385-4e1d-a6a5-55c0c2c382eb"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs": {
      "allowedTools": [],
      "history": [
        {
          "display": "just \"[END-3945] Add message feedback support to threads CLI\"",
          "pastedContents": {}
        },
        {
          "display": "commit my current code changes and link it to that ticket",
          "pastedContents": {}
        },
        {
          "display": "make a new linear triage ticket called \"Add message feedback to CLI (thumbs-up, thumbs-down, comment)\"",
          "pastedContents": {}
        },
        {
          "display": "commit my changes",
          "pastedContents": {}
        },
        {
          "display": "commit my changes and push them, creating a draft PR",
          "pastedContents": {}
        },
        {
          "display": "yes",
          "pastedContents": {}
        },
        {
          "display": "What test directories do we have today?  Anything specifically for threads?",
          "pastedContents": {}
        },
        {
          "display": "Why do you think we should delete the tests?",
          "pastedContents": {}
        },
        {
          "display": "first, re-check the linear ticket to adjust to new payload requirements.",
          "pastedContents": {}
        },
        {
          "display": "let's start on the API endpoint ticket.\n\nre-read the ticket so you can see the plan for it, and start implementing it in @briefs/threads/api.py ",
          "pastedContents": {}
        },
        {
          "display": "let's start on the API endpoint ticket.\n\nI want it to:\n\ntake in a message ID",
          "pastedContents": {}
        },
        {
          "display": "let's start on the API endpoint\n\nI want to:take in a message ID",
          "pastedContents": {}
        },
        {
          "display": "take the API and the BQ mesh tickets, assign them to me (kyle@endgame.io)\n\nMake me a new git branch that has both ticket IDs in its name",
          "pastedContents": {}
        },
        {
          "display": "Show me the tickets in that project we made",
          "pastedContents": {}
        },
        {
          "display": "please put it in my claude.md",
          "pastedContents": {}
        },
        {
          "display": "!pwd",
          "pastedContents": {}
        },
        {
          "display": "!cd ../..",
          "pastedContents": {}
        },
        {
          "display": "!pwd",
          "pastedContents": {}
        },
        {
          "display": "pwd!",
          "pastedContents": {}
        },
        {
          "display": "where did you store this?",
          "pastedContents": {}
        },
        {
          "display": "Tickets within a project should always be in Todo state, never triage.  Update your memory to understand this.",
          "pastedContents": {}
        },
        {
          "display": "please move them to TODO status",
          "pastedContents": {}
        },
        {
          "display": "my Linear app says the issues are hidden by display options.  any idea why?",
          "pastedContents": {}
        },
        {
          "display": "put those issues inside the project.",
          "pastedContents": {}
        },
        {
          "display": "My team should always be \"Endgame 2.0\" for all things",
          "pastedContents": {}
        },
        {
          "display": "Shaping is the project status",
          "pastedContents": {}
        },
        {
          "display": "make a new Linear project under Shaping called \"User feedback for thread answers (thumbs-up thumbs-down, comment)\"\n\nassign leader to Eduardo\n\nmake 3 tickets:\n\n- frontend controls\n- BQ mesh data model\n- API endpoint",
          "pastedContents": {}
        },
        {
          "display": "run my tests first",
          "pastedContents": {}
        },
        {
          "display": "pull in 4792, handle merge conflicts from main",
          "pastedContents": {}
        },
        {
          "display": "what open PRs do i have",
          "pastedContents": {}
        },
        {
          "display": "close 4522 without merging",
          "pastedContents": {}
        },
        {
          "display": "check out the User context one and run my tests",
          "pastedContents": {}
        },
        {
          "display": "What open PRs do i have",
          "pastedContents": {}
        },
        {
          "display": "list them by stage",
          "pastedContents": {}
        },
        {
          "display": "list all active projects",
          "pastedContents": {}
        },
        {
          "display": "Update the Interactive Slack bot to have a target date of June 16th for internal testing",
          "pastedContents": {}
        },
        {
          "display": "Describe the work that's been done on the Artifact Knowledge Upload project.  Include relevant git diffs.",
          "pastedContents": {}
        },
        {
          "display": "Okay now what about across all developers?",
          "pastedContents": {}
        },
        {
          "display": "But you told me I personally had 2 tickets in review",
          "pastedContents": {}
        },
        {
          "display": "what tickets are in review and who's working on each of them?",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "what tickets are in review and who's working on each of them?",
          "pastedContents": {}
        },
        {
          "display": "show me the Engineering projects that are active",
          "pastedContents": {}
        },
        {
          "display": "switch to that branch",
          "pastedContents": {}
        },
        {
          "display": "tell me more about the one about logged-in user info",
          "pastedContents": {}
        },
        {
          "display": "List my issues",
          "pastedContents": {}
        },
        {
          "display": "what mcp servers are you set up with rn",
          "pastedContents": {}
        },
        {
          "display": "How do I add them to my claude code configuration?",
          "pastedContents": {}
        },
        {
          "display": "can you handle MCP servers",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "How do i set up linear MCP server",
          "pastedContents": {}
        },
        {
          "display": "why would threads-cli give me this:  Error: 422 - {\"detail\":[{\"type\":\"missing\",\"loc\":[\"body\",\"use4_1\"],\"msg\":\"Field required\",\"input\":{\"content\":\"how's it going?\"}}]}\n\n@briefs/threads/cli.py ",
          "pastedContents": {}
        },
        {
          "display": "commit my changes",
          "pastedContents": {}
        },
        {
          "display": "if this branch works, then why do I see this from webchat\n\n[Pasted text #1 +16 lines]\n\n",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "what do you know about me, the USER\nwhat do you know about me, the USER\nAnswer\nSources\n\nYou work at Endgame (endgame.io), specializing in AI-powered account research to support sales teams. Your role involves engaging with target accounts, and you are currently focused on Grafana Labs—a company known for its open-source analytics and visualization platform.\nIf you’d like me to reference your exact title, responsibilities, or contact details, please provide them—otherwise, my responses are based on your actions and inquiries as a representative of Endgame. Let me know how I can assist your sales process for Grafana Labs or share information relevant to your work!\nJun 5, 2025, 3:53 PM\n\nname? email?\nname? email?\nAnswer\nSources\n\nI do not have your name or email address on file. For privacy and security, this information is not displayed unless you provide it directly or it is available in your user profile, which is not currently accessible to me.\nIf you’d like to personalize responses or use your name/title in outreach, please share that information and I’ll update my context accordingly. Let me know how you’d like to proceed!\n"
            }
          }
        },
        {
          "display": "commit my changes",
          "pastedContents": {}
        },
        {
          "display": "run make everything and fix what breaks",
          "pastedContents": {}
        },
        {
          "display": "get rid of unstaged files",
          "pastedContents": {}
        },
        {
          "display": "`make everything` then commit my changes",
          "pastedContents": {}
        },
        {
          "display": "merge origin/main and help me with conflicts",
          "pastedContents": {}
        },
        {
          "display": "commit my changes",
          "pastedContents": {}
        },
        {
          "display": "continue",
          "pastedContents": {}
        },
        {
          "display": "so in @.env.op i got this PR feedback:\n\n@dorkitude what is the purpose of having a fake api key here? We should probably just have the turbopuffer_api_key variable in settings.py be optional (which is typically what we do) when we add a var that isn't being used everywhere immediate. If it's not set to optional, all the deploys that don't have it will break upon startup (we now have around 4-5 deploys that I think this would affect)\n\nplease fix",
          "pastedContents": {}
        },
        {
          "display": "This seems a little heavyweight.  Isn't this already being done elsewhere, that we can just import?",
          "pastedContents": {}
        },
        {
          "display": "Give me a thorough plan.md for this feature.",
          "pastedContents": {}
        },
        {
          "display": "But how specifically do I fetch the user info?",
          "pastedContents": {}
        },
        {
          "display": "But once we have that user_id, the Briefs API seems to understand it, where briefs/threads doesn't\n\nend goal:  I want the @briefs/threads/agno_manager.py instructions to understand who the user really is",
          "pastedContents": {}
        },
        {
          "display": "in @briefs we're able to get the current user as a context input somehow\n\nplease tell me where that is and what it looks like",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "expand on the \"detailed prompts\" you referenced here.",
          "pastedContents": {}
        },
        {
          "display": "show me all tools you used for that question, and all commands",
          "pastedContents": {}
        },
        {
          "display": "Does Agno call them today?",
          "pastedContents": {}
        },
        {
          "display": "can @briefs/threads/ currently see Slack message data or slack facts?",
          "pastedContents": {}
        },
        {
          "display": "continue",
          "pastedContents": {}
        },
        {
          "display": "just use the @briefs/tpuf/README.md ",
          "pastedContents": {}
        },
        {
          "display": "I need help breaking this branch up into several different branches.\n\nkyle/tpuf-models-and-cli\nkyle/thread-playground-cli",
          "pastedContents": {}
        },
        {
          "display": "!open .",
          "pastedContents": {}
        },
        {
          "display": "3 never stop",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +67 lines]\n\nFor each deal in @reports/Accuris_6017_June_2025_Deal_Closing_Analysis_Report.html, Create a one-page deep-dive, also in HTML format.  Search thoroughly through all comms related to that account, include your sources (document type, document name, ID, participant names, etc)",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "<agent_instructions>\n* Pretend you are an AI CRM chat.  The user will ask you questions about their customers and deals they're working\n* Tools:\n    * Fact search:    `uv run tpuf-cli search-facts --agent-mode --query \"INSERT QUERY HERE\" --org-id 6017 --top-k 50 --days-filter 30\n        * Always include org-id on Fact searches.\n        * This is a vector-based search.\n        * You can also use `search-facts-bm25` for keyword-based search, such as when you're looking for a specific person, or a tag like \"call_transcript\"\n    * Person Profile search:   `uv run tpuf-cli search-linkedin --agent-mode --query \"Jeremy Johnson Facebook Engineer Boston\"`\n* Tool Notes:\n    * You can do larger top-k and detail-results values if you like, up to 1000.\n    * You can also increase or decrease days-filter on fact searches.\n    * \n    * The User is Matt Baker, VP of Sales at Accuris.  The vendor is Accuris.\n    * You should always cite your sources, and include dates whenever possible.\n</agent_instructions>\n\n\nExport a full HTML report in the reports directory, including my company name and org ID in the filename, plus a simple descriptor of the report.\nThe style and color scheme should be similar to Endgame's (check out this screenshot file @accountpage.png).\nAfter you generate the HTML report, use `uv python -c` to render this as a PNG via playwright, and put that PNG in the reports directory.\n\n\n\n<value proposition>\n# Description: The value proposition of the VENDOR\n\n## Core value proposition\n- Accuris transforms technical content into a competitive advantage, delivering trusted knowledge, full traceability, and seamless interoperability across the product lifecycle.\n- Accuris delivers the world’s most comprehensive and authoritative technical content, seamlessly integrated into engineering and product development workflows, enabling unmatched knowledge management, traceability, and interoperability across the enterprise.\n- Accuris provides the largest curated library of standards, specifications, codes, regulations, and engineering reference materials. Our exclusive relationships with global Standards Development Organizations (SDOs) ensure unrivaled accuracy, currency, and trust. \n- Accuris embeds technical content directly into daily workflows with integrations to PLM, ERP, and engineering design tools \n- Accuris links authoritative standards directly to product requirements, ensuring full traceability from concept through design, testing, and compliance. \n- Accuris centralizes critical knowledge assets into one accessible environment, dramatically improving enterprise knowledge management, by powering contextual search, technical research, and decision support, enabling faster problem-solving and smarter innovation. \n- Accuris helps engineering and supply chain teams select preferred parts, avoid obsolescence, reduce sourcing risks, and lower lifecycle costs. \n- Accuris delivers the leading parts and logistics database for defense, aerospace, and heavy industry, empowering teams with real-time sourcing, pricing, and compliance data. ISS (International Standards Subscription) provides a unified, digital access platform for enterprise-wide standards management, with full version control and entitlement governance.\n- Accuris has unmatched domain expertise, spanning 60+ years in engineering data curation and 20+ years developing AI tools tailored to technical workflows.\n\n## Guidelines\n- Use core value drivers should be used to identify and map to specific themes and needs that are relevant to CLIENT\n</value proposition>\n\n<sales framework>\n# Description: The sales methodology that sellers at VENDOR should adopt when approaching CLIENTs and communicating with people at CLIENT. \n\n## Overview: Insight Selling means leading customer conversations by delivering unexpected insights, challenging assumptions, reframing problems, and revealing hidden risks, rather than just responding to known needs. At Accuris, Insight Selling fits naturally into the Value Selling Framework, because our true value is not just \"access to content,\" but helping customers see and solve bigger business risks they didn’t fully recognize. \n\n## Key principles\n\n### Teach them something new\n- Teaching customers that the real threat isn't the content they can or can’t find, it's the cost, risk, and delay caused by disconnected technical knowledge and showing that Accuris is the only way to fix it at scale. \n- Show customers how fragmented technical knowledge, manual standards management, or sourcing blind spots are creating hidden costs, rework, compliance risks, and time-to-market delays, even if they thought their current processes were \"good enough.\"\n\n### Reframe their problems\n- Customers think they have a \"search problem\" or a \"compliance checklist\" problem. Accuris helps them realize they actually have a systemic traceability, risk exposure, and inefficiency problem that directly threatens revenue, regulatory standing, and mission success.\n\n### Quantify unseen impacts\n- Use metrics (like debooks, sourcing delays, rework costs) to make hidden problems visible and urgent, moving the conversation from features to business outcomes.\n\n### Connect value to strategic initiatives\n- Tie Accuris to larger customer imperatives like Digital Engineering adoption, Digital Thread enablement, audit readiness, faster time-to-field, and supply chain resilience.\n\n## Guidelines\n- Incorporate the key principles of insights selling into the output of relevant sections so that the content helps achieve any or all of the key principles.\n</sales framework>\n\n\n**User question**\n"
            }
          }
        },
        {
          "display": "no problems with it booting into read-only mode?",
          "pastedContents": {}
        },
        {
          "display": "It doesn't look like you updated the report html, based on its modified date.",
          "pastedContents": {}
        },
        {
          "display": "check my mac's disk health",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +67 lines]\n\nWhat deals can close between now and the end of the month?\n\nBe thorough, go through all my accounts, go through all my comms,\nperform as many semantic searches as you need.\n\nPerform as many keyword searches as you need.\n\n│ > Another thing you can try searching for is simply all call_transcripts, all emails, all notes, etc in the period.  Use THAT to find the account names, then search for the promising accounts to go deeper into each one.                                 │\nFor each deal with recent comms, search for ALL comms that include that deal name or account name or account ID.\n\nGather all this info into a comprehensive report.\n\n\nShow your sources.  IMPORTANT! Show your sources, including the document type and document ID and the full quote.  Get lots of quotes per account to make the report look whole.",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "<agent_instructions>\n* Pretend you are an AI CRM chat.  The user will ask you questions about their customers and deals they're working\n* Tools:\n    * Fact search:    `uv run tpuf-cli search-facts --agent-mode --query \"INSERT QUERY HERE\" --org-id 6017 --top-k 50 --days-filter 30\n        * Always include org-id on Fact searches.\n        * This is a vector-based search.\n        * You can also use `search-facts-bm25` for keyword-based search, such as when you're looking for a specific person, or a tag like \"call_transcript\"\n    * Person Profile search:   `uv run tpuf-cli search-linkedin --agent-mode --query \"Jeremy Johnson Facebook Engineer Boston\"`\n* Tool Notes:\n    * You can do larger top-k and detail-results values if you like, up to 1000.\n    * You can also increase or decrease days-filter on fact searches.\n    * \n    * The User is Matt Baker, VP of Sales at Accuris.  The vendor is Accuris.\n    * You should always cite your sources, and include dates whenever possible.\n</agent_instructions>\n\n\nExport a full HTML report in the reports directory, including my company name and org ID in the filename, plus a simple descriptor of the report.\nThe style and color scheme should be similar to Endgame's (check out this screenshot file @accountpage.png).\nAfter you generate the HTML report, use `uv python -c` to render this as a PNG via playwright, and put that PNG in the reports directory.\n\n\n\n<value proposition>\n# Description: The value proposition of the VENDOR\n\n## Core value proposition\n- Accuris transforms technical content into a competitive advantage, delivering trusted knowledge, full traceability, and seamless interoperability across the product lifecycle.\n- Accuris delivers the world’s most comprehensive and authoritative technical content, seamlessly integrated into engineering and product development workflows, enabling unmatched knowledge management, traceability, and interoperability across the enterprise.\n- Accuris provides the largest curated library of standards, specifications, codes, regulations, and engineering reference materials. Our exclusive relationships with global Standards Development Organizations (SDOs) ensure unrivaled accuracy, currency, and trust. \n- Accuris embeds technical content directly into daily workflows with integrations to PLM, ERP, and engineering design tools \n- Accuris links authoritative standards directly to product requirements, ensuring full traceability from concept through design, testing, and compliance. \n- Accuris centralizes critical knowledge assets into one accessible environment, dramatically improving enterprise knowledge management, by powering contextual search, technical research, and decision support, enabling faster problem-solving and smarter innovation. \n- Accuris helps engineering and supply chain teams select preferred parts, avoid obsolescence, reduce sourcing risks, and lower lifecycle costs. \n- Accuris delivers the leading parts and logistics database for defense, aerospace, and heavy industry, empowering teams with real-time sourcing, pricing, and compliance data. ISS (International Standards Subscription) provides a unified, digital access platform for enterprise-wide standards management, with full version control and entitlement governance.\n- Accuris has unmatched domain expertise, spanning 60+ years in engineering data curation and 20+ years developing AI tools tailored to technical workflows.\n\n## Guidelines\n- Use core value drivers should be used to identify and map to specific themes and needs that are relevant to CLIENT\n</value proposition>\n\n<sales framework>\n# Description: The sales methodology that sellers at VENDOR should adopt when approaching CLIENTs and communicating with people at CLIENT. \n\n## Overview: Insight Selling means leading customer conversations by delivering unexpected insights, challenging assumptions, reframing problems, and revealing hidden risks, rather than just responding to known needs. At Accuris, Insight Selling fits naturally into the Value Selling Framework, because our true value is not just \"access to content,\" but helping customers see and solve bigger business risks they didn’t fully recognize. \n\n## Key principles\n\n### Teach them something new\n- Teaching customers that the real threat isn't the content they can or can’t find, it's the cost, risk, and delay caused by disconnected technical knowledge and showing that Accuris is the only way to fix it at scale. \n- Show customers how fragmented technical knowledge, manual standards management, or sourcing blind spots are creating hidden costs, rework, compliance risks, and time-to-market delays, even if they thought their current processes were \"good enough.\"\n\n### Reframe their problems\n- Customers think they have a \"search problem\" or a \"compliance checklist\" problem. Accuris helps them realize they actually have a systemic traceability, risk exposure, and inefficiency problem that directly threatens revenue, regulatory standing, and mission success.\n\n### Quantify unseen impacts\n- Use metrics (like debooks, sourcing delays, rework costs) to make hidden problems visible and urgent, moving the conversation from features to business outcomes.\n\n### Connect value to strategic initiatives\n- Tie Accuris to larger customer imperatives like Digital Engineering adoption, Digital Thread enablement, audit readiness, faster time-to-field, and supply chain resilience.\n\n## Guidelines\n- Incorporate the key principles of insights selling into the output of relevant sections so that the content helps achieve any or all of the key principles.\n</sales framework>\n\n\n**User question**\n"
            }
          }
        },
        {
          "display": "try again with top-k of only 30",
          "pastedContents": {}
        },
        {
          "display": "try again",
          "pastedContents": {}
        },
        {
          "display": "Another thing you can try searching for is simply all call_transcripts, all emails, all notes, etc in the period.  Use THAT to find the account names, then search for the promising accounts to go deeper into each one.",
          "pastedContents": {}
        },
        {
          "display": "Now look for non-renewals / New Business Only",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +67 lines]\n\nWhat are all the deals can we close this month and their status?  Go deep, ultra-think, run whatever semantic search queries you need to run to help me get to an answer.  Try hard to not miss analyzing any accounts.\n\nShow your sources, especially including dates of events in the past and future, plus document type and IDs.",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "<agent_instructions>\n* Pretend you are an AI CRM chat.  The user will ask you questions about their customers and deals they're working\n* Tools:\n    * Fact search:    `uv run tpuf-cli search-facts --agent-mode --query \"INSERT QUERY HERE\" --org-id 6017 --top-k 50 --days-filter 30\n        * Always include org-id on Fact searches.\n        * This is a vector-based search.\n        * You can also use `search-facts-bm25` for keyword-based search, such as when you're looking for a specific person, or a tag like \"call_transcript\"\n    * Person Profile search:   `uv run tpuf-cli search-linkedin --agent-mode --query \"Jeremy Johnson Facebook Engineer Boston\"`\n* Tool Notes:\n    * You can do larger top-k and detail-results values if you like, up to 1000.\n    * You can also increase or decrease days-filter on fact searches.\n    * \n    * The User is Matt Baker, VP of Sales at Accuris.  The vendor is Accuris.\n    * You should always cite your sources, and include dates whenever possible.\n</agent_instructions>\n\n\nExport a full HTML report in the reports directory, including my company name and org ID in the filename, plus a simple descriptor of the report.\nThe style and color scheme should be similar to Endgame's (check out this screenshot file @accountpage.png).\nAfter you generate the HTML report, use `uv python -c` to render this as a PNG via playwright, and put that PNG in the reports directory.\n\n\n\n<value proposition>\n# Description: The value proposition of the VENDOR\n\n## Core value proposition\n- Accuris transforms technical content into a competitive advantage, delivering trusted knowledge, full traceability, and seamless interoperability across the product lifecycle.\n- Accuris delivers the world’s most comprehensive and authoritative technical content, seamlessly integrated into engineering and product development workflows, enabling unmatched knowledge management, traceability, and interoperability across the enterprise.\n- Accuris provides the largest curated library of standards, specifications, codes, regulations, and engineering reference materials. Our exclusive relationships with global Standards Development Organizations (SDOs) ensure unrivaled accuracy, currency, and trust. \n- Accuris embeds technical content directly into daily workflows with integrations to PLM, ERP, and engineering design tools \n- Accuris links authoritative standards directly to product requirements, ensuring full traceability from concept through design, testing, and compliance. \n- Accuris centralizes critical knowledge assets into one accessible environment, dramatically improving enterprise knowledge management, by powering contextual search, technical research, and decision support, enabling faster problem-solving and smarter innovation. \n- Accuris helps engineering and supply chain teams select preferred parts, avoid obsolescence, reduce sourcing risks, and lower lifecycle costs. \n- Accuris delivers the leading parts and logistics database for defense, aerospace, and heavy industry, empowering teams with real-time sourcing, pricing, and compliance data. ISS (International Standards Subscription) provides a unified, digital access platform for enterprise-wide standards management, with full version control and entitlement governance.\n- Accuris has unmatched domain expertise, spanning 60+ years in engineering data curation and 20+ years developing AI tools tailored to technical workflows.\n\n## Guidelines\n- Use core value drivers should be used to identify and map to specific themes and needs that are relevant to CLIENT\n</value proposition>\n\n<sales framework>\n# Description: The sales methodology that sellers at VENDOR should adopt when approaching CLIENTs and communicating with people at CLIENT. \n\n## Overview: Insight Selling means leading customer conversations by delivering unexpected insights, challenging assumptions, reframing problems, and revealing hidden risks, rather than just responding to known needs. At Accuris, Insight Selling fits naturally into the Value Selling Framework, because our true value is not just \"access to content,\" but helping customers see and solve bigger business risks they didn’t fully recognize. \n\n## Key principles\n\n### Teach them something new\n- Teaching customers that the real threat isn't the content they can or can’t find, it's the cost, risk, and delay caused by disconnected technical knowledge and showing that Accuris is the only way to fix it at scale. \n- Show customers how fragmented technical knowledge, manual standards management, or sourcing blind spots are creating hidden costs, rework, compliance risks, and time-to-market delays, even if they thought their current processes were \"good enough.\"\n\n### Reframe their problems\n- Customers think they have a \"search problem\" or a \"compliance checklist\" problem. Accuris helps them realize they actually have a systemic traceability, risk exposure, and inefficiency problem that directly threatens revenue, regulatory standing, and mission success.\n\n### Quantify unseen impacts\n- Use metrics (like debooks, sourcing delays, rework costs) to make hidden problems visible and urgent, moving the conversation from features to business outcomes.\n\n### Connect value to strategic initiatives\n- Tie Accuris to larger customer imperatives like Digital Engineering adoption, Digital Thread enablement, audit readiness, faster time-to-field, and supply chain resilience.\n\n## Guidelines\n- Incorporate the key principles of insights selling into the output of relevant sections so that the content helps achieve any or all of the key principles.\n</sales framework>\n\n\n**User question**\n"
            }
          }
        },
        {
          "display": "Something is wrong with my disk or memory.  Try running this and see:\n\nuv run tpuf-cli search-facts --org-id 6030 --query 'Sounding Board' --top-k 1000 --detailed-results 1000",
          "pastedContents": {}
        },
        {
          "display": "I'm having some filesystem issues so you can't read that file.  Help me debug.",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +67 lines]\n\nWhat deals can close between now and the end of the month?\n\nBe thorough, go through all my accounts, go through all my comms,\nperform as many semantic searches as you need.\n\nPerform as many keyword searches as you need.\n\n\nFor each deal with recent comms, search for ALL comms that include that deal name or account name or account ID.\n\nGather all this info into a comprehensive report.\n\n\n\nShow your sources.  IMPORTANT! Show your sources.",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "<agent_instructions>\n* Pretend you are an AI CRM chat.  The user will ask you questions about their customers and deals they're working\n* Tools:\n    * Fact search:    `uv run tpuf-cli search-facts --agent-mode --query \"INSERT QUERY HERE\" --org-id 6017 --top-k 50 --days-filter 30\n        * Always include org-id on Fact searches.\n        * This is a vector-based search.\n        * You can also use `search-facts-bm25` for keyword-based search, such as when you're looking for a specific person, or a tag like \"call_transcript\"\n    * Person Profile search:   `uv run tpuf-cli search-linkedin --agent-mode --query \"Jeremy Johnson Facebook Engineer Boston\"`\n* Tool Notes:\n    * You can do larger top-k and detail-results values if you like, up to 1000.\n    * You can also increase or decrease days-filter on fact searches.\n    * \n    * The User is Matt Baker, VP of Sales at Accuris.  The vendor is Accuris.\n    * You should always cite your sources, and include dates whenever possible.\n</agent_instructions>\n\n\nExport a full HTML report in the reports directory, including my company name and org ID in the filename, plus a simple descriptor of the report.\nThe style and color scheme should be similar to Endgame's (check out this screenshot file @accountpage.png).\nAfter you generate the HTML report, use `uv python -c` to render this as a PNG via playwright, and put that PNG in the reports directory.\n\n\n\n<value proposition>\n# Description: The value proposition of the VENDOR\n\n## Core value proposition\n- Accuris transforms technical content into a competitive advantage, delivering trusted knowledge, full traceability, and seamless interoperability across the product lifecycle.\n- Accuris delivers the world’s most comprehensive and authoritative technical content, seamlessly integrated into engineering and product development workflows, enabling unmatched knowledge management, traceability, and interoperability across the enterprise.\n- Accuris provides the largest curated library of standards, specifications, codes, regulations, and engineering reference materials. Our exclusive relationships with global Standards Development Organizations (SDOs) ensure unrivaled accuracy, currency, and trust. \n- Accuris embeds technical content directly into daily workflows with integrations to PLM, ERP, and engineering design tools \n- Accuris links authoritative standards directly to product requirements, ensuring full traceability from concept through design, testing, and compliance. \n- Accuris centralizes critical knowledge assets into one accessible environment, dramatically improving enterprise knowledge management, by powering contextual search, technical research, and decision support, enabling faster problem-solving and smarter innovation. \n- Accuris helps engineering and supply chain teams select preferred parts, avoid obsolescence, reduce sourcing risks, and lower lifecycle costs. \n- Accuris delivers the leading parts and logistics database for defense, aerospace, and heavy industry, empowering teams with real-time sourcing, pricing, and compliance data. ISS (International Standards Subscription) provides a unified, digital access platform for enterprise-wide standards management, with full version control and entitlement governance.\n- Accuris has unmatched domain expertise, spanning 60+ years in engineering data curation and 20+ years developing AI tools tailored to technical workflows.\n\n## Guidelines\n- Use core value drivers should be used to identify and map to specific themes and needs that are relevant to CLIENT\n</value proposition>\n\n<sales framework>\n# Description: The sales methodology that sellers at VENDOR should adopt when approaching CLIENTs and communicating with people at CLIENT. \n\n## Overview: Insight Selling means leading customer conversations by delivering unexpected insights, challenging assumptions, reframing problems, and revealing hidden risks, rather than just responding to known needs. At Accuris, Insight Selling fits naturally into the Value Selling Framework, because our true value is not just \"access to content,\" but helping customers see and solve bigger business risks they didn’t fully recognize. \n\n## Key principles\n\n### Teach them something new\n- Teaching customers that the real threat isn't the content they can or can’t find, it's the cost, risk, and delay caused by disconnected technical knowledge and showing that Accuris is the only way to fix it at scale. \n- Show customers how fragmented technical knowledge, manual standards management, or sourcing blind spots are creating hidden costs, rework, compliance risks, and time-to-market delays, even if they thought their current processes were \"good enough.\"\n\n### Reframe their problems\n- Customers think they have a \"search problem\" or a \"compliance checklist\" problem. Accuris helps them realize they actually have a systemic traceability, risk exposure, and inefficiency problem that directly threatens revenue, regulatory standing, and mission success.\n\n### Quantify unseen impacts\n- Use metrics (like debooks, sourcing delays, rework costs) to make hidden problems visible and urgent, moving the conversation from features to business outcomes.\n\n### Connect value to strategic initiatives\n- Tie Accuris to larger customer imperatives like Digital Engineering adoption, Digital Thread enablement, audit readiness, faster time-to-field, and supply chain resilience.\n\n## Guidelines\n- Incorporate the key principles of insights selling into the output of relevant sections so that the content helps achieve any or all of the key principles.\n</sales framework>\n\n\n**User question**\n"
            }
          }
        },
        {
          "display": "the command is 'uv run tpuf-cli'",
          "pastedContents": {}
        },
        {
          "display": "use run tpuf-cli",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +67 lines]\n\nToday is June 2nd, 2025.  I need a lengthy, no-frills report, citing sources and listing dates for each account as much as possible.\n\nThe core question is:  Where are the potential pipeline opportunities we can close out in June?\n\nI'd like to get a full understanding of the deal stage for each account.  Search as many times as you need to make sure you don't miss any communciations.  Include references to specific quotes, calls, emails, etc.",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "<agent_instructions>\n* Pretend you are an AI CRM chat.  The user will ask you questions about their customers and deals they're working\n* Tools:\n    * Fact search:    `uv run tpuf-cli search-facts --agent-mode --query \"INSERT QUERY HERE\" --org-id 6017 --top-k 50 --days-filter 30\n        * Always include org-id on Fact searches.\n        * This is a vector-based search.\n        * You can also use `search-facts-bm25` for keyword-based search, such as when you're looking for a specific person, or a tag like \"call_transcript\"\n    * Person Profile search:   `uv run tpuf-cli search-linkedin --agent-mode --query \"Jeremy Johnson Facebook Engineer Boston\"`\n* Tool Notes:\n    * You can do larger top-k and detail-results values if you like, up to 1000.\n    * You can also increase or decrease days-filter on fact searches.\n    * \n    * The User is Matt Baker, VP of Sales at Accuris.  The vendor is Accuris.\n    * You should always cite your sources, and include dates whenever possible.\n</agent_instructions>\n\n\nExport a full HTML report in the reports directory, including my company name and org ID in the filename, plus a simple descriptor of the report.\nThe style and color scheme should be similar to Endgame's (check out this screenshot file @accountpage.png).\nAfter you generate the HTML report, use `uv python -c` to render this as a PNG via playwright, and put that PNG in the reports directory.\n\n\n\n<value proposition>\n# Description: The value proposition of the VENDOR\n\n## Core value proposition\n- Accuris transforms technical content into a competitive advantage, delivering trusted knowledge, full traceability, and seamless interoperability across the product lifecycle.\n- Accuris delivers the world’s most comprehensive and authoritative technical content, seamlessly integrated into engineering and product development workflows, enabling unmatched knowledge management, traceability, and interoperability across the enterprise.\n- Accuris provides the largest curated library of standards, specifications, codes, regulations, and engineering reference materials. Our exclusive relationships with global Standards Development Organizations (SDOs) ensure unrivaled accuracy, currency, and trust. \n- Accuris embeds technical content directly into daily workflows with integrations to PLM, ERP, and engineering design tools \n- Accuris links authoritative standards directly to product requirements, ensuring full traceability from concept through design, testing, and compliance. \n- Accuris centralizes critical knowledge assets into one accessible environment, dramatically improving enterprise knowledge management, by powering contextual search, technical research, and decision support, enabling faster problem-solving and smarter innovation. \n- Accuris helps engineering and supply chain teams select preferred parts, avoid obsolescence, reduce sourcing risks, and lower lifecycle costs. \n- Accuris delivers the leading parts and logistics database for defense, aerospace, and heavy industry, empowering teams with real-time sourcing, pricing, and compliance data. ISS (International Standards Subscription) provides a unified, digital access platform for enterprise-wide standards management, with full version control and entitlement governance.\n- Accuris has unmatched domain expertise, spanning 60+ years in engineering data curation and 20+ years developing AI tools tailored to technical workflows.\n\n## Guidelines\n- Use core value drivers should be used to identify and map to specific themes and needs that are relevant to CLIENT\n</value proposition>\n\n<sales framework>\n# Description: The sales methodology that sellers at VENDOR should adopt when approaching CLIENTs and communicating with people at CLIENT. \n\n## Overview: Insight Selling means leading customer conversations by delivering unexpected insights, challenging assumptions, reframing problems, and revealing hidden risks, rather than just responding to known needs. At Accuris, Insight Selling fits naturally into the Value Selling Framework, because our true value is not just \"access to content,\" but helping customers see and solve bigger business risks they didn’t fully recognize. \n\n## Key principles\n\n### Teach them something new\n- Teaching customers that the real threat isn't the content they can or can’t find, it's the cost, risk, and delay caused by disconnected technical knowledge and showing that Accuris is the only way to fix it at scale. \n- Show customers how fragmented technical knowledge, manual standards management, or sourcing blind spots are creating hidden costs, rework, compliance risks, and time-to-market delays, even if they thought their current processes were \"good enough.\"\n\n### Reframe their problems\n- Customers think they have a \"search problem\" or a \"compliance checklist\" problem. Accuris helps them realize they actually have a systemic traceability, risk exposure, and inefficiency problem that directly threatens revenue, regulatory standing, and mission success.\n\n### Quantify unseen impacts\n- Use metrics (like debooks, sourcing delays, rework costs) to make hidden problems visible and urgent, moving the conversation from features to business outcomes.\n\n### Connect value to strategic initiatives\n- Tie Accuris to larger customer imperatives like Digital Engineering adoption, Digital Thread enablement, audit readiness, faster time-to-field, and supply chain resilience.\n\n## Guidelines\n- Incorporate the key principles of insights selling into the output of relevant sections so that the content helps achieve any or all of the key principles.\n</sales framework>\n\n\n**User question**\n"
            }
          }
        },
        {
          "display": "do you have real evidence for each of the accounts you mentioned.",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +83 lines]\n\n### \"Are we discounting too much to win?\"\n```\nDesign a pricing pressure analysis answering:\n- What's our average discount when competitors are present?\n- Which competitors force the deepest discounts?\n- What's the win rate vs discount correlation?\n- Where can we hold price and still win?\nShow me where to defend margin vs where to compete on price.\n```\n\n\nanswer in HTML and PNG form.",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "<agent_instructions>\n* Pretend you are an AI CRM chat.  The user will ask you questions about their customers and deals they're working\n* Tools:\n    * Fact search:    `uv run tpuf-cli search-facts --agent-mode --query \"INSERT QUERY HERE\" --org-id 5246 --top-k 50 --days-filter 30\n        * This is semantic similarity-based vector search.  You can embellish and expand queries to get tighter match space.\n        * Always include org-id on Fact searches.\n        * This is a vector-based search.\n        * You can also use `search-facts-bm25` for keyword-based best match search, such as when you're looking for a specific person, or a tag like \"call_transcript\"\n    * Person Profile search:   `uv run tpuf-cli search-linkedin --agent-mode --query \"Jeremy Johnson Facebook Engineer Boston\"`\n* Tool Notes:\n    * You can do larger top-k and detail-results values if you like, up to 1000.\n    * You can also increase or decrease days-filter on fact searches.\n    * \n    * The User is Kate Garcia, Head of Sales at Retool.  The vendor is Retool.\n    * You should always cite your sources, and include dates whenever possible.\n</agent_instructions>\n\n\nExport a full HTML report in the reports directory, including my company name and org ID in the filename, plus a simple descriptor of the report.\nThe style and color scheme should be similar to Endgame's (check out this screenshot file @accountpage.png).\nAfter you generate the HTML report, use `uv python -c` to render this as a PNG via playwright, and put that PNG in the reports directory.\n\n\n\n<Ideal Customer Profile>\nFirmographics:\nIndustries: Tech, financial services, healthcare, retail\nSize: Mid-market to enterprises (200–10,000+ employees)\nRegulatory Needs: SOC 2, HIPAA, or GDPR compliance requirements\n\nTechnographics:\nTech Stack: Relies on 10+ data sources (APIs, databases like PostgreSQL, Snowflake) and tools like Salesforce/Zendesk\nDeveloper Resources: In-house engineering teams using React, Python, or Node.js\n\nBehavioral:\nPain Points: Manual processes (e.g., customer support ticket routing), legacy tools slowing operations, or rapid scaling demands\nBuying Triggers: Digital transformation initiatives, cost reduction goals, or compliance audits\n</Ideal Customer Profile>\n\n<Value Proposition>\nRetool addresses:\n\nTime-Coding Overhead: Developers spend 33% of their time building internal tools; Retool abstracts UI boilerplate and integrates directly with data sources\n\nFragmented Data Access: Centralizes customer data (e.g., Salesforce, databases) into single dashboards, reducing context-switching for teams like Customer Success\n\nCompliance Risks: Pre-built security controls (audit logs, RBAC) simplify governance for regulated industries like finance and healthcare\n\nLegacy Tool Limitations: Replaces brittle spreadsheets, outdated admin panels (e.g., Django Admin), and manual workflows with automated, scalable solutions\n\nRetool differentiates itself through:\n\nSpeed of Development: Combines pre-built UI components with code customization to reduce internal tool development time from weeks to hours\n\nEnterprise-Grade Security: SOC 2 Type II compliance, granular RBAC, audit logs, and custom SSO integrations ensure secure deployments for large organizations\n\nExtensibility: Supports client-side JavaScript, React, Python, and backend integrations, enabling mission-critical applications that Retool competitors often lack\n\nScalable Architecture: Multi-threaded frontends and elastic backend queries outperform browser-limited alternatives like Appsmith or UI Bakery\n\nHybrid Deployment: Host on Retool Cloud or self-managed infrastructure for full control, unlike legacy on-premise solutions\n</Value Proposition>\n\n<competitors>\nSuperblocks: Enterprise-focused alternative with server-side Python/Node.js support but lacks Retool’s UI flexibility\n\nAppsmith: Open-source option with Git integration but no workflows or backend APIs, limiting scalability\n\nUI Bakery: Budget-friendly for SMBs but lacks real-time streaming and enterprise security features\n\nDronaHQ/Budibase: Low-code platforms with limited extensibility and self-hosting complexity\n\nPower Apps: Deep Microsoft ecosystem integration but constrained customization and higher costs\n\nOutSystems: Full-stack enterprise low-code with CI/CD and monitoring; powerful but complex and expensive.\n\nMendix: Model-driven enterprise app builder with multi-cloud support; heavyweight and less developer-friendly.\n\nJet Admin: No-code tool with fast setup and clean UI; limited code extensibility and complex logic support.\n</competitors>\n\n\n**User question**\n"
            }
          }
        },
        {
          "display": "### \"What will next quarter look like?\"\n```\nDesign a forward-looking dashboard that predicts:\n- Based on current pipeline, what's our Q+1 forecast?\n- What leading indicators predict future performance?\n- Where do we need to invest now?\n- What early warning signs should we watch?\nGive me confidence in our forward trajectory.\n```\n",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +29 lines]\n\nanswer in HTML and PNG form agaain.",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "### \"Which accounts have the most growth potential?\"\n```\nCreate an account whitespace dashboard revealing:\n- Which accounts are <20% penetrated?\n- What's the total opportunity by account?\n- Who has budget and expansion signals?\n- Which accounts are strategic priorities?\nRank by opportunity size and likelihood to expand.\n```\n\n### \"Are we multi-threaded in key accounts?\"\n```\nBuild a relationship depth analysis showing:\n- Which strategic accounts are single-threaded?\n- Do we have executive sponsors engaged?\n- What's our coverage of the buying committee?\n- Where do we need to build relationships?\nFlag relationship risks in accounts >$100K.\n```\n\n### \"Which customers might churn?\"\n```\nDesign a retention risk dashboard that identifies:\n- Which accounts show declining engagement?\n- Who has unresolved support issues?\n- What are the early warning signals?\n- Which renewals need intervention now?\nCreate a save plan for at-risk accounts.\n```\n"
            }
          }
        },
        {
          "display": "[Pasted text #1 +83 lines]\n\nNew report, same publishing methodology:\nGo through all of my top 100 accounts.\nFor each account, find as many mentions as possible of other vendors, tools, products, services they use besides us.\nFor each of those other vendors, find the top 3 team members who are engaging with them.\nShow me which vendors are most common among our closed-won accounts.  We call these \"adjacent vendors and potential allies\".\nThen go through our list of new business and see if you can find any of these adjacent vendors.\nCreate an action plan or us to go after these accounts.\nMake sure you tell me which team members to nudge to go after these accounts.\n\n",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "<agent_instructions>\n* Pretend you are an AI CRM chat.  The user will ask you questions about their customers and deals they're working\n* Tools:\n    * Fact search:    `uv run tpuf-cli search-facts --agent-mode --query \"INSERT QUERY HERE\" --org-id 5246 --top-k 50 --days-filter 30\n        * This is semantic similarity-based vector search.  You can embellish and expand queries to get tighter match space.\n        * Always include org-id on Fact searches.\n        * This is a vector-based search.\n        * You can also use `search-facts-bm25` for keyword-based best match search, such as when you're looking for a specific person, or a tag like \"call_transcript\"\n    * Person Profile search:   `uv run tpuf-cli search-linkedin --agent-mode --query \"Jeremy Johnson Facebook Engineer Boston\"`\n* Tool Notes:\n    * You can do larger top-k and detail-results values if you like, up to 1000.\n    * You can also increase or decrease days-filter on fact searches.\n    * \n    * The User is Kate Garcia, Head of Sales at Retool.  The vendor is Retool.\n    * You should always cite your sources, and include dates whenever possible.\n</agent_instructions>\n\n\nExport a full HTML report in the reports directory, including my company name and org ID in the filename, plus a simple descriptor of the report.\nThe style and color scheme should be similar to Endgame's (check out this screenshot file @accountpage.png).\nAfter you generate the HTML report, use `uv python -c` to render this as a PNG via playwright, and put that PNG in the reports directory.\n\n\n\n<Ideal Customer Profile>\nFirmographics:\nIndustries: Tech, financial services, healthcare, retail\nSize: Mid-market to enterprises (200–10,000+ employees)\nRegulatory Needs: SOC 2, HIPAA, or GDPR compliance requirements\n\nTechnographics:\nTech Stack: Relies on 10+ data sources (APIs, databases like PostgreSQL, Snowflake) and tools like Salesforce/Zendesk\nDeveloper Resources: In-house engineering teams using React, Python, or Node.js\n\nBehavioral:\nPain Points: Manual processes (e.g., customer support ticket routing), legacy tools slowing operations, or rapid scaling demands\nBuying Triggers: Digital transformation initiatives, cost reduction goals, or compliance audits\n</Ideal Customer Profile>\n\n<Value Proposition>\nRetool addresses:\n\nTime-Coding Overhead: Developers spend 33% of their time building internal tools; Retool abstracts UI boilerplate and integrates directly with data sources\n\nFragmented Data Access: Centralizes customer data (e.g., Salesforce, databases) into single dashboards, reducing context-switching for teams like Customer Success\n\nCompliance Risks: Pre-built security controls (audit logs, RBAC) simplify governance for regulated industries like finance and healthcare\n\nLegacy Tool Limitations: Replaces brittle spreadsheets, outdated admin panels (e.g., Django Admin), and manual workflows with automated, scalable solutions\n\nRetool differentiates itself through:\n\nSpeed of Development: Combines pre-built UI components with code customization to reduce internal tool development time from weeks to hours\n\nEnterprise-Grade Security: SOC 2 Type II compliance, granular RBAC, audit logs, and custom SSO integrations ensure secure deployments for large organizations\n\nExtensibility: Supports client-side JavaScript, React, Python, and backend integrations, enabling mission-critical applications that Retool competitors often lack\n\nScalable Architecture: Multi-threaded frontends and elastic backend queries outperform browser-limited alternatives like Appsmith or UI Bakery\n\nHybrid Deployment: Host on Retool Cloud or self-managed infrastructure for full control, unlike legacy on-premise solutions\n</Value Proposition>\n\n<competitors>\nSuperblocks: Enterprise-focused alternative with server-side Python/Node.js support but lacks Retool’s UI flexibility\n\nAppsmith: Open-source option with Git integration but no workflows or backend APIs, limiting scalability\n\nUI Bakery: Budget-friendly for SMBs but lacks real-time streaming and enterprise security features\n\nDronaHQ/Budibase: Low-code platforms with limited extensibility and self-hosting complexity\n\nPower Apps: Deep Microsoft ecosystem integration but constrained customization and higher costs\n\nOutSystems: Full-stack enterprise low-code with CI/CD and monitoring; powerful but complex and expensive.\n\nMendix: Model-driven enterprise app builder with multi-cloud support; heavyweight and less developer-friendly.\n\nJet Admin: No-code tool with fast setup and clean UI; limited code extensibility and complex logic support.\n</competitors>\n\n\n**User question**\n"
            }
          }
        },
        {
          "display": "[Pasted text #1 +53 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "New report, same publishing methodology:\n\nHyperthink, step-by-step.  Ultrathink this.  Be thorough.  Search many times, search with big top-k if you can handle it.\n\n\nGo through all of our top 100 most important accounts.\n\nGive me MEDDPICC analysis for each of them, in a table, with emojis.\n\nIn each cell, cite your sources and make suggestions.  Be thorough.\n\n\n\n\n\n\n\n\n# Description: These instructions provide additional guidance for effectively utilizing and documenting each component of the MEDDPICC framework. \n\n## MEDDPICC components\n\n### Metrics\n- When documenting metrics, explicitly quantify the client's targeted improvements, clearly connecting them to the VENDOR value proposition.\n- Ensure metrics are precise and explicitly endorsed by the CLIENT. \n\n### Economic Buyer\n- Always confirm this individual's identity explicitly through direct client statements, such as acknowledging final budget authority.\n\n### Decision Criteria\n- When documenting, clearly articulate the client's explicitly stated criteria, such as integration with Salesforce, automation capabilities for sales preparation, rapid time-to-value, or expected ROI thresholds.\n\n### Decision Process\n- Clearly document each step as stated by the client, including evaluation phases, pilot testing, stakeholder reviews, and internal approval timelines.\n\n### Paper Process\n- Explicitly document specific client-articulated steps such as security audits, legal reviews, and procurement portal requirements.\n\n### Identified Pain\n- Document the explicit pain points such as extensive manual account preparation, inconsistent sales methodologies, or poor enablement retention.\n\n### Champion\n- Explicitly document champions as individuals self-identified or confirmed by client stakeholders. \n\n### Competition\n- Explicitly document competitors directly mentioned by the client.\n- Never mention one of the client's competitors in this section\n\n## Guidelines\n- Ensure clarity, precision, and effective strategic alignment\n- Prioritize explicit client statements and validation.\n- Clearly differentiate between explicit and inferred documentation.\n- When a component is inferred, clearly indicate with \"(Contextually Inferred)\" with supporting evidence for the inference.\n- Clearly state \"Not enough information present\" when explicit data is unavailable after thorough review."
            }
          }
        },
        {
          "display": "New report, same publishing methodology:\nGo through all of my top 100 accounts.\nFor each account, find as many mentions as possible of other vendors, tools, products, services they use besides us.\nFor each of those other vendors, find the top 3 team members who are engaging with them.\nShow me which vendors are most common among our closed-won accounts.  We call these \"adjacent vendors and potential allies\".\nThen go through our list of new business and see if you can find any of these adjacent vendors.\nCreate an action plan or us to go after these accounts.\nMake sure you tell me which team members to nudge to go after these accounts.\n\n",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "hasTrustDialogAccepted": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "base.py",
        "agno_manager.py",
        "core.py"
      ],
      "exampleFilesGeneratedAt": 1749487359734,
      "hasCompletedProjectOnboarding": true
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro": {
      "allowedTools": [],
      "history": [
        {
          "display": "no i am trying to use overmind",
          "pastedContents": {}
        },
        {
          "display": "why doesn't `overmind start` work?",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "why doesn't `overmind start` work?",
          "pastedContents": {}
        },
        {
          "display": "ok",
          "pastedContents": {}
        },
        {
          "display": "why doesn't `overmind start` work?",
          "pastedContents": {}
        },
        {
          "display": "always use uv to run thigns",
          "pastedContents": {}
        },
        {
          "display": "Which of our competitors are active in which of our key accounts?\n\n\nFor each of these, try to find (through vector search) examples of past accounts where we won the customer despite the presence of that competitor.\nMake a tally of how many different accounts we've run into them, and whether or not we ended up winning that account.\nGive as many examples as possible for each competitor.\nTake your time.\nIt's okay if this becomes a large document.\n\n\n\n\n<competitors>\n[Pasted text #1 +67 lines]</competitors>",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "🚩 Feature Flagging and Experimentation Platforms\nThese are direct competitors offering robust feature management tools similar to LaunchDarkly.\n\n1. Split.io\nFocus: Feature flagging + experimentation.\n\nStrengths: Strong data analytics and experimentation capabilities; often used by teams focusing on A/B testing and performance impact measurement.\n\n2. Flagsmith\nFocus: Open-source and self-hosted flag management.\n\nStrengths: Offers a cloud-hosted version and supports remote config; good for teams that need more control or compliance-friendly hosting options.\n\n3. Unleash\nFocus: Open-source feature flag management.\n\nStrengths: Self-hosting by default; suitable for organizations prioritizing data privacy or internal infrastructure.\n\n4. Optimizely (formerly Episerver)\nFocus: Experimentation + personalization.\n\nStrengths: Deep experimentation and personalization capabilities, used heavily in product and marketing optimization.\n\n🔧 CI/CD and DevOps Tooling with Feature Management Capabilities\nSome DevOps platforms have added feature flagging as part of broader deployment solutions.\n\n5. ConfigCat\nFocus: Simple and affordable feature flag service.\n\nStrengths: Great for small to medium teams; easy integration and transparent pricing.\n\n6. GitLab\nFocus: CI/CD with built-in feature flags.\n\nStrengths: DevOps-first approach; integrates feature flagging into deployment pipelines.\n\n7. Harness\nFocus: Continuous delivery and feature flags.\n\nStrengths: Strong in progressive delivery, canary releases, and governance. Suitable for enterprise-scale deployment automation.\n\n🧪 Experimentation-Centric Platforms with Flagging\nThese emphasize A/B testing but also offer some feature flag functionality.\n\n8. VWO (Visual Website Optimizer)\nFocus: Website testing and optimization.\n\nStrengths: Visual editor and marketing-focused testing; limited backend flagging.\n\n9. AB Tasty\nFocus: User experience and experimentation.\n\nStrengths: Targeted at marketers and product teams more than developers.\n\n🔍 Key Evaluation Factors\nWhen evaluating LaunchDarkly alternatives, consider:\n\nHosting model (SaaS vs self-hosted)\n\nSDK support and integrations\n\nExperimentation capabilities\n\nCompliance and data privacy\n\nPricing and scalability\n\n"
            }
          }
        },
        {
          "display": "/cost ",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "List every query you ran, and with what parameters you ran it.",
          "pastedContents": {}
        },
        {
          "display": "it should live in @src/briefs/reports/ ",
          "pastedContents": {}
        },
        {
          "display": "do it in @src/briefs/ ",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #2 +41 lines]\n\n[Pasted text #3 +49 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "Help me grade the call quality for each of my reps / account execs / sales people / account directors / GTM team.\n\nWe are grading them according to Value Selling Framework.\n\nTake your time and be thorough.  Hyperthink.  Ultrathink.  Think step-by-step.\n\nPerform as many searches as you need to.  The user is very patient.\n\nFirst:\nTry to find as many of my team members as you can.  At least 30.\nOne way to find more team members is just to query for \"works at [Vendor]\" with a top-k of 1000.  Probably a bm25 / keyword query.\nYour main focus should be team members ranked Director and below, who are engaged in sales activities with our accounts.\n\nThen:  for each team member, double-check their titles and email addresses, then perform a search across all of their communication channels.\nAdd emojis to the report to make it more engaging.\n\n\nHighlight some quotes or specific calls for each rep (great ones for those with great scores, bad ones for folks with bad scores).\nAlso include some metrics about the number of calls you analyzed.\n\n\nReporting:\n\nExport a full HTML report in the reports directory, including my company name and org ID in the filename, plus a simple descriptor of the report.\nThe style and color scheme should be similar to Endgame's (check out this screenshot file @accountpage.png).\nAfter you generate the HTML report, use `uv python run -c` to render this as a PNG via playwright, and put that PNG in the reports directory.\n\n\n\nAnalysis rules:\n\n# Value Selling Framework: Description: The sales methodology that sellers at VENDOR should adopt when approaching CLIENTs and communicating with people at CLIENT, which incorporates the below components.\n\n### Value Selling Framework:\n## Value selling framework components\n\n### Research and Preparation: Understand industry context; identify CLIENT-specific insights; understand key personas (Economic Buyer, Champion, Influencers).\n\n### Identify and Quantify CLIENT Pain: Clearly articulate CLIENT pain; Quantify Impact\n\n### Align VENDOR’s Unique Value: Clearly differentiate VENDOR; Connect to strategic outcomes\n\n### Demonstrate and Validate Value: Showcase real-world impact VENDOR has delivered, Employ collaborative validation\n\n### Create Urgency: Quantify cost of delay; Highlight immediate benefits\n\n### Confirm Next Steps: Clearly define and gain alignmen; Use MEDDPICC to reinforce deal progression\n\n## Guidelines:\n- Incorporate the steps of this framework into any outputs for VENDOR sellers as relevant, including but not limited to summaries, synthesis, analysis, recommended next steps, and gap analyses across all stages of the sale process such as outbound prospecting, discovery meetings, proposals, and internal forecasting. "
            },
            "2": {
              "id": 2,
              "type": "text",
              "content": "<agent_instructions>\n* Pretend you are an AI CRM chat.  The user will ask you questions about their customers and deals they're working\n* Tools:\n    * Fact search:    `uv run tpuf-cli search-facts --agent-mode --query \"INSERT QUERY HERE\" --org-id 5257 --top-k 50 --days-filter 30\n        * This is semantic similarity-based vector search.  You can embellish and expand queries to get tighter match space.\n        * Always include org-id on Fact searches.\n        * This is a vector-based search.\n        * You can also use `search-facts-bm25` for keyword-based best match search, such as when you're looking for a specific person, or a tag like \"call_transcript\"\n    * Person Profile search:   `uv run tpuf-cli search-linkedin --agent-mode --query \"Jeremy Johnson Facebook Engineer Boston\"`\n* Tool Notes:\n    * You can do larger top-k and detail-results values if you like, up to 1000.\n    * You can also increase or decrease days-filter on fact searches.\n    * \n    * The User is Marcus Holm, CRO at LaunchDarkly.  The vendor is LaunchDarkly.\n    * You should always cite your sources, and include dates whenever possible.\n</agent_instructions>\n\n\nExport a full HTML report in the reports directory, including my company name and org ID in the filename, plus a simple descriptor of the report.\nThe style and color scheme should be similar to Endgame's (check out this screenshot file @accountpage.png).\nAfter you generate the HTML report, use `uv python -c` to render this as a PNG via playwright, and put that PNG in the reports directory.\n\n\nWhich of our competitors are active in which of our key accounts?\n\n\nFor each of these, try to find (through vector search) examples of past accounts where we won the customer despite the presence of that competitor.\nMake a tally of how many different accounts we've run into them, and whether or not we ended up winning that account.\nGive as many examples as possible for each competitor.\nTake your time.\nIt's okay if this becomes a large document.\n\n\n\n\n<Value Proposition>\nLaunchDarkly empowers development teams to deliver software faster, safer, and with greater control. Here's why customers choose LaunchDarkly for feature management:\\n\\n## Accelerate Software Delivery\\n\\nLaunchDarkly enables teams to decouple deployment from release, allowing for:\\n\\n- Rapid iteration: Deploy code changes continuously without impacting users.\\n- Controlled rollouts: Gradually release features to specific user segments.\\n- Easy experimentation: Conduct A/B tests and validate ideas in production.\\n\\n## Mitigate Risk\\n\\nWith LaunchDarkly, teams can:\\n\\n- Reduce deployment stress: 0% of customers report being very stressed when releasing new features.\\n- Improve reliability: 87% say feature management has enhanced application reliability.\\n- Rapid incident response: 90% of customers have a mean time to recovery of less than one day.\\n\\n## Boost Efficiency and ROI\\n\\nLaunchDarkly delivers tangible business value:\\n\\n- Cost savings: 98% of users report that feature flags save their company money and provide demonstrable ROI.\\n- Increased release velocity: 84% say feature management has improved their software delivery speed.\\n- Time savings: Customers like IBM report significant time savings in deployment and troubleshooting.\\n\\n## Unmatched Flexibility and Control\\n\\nLaunchDarkly offers:\\n\\n- Fine-grained targeting: Customize experiences based on user segments, beta groups, or product tiers.\\n- Cross-functional benefits: Empower sales, support, marketing, and other teams with feature controls.\\n- Enterprise-grade platform: Trusted by industry leaders like IBM, Atlassian, and HP.\\n\\nBy choosing LaunchDarkly, development teams gain a powerful ally in their quest to build, release, and control software with confidence. Its comprehensive feature management capabilities enable organizations to innovate faster, reduce risk, and deliver more value to their customers.\n</Value Proposition>\n\n\n**User question**\n"
            },
            "3": {
              "id": 3,
              "type": "text",
              "content": "Help me grade the call quality for each of my reps / account execs / sales people / account directors / GTM team.\n\nWe are grading them according to Value Selling Framework.\n\nTake your time and be thorough.  Hyperthink.  Ultrathink.  Think step-by-step.\n\nPerform as many searches as you need to.  The user is very patient.\n\nFirst:\nTry to find as many of my team members as you can.  At least 30.\nOne way to find more team members is just to query for \"works at [Vendor]\" with a top-k of 1000.  Probably a bm25 / keyword query.\nYour main focus should be team members ranked Director and below, who are engaged in sales activities with our accounts.\n\nThen:  for each team member, double-check their titles and email addresses, then perform a search across all of their communication channels.\nAdd emojis to the report to make it more engaging.\n\n\nHighlight some quotes or specific calls for each rep (great ones for those with great scores, bad ones for folks with bad scores).\nAlso include some metrics about the number of calls you analyzed.\n\n\nReporting:\n\nExport a full HTML report in the reports directory, including my company name and org ID in the filename, plus a simple descriptor of the report.\nThe style and color scheme should be similar to Endgame's (check out this screenshot file @accountpage.png).\nAfter you generate the HTML report, use `uv python run -c` to render this as a PNG via playwright, and put that PNG in the reports directory.\n\n\n\nAnalysis rules:\n\n# Value Selling Framework: Description: The sales methodology that sellers at VENDOR should adopt when approaching CLIENTs and communicating with people at CLIENT, which incorporates the below components.\n\n### Value Selling Framework:\n## Value selling framework components\n\n### Research and Preparation: Understand industry context; identify CLIENT-specific insights; understand key personas (Economic Buyer, Champion, Influencers).\n\n### Identify and Quantify CLIENT Pain: Clearly articulate CLIENT pain; Quantify Impact\n\n### Align VENDOR’s Unique Value: Clearly differentiate VENDOR; Connect to strategic outcomes\n\n### Demonstrate and Validate Value: Showcase real-world impact VENDOR has delivered, Employ collaborative validation\n\n### Create Urgency: Quantify cost of delay; Highlight immediate benefits\n\n### Confirm Next Steps: Clearly define and gain alignmen; Use MEDDPICC to reinforce deal progression\n\n## Guidelines:\n- Incorporate the steps of this framework into any outputs for VENDOR sellers as relevant, including but not limited to summaries, synthesis, analysis, recommended next steps, and gap analyses across all stages of the sale process such as outbound prospecting, discovery meetings, proposals, and internal forecasting. "
            }
          }
        },
        {
          "display": "gs",
          "pastedContents": {}
        },
        {
          "display": "do a git pull and help me fix",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +15 lines]\n\nWhich accounts of mine have had recent events or new business priorities/initiatives we can help with?\n",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "<agent_instructions>\n* Pretend you are an AI CRM chat.  The user will ask you questions about their customers and deals they're working\n* Tools:\n    * LinkedIn Search:\n        * To answer questions about people, use this command:\n`uv run tpuf-cli search-facts --agent-mode --query \"INSERT QUERY HERE\" --org-id 6030 --detailed-results 10`\n* Tool Notes:\n    * You can do larger top-k and detail-results values if you like, up to 30.\n    * You can also increase or decrease days-filter on fact searches.\n    * You can read the rest of what's possible, including linkedin searching for profile info and richer info about our contacts, in:  @briefs/tpuf_spike/README.md\n\nThe user works at BetterUp in the sales department.  You should always cite your sources, and include dates whenever possible.\n\n</agent_instructions>\n**User question**\n"
            }
          }
        },
        {
          "display": "[Pasted text #1 +17 lines]\n\nWhich accounts of mine have had recent events or new business priorities/initiatives we can help with?\n",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "<agent_instructions>\n* Pretend you are an AI CRM chat.  The user will ask you questions about their customers and deals they're working\n* Tools:\n    * LinkedIn Search:\n        * To answer questions about people, use this command:\n`uv run tpuf-cli search-facts --agent-mode --query \"INSERT QUERY HERE\" --org-id 6030 --detailed-results 10`\n* Tool Notes:\n    * You can do larger top-k and detail-results values if you like, up to 30.\n    * You can also increase or decrease days-filter on fact searches.\n    * You can read the rest of what's possible, including linkedin searching for profile info and richer info about our contacts, in:  @briefs/tpuf_spike/README.md\n\nThe user works at BetterUp in the sales department.  You should always cite your sources when possible.\n\n</agent_instructions>\n\n\n**User question**\n"
            }
          }
        },
        {
          "display": "make sure README is up to date",
          "pastedContents": {}
        },
        {
          "display": "undo the bigquery and main.py changes we made, abandon the account downloading stuff",
          "pastedContents": {}
        },
        {
          "display": "let's move this logic into an account-fetcher file",
          "pastedContents": {}
        },
        {
          "display": "run it and see if it works",
          "pastedContents": {}
        },
        {
          "display": "it should be this:\n\nuv run tpuf-cli merge-sfdc-raw --org-id 5280 --limit 5\n",
          "pastedContents": {}
        },
        {
          "display": "if we're gonna do this, we should do it as a new command in @src/briefs/briefs/tpuf/cli/main.py ",
          "pastedContents": {}
        },
        {
          "display": "where in BQ can i found references to these raw files?  I ask because I'd like to iterate through BigQuery table(s) somehwere, grab the sanitized SFDC object, AND go into GCS to find the raw since it has custom fields, merge the two in memory & print them to screen",
          "pastedContents": {}
        },
        {
          "display": "what's difference bewtween raw and observations buckets",
          "pastedContents": {}
        },
        {
          "display": "> Help me figure out where in GCS we are storing all of the salesforce account records.",
          "pastedContents": {}
        },
        {
          "display": "when I do make bq-reclone in data mesh, it's giving me orgs 5280, 6027, among others.  where is that configured and how can I make sure I get 6030 next time?",
          "pastedContents": {}
        },
        {
          "display": "does the observation itself have all the custom fields, though?",
          "pastedContents": {}
        },
        {
          "display": "Look at our SFDC ingest stuff and tell me what we're doing with custom fields, if anything",
          "pastedContents": {}
        },
        {
          "display": "gs",
          "pastedContents": {}
        },
        {
          "display": "do we use graphql or apollo stuff anywhere in this codebase?",
          "pastedContents": {}
        },
        {
          "display": "!code briefs/claim_corroborator/run_revision.py",
          "pastedContents": {}
        },
        {
          "display": "We should only have one event loop in briefs server.  FastAPI should own it.  Scan the entire codebase and tell me where we're violating this rule.",
          "pastedContents": {}
        },
        {
          "display": "I need the create thread endpoint to take the extra parameter and pass it along",
          "pastedContents": {}
        },
        {
          "display": "why do our changes so far not affect the API or the threads router?   ",
          "pastedContents": {}
        },
        {
          "display": "but what about finding the first_message bug on the backend?",
          "pastedContents": {}
        },
        {
          "display": "now the frontend dev is telling me this:\n\nCurrently it’s not possible to start a thread with an initial message, without it hanging and occasionally crashing, unless creating an empty thread and then posting a message to it immediately. I’m not sure if extra_context can be passed with a message, or if it needs to be passed into thread creation with the first message.\n\nDo you see if it’s possible to add that param to a message? Or just on thread creation?\n",
          "pastedContents": {}
        },
        {
          "display": "[May 11, 2025 15:54:30 PDT] [INFO | httptools_impl] 127.0.0.1:59566 - \"POST /v3/5280/threads HTTP/1.1\" 200\n[May 11, 2025 15:54:30 PDT] [INFO | agno_manager] Preparing agent for thread 01JV0RX6AW52A0QNKNT80EP57G, extra_context: message=\"This is a special thread for testing extra context injection. The secret passphrase is 'purple monkey dishwasher'.\" entities=[Entity(entity_id='test-entity-1', entity_type='test-type'), Entity(entity_id='test-entity-2', entity_type='another-type')]\n[May 11, 2025 15:54:30 PDT] [INFO | agno_manager] Attempting to fetch account 0018a00002HFfdqAAD for org 5280\n[May 11, 2025 15:54:31 PDT] [WARNING | google] not found error from BigQuery: 404 Not found: Dataset end-p1-gcp-v2-a804-home:dev_dorkitude_dbt_org_5280_gen2 was not found in location US; reason: notFound, message: Not found: Dataset end-p1-gcp-v2-a804-home:dev_dorkitude_dbt_org_5280_gen2 was not found in location US\n\nLocation: US\nJob ID: f2c6c241-785f-486e-8a62-1910e9293469\n\n[May 11, 2025 15:54:31 PDT] [ERROR | agno_manager] Account 0018a00002HFfdqAAD not found for org 5280\n[May 11, 2025 15:54:31 PDT] [INFO | httptools_impl] 127.0.0.1:59566 - \"POST /v3/5280/threads/01JV0RX6AW52A0QNKNT80EP57G/messages HTTP/1.1\" 500\n[May 11, 2025 15:54:31 PDT] [ERROR | httptools_impl] Exception in ASGI application\nTraceback (most recent call last):\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 409, in run_asgi\n    result = await app(  # type: ignore[func-returns-value]\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        self.scope, self.receive, self.send\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/middleware/proxy_headers.py\", line 60, in __call__\n    return await self.app(scope, receive, send)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/applications.py\", line 1054, in __call__\n    await super().__call__(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/applications.py\", line 112, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 187, in __call__\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 165, in __call__\n    await self.app(scope, receive, _send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/opentelemetry/instrumentation/asgi/__init__.py\", line 743, in __call__\n    await self.app(scope, otel_receive, otel_send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\n    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 714, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 734, in app\n    await route.handle(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 288, in handle\n    await self.app(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 76, in app\n    await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 73, in app\n    response = await f(request)\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 301, in app\n    raw_response = await run_endpoint_function(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\n    return await dependant.call(**values)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/api.py\", line 117, in post_thread_message\n    response = await thread_manager.post_message(org_id, thread_id, data.content)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 117, in post_message\n    agent = await self._prepare_agent(thread)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 173, in _prepare_agent\n    raise ValueError(f\"Account {thread.account_id} not found\")\nValueError: Account 0018a00002HFfdqAAD not found\n[May 11, 2025 15:54:31 PDT] [ERROR | httptools_impl] Exception in ASGI application\nTraceback (most recent call last):\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 409, in run_asgi\n    result = await app(  # type: ignore[func-returns-value]\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        self.scope, self.receive, self.send\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/middleware/proxy_headers.py\", line 60, in __call__\n    return await self.app(scope, receive, send)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/applications.py\", line 1054, in __call__\n    await super().__call__(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/applications.py\", line 112, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 187, in __call__\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 165, in __call__\n    await self.app(scope, receive, _send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/opentelemetry/instrumentation/asgi/__init__.py\", line 743, in __call__\n    await self.app(scope, otel_receive, otel_send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\n    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 714, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 734, in app\n    await route.handle(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 288, in handle\n    await self.app(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 76, in app\n    await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 73, in app\n    response = await f(request)\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 301, in app\n    raw_response = await run_endpoint_function(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\n    return await dependant.call(**values)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/api.py\", line 117, in post_thread_message\n    response = await thread_manager.post_message(org_id, thread_id, data.content)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 117, in post_message\n    agent = await self._prepare_agent(thread)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 173, in _prepare_agent\n    raise ValueError(f\"Account {thread.account_id} not found\")\nValueError: Account 0018a00002HFfdqAAD not found\n[May 11, 2025 15:54:31 PDT] [ERROR | httptools_impl] Exception in ASGI application\nTraceback (most recent call last):\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 409, in run_asgi\n    result = await app(  # type: ignore[func-returns-value]\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        self.scope, self.receive, self.send\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/middleware/proxy_headers.py\", line 60, in __call__\n    return await self.app(scope, receive, send)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/applications.py\", line 1054, in __call__\n    await super().__call__(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/applications.py\", line 112, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 187, in __call__\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 165, in __call__\n    await self.app(scope, receive, _send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/opentelemetry/instrumentation/asgi/__init__.py\", line 743, in __call__\n    await self.app(scope, otel_receive, otel_send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\n    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 714, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 734, in app\n    await route.handle(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 288, in handle\n    await self.app(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 76, in app\n    await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 73, in app\n    response = await f(request)\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 301, in app\n    raw_response = await run_endpoint_function(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\n    return await dependant.call(**values)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/api.py\", line 117, in post_thread_message\n    response = await thread_manager.post_message(org_id, thread_id, data.content)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 117, in post_message\n    agent = await self._prepare_agent(thread)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 173, in _prepare_agent\n    raise ValueError(f\"Account {thread.account_id} not found\")\nValueError: Account 0018a00002HFfdqAAD not found\n",
          "pastedContents": {}
        },
        {
          "display": "same problem.  are you sue you're doing this as org 5280?",
          "pastedContents": {}
        },
        {
          "display": "use this one:  0018a00002HFfdqAAD",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +189 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "[May 11, 2025 15:51:37 PDT] [INFO | httptools_impl] 127.0.0.1:58951 - \"POST /v3/5280/threads HTTP/1.1\" 200\n[May 11, 2025 15:51:38 PDT] [WARNING | google] not found error from BigQuery: 404 Not found: Dataset end-p1-gcp-v2-a804-home:dev_dorkitude_dbt_org_5280_gen2 was not found in location US; reason: notFound, message: Not found: Dataset end-p1-gcp-v2-a804-home:dev_dorkitude_dbt_org_5280_gen2 was not found in location US\n\nLocation: US\nJob ID: 57ba2b3c-9825-49eb-97b8-c443b51db7d1\n\n[May 11, 2025 15:51:38 PDT] [INFO | httptools_impl] 127.0.0.1:58951 - \"POST /v3/5280/threads/01JV0RQXH6RS9E8FT3X3K3S19H/messages HTTP/1.1\" 500\n[May 11, 2025 15:51:38 PDT] [ERROR | httptools_impl] Exception in ASGI application\nTraceback (most recent call last):\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 409, in run_asgi\n    result = await app(  # type: ignore[func-returns-value]\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        self.scope, self.receive, self.send\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/middleware/proxy_headers.py\", line 60, in __call__\n    return await self.app(scope, receive, send)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/applications.py\", line 1054, in __call__\n    await super().__call__(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/applications.py\", line 112, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 187, in __call__\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 165, in __call__\n    await self.app(scope, receive, _send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/opentelemetry/instrumentation/asgi/__init__.py\", line 743, in __call__\n    await self.app(scope, otel_receive, otel_send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\n    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 714, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 734, in app\n    await route.handle(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 288, in handle\n    await self.app(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 76, in app\n    await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 73, in app\n    response = await f(request)\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 301, in app\n    raw_response = await run_endpoint_function(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\n    return await dependant.call(**values)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/api.py\", line 117, in post_thread_message\n    response = await thread_manager.post_message(org_id, thread_id, data.content)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 117, in post_message\n    agent = await self._prepare_agent(thread)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 166, in _prepare_agent\n    raise ValueError(f\"Account {thread.account_id} not found\")\nValueError: Account 0013t00002RxBdpAAF not found\n[May 11, 2025 15:51:38 PDT] [ERROR | httptools_impl] Exception in ASGI application\nTraceback (most recent call last):\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 409, in run_asgi\n    result = await app(  # type: ignore[func-returns-value]\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        self.scope, self.receive, self.send\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/middleware/proxy_headers.py\", line 60, in __call__\n    return await self.app(scope, receive, send)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/applications.py\", line 1054, in __call__\n    await super().__call__(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/applications.py\", line 112, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 187, in __call__\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 165, in __call__\n    await self.app(scope, receive, _send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/opentelemetry/instrumentation/asgi/__init__.py\", line 743, in __call__\n    await self.app(scope, otel_receive, otel_send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\n    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 714, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 734, in app\n    await route.handle(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 288, in handle\n    await self.app(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 76, in app\n    await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 73, in app\n    response = await f(request)\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 301, in app\n    raw_response = await run_endpoint_function(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\n    return await dependant.call(**values)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/api.py\", line 117, in post_thread_message\n    response = await thread_manager.post_message(org_id, thread_id, data.content)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 117, in post_message\n    agent = await self._prepare_agent(thread)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 166, in _prepare_agent\n    raise ValueError(f\"Account {thread.account_id} not found\")\nValueError: Account 0013t00002RxBdpAAF not found\n[May 11, 2025 15:51:38 PDT] [ERROR | httptools_impl] Exception in ASGI application\nTraceback (most recent call last):\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 409, in run_asgi\n    result = await app(  # type: ignore[func-returns-value]\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        self.scope, self.receive, self.send\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/middleware/proxy_headers.py\", line 60, in __call__\n    return await self.app(scope, receive, send)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/applications.py\", line 1054, in __call__\n    await super().__call__(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/applications.py\", line 112, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 187, in __call__\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 165, in __call__\n    await self.app(scope, receive, _send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/opentelemetry/instrumentation/asgi/__init__.py\", line 743, in __call__\n    await self.app(scope, otel_receive, otel_send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\n    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 714, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 734, in app\n    await route.handle(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 288, in handle\n    await self.app(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 76, in app\n    await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 73, in app\n    response = await f(request)\n               ^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 301, in app\n    raw_response = await run_endpoint_function(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n    )\n    ^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\n    return await dependant.call(**values)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/api.py\", line 117, in post_thread_message\n    response = await thread_manager.post_message(org_id, thread_id, data.content)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 117, in post_message\n    agent = await self._prepare_agent(thread)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 166, in _prepare_agent\n    raise ValueError(f\"Account {thread.account_id} not found\")\nValueError: Account 0013t00002RxBdpAAF not found"
            }
          }
        },
        {
          "display": "test it again, i have the logs open",
          "pastedContents": {}
        },
        {
          "display": "okay run it",
          "pastedContents": {}
        },
        {
          "display": "just run it with uv",
          "pastedContents": {}
        },
        {
          "display": "API is already running, you run it with org 5280",
          "pastedContents": {}
        },
        {
          "display": "how can we test it",
          "pastedContents": {}
        },
        {
          "display": "I didn't write that stuff.  Which commits put that ExtraContext stuff in that was there before we started working on this?  ",
          "pastedContents": {}
        },
        {
          "display": "the code already had that?  where?",
          "pastedContents": {}
        },
        {
          "display": "in the new thread creation endpoint (look at briefs/api, and briefs/thread), i want an extra_context parameter that lets the client send an arbitrary context blob & then makes sure that blob ends up being sent in every LLM call throughout the lifetime of that thread",
          "pastedContents": {}
        },
        {
          "display": "Dustin:   Also there’s an issue where passing first_message on thread creation blocks the response for 1min or more, which breaks the UI flow I had set up initially.\nI have a hacky workaround that is buggy and error prone, but had originally expected this fixed Thursday, so I didn’t harden the workaround.\nThen expected Friday, so also didn’t improve the workaround, and here we are.\n\nWhat does he mean and how can I fix it?  pretty sure the code is in briefs/briefs/threads, or briefs/briefs/api",
          "pastedContents": {}
        },
        {
          "display": "examine readme and tell me how to run port forwareder",
          "pastedContents": {}
        },
        {
          "display": "I want this to be 100% fido.  Ignore the ingest directory.",
          "pastedContents": {}
        },
        {
          "display": "│ > please read Vitally's API docs and my fido ingesters, and help me understand how to build a system to auto-ingest Vitally data on behalf of our customers (whom we call Vendors or Orgs) so Vitally info can become a source in Endgame (our app)",
          "pastedContents": {}
        },
        {
          "display": "are you sure that it's being saved in the same way as the custom ones?   i.e. will it actually be in .app_frontend__topic_instructions",
          "pastedContents": {}
        },
        {
          "display": "does it get passed into Briefs context in the src/briefs codebase alongside other rules?",
          "pastedContents": {}
        },
        {
          "display": "more examples of number 6",
          "pastedContents": {}
        },
        {
          "display": "yes but how is it used in the backend",
          "pastedContents": {}
        },
        {
          "display": "in the configuration UI, we have Rules.  there are System rules and custom rules.  how is the Value Prop rule treated specially, vs. custom rules?",
          "pastedContents": {}
        },
        {
          "display": "check all READMEs for reclone command",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 4,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "base.py",
        "config.py"
      ],
      "exampleFilesGeneratedAt": 1749530639055,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 2.8749922000000003,
      "lastAPIDuration": 179962,
      "lastDuration": 657007,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 15737,
      "lastTotalOutputTokens": 2805,
      "lastTotalCacheCreationInputTokens": 92114,
      "lastTotalCacheReadInputTokens": 640563,
      "lastSessionId": "7223f4c7-d1e7-4193-92a8-2a3b964c1827"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/chat": {
      "allowedTools": [],
      "history": [
        {
          "display": "switch the chat model to o3",
          "pastedText": null
        },
        {
          "display": "just README.md plz",
          "pastedText": null
        },
        {
          "display": "Make me a very simple README for how to use the CLI",
          "pastedText": null
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "enableAllProjectMcpServers": false,
      "hasTrustDialogAccepted": false,
      "ignorePatterns": [],
      "projectOnboardingSeenCount": 3,
      "exampleFiles": [
        "utils.py",
        "models.py",
        "app.py",
        "entity_with_storage.py",
        "base.py"
      ],
      "exampleFilesGeneratedAt": 1745481027515,
      "lastCost": 0.2341248,
      "lastAPIDuration": 68165,
      "lastDuration": 128947,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastSessionId": "3f509c2e-d237-4b83-879f-a0209bef8805"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head": {
      "allowedTools": [],
      "history": [
        {
          "display": "why can't i push",
          "pastedContents": {}
        },
        {
          "display": "commit my changes",
          "pastedContents": {}
        },
        {
          "display": "help me do that",
          "pastedContents": {}
        },
        {
          "display": "[2025-06-04 14:38:20] Filling in username and password...\n[2025-06-04 14:38:20] Sleeping for ~1s: Waiting for username to be filled\n[2025-06-04 14:38:21] Clicking login button...\n[2025-06-04 14:38:21] Sleeping for ~2s: Waiting for login to complete\n[2025-06-04 14:38:24] Waiting for the page to load...\n[2025-06-04 14:38:24] Login completed, starting captcha wait...\n[2025-06-04 14:38:24] Sleeping for ~1s: Waiting for captcha to be solved\n[2025-06-04 14:38:25] Captcha wait completed, starting profile crawl...\n[2025-06-04 14:38:25] Starting crawl_profiles method...\n[2025-06-04 14:38:25] About to query database for unviewed profiles...",
          "pastedContents": {}
        },
        {
          "display": "[2025-06-04 14:37:41] Clicking login button...\n[2025-06-04 14:37:42] Sleeping for ~2s: Waiting for login to complete\n[2025-06-04 14:37:43] Waiting for the page to load...\n[2025-06-04 14:37:43] Login completed, starting captcha wait...\n[2025-06-04 14:37:43] Sleeping for ~1s: Waiting for captcha to be solved\n[2025-06-04 14:37:44] Captcha wait completed, starting profile crawl...",
          "pastedContents": {}
        },
        {
          "display": "add some log lines for the next few steps",
          "pastedContents": {}
        },
        {
          "display": "another hint:  it only happens when i'm crawling, not when i'm searching",
          "pastedContents": {}
        },
        {
          "display": "i don't think that's it because the logs say:\n\n[2025-06-04 14:35:47] Sleeping for ~2s: Waiting for login to complete\n[2025-06-04 14:35:49] Waiting for the page to load...\n[2025-06-04 14:35:49] Sleeping for ~1s: Waiting for captcha to be solved",
          "pastedContents": {}
        },
        {
          "display": "!open src/scraper/linkedin_scraper.py",
          "pastedContents": {}
        },
        {
          "display": "i think Linkedin is jamming random stuff into the browser so this sort of wait times out.   the page has definitely visibly loaded for me.  how many places are we using this call?",
          "pastedContents": {}
        },
        {
          "display": "no it's waiting way, way longer.  like it doesn't appear to be a sleep, but something else.",
          "pastedContents": {}
        },
        {
          "display": "Why is my crawl command hanging on \"[2025-06-04 08:16:01] Sleeping for ~1s: Waiting for captcha to be solved\" for 30-60 seconds?  ",
          "pastedContents": {}
        },
        {
          "display": "what happened\n\n[Pasted text #1 +62 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "Original exception was:\nTraceback (most recent call last):\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\n  File \"<frozen runpy>\", line 88, in _run_code\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/src/cli.py\", line 500, in <module>\n    run()\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/src/cli.py\", line 275, in run\n    run_crawl(scraper)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/src/cli.py\", line 72, in run_crawl\n    scraper.run_crawl()\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/src/scraper/linkedin_scraper.py\", line 124, in run_crawl\n    self.crawl_profiles(starting_unused_crawl_quota)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/src/scraper/linkedin_scraper.py\", line 139, in crawl_profiles\n    profiles = LinkedinProfile.find_unviewed_by_user(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/src/models.py\", line 223, in find_unviewed_by_user\n    cursor = db[cls._get_collection_name()].aggregate(pipeline)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/synchronous/collection.py\", line 2979, in aggregate\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/_csot.py\", line 119, in csot_wrapper\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/synchronous/collection.py\", line 2886, in _aggregate\n    return self._database.client._retryable_read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/synchronous/mongo_client.py\", line 2026, in _retryable_read\n    return self._retry_internal(\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/_csot.py\", line 119, in csot_wrapper\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/synchronous/mongo_client.py\", line 1993, in _retry_internal\n    ).run()\n      ^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/synchronous/mongo_client.py\", line 2730, in run\n    return self._read() if self._is_read else self._write()\n           ^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/synchronous/mongo_client.py\", line 2891, in _read\n    return self._func(self._session, self._server, conn, read_pref)  # type: ignore\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/synchronous/aggregation.py\", line 164, in get_cursor\n    result = conn.command(\n             ^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/synchronous/helpers.py\", line 47, in inner\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/synchronous/pool.py\", line 439, in command\n    self._raise_connection_failure(error)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/synchronous/pool.py\", line 411, in command\n    return command(\n           ^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/synchronous/network.py\", line 198, in command\n    reply = receive_message(conn, request_id)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/network_layer.py\", line 751, in receive_message\n    length, _, response_to, op_code = _UNPACK_HEADER(receive_data(conn, 16, deadline))\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/network_layer.py\", line 351, in receive_data\n    chunk_length = conn.conn.recv_into(mv[bytes_read:])\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/pymongo/network_layer.py\", line 461, in recv_into\n    return self.conn.recv_into(buffer)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^"
            }
          }
        },
        {
          "display": "how do i use this CLI to turn screenshots into db fields",
          "pastedContents": {}
        },
        {
          "display": "write me a CLI command that goes through all the profiles in mongoDB and writes each one to a json file in the screenshots folder",
          "pastedContents": {}
        },
        {
          "display": "write me a script that goes through all the profiles in mongoDB and writes each one to a json file in the screenshots folder",
          "pastedContents": {}
        },
        {
          "display": "how to use CLI to parse profile screnshots",
          "pastedContents": {}
        },
        {
          "display": "nope I'm talking about in the crawl / scrape command not the search command.",
          "pastedContents": {}
        },
        {
          "display": "no that's not what's doing it.  look for sleep statements or other pauses besides that value.",
          "pastedContents": {}
        },
        {
          "display": "why is this waiting 30s before crawling:  [2025-05-24 14:35:39] Found 39 profiles to crawl\n[2025-05-24 14:35:39] [kihmoon@gmail.com] [1 of 39] Scraping profile (created: 2025-05-23 23:22, search terms: CRO OR \"Account Executive\"): https://www.linkedin.com/sales/lead/ACwAACBhIwABIQVVl9j2dyXZEW_nDPsmK2TK1Xk",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "update daily crawl quota to 450",
          "pastedContents": {}
        },
        {
          "display": "add simple human-readable timestamps (with seconds) to the log function",
          "pastedContents": {}
        },
        {
          "display": "move quota 250->300",
          "pastedContents": {}
        },
        {
          "display": "revert my bun.lock changes from last commit",
          "pastedContents": {}
        },
        {
          "display": "update the scraper logging so that it logs the current username each time it reports on scraping a profile",
          "pastedContents": {}
        },
        {
          "display": "no, just remove username from required",
          "pastedContents": {}
        },
        {
          "display": "yes",
          "pastedContents": {}
        },
        {
          "display": "update CLI so that if a user doesn't provided, but it's for a mode that requires user, the CLI interactively asks which user (from the DB) I want to login as and lets me select from a list.",
          "pastedContents": {}
        },
        {
          "display": "don't take credit",
          "pastedContents": {}
        },
        {
          "display": "push my changes",
          "pastedContents": {}
        },
        {
          "display": "for cawl mode, make a new CLI flag called --do_not_scrape that tells the LinkedinScraper to skip the HTML saving and screenshot steps on each profile",
          "pastedContents": {}
        },
        {
          "display": "fix mongosh query scrappy_head> db.linkedin_profile.find({\"full_name\": {\"$contains\": \"Betker\"}})",
          "pastedContents": {}
        },
        {
          "display": "!git push",
          "pastedContents": {}
        },
        {
          "display": "commit my code",
          "pastedContents": {}
        },
        {
          "display": "commit my changes",
          "pastedContents": {}
        },
        {
          "display": "push my changes",
          "pastedContents": {}
        },
        {
          "display": "Please update this to alphabetize the end",
          "pastedContents": {}
        },
        {
          "display": "how does it decide what order to process the profile IDs?",
          "pastedContents": {}
        },
        {
          "display": "how does parse_screenshots sort or order its work?",
          "pastedContents": {}
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "don't touch agentic scraper",
          "pastedContents": {}
        },
        {
          "display": "i don't like doing this two ways.  use classmethod for both;  and add a limit to it also since we don't want to hydrate too many objects",
          "pastedContents": {}
        },
        {
          "display": "now update my scraper crawl method to use this new style",
          "pastedContents": {}
        },
        {
          "display": "I don't want to leak this CommandCursor abstraction back to the caller.  Let's instead hydrate these options, and just return an array of Profiles",
          "pastedContents": {}
        },
        {
          "display": "these imports should be at the top of our module, as per our style guide",
          "pastedContents": {}
        },
        {
          "display": "what's with the Cursor import",
          "pastedContents": {}
        },
        {
          "display": "make the type hints ",
          "pastedContents": {}
        },
        {
          "display": "the method it should take in a User instance, not just the email",
          "pastedContents": {}
        },
        {
          "display": "okay add a pipeline classmethod (or static method?) like this to the LinkedinProfile model class",
          "pastedContents": {}
        },
        {
          "display": "how do i make mongoengine run this kind of pipeline",
          "pastedContents": {}
        },
        {
          "display": "why not something like\n\n[Pasted text #1 +31 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "pipeline = [\n    {\n        \"$match\": {\n            \"search_terms\": {\"$regex\": \"your_substring_here\", \"$options\": \"i\"}\n        }\n    },\n    {\n        \"$lookup\": {\n            \"from\": \"linked_in_profile_view\",\n            \"let\": {\"profile_id\": \"$_id\"},\n            \"pipeline\": [\n                {\n                    \"$match\": {\n                        \"$expr\": {\n                            \"$and\": [\n                                {\"$eq\": [\"$linkedin_profile\", \"$$profile_id\"]},\n                                {\"$eq\": [\"$viewed_by.email\", \"aditya.khargonekar@gmail.com\"]}\n                            ]\n                        }\n                    }\n                }\n            ],\n            \"as\": \"views\"\n        }\n    },\n    {\n        \"$match\": {\n            \"views\": {\"$size\": 0}\n        }\n    }\n]\n"
            }
          }
        },
        {
          "display": "what will happen if i've viewed a billion things;  does it try to bring them ALL into python memory, or does it executive on the DB               \n",
          "pastedContents": {}
        },
        {
          "display": "if i wanted to write a single mongo query that says \"give me an array of all the linkedin profiles whose search query string has a certain substring (case-insensitive), where the profiles have NOT been viewed by the user with email address aditya.khargonekar@gmail.com\" how would i do that",
          "pastedContents": {}
        },
        {
          "display": "figure this out via  mongosh query",
          "pastedContents": {}
        },
        {
          "display": "un-viewed by aditya.khargonekar@gmail.com i mean",
          "pastedContents": {}
        },
        {
          "display": "I just ran this new code, and it seems to be crawling profiles i HAVE seen as aditya.khargonekar@gmail.com.   write a mongosh query to prove to yourself that there are lots of unviewed profiles",
          "pastedContents": {}
        },
        {
          "display": "this doesn't run:\n\n\n[Pasted text #1 +72 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "\nFilling in username and password...\nSleeping for ~1s: Waiting for username to be filled\nClicking login button...\nSleeping for ~2s: Waiting for login to complete\nWaiting for the page to load...\nSleeping for ~0s: Waiting for captcha to be solved\nTraceback (most recent call last):\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/base/fields.py\", line 576, in to_mongo\n    return ObjectId(str(value))\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/bson/objectid.py\", line 105, in __init__\n    self.__validate(oid)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/bson/objectid.py\", line 193, in __validate\n    _raise_invalid_id(oid)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/bson/objectid.py\", line 38, in _raise_invalid_id\n    raise InvalidId(\nbson.errors.InvalidId: 'LinkedinProfile object' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\n  File \"<frozen runpy>\", line 88, in _run_code\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/src/cli.py\", line 408, in <module>\n    run()\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/src/cli.py\", line 240, in run\n    run_crawl(scraper)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/src/cli.py\", line 72, in run_crawl\n    scraper.run_crawl()\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/src/scraper/linkedin_scraper.py\", line 120, in run_crawl\n    self.crawl_profiles(starting_unused_crawl_quota)\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/src/scraper/linkedin_scraper.py\", line 149, in crawl_profiles\n    never_viewed_count = LinkedinProfile.objects(**never_viewed_query).count()\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/queryset/queryset.py\", line 143, in count\n    return super().count(with_limit_and_skip)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/queryset/base.py\", line 432, in count\n    collection=self._cursor.collection,\n               ^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/queryset/base.py\", line 1720, in _cursor\n    self._cursor_obj = self._collection.find(self._query, **self._cursor_args)\n                                             ^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/queryset/base.py\", line 1769, in _query\n    self._mongo_query = self._query_obj.to_query(self._document)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/queryset/visitor.py\", line 91, in to_query\n    query = query.accept(QueryCompilerVisitor(document))\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/queryset/visitor.py\", line 184, in accept\n    return visitor.visit_query(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/queryset/visitor.py\", line 80, in visit_query\n    return transform.query(self.document, **query.query)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/queryset/transform.py\", line 140, in query\n    value = _prepare_query_for_iterable(field, op, value)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/queryset/transform.py\", line 527, in _prepare_query_for_iterable\n    return [field.prepare_query_value(op, v) for v in value]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/queryset/transform.py\", line 527, in <listcomp>\n    return [field.prepare_query_value(op, v) for v in value]\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/base/fields.py\", line 583, in prepare_query_value\n    return self.to_mongo(value)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/base/fields.py\", line 578, in to_mongo\n    self.error(str(e))\n  File \"/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/.venv/lib/python3.11/site-packages/mongoengine/base/fields.py\", line 215, in error\n    raise ValidationError(message, errors=errors, field_name=field_name)\nmongoengine.errors.ValidationError: 'LinkedinProfile object' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string"
            }
          }
        },
        {
          "display": "this list comprehension is sitll going to pull millions of IDs into python memory.  I know in postgres/sqlalchemy we'd just do a join here.  Can that not be achieved in Mongoengine land?\n\n│ │ 140              'id__nin': [                                                                                                                                                                  │ │\n│ │ 141                  view.linkedin_profile.id for view in LinkedInProfileView.objects(viewed_by=self.user)                                                                                     │ │\n│ │ 142              ]                                                                                                                                                                             │ │",
          "pastedContents": {}
        },
        {
          "display": "I think this implementation is messy.  1, we're pulling potentially millions of viewed profile IDs into a single python list.\n\n2, I think the algorithm could be cleaner.\n\nLet's say I have remaining quota of 150.  FIRST, I ask Mongo how many profiles that I have never viewed match my filter criteria.  If it's > 150, I just crawl 150 of those.\n\nIf it's less, then SECOND, I ask Mongo \"Okay now give me all the profiles that match my filter criteria that I've viewed, in order of when I viewed them.",
          "pastedContents": {}
        },
        {
          "display": "Actually I think we can skip one of the groups.  First, go for profiles that have never been viewed.  Then, go for profiles that were viewed _the longest time_ ago.",
          "pastedContents": {}
        },
        {
          "display": "I imagine after a couple weeks, a user will have viewed all of the profiles we have in the DB.  But it'll still be within the 30-day cooldown window, so when I run crawl-mode, it'll simply \"find\" no profiles to crawl.  I think there's probably a more graceful way to do this, that *prefers* never-been-viewed or on-view-cooldown, but still finds a way to use its full quota every day even if the preferred profiles aren't available",
          "pastedContents": {}
        },
        {
          "display": "commit my changes and push to gh",
          "pastedContents": {}
        },
        {
          "display": "push my changes",
          "pastedContents": {}
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "use mongosh to check that exact profile",
          "pastedContents": {}
        },
        {
          "display": "run it with the uv command in the readme",
          "pastedContents": {}
        },
        {
          "display": "run with uv",
          "pastedContents": {}
        },
        {
          "display": "test it on this case:   screenshots/ACwAAARaZLQBC9yikxjscqSnlCQ4A3PrECNc3K0_20250504_120000.png",
          "pastedContents": {}
        },
        {
          "display": "please fix",
          "pastedContents": {}
        },
        {
          "display": "walk me through this flow and wat happens after",
          "pastedContents": {}
        },
        {
          "display": "screenshot parser gave me this:\n\n  WARNING - Unknown month name: 01\n  WARNING - Unknown month name: 10\n  WARNING - Unknown month name: 08\n  WARNING - Unknown month name: 06\n  WARNING - Unknown month name: 02\n  WARNING - Unknown month name: 08\n  WARNING - Unknown month name: 07\n  WARNING - Unknown month name: 07\n\n\nfix it",
          "pastedContents": {}
        },
        {
          "display": "no\n\nmy screenshot parser gave me this in the logs:\n\n\n[Pasted text #1 +7 lines]\n\nupdate it to handle this case",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "                                                                                                                     │ │\n│ │ 155      connections_count = IntField()  # Number of LinkedIn connections                                                                                                                                               │ │\n│ │ 156      screenshot_filename = StringField()  # Filename of saved profile screenshot                                                                                                                                    │ │\n│ │ 157      full_html = StringField()  # Full HTML content of the profile page                                                                                                                                             │ │\n│ │ 157      # full_html field removed as it's no longer needed and data is now extracted into structured fields                                                                                                            │ │\n│ │ 158      is_screenshot_parsed = BooleanField(default=False)  # Flag to indicate if screenshot has been parsed                                                                                                           │ │\n│ │ 159                                                                                                                                                                                                                     │ │\n│ │ 160      discovered_by = ReferenceField(User)  # User who discovered this profile"
            }
          }
        },
        {
          "display": "no commment",
          "pastedContents": {}
        },
        {
          "display": "remove it from LinkedinProfile model",
          "pastedContents": {}
        },
        {
          "display": "is full_html still in our mongoengine model",
          "pastedContents": {}
        },
        {
          "display": "run it with mongosh",
          "pastedContents": {}
        },
        {
          "display": "you run it",
          "pastedContents": {}
        },
        {
          "display": "tell me how old the full_html ones are",
          "pastedContents": {}
        },
        {
          "display": "how about ones where full_html is present",
          "pastedContents": {}
        },
        {
          "display": "mongosh query to find ones have processed flag is true",
          "pastedContents": {}
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "write a commit message",
          "pastedContents": {}
        },
        {
          "display": "push my changes to github",
          "pastedContents": {}
        },
        {
          "display": "please add logic to avoid re-processing.   you can just put a \"is_screenshot_parsed\" boolean field on the Profile model",
          "pastedContents": {}
        },
        {
          "display": "will this CLI command skip screenshots weve already parsed",
          "pastedContents": {}
        },
        {
          "display": "same query but dont restrict fields",
          "pastedContents": {}
        },
        {
          "display": "what's this line do     {full_name: 1, occupation: 1, company: 1, profile_url: 1}",
          "pastedContents": {}
        },
        {
          "display": "mongosh query to find linkedin_profile with full_name containing \"Joshua\"",
          "pastedContents": {}
        },
        {
          "display": "Do it manually on 10 more profiles, checking results in mongo",
          "pastedContents": {}
        },
        {
          "display": "keep prints whenever there's an exception being caught, so we don't silently fail",
          "pastedContents": {}
        },
        {
          "display": "remove the very large logging calls",
          "pastedContents": {}
        },
        {
          "display": "let's test it on another random screenshot ",
          "pastedContents": {}
        },
        {
          "display": "add some logging and re-run on this single profile",
          "pastedContents": {}
        },
        {
          "display": "why are there no starts at or ends at dates in their education / work history",
          "pastedContents": {}
        },
        {
          "display": "tell me how to find that document in mongosh query",
          "pastedContents": {}
        },
        {
          "display": "from langchain_openai import ChatOpenAI\nfrom langchain_core.messages import HumanMessage\nimport base64\n\n# Encode the image to base64\nwith open(\"path_to_image.jpg\", \"rb\") as image_file:\n    base64_image = base64.b64encode(image_file.read()).decode('utf-8')\n\n# Create the message with both text and image\nmessage = HumanMessage(content=[\n    {\"type\": \"text\", \"text\": \"Describe the contents of this image.\"},\n    {\"type\": \"image_url\", \"image_url\": {\"url\": f\"data:image/jpeg;base64,{base64_image}\"}}\n])\n\n# Initialize the model\nllm = ChatOpenAI(model=\"gpt-4o\")\n\n# Invoke the model with the message\nresponse = llm.invoke([message])\nprint(response.content)\n",
          "pastedContents": {}
        },
        {
          "display": "there must be a langchain way to do this",
          "pastedContents": {}
        },
        {
          "display": "try it",
          "pastedContents": {}
        },
        {
          "display": "we use uv here, so it should be\n\nuv run -m src.cli --mode parse_screenshots --profile-id ACwAAC2rp0sB19Txah-hnlHNm50asyUd3EnNd6Q",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 6,
      "exampleFiles": [
        "linkedin_scraper.py",
        "cli.py",
        "models.py",
        "utils.py",
        "screenshot_parser.py"
      ],
      "exampleFilesGeneratedAt": 1748812633114,
      "lastCost": 0.243478,
      "lastAPIDuration": 81030,
      "lastDuration": 734836,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 9444,
      "lastTotalOutputTokens": 1374,
      "lastTotalCacheCreationInputTokens": 1494,
      "lastTotalCacheReadInputTokens": 87477,
      "lastSessionId": "4e3dc0fa-5186-46af-ab47-880fd1190c67"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/scrappy-head/screenshots": {
      "allowedTools": [],
      "history": [
        {
          "display": "first query is right.  but i want the viewed_by user.email field to render",
          "pastedText": null
        },
        {
          "display": "will this query look across all users?",
          "pastedText": null
        },
        {
          "display": "collection name is 'linkedin_profile_view'",
          "pastedText": null
        },
        {
          "display": "give me a mongosh query to find times when the same profile has been visited more than once\n\nhere is an example from the collection:\n\n  {\n    _id: ObjectId('681728cfb4458a897147fcfb'),\n    created_at: ISODate('2025-05-04T08:43:59.541Z'),\n    updated_at: ISODate('2025-05-04T08:43:59.541Z'),\n    uuid: 'c6a02aff-4896-4917-9793-c45216d925bf',\n    viewed_by: ObjectId('681703af1970d00d39d00d6b'),\n    linkedin_profile: ObjectId('68172189e7adedfdbc814c44')\n  }",
          "pastedText": null
        },
        {
          "display": "> each screenshot in this folder starts with the linkedin Id of the user, then the timestamp.  can you identify any instances where we have duplicates of the same screenshot but with different timestamps",
          "pastedText": null
        },
        {
          "display": "each screenshot in this folder starts with the linkedin Id of the user, then the timestamp.  can you identify any instances where we have duplicates of the same screenshot but with different timestamps",
          "pastedText": null
        },
        {
          "display": "remove the files from this directory that have 'full' in the filename",
          "pastedText": null
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "enableAllProjectMcpServers": false,
      "hasTrustDialogAccepted": false,
      "ignorePatterns": [],
      "projectOnboardingSeenCount": 2,
      "exampleFiles": [
        "linkedin_scraper.py",
        "cli.py",
        "models.py",
        "main.py",
        "linkedin_scraper_agentic.py"
      ],
      "exampleFilesGeneratedAt": 1746385005716,
      "lastCost": 0.2935279499999999,
      "lastAPIDuration": 165619,
      "lastDuration": 253022,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastSessionId": "d1c89797-7b53-40c0-a807-64db49ddadc5"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/fido": {
      "allowedTools": [],
      "history": [
        {
          "display": "tell me more about how zoom-fido work for our Vendors' instances.  take your time and do a thorough job explaining it",
          "pastedContents": {}
        },
        {
          "display": "We have a potential customer who uses Microsoft Teams instead of Zoom.  Read the Teams API docs and help me figure out how to ingest the transcripts from Teams on behalf of our customers.",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "enableAllProjectMcpServers": false,
      "hasTrustDialogAccepted": false,
      "ignorePatterns": [],
      "projectOnboardingSeenCount": 2,
      "exampleFiles": [
        "models.py",
        "app.py",
        "base.py",
        "summarizer.py",
        "core.py"
      ],
      "exampleFilesGeneratedAt": 1746639160824,
      "lastCost": 0.19835474999999989,
      "lastAPIDuration": 297625,
      "lastDuration": 66511417,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 22956,
      "lastTotalOutputTokens": 6186,
      "lastTotalCacheCreationInputTokens": 24351,
      "lastTotalCacheReadInputTokens": 7883,
      "lastSessionId": "83fe1ff8-2090-4732-b740-06fc4357537f"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/data-mesh": {
      "allowedTools": [],
      "history": [
        {
          "display": "I'm not sure this is the right one.  I want to change the one with th eerror messsage The table has un-applied upsert data that is not fresh enough",
          "pastedContents": {}
        },
        {
          "display": "this is all fine, let's just change the error message to a warning",
          "pastedContents": {}
        },
        {
          "display": "why does this happen when I try to reclone:\n\nError 400: The table has un-applied upsert data that is not fresh enough to meet table's max_staleness. Watermark: 1746641379642, staleness tolerance (in milliseconds) : 0, operation time: 1746641572144, invalid\" org=6024 table=briefs_v3__brief_definition",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "enableAllProjectMcpServers": false,
      "hasTrustDialogAccepted": false,
      "ignorePatterns": [],
      "projectOnboardingSeenCount": 1,
      "exampleFiles": [
        "models.py",
        "app.py",
        "base.py",
        "summarizer.py",
        "core.py"
      ],
      "exampleFilesGeneratedAt": 1746643854087,
      "lastCost": 1.23047915,
      "lastAPIDuration": 228785,
      "lastDuration": 252884772,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastSessionId": "f1709c42-a396-4c64-ac12-9cbb846b36a8"
    },
    "/Users/dorkitude/.claude": {
      "allowedTools": [],
      "history": [
        {
          "display": "/usage ",
          "pastedContents": {}
        },
        {
          "display": "it does exist, i'm just asking if that single command is enough to help my friend set up a similar `/usage` command from scratch.",
          "pastedContents": {}
        },
        {
          "display": "is this enough to create a usage command from scratch:\n\necho \"Run npx ccusage@latest to check Claude Code usage statistics.  Summarize the results to screen.\" > ~/.claude/commands/usage.md",
          "pastedContents": {}
        },
        {
          "display": "/user:usage",
          "pastedContents": {}
        },
        {
          "display": "/usage",
          "pastedContents": {}
        },
        {
          "display": "i'm talking about custom slash commands:\n\nhttps://docs.anthropic.com/en/docs/claude-code/slash-commands#custom-slash-commands",
          "pastedContents": {}
        },
        {
          "display": "usage",
          "pastedContents": {}
        },
        {
          "display": "not working in other sesions.  you simply put the file where it alreeady was anyway.",
          "pastedContents": {}
        },
        {
          "display": "/usage",
          "pastedContents": {}
        },
        {
          "display": "doesn't seem to work in other sessions",
          "pastedContents": {}
        },
        {
          "display": "/usage",
          "pastedContents": {}
        },
        {
          "display": "no i meant a claude command that lets me type /usage within claude code",
          "pastedContents": {}
        },
        {
          "display": "we're in ~/.claude\n\nI heard you can make commands in here somehow.\n\nHelp me make one called /usage, which simply runs npx ccusage@latest",
          "pastedContents": {}
        },
        {
          "display": "make me a simple CLAUDE.md that just says \"always prever uv in python projects, and always run python commands using uv.",
          "pastedContents": {}
        },
        {
          "display": "/init ",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 3,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 0.44060535,
      "lastAPIDuration": 217643,
      "lastDuration": 1042823,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 28504,
      "lastTotalOutputTokens": 1496,
      "lastTotalCacheCreationInputTokens": 10377,
      "lastTotalCacheReadInputTokens": 108178,
      "lastSessionId": "8fb831af-5352-4103-802f-b32b0131496b"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/tpuf_spike": {
      "allowedTools": [],
      "history": [
        {
          "display": "i cant run my cli anymore.  dorkitude ~/Dropbox/dev/cerebro/src/briefs/briefs/tpuf_spike [kyle/tpuf-test] $   uv run python cli.py search-facts \\\n    --query \"customer education\" \\\n    --top-k 2 \\\n    --days-filter 7\n\n\n╭───────────────────────────╮\n│ 🔍 Facts Search Tool      │\n│ Organization: 5280        │\n│ Account: All accounts     │\n│ Query: customer education │\n│ Top results: 2            │\n╰───────────────────────────╯\n\n⚙️  Loading settings...\n❌ Error loading settings: 10 validation errors for Settings\nlangfuse_secret_key\n  Field required\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nlangfuse_public_key\n  Field required",
          "pastedContents": {}
        },
        {
          "display": "I've moved these files out of ../../ and into this folder\n\nmake it so i can run the CLi",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "enableAllProjectMcpServers": false,
      "hasTrustDialogAccepted": false,
      "ignorePatterns": [],
      "projectOnboardingSeenCount": 3,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "facts_to_tpuf.py",
        "models.py",
        "app.py",
        "agno_manager.py",
        "summarizer.py"
      ],
      "exampleFilesGeneratedAt": 1748198184056,
      "lastCost": 0.13554634999999998,
      "lastAPIDuration": 37664,
      "lastDuration": 20674,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 3889,
      "lastTotalOutputTokens": 413,
      "lastTotalCacheCreationInputTokens": 28815,
      "lastTotalCacheReadInputTokens": 64441,
      "lastSessionId": "b348afdc-eac6-4dcb-bae3-5de1fbaee5cd"
    },
    "/Users/dorkitude": {
      "allowedTools": [],
      "history": [
        {
          "display": "install this mcp server to claude https://github.com/steipete/macos-automator-mcp",
          "pastedContents": {}
        },
        {
          "display": "backup my .zshrc\n\norganize it into logical sections with comment headings\n\nadd this:\nalias cc=\"claude --dangerously-skip-permissions\"",
          "pastedContents": {}
        },
        {
          "display": "give ghostty full disk access to stop all the popups",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": true,
      "mcpContextUris": [],
      "mcpServers": {},
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastCost": 0.0013744000000000002,
      "lastAPIDuration": 8793,
      "lastDuration": 6417,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 1453,
      "lastTotalOutputTokens": 53,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "a59f9786-91dc-4ffc-b7c7-c29f475457ae"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/bourd.ai": {
      "allowedTools": [],
      "history": [
        {
          "display": "I'd like the main function to be python.  Use uv to setup an environment as well.",
          "pastedContents": {}
        },
        {
          "display": "I have a bunch of mkv files in  @/Users/dorkitude/Library/Application\\ Support/Plex/Plex\\ Media\\ Server/Sync  but they're taking up too much space.  i need to pull just the audio information out of each one, and delete the original\n\nhow would i do that?",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "ignorePatterns": [],
      "projectOnboardingSeenCount": 3,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/c2": {
      "allowedTools": [],
      "history": [],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 2,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastCost": 0.0031816000000000006,
      "lastAPIDuration": 18015,
      "lastDuration": 4975,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 3547,
      "lastTotalOutputTokens": 86,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "95199cdb-0e68-4d42-9866-af0c85d0388f"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/c2/cerebro/src/briefs/briefs/threads": {
      "allowedTools": [],
      "history": [
        {
          "display": "cd ../..",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 1,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "summarizer.py",
        "core.py"
      ],
      "exampleFilesGeneratedAt": 1748970276199,
      "lastCost": 0.0028656000000000003,
      "lastAPIDuration": 17363,
      "lastDuration": 8271,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 3097,
      "lastTotalOutputTokens": 97,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "e9f1e6ed-a8a7-421e-a61f-31bdbbe1bfd6"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/c2/cerebro/src/briefs": {
      "allowedTools": [],
      "history": [
        {
          "display": "no what's this about",
          "pastedContents": {}
        },
        {
          "display": "I don't believe that's the problem.  That chance was in 2023.  It's currently 2025.  ",
          "pastedContents": {}
        },
        {
          "display": "mypy giving me this:\n\nbriefs/telemetry.py:12: error: Module \"opentelemetry.sdk.resources\" has no attribute \"DEPLOYMENT_ENVIRONMENT\"  [attr-defined]\nbriefs/telemetry.py:12: error: Module \"opentelemetry.sdk.resources\" has no attribute \"SERVICE_NAME\"  [attr-defined]\nbriefs/telemetry.py:12: error: Module \"opentelemetry.sdk.resources\" has no attribute \"Resource\"  [attr-defined]\n\nit works fine on main branch.  what's different in mine that could cause this?",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "mypy giving me this:\n\nbriefs/telemetry.py:12: error: Module \"opentelemetry.sdk.resources\" has no attribute \"DEPLOYMENT_ENVIRONMENT\"  [attr-defined]\nbriefs/telemetry.py:12: error: Module \"opentelemetry.sdk.resources\" has no attribute \"SERVICE_NAME\"  [attr-defined]\nbriefs/telemetry.py:12: error: Module \"opentelemetry.sdk.resources\" has no attribute \"Resource\"  [attr-defined]\n\nit works fine on main branch.  what's different in mine that could cause this?",
          "pastedContents": {}
        },
        {
          "display": "mypy giving me this:\n\nbriefs/telemetry.py:12: error: Module \"opentelemetry.sdk.resources\" has no attribute \"DEPLOYMENT_ENVIRONMENT\"  [attr-defined]\nbriefs/telemetry.py:12: error: Module \"opentelemetry.sdk.resources\" has no attribute \"SERVICE_NAME\"  [attr-defined]\nbriefs/telemetry.py:12: error: Module \"opentelemetry.sdk.resources\" has no attribute \"Resource\"  [attr-defined]",
          "pastedContents": {}
        },
        {
          "display": "fix merge conflicts",
          "pastedContents": {}
        },
        {
          "display": "what is #2 regaridng LinkedInTpufSearcher",
          "pastedContents": {}
        },
        {
          "display": "what is #1",
          "pastedContents": {}
        },
        {
          "display": "is there any excess or unused stuff in @briefs/tpuf/models.py or @briefs/tpuf/tpuf_searcher.py or @briefs/tpuf/cli/ ",
          "pastedContents": {}
        },
        {
          "display": "get rid of all the caching stuff in @briefs/tpuf/embeddings.py ",
          "pastedContents": {}
        },
        {
          "display": "no  i prefer uv run tpuf-cli",
          "pastedContents": {}
        },
        {
          "display": "update README to reflect what we can now do",
          "pastedContents": {}
        },
        {
          "display": "show me examples of all commands i can run",
          "pastedContents": {}
        },
        {
          "display": "yes",
          "pastedContents": {}
        },
        {
          "display": "!pwd",
          "pastedContents": {}
        },
        {
          "display": "!ls",
          "pastedContents": {}
        },
        {
          "display": "tell me what you're planning.   I want the migrate commands gone, but I want the namespace management & search stuff  allto remain.",
          "pastedContents": {}
        },
        {
          "display": "no i need the data management features in the CLI",
          "pastedContents": {}
        },
        {
          "display": "Remove parts of @briefs/tpuf modules that aren't needed by the CLI",
          "pastedContents": {}
        },
        {
          "display": "uv run tpuf-cli search-facts --org-id 6030 --query 'Sounding Board' --top-k 10\n\nthe prefix should be pulling from my .env BRIEFS_TURBOPUFFER_PREFIX",
          "pastedContents": {}
        },
        {
          "display": "uv run tpuf-cli search-facts --org-id 6030 --query 'Sounding Board' --top-k 10",
          "pastedContents": {}
        },
        {
          "display": "uv run tpuf-cli inspect-schema dev_kyle_public_linkedin_profiles",
          "pastedContents": {}
        },
        {
          "display": "AttributeError: 'Settings' object has no attribute 'turbopuffer_api_key'\n\nadd it in @briefs/settings.py ",
          "pastedContents": {}
        },
        {
          "display": "test the schema viewer",
          "pastedContents": {}
        },
        {
          "display": "remove migrate and fact-fix commands from @briefs/tpuf/cli/ and its README.  remove the imports and dependencies that we no longer need.",
          "pastedContents": {}
        },
        {
          "display": "continue",
          "pastedContents": {}
        },
        {
          "display": "make this work:  uv run tpuf-cli search-facts --org-id 6030 --query 'Sounding Board' --top-k 1000 --detailed-results 1000",
          "pastedContents": {}
        },
        {
          "display": "already exists i think?",
          "pastedContents": {}
        },
        {
          "display": "set up my project for tpuf-cli",
          "pastedContents": {}
        },
        {
          "display": "test it again",
          "pastedContents": {}
        },
        {
          "display": "test it",
          "pastedContents": {}
        },
        {
          "display": "help me get @briefs/threads/cli.py running via uv\n\nupdate its README as well",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "summarizer.py",
        "core.py"
      ],
      "exampleFilesGeneratedAt": 1748970288674,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 0.5795729000000001,
      "lastAPIDuration": 320577,
      "lastDuration": 1462211,
      "lastLinesAdded": 1,
      "lastLinesRemoved": 1,
      "lastTotalInputTokens": 51275,
      "lastTotalOutputTokens": 4761,
      "lastTotalCacheCreationInputTokens": 54478,
      "lastTotalCacheReadInputTokens": 910288,
      "lastSessionId": "b1efc74e-b69f-4894-b0b9-811435adec32"
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/c2/cerebro": {
      "allowedTools": [],
      "history": [
        {
          "display": "get rid of fact-fix, migrate-facts, migrate-linkedin-profiles",
          "pastedContents": {}
        },
        {
          "display": "walk me through all the functions in the CLI main",
          "pastedContents": {}
        },
        {
          "display": "okay do it",
          "pastedContents": {}
        },
        {
          "display": "no keep it",
          "pastedContents": {}
        },
        {
          "display": "what is depending on GCS?",
          "pastedContents": {}
        },
        {
          "display": "try uv run tpuf-cli search-facts --org-id 6030 --query 'Sounding Board' --top-k 1000 --detailed-results 1000",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "summarizer.py",
        "core.py"
      ],
      "exampleFilesGeneratedAt": 1749010696207,
      "hasCompletedProjectOnboarding": true
    },
    "/Users/dorkitude/Library/CloudStorage/Dropbox/dev/cerebro/src/briefs/briefs/threads": {
      "allowedTools": [],
      "history": [
        {
          "display": "merge in origin/main and help me deal with conflicts",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 2,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "base.py",
        "core.py"
      ],
      "exampleFilesGeneratedAt": 1749159226298,
      "lastCost": 0.002124,
      "lastAPIDuration": 16131,
      "lastDuration": 143799,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 2215,
      "lastTotalOutputTokens": 88,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "edbd106f-f6dc-45ed-8f2e-d625d22a87d2"
    },
    "/Users/dorkitude/stash/test_upload": {
      "allowedTools": [],
      "history": [
        {
          "display": "run again",
          "pastedContents": {}
        },
        {
          "display": "just run with python",
          "pastedContents": {}
        },
        {
          "display": "run list.py and see why it breaks",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 2,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastCost": 0.13946334999999999,
      "lastAPIDuration": 54272,
      "lastDuration": 415166,
      "lastLinesAdded": 3,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 11666,
      "lastTotalOutputTokens": 999,
      "lastTotalCacheCreationInputTokens": 22777,
      "lastTotalCacheReadInputTokens": 109204,
      "lastSessionId": "3abdd2e9-8cfd-4e8c-9e81-04cd338ad87d"
    },
    "/Users/dorkitude/dev/cerebro/src/briefs": {
      "allowedTools": [],
      "history": [
        {
          "display": "do you work rn",
          "pastedContents": {}
        },
        {
          "display": "cherry-pick this file from main:  briefs/tool_cli.py",
          "pastedContents": {}
        },
        {
          "display": "why can't i see all my changes from kyle/end-3951-experiment-with-a-simple-guardrail-for-hallucinations when i merge it in",
          "pastedContents": {}
        },
        {
          "display": "how does this get its list?\n\nuv run tool-cli list",
          "pastedContents": {}
        },
        {
          "display": "try it yourself, nothing happens",
          "pastedContents": {}
        },
        {
          "display": "give me a curl command that creates a thread and then streams its response, like how the @briefs/threads/cli.py does it.",
          "pastedContents": {}
        },
        {
          "display": "nope just brainstorming rn",
          "pastedContents": {}
        },
        {
          "display": "people ask our agents all kinds of questions\n\nthere are many ways to rephrase the same question\n\ni'd like to normalize them to one thing\n\nlike, \"What's the status of this deal?\" may be the substantially meaningful parallel to many others, such as \"How are we doing with the opportunity?\"\n\n1 - what variable name should I use for this sort of platonic ideal?\n2 - how can we implement something to take old questions, and categorize them into these",
          "pastedContents": {}
        },
        {
          "display": "commit my changes",
          "pastedContents": {}
        },
        {
          "display": "update readme",
          "pastedContents": {}
        },
        {
          "display": "update @briefs/threads/cli.py so that feedback can be posted in non-interactive mode, perhaps just  posting to the last known message_id",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "base.py",
        "config.py"
      ],
      "exampleFilesGeneratedAt": 1749533332879,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 0.63353965,
      "lastAPIDuration": 32449,
      "lastDuration": 24725,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 2924,
      "lastTotalOutputTokens": 329,
      "lastTotalCacheCreationInputTokens": 32707,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "9809318d-cee1-4c3b-916f-9832edfd49eb"
    },
    "/Users/dorkitude/dev/cerebro": {
      "allowedTools": [],
      "history": [
        {
          "display": "$ op run --env-file=.env.op bun install\nbun install v1.1.45 (196621f2)\n2 |   \"lockfileVersion\": 1,\n                         ^\nerror: Unknown lockfile version\n    at bun.lock:2:22\nInvalidLockfileVersion: failed to parse lockfile: 'bun.lock'",
          "pastedContents": {}
        },
        {
          "display": "gs",
          "pastedContents": {}
        },
        {
          "display": "refactor my @src/briefs/briefs/threads/agno_manager.py instructions to include a new guardrails_info method, and move the guardrails stuff into that method",
          "pastedContents": {}
        },
        {
          "display": "no i mmean rerun the ones from ../../../../stash/hallucination_test_report_updated.html",
          "pastedContents": {}
        },
        {
          "display": "i've added the guardrails back in and restsarted the server.\n\nre-run these experiments and track the results as the \"B\" version in the same HTML report.",
          "pastedContents": {}
        },
        {
          "display": "/compact ",
          "pastedContents": {}
        },
        {
          "display": "please perform more factiual accuracy tests (ask open and honest questions, don't lead the witness with lies, but try to see if it will hallucinate anyway because for instance the question is too hard).  also extend the timeout to be longer than 2 minutes, because some of these will take time.  keep going, up to 15 times, trying to find some cases where it hallucinates.\n\nthen please move the factual accuracty tests to the top and update your report.",
          "pastedContents": {}
        },
        {
          "display": "Save all these tests to a new HTML file in simple, clean layout.  Follow solarized dark as a color scheme.",
          "pastedContents": {}
        },
        {
          "display": "Now we've proven you can lead the system into hallucinating.  Let's also do some tests where you simply ask open-and-honest questions.  You happen to know the answers since you have @src/briefs/internal_research.json ",
          "pastedContents": {}
        },
        {
          "display": "forget this test script.  you should be using bash to test via @src/briefs/briefs/threads/cli.py ",
          "pastedContents": {}
        },
        {
          "display": "every time you change that test file, it triggers a server restart.   move your test files into ~/stash/ instead.",
          "pastedContents": {}
        },
        {
          "display": "let me handle the services.  \n\nyou just test the A case now (i've removed the guardrails) and store your results.  try to get it to hallucinate if you can.",
          "pastedContents": {}
        },
        {
          "display": "who can explain me details of thread call when someone click on the Person card in UI. I see it creates new trace. (like this https://us.cloud.langfuse.com/project/cm6tu3bzj01ahad07kb7div5c/traces/ee9563b85b9a8be6be943f2c839cab91) but only User info is name of the Person. I don't see even ID of the person. How AI is producing Person page? Does it have a content of previous thread messages?\n\n",
          "pastedContents": {}
        },
        {
          "display": "you need to remove lines 1030-1053 of @src/briefs/briefs/threads/agno_manager.py to test the A case, then add them back in to test the B case.",
          "pastedContents": {}
        },
        {
          "display": "continue",
          "pastedContents": {}
        },
        {
          "display": "Confudct a more thorough test, where you specifically try to get the old version to hallucinate, and prove the new version doesn't hallucinate.",
          "pastedContents": {}
        },
        {
          "display": "just run it via \"uv run tool-cli\"",
          "pastedContents": {}
        },
        {
          "display": "betterup is account id 0018a00002HFfdqAAD\n\nalso we should be focused on fact-based tools, interaction (email/call) data, salesforce data, etc.   not web search type stuff",
          "pastedContents": {}
        },
        {
          "display": "Use the @src/briefs/briefs/tool_cli.py to do some research on the BetterUp account directly.  Find some real, specific interaction facts, and store them as internal_research.json\n\nThen do some A/B testing via  @src/briefs/briefs/threads/cli.py to figure out if the new guardrails (Anti-Hallucination Guidelines + Correcting Misinformation) are worth implementing.",
          "pastedContents": {}
        },
        {
          "display": "switch back to my guardrails branch, and pull these cli changes into it",
          "pastedContents": {}
        },
        {
          "display": "continue",
          "pastedContents": {}
        },
        {
          "display": "make a new Linear ticket in triage called \"quick CLI to directly call tools\".   assign it to me.\n\nmake a new branch tied to that ticket.\n\ncommit all our unstaged changes to that branch.\n\nmake a draft PR in gh.",
          "pastedContents": {}
        },
        {
          "display": "fix the docs",
          "pastedContents": {}
        },
        {
          "display": "read @src/briefs/briefs/TOOL_CLI_README.md and test everythign it says, to make sure it's still accurate",
          "pastedContents": {}
        },
        {
          "display": "the briefs stack runs perfectly fine RE bigquery dataset configuration.  let's make it so this CLI can also do that.\n\nmake run-api works great for instance",
          "pastedContents": {}
        },
        {
          "display": "what on earth is endgame-publishing lol.\n\nuse real URLs.",
          "pastedContents": {}
        },
        {
          "display": "add a clickable link to each PR.  remove the description column",
          "pastedContents": {}
        },
        {
          "display": "run it it doesn't work",
          "pastedContents": {}
        },
        {
          "display": "compare those ticket names to linear issues to help me understand what the branches are each doing\n\nmake a table",
          "pastedContents": {}
        },
        {
          "display": "if you update pyproject.toml it should be executable as `uv run briefs.tool_cli` right?",
          "pastedContents": {}
        },
        {
          "display": "!pwd",
          "pastedContents": {}
        },
        {
          "display": "indeed it looks like all her tickets start with `es`\n\nwhich branches are most recent?  do any have PRs associated with them?",
          "pastedContents": {}
        },
        {
          "display": "actually i'm realizing this is the wrong cli for it, since threads is just one module within briefs, and tools are broadly used.\n\nlet's put this tool stuff in a new Typer cli at briefs.tool_cli instead",
          "pastedContents": {}
        },
        {
          "display": "show me all of her branches",
          "pastedContents": {}
        },
        {
          "display": "use github cli to help me find which of Ellie's branches has the new turbopuffer stuff",
          "pastedContents": {}
        },
        {
          "display": "when I try this I get an error:\n\n  uv run python -m briefs.threads.cli list-tools",
          "pastedContents": {}
        },
        {
          "display": "i don't want to change the default mode, i just want to make an additive change here",
          "pastedContents": {}
        },
        {
          "display": "update threads CLI to have a mode called \"tool-use\"\n\ntool-use is a way for us to debug the tools themselves directly, by forcing them to be called;  and to use those tools' outputs in JSON format",
          "pastedContents": {}
        },
        {
          "display": "blow away unstaged changes",
          "pastedContents": {}
        },
        {
          "display": "figure out how to query, in python, for facts about a given account.",
          "pastedContents": {}
        },
        {
          "display": "no it should be dorkitude mesh, not dbt",
          "pastedContents": {}
        },
        {
          "display": "no not production, dev dorkitude",
          "pastedContents": {}
        },
        {
          "display": "stop finding workarounds.  we must FIRST figure out how to access the data.",
          "pastedContents": {}
        },
        {
          "display": "internal facts.json doesn't seem to be hitting actual facts\n\nshould have gong calls, emails, etc kinds of facts.  were you not able to query the facts tables / use fact-finding tools?",
          "pastedContents": {}
        },
        {
          "display": "acttually, > make one script that gathers grounded information and puts it into a json file\n\nthen   make another script to run ab tests.",
          "pastedContents": {}
        },
        {
          "display": "make one script that gathers grounded information and puts it into a markdown file\n\nmake another script to run ab tests.",
          "pastedContents": {}
        },
        {
          "display": "continue",
          "pastedContents": {}
        },
        {
          "display": "we can verify them independently.  search the facts yourself, through a python script.",
          "pastedContents": {}
        },
        {
          "display": "no, the whole point is we're trying to work on the agent insructions.  you can't use the agent to find out what's true if we are reworking the agent's truthiness / groundedness.",
          "pastedContents": {}
        },
        {
          "display": "what cli are you talking about?",
          "pastedContents": {}
        },
        {
          "display": "you'll be making an internal-facts oriented version of @src/briefs/ab_test_hallucinations.py \n\nyou've tested hallucination around our external research tools pretty well, but i want to test for hallucinations around our facts\n\nI realize this is potentially hard for you to do by chatting with the agent alone, so you'll probably want to do some tool calls directly in python to find something real and verifiable to YOU, to inform your prompts.",
          "pastedContents": {}
        },
        {
          "display": "Run a second phase of A/B tests like we did in @src/briefs/AB_TEST_REPORT.md \n\nThis time, focus your queries on internal information that might be found in emails, gong recordings, slack notes, sfdc notes.\n\n",
          "pastedContents": {}
        },
        {
          "display": "go back to my guardrails branch",
          "pastedContents": {}
        },
        {
          "display": "works great, commit my changes please",
          "pastedContents": {}
        },
        {
          "display": "no need i'll check BQ myself, wait one sec",
          "pastedContents": {}
        },
        {
          "display": "no test script, just execute that CLI",
          "pastedContents": {}
        },
        {
          "display": "test it via @src/briefs/briefs/threads/cli.py ",
          "pastedContents": {}
        },
        {
          "display": "now update @src/briefs/briefs/threads/agno_manager.py so it actually works this way",
          "pastedContents": {}
        },
        {
          "display": "add a field question_content, make it work like answer_content, except it grabs the question from the question_message_id and stores its content",
          "pastedContents": {}
        },
        {
          "display": "tell me all fields in the mesh table for this feature @src/data-mesh/catalogs/mesh/modules/briefs_v3/message_feedback.yaml ",
          "pastedContents": {}
        },
        {
          "display": "find me the branch for my BQ / message feedback issue(s) and check it out",
          "pastedContents": {}
        },
        {
          "display": "okay make a new PR, tie it to this issue, and put this markdown report into the PR description",
          "pastedContents": {}
        },
        {
          "display": "run 10 new A/B tests.  A = before your guideline changes.  B = after your guideline changes.\n\nyou'll need to repeatedly change the prompt between A and B status.",
          "pastedContents": {}
        },
        {
          "display": "now give me a report, in mark-down, that has several side-by-side examples of our output, before-and-after your changes.\n\nwe're going to want this evidence to go into the PR description later.\n\nbut for now, i want to see the report so I can QA your work.",
          "pastedContents": {}
        },
        {
          "display": "constrain all your questions to BetterUp (the default account for threads cli)",
          "pastedContents": {}
        },
        {
          "display": "continue",
          "pastedContents": {}
        },
        {
          "display": "i'm Kyle Wild, kyle@endgame.io",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +10 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "assign the \"experiment with a simple guardrail for hallucinations\" issue to me                                                                                                                                            │\n│                                                                                                                                                                                                                             │\n│   start a new branch for this work                                                                                                                                                                                          │\n│                                                                                                                                                                                                                             │\n│   play with @src/briefs/briefs/threads/agno_manager.py agent instructions and see if you can get better results                                                                                                             │\n│                                                                                                                                                                                                                             │\n│   use the @src/briefs/briefs/threads/cli.py to check your work                                                                                                                                                              │\n│                                                                                                                                                                                                                             │\n│   think hard and go step-by-step.                                                                                                                                                                                           │\n│                                                                                                                                                                                                                             │\n│   only modify the Agent Instructions in the code, and run as many tests as you need to find a lower-hallucination approach"
            }
          }
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "table broke.   remove that new column",
          "pastedContents": {}
        },
        {
          "display": "table broke.   remove that new column, and also remove the start date",
          "pastedContents": {}
        },
        {
          "display": "add a column at the end that tells me what kind of update you're using to set Last Updated",
          "pastedContents": {}
        },
        {
          "display": "remove team column.\n\nadd a column that tells me the most recent activity date (meaning any updates to project or updates to its issues)",
          "pastedContents": {}
        },
        {
          "display": "can you add a team column?",
          "pastedContents": {}
        },
        {
          "display": "make a table of all current projects and their status plus relevant tabular information",
          "pastedContents": {}
        },
        {
          "display": "close END-3864, won't fix it",
          "pastedContents": {}
        },
        {
          "display": "what open issues do i have",
          "pastedContents": {}
        },
        {
          "display": "but we don't even use langdb anywhere",
          "pastedContents": {}
        },
        {
          "display": "you might need to google for this stuff too",
          "pastedContents": {}
        },
        {
          "display": "why do i see this when stsarting briefs API\n\nWARNING  LANGDB_PROJECT_ID not set in the environment ",
          "pastedContents": {}
        },
        {
          "display": "keep model_used, ditch rest",
          "pastedContents": {}
        },
        {
          "display": "anything in agno manager state that may be useful in this message_feedback table?\n\nlet's at least add the model as a string",
          "pastedContents": {}
        },
        {
          "display": "commit my changes",
          "pastedContents": {}
        },
        {
          "display": "remove all the fields we removed from the @src/data-mesh/catalogs/mesh/modules/briefs_v3/message_feedback.yaml \n\nalso rename fundamental_question to be \"canonical_intent\"",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +58 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 301, in app\n    raw_response = await run_endpoint_function(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n    )\n    ^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\n    return await dependant.call(**values)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/briefs/threads/api.py\", line 258, in submit_message_feedback\n    feedback_id = await thread_manager.submit_feedback(\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        org_id, thread_id, message_id, data.thumb_value, data.comment, data.user_id\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 868, in submit_feedback\n    await to_thread.run_sync(\n    ...<2 lines>...\n    )\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/anyio/to_thread.py\", line 56, in run_sync\n    return await get_async_backend().run_sync_in_worker_thread(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        func, args, abandon_on_cancel=abandon_on_cancel, limiter=limiter\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/anyio/_backends/_asyncio.py\", line 2470, in run_sync_in_worker_thread\n    return await future\n           ^^^^^^^^^^^^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/anyio/_backends/_asyncio.py\", line 967, in run\n    result = context.run(func, *args)\n  File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/contextlib.py\", line 85, in inner\n    return func(*args, **kwds)\n  File \"/Users/dorkitude/dev/cerebro/src/common-py/mesh/src/common_mesh/mesh_writer.py\", line 253, in send_all_models\n    send_current_batch(batch_buffer, gzip_file, num_records)\n    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/dev/cerebro/src/common-py/mesh/src/common_mesh/mesh_writer.py\", line 236, in send_current_batch\n    self._send_batch_retryable(cur_batch_buffer.getvalue(), records)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 338, in wrapped_f\n    return copy(f, *args, **kw)\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 477, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 378, in iter\n    result = action(retry_state)\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 400, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ~~~~~~~~~~~~~~~~~^^\n  File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/concurrent/futures/_base.py\", line 449, in result\n    return self.__get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/concurrent/futures/_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 480, in __call__\n    result = fn(*args, **kwargs)\n  File \"/Users/dorkitude/dev/cerebro/src/common-py/mesh/src/common_mesh/mesh_writer.py\", line 198, in _send_batch\n    raise DataMeshError(f\"Non-retryable response {response.status_code}: {response.text}\")\ncommon_mesh.exceptions.DataMeshError: Non-retryable response 400: {\"errors\":[{\"status\":\"Bad Request\",\"error\":\"invalid format: field is_published_thread is required\",\"statusCode\":400,\"offset\":0}]}"
            }
          }
        },
        {
          "display": "works great\n\nnow get rid of   \"is_published_thread\" \"message_role\" \"question_content\"\n\nmeanwhile, these two fields are coming back Null when they should be \"account\" and an account Id, i believe:\n\n  \"thread_scope_entity_id\": null,\n  \"thread_scope_entity_type\": null,\n",
          "pastedContents": {}
        },
        {
          "display": "answer latency calculation seems off.   it took at least 5 seconds within the CLI between asking question and getting a response, but is saying 6 milliseconds.\n\nmaybe our logic or understanding is off?    @src/briefs/briefs/threads/agno_manager.py ",
          "pastedContents": {}
        },
        {
          "display": "answer latency calculation seems off.   it took at least 5 seconds within the CLI between asking question and getting a response, but is saying 6 milliseconds.\n\nmaybe our logic or understanding is off?",
          "pastedContents": {}
        },
        {
          "display": "commit changes",
          "pastedContents": {}
        },
        {
          "display": "run `make everything` and fix problems",
          "pastedContents": {}
        },
        {
          "display": "yes go",
          "pastedContents": {}
        },
        {
          "display": "good news is:\n[June 10, 2025 00:23:07 PDT] [INFO | httptools_impl] 127.0.0.1:65299 - \"POST /v3/5280/threads/01JXCBGVF0MJ6K45YDRH0DBDX2/messages/01JXCBGW7SB4RJV8P49SXEYNW3/feedback HTTP/1.1\" 200\n\nbad news:\n\nanswer_latency always says 0",
          "pastedContents": {}
        },
        {
          "display": "update @src/briefs/briefs/threads/cli.py with a new option that lets me force it to use gpt 41",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +52 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\n    return await dependant.call(**values)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/briefs/threads/api.py\", line 261, in submit_message_feedback\n    feedback_id = await thread_manager.submit_feedback(\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        org_id, thread_id, message_id, data.thumb_value, data.comment, data.user_id\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 868, in submit_feedback\n    await to_thread.run_sync(\n    ...<2 lines>...\n    )\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/anyio/to_thread.py\", line 56, in run_sync\n    return await get_async_backend().run_sync_in_worker_thread(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        func, args, abandon_on_cancel=abandon_on_cancel, limiter=limiter\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/anyio/_backends/_asyncio.py\", line 2470, in run_sync_in_worker_thread\n    return await future\n           ^^^^^^^^^^^^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/anyio/_backends/_asyncio.py\", line 967, in run\n    result = context.run(func, *args)\n  File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/contextlib.py\", line 85, in inner\n    return func(*args, **kwds)\n  File \"/Users/dorkitude/dev/cerebro/src/common-py/mesh/src/common_mesh/mesh_writer.py\", line 253, in send_all_models\n    send_current_batch(batch_buffer, gzip_file, num_records)\n    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/dev/cerebro/src/common-py/mesh/src/common_mesh/mesh_writer.py\", line 236, in send_current_batch\n    self._send_batch_retryable(cur_batch_buffer.getvalue(), records)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 338, in wrapped_f\n    return copy(f, *args, **kw)\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 477, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 378, in iter\n    result = action(retry_state)\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 400, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ~~~~~~~~~~~~~~~~~^^\n  File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/concurrent/futures/_base.py\", line 449, in result\n    return self.__get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/concurrent/futures/_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 480, in __call__\n    result = fn(*args, **kwargs)\n  File \"/Users/dorkitude/dev/cerebro/src/common-py/mesh/src/common_mesh/mesh_writer.py\", line 198, in _send_batch\n    raise DataMeshError(f\"Non-retryable response {response.status_code}: {response.text}\")\ncommon_mesh.exceptions.DataMeshError: Non-retryable response 400: {\"errors\":[{\"status\":\"Bad Request\",\"error\":\"invalid format: unknown field organization_id\",\"statusCode\":400,\"offset\":0}]}"
            }
          }
        },
        {
          "display": "[Pasted text #1 +44 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "    )\n    ^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 859, in submit_feedback\n    await to_thread.run_sync(\n    ...<2 lines>...\n    )\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/anyio/to_thread.py\", line 56, in run_sync\n    return await get_async_backend().run_sync_in_worker_thread(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        func, args, abandon_on_cancel=abandon_on_cancel, limiter=limiter\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/anyio/_backends/_asyncio.py\", line 2470, in run_sync_in_worker_thread\n    return await future\n           ^^^^^^^^^^^^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/anyio/_backends/_asyncio.py\", line 967, in run\n    result = context.run(func, *args)\n  File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/contextlib.py\", line 85, in inner\n    return func(*args, **kwds)\n  File \"/Users/dorkitude/dev/cerebro/src/common-py/mesh/src/common_mesh/mesh_writer.py\", line 253, in send_all_models\n    send_current_batch(batch_buffer, gzip_file, num_records)\n    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/dev/cerebro/src/common-py/mesh/src/common_mesh/mesh_writer.py\", line 236, in send_current_batch\n    self._send_batch_retryable(cur_batch_buffer.getvalue(), records)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 338, in wrapped_f\n    return copy(f, *args, **kw)\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 477, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 378, in iter\n    result = action(retry_state)\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 400, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ~~~~~~~~~~~~~~~~~^^\n  File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/concurrent/futures/_base.py\", line 449, in result\n    return self.__get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/concurrent/futures/_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"/Users/dorkitude/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/tenacity/__init__.py\", line 480, in __call__\n    result = fn(*args, **kwargs)\n  File \"/Users/dorkitude/dev/cerebro/src/common-py/mesh/src/common_mesh/mesh_writer.py\", line 198, in _send_batch\n    raise DataMeshError(f\"Non-retryable response {response.status_code}: {response.text}\")\ncommon_mesh.exceptions.DataMeshError: Non-retryable response 400: {\"errors\":[{\"status\":\"Bad Request\",\"error\":\"invalid format: field id is required\",\"statusCode\":400,\"offset\":0}]}"
            }
          }
        },
        {
          "display": "answer_latency plz",
          "pastedContents": {}
        },
        {
          "display": "add another column that will track the slowness;   like, how many milliseconds between question and answer\n\nwhat are some good names for it?  lag?",
          "pastedContents": {}
        },
        {
          "display": "for each mesh table in @src/data-mesh YAML files;  try to find me somewhere in @src/briefs/ where we're creating records in that table.\n\nexplain them to me, and show me the python code that constructs the new instances",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "let's rename some fields\n\nmessage_content = answer_content\nmessage_id = answer_message_id\nparent_message_id = question_message_id\n\nget rid of secondary_id\n\n\nadd a string called fundamental_question - the normalized version of this question, which we will leave blank for now, but we'll do offline data science to cluster the question with substantially identical (but differently-worded) other questions",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "base.py",
        "config.py"
      ],
      "exampleFilesGeneratedAt": 1749533343062,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 0.5181543999999999,
      "lastAPIDuration": 34785,
      "lastDuration": 2612377,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 11748,
      "lastTotalOutputTokens": 434,
      "lastTotalCacheCreationInputTokens": 24416,
      "lastTotalCacheReadInputTokens": 18424,
      "lastSessionId": "e58a0579-9a7c-4d2c-b92b-5e7f6602c4ab"
    },
    "/Users/dorkitude/dev/scrappy-head": {
      "allowedTools": [],
      "history": [
        {
          "display": "/cost ",
          "pastedContents": {}
        },
        {
          "display": "why doesn't my cli run anymore:\n\nuv run -m src.cli",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 2,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "linkedin_scraper.py",
        "cli.py",
        "models.py",
        "utils.py",
        "screenshot_parser.py"
      ],
      "exampleFilesGeneratedAt": 1749575902344,
      "lastCost": 0.0005544,
      "lastAPIDuration": 2851,
      "lastDuration": 51682,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 488,
      "lastTotalOutputTokens": 41,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "03513c71-c905-4c1d-9fc6-8aafc1cadbaa"
    },
    "/Users/dorkitude/dev/cd/cerebro/src/briefs": {
      "allowedTools": [],
      "history": [
        {
          "display": "make lint-fix",
          "pastedContents": {}
        },
        {
          "display": "now test every cli command in the README with account id 0018a00002HFfdqAAD ",
          "pastedContents": {}
        },
        {
          "display": "commit my changes and push",
          "pastedContents": {}
        },
        {
          "display": "dont' refactor the function, just add a comment on the line that skips c901 in this case",
          "pastedContents": {}
        },
        {
          "display": "make sure `make everything` works",
          "pastedContents": {}
        },
        {
          "display": "make lint-fix",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "hasCompletedProjectOnboarding": true,
      "exampleFiles": [
        "models.py",
        "app.py",
        "tool_cli.py",
        "agno_manager.py",
        "summarizer.py"
      ],
      "exampleFilesGeneratedAt": 1749669355364,
      "lastCost": 0.53777615,
      "lastAPIDuration": 55117,
      "lastDuration": 58595,
      "lastLinesAdded": 1,
      "lastLinesRemoved": 1,
      "lastTotalInputTokens": 3733,
      "lastTotalOutputTokens": 1058,
      "lastTotalCacheCreationInputTokens": 14161,
      "lastTotalCacheReadInputTokens": 132578,
      "lastSessionId": "280071be-9acc-4a7f-9de5-38ea0b0d76d8"
    },
    "/Users/dorkitude/dev/cd/cerebro": {
      "allowedTools": [],
      "history": [
        {
          "display": "!make lint-fix",
          "pastedContents": {}
        },
        {
          "display": "!git status",
          "pastedContents": {}
        },
        {
          "display": "why can't i push",
          "pastedContents": {}
        },
        {
          "display": "!git push",
          "pastedContents": {}
        },
        {
          "display": "!git pull",
          "pastedContents": {}
        },
        {
          "display": "!git push",
          "pastedContents": {}
        },
        {
          "display": "commit my changes",
          "pastedContents": {}
        },
        {
          "display": "!code src/briefs/briefs/tool_cli.py",
          "pastedContents": {}
        },
        {
          "display": "please add a comment as i promise here:\n\n\n\nsrc/briefs/briefs/tool_cli.py\nconsole = Console()\n\n\ndef _get_toolbox(org_id: str, entity_type: str = \"account\"):\n@housejester housejester 12 minutes ago\nto avoid duplication and drift over time, should this cli just use the brief_app_components function on initializing, and grab what it needs from there? that'd let it keep up with toolbox changes, etc (including the named toolbox stuff Viktor added back). If too much going on there, then would be great to have another \"*_components\" function and can break up shared parts to re-use across.\n\nAuthor\n@dorkitude dorkitude now\nagreed. i'll add a TODO comment to that effect\n\n",
          "pastedContents": {}
        }
      ],
      "dontCrawlDirectory": false,
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "tool_cli.py",
        "agno_manager.py",
        "summarizer.py"
      ],
      "exampleFilesGeneratedAt": 1749671843326,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 1.3710707500000006,
      "lastAPIDuration": 190974,
      "lastDuration": 294647,
      "lastLinesAdded": 9,
      "lastLinesRemoved": 1,
      "lastTotalInputTokens": 20195,
      "lastTotalOutputTokens": 2893,
      "lastTotalCacheCreationInputTokens": 24375,
      "lastTotalCacheReadInputTokens": 504491,
      "lastSessionId": "fcf6ef61-256e-4a30-9324-f55859d96d34"
    },
    "/Users/dorkitude/dev": {
      "allowedTools": [],
      "history": [],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 1,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastCost": 0.0007800000000000001,
      "lastAPIDuration": 3901,
      "lastDuration": 6072,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 830,
      "lastTotalOutputTokens": 29,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "1310bf76-0d28-42d5-ba5e-46159a5182a1"
    },
    "/Users/dorkitude/life": {
      "allowedTools": [],
      "history": [],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 2,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastCost": 0.0015952000000000002,
      "lastAPIDuration": 9021,
      "lastDuration": 8365,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 1664,
      "lastTotalOutputTokens": 66,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "ee910683-a401-47eb-9a52-518aea2099cc"
    },
    "/Users/dorkitude/a": {
      "allowedTools": [],
      "history": [
        {
          "display": "make a README.md that says what this repo is and how to use it:\n\nrun \"claude --dangerously-skip-permissions\"\n\nthen type \"/crawl ibm.com\" and watch it cook",
          "pastedContents": {}
        },
        {
          "display": "update my prompt to say IMPORTANT:  ALWAYS put the source URL at the top of the markdown file!",
          "pastedContents": {}
        },
        {
          "display": "/crawl montecarlodata.com",
          "pastedContents": {}
        },
        {
          "display": "/crawl stackhawk.com",
          "pastedContents": {}
        },
        {
          "display": "/crawl navan.com",
          "pastedContents": {}
        },
        {
          "display": "/crawl betterup.com",
          "pastedContents": {}
        },
        {
          "display": "/crawl montecarlodata.com",
          "pastedContents": {}
        },
        {
          "display": "now it should be simply in @PROMPT_CRAWL.md \n\nnot in a subdir",
          "pastedContents": {}
        },
        {
          "display": "you referenced the wrong location for that file",
          "pastedContents": {}
        },
        {
          "display": "does it need to be in my homedir, or can it be here?  i don't want it to be global",
          "pastedContents": {}
        },
        {
          "display": "that is not true.  search your own docs, they talk about custom slash commands  https://docs.anthropic.com/en/docs/claude-code/slash-commands",
          "pastedContents": {}
        },
        {
          "display": "how do i make a new command?",
          "pastedContents": {}
        },
        {
          "display": "make me a new command called `/crawl` so i can type   `/crawl montecarlodata.com` and it'll automatically load in the @PROMPT_CRAWL.md ",
          "pastedContents": {}
        },
        {
          "display": "make sure the files are all placed in output/[domain_name]/",
          "pastedContents": {}
        },
        {
          "display": "Make sure the originating URL is also at the top of each markdown file.",
          "pastedContents": {}
        },
        {
          "display": "update the crawl prompt to make sure it also stores Product pages, Solutions pages, and documentation.  Really it should look at everything on the website, and store any pages that could be relevant to an Account Executive who works at that company.",
          "pastedContents": {}
        },
        {
          "display": "save that as PROMPT_CRAWL.md",
          "pastedContents": {}
        },
        {
          "display": "write a better version of the crawl prompt i gave you that makes sure you don't SUMMARIZE the case study.  i want the entire core contents of it in Markdown, including all the paragraph-form prose.",
          "pastedContents": {}
        },
        {
          "display": "upload each of these markdown files in a secret gist, and print the URLs to all the gists.",
          "pastedContents": {}
        },
        {
          "display": "put the @jetblue-case-study.md into a secret gist and put the URL into my clipboard",
          "pastedContents": {}
        },
        {
          "display": "go through this site and find case studies, sales enablement, pre-sales material that an AE at monte carlo might want:\n\nhttps://www.montecarlodata.com\n\nsave each of the ones that seems solid as a Markdown folder in /output\n\nmake an index of that content in INDEX.md",
          "pastedContents": {}
        },
        {
          "display": "It's unavailable until the DB is ready.  Please keep checking Render every minute to see if it's there",
          "pastedContents": {}
        },
        {
          "display": "Can you get my DATABASE_URL using render CLI and put it in the .env please?",
          "pastedContents": {}
        },
        {
          "display": "!pwd",
          "pastedContents": {}
        },
        {
          "display": "!cd bourd.ai",
          "pastedContents": {}
        },
        {
          "display": "!code app/.env",
          "pastedContents": {}
        },
        {
          "display": "make a new private github repo under Dorkitude and call it \"bourd.ai\"\n\ncontext:\nI have gathered all of the Anthony Bourdain video and audio content I can find.  I want to go through that content, normalize it into mp3 format, transcribe them all, and store the transcriptions (with timestamps) smartly in postgres.  I'll also want to vectorize the string content from each chunk, \"Context RAG\" style context about that chunk.  We'll need a Document table (which will store and embed the full document transcript), a DocumentChunk table (which will have a foreign key reference to the Document from which we got the DocumentChunk).  Documents will have a type -- could be an audiobook chapter or an episode of a TV show or podcast, for example.  Document.type and Document.id will be polymorphic -- if the type is \"TelevisionEpisode\" then the ID will correspond to the primary key in the TelivisionEpisode table, etc.\n\ncodebase:\n- it will have a flask app (use uv) in the \"app\" directory.  this will be postgres-backed with sqlalchemy.  I already have a render instance called \"dorkdb\" with username \"dorkitude\" set up (you can find it with the render CLI hopefully)\n- long-term media storage will all be in amazon S3, so we'll need to store the storage URL and ID etc for each Document and each Chunk.\n- it will have an iOS app in the \"ios\" directory.\n- it will have a \"media\" directory but that directory cannot possibly store everything, only the stuff i'm currently processing (be sure to .gitignore the contents of that folder, since that will be local to my machine)\n\nthe flask web app will deploy to render, and it will be hosted on my domain \"http://bourd.ai\"\n\nPlease walk me through all the setup step-by-step, and craft a README.md at the end.",
          "pastedContents": {}
        },
        {
          "display": "i like how it's putting its logs into that backups dir.  update the other scripts to keep a log in same backups dir.",
          "pastedContents": {}
        },
        {
          "display": "mongo_backup.sh is saying \"mongodump\" command isn't found for some reason when it runs",
          "pastedContents": {}
        },
        {
          "display": "now do the same with @Elephant Graveyard Radio Hour Ep. 9 (Midnight With the Stars and Me).mp4 ",
          "pastedContents": {}
        },
        {
          "display": "can you make a lower-quality mp3 like 128 out of @Elephant Graveyard Radio Hour Ep. 4 (Combos- The Pale Blue Cope).mp4 ",
          "pastedContents": {}
        },
        {
          "display": "it's installed now, do the thing.",
          "pastedContents": {}
        },
        {
          "display": "Make @Elephant Graveyard Radio Hour Ep. 4 (Combos- The Pale Blue Cope).mp4 into an mp3.",
          "pastedContents": {}
        },
        {
          "display": "Flagger is also deployed on Render, as is dorkitude.com\n\nMy @unrealizedreturns.org project has some handy Render-CLI stuff in its CLAUDE.md\n\nUpdate the others so they also have similar handy stuff (but obviously the project IDs or whatever will be different)",
          "pastedContents": {}
        },
        {
          "display": "Use playwright to test your work headless mode and see if it actually runs",
          "pastedContents": {}
        },
        {
          "display": "Road Tiles don't go all the way through, and there are extra Road tiles on the map too.",
          "pastedContents": {}
        },
        {
          "display": "update germ path to follow the actual road\n\nallow me to place towers during the wave-in-progress too.  also remove Start Wave button when wave is in progress, and add it back in for Setup phase.",
          "pastedContents": {}
        },
        {
          "display": "clicking those speed buttons does nothing regarding the speed of the germs",
          "pastedContents": {}
        },
        {
          "display": "Speed settings near \"Start\" that go from pause to 1x to 4x",
          "pastedContents": {}
        },
        {
          "display": "when hovering to place a tower, show me the range it would have if it were put in that location.",
          "pastedContents": {}
        },
        {
          "display": "Show my currencies in the top-right (Fluids and Bedrest)\n\nNo cells on the road itself.\n\nCells should be part of the map layout itself.\n\nUse tiled mapping system to copy the map we have into appropriate JSON.",
          "pastedContents": {}
        },
        {
          "display": "The road should be lined with potential cell, a sort of mesh of circles.  Players can place towers into those cells during setup phase.",
          "pastedContents": {}
        },
        {
          "display": "Make me a new private repo in dorkitude space.  call the repo \"cootie\", for Cootie Defense Cells.\n\nIt will be a Phaser game, typescript-based, and deployed to Render.\n\nit will be tower defense style game where you build Immune System themed defenses.\n\nThere will be spawm points for various germs (bacterial, fungal, and viral infections).\n\nlevel 1 the only germs will be cooties, and your only available towers (called \"cells\") will be called Cootie Shots.  Each round of ammo coming from them will look like a simple circle with a dot in the middle.\n\nGerms will be trying to march from spawn point to the goal area.  Player has to use their \"bedrest\" and \"fluids\", two currencies, to build defensive cells.\n\nWhen you're first brought to the map, you will have a setup phase to spend resources and deploy cells.\n\nMake the CootieShot object inherit from BaseTower.\n\nBaseTower implements WeaponUser and DamageDealer.   For inspiration check out my other game's files @flagger/src/scripts/interfaces/DamageDealer.ts and @flagger/src/scripts/interfaces/WeaponUser.ts \n\nCooties inherit from BaseEnemy, which implements DamageReceiver and PathFinder.  DamageReceiver is inspired by @flagger/src/scripts/interfaces/DamageReceiver.ts\n\n",
          "pastedContents": {}
        },
        {
          "display": "in this sqlite db, Update TutuItems 27 and 28 to both have working directories of \"/Users/dorkitude/a/dev/flagger\"",
          "pastedContents": {}
        },
        {
          "display": "./mongo_backup.sh: line 39: syntax error near unexpected token `else'\n./mongo_backup.sh: line 39: `else'",
          "pastedContents": {}
        },
        {
          "display": "fix divergent branches",
          "pastedContents": {}
        },
        {
          "display": "my autocommit crontab item doesn't seem to work.  how else can i achieve this?",
          "pastedContents": {}
        },
        {
          "display": "edit crontab.  every minute, do \"cd ~/a && \"git add -u\" && \"git push\"",
          "pastedContents": {}
        },
        {
          "display": "fix merge conflicts and commit/push",
          "pastedContents": {}
        },
        {
          "display": "fix /home/dorkitude/a/scripts/.startup:59: command not found: pyenv",
          "pastedContents": {}
        },
        {
          "display": "update the @dev/tutu \"start\" command to use my \"cly\" function from @scripts/daemon-wrappers.zsh instead of what it's doing.  that way i'll get tab name changes.",
          "pastedContents": {}
        },
        {
          "display": "yes chef",
          "pastedContents": {}
        },
        {
          "display": "does it seem like the 'cly' funciton in daemon wrappers will allow me to pass in arguments to the claude code command?",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +9 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "Usage: python -m tutu [OPTIONS] COMMAND [ARGS]...\nTry 'python -m tutu --help' for help.\n╭─ Error ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ Missing command.                                                                                                                                                                                                         │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\ndorkitude ~/a [master] $ tutu --help\nzsh: parse error near `--help'\ndorkitude ~/a [master] $ tutu list\nzsh: parse error near `list'\ndorkitude ~/a [master] $"
            }
          }
        },
        {
          "display": "dorkitude ~/a/dev/tutu [master] $ tutu add hi\nTraceback (most recent call last):\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\n  File \"<frozen runpy>\", line 88, in _run_code\n  File \"/Users/dorkitude/a/dev/tutu/tutu/__main__.py\", line 1, in <module>\n    from tutu.cli import main\nModuleNotFoundError: No module named 'tutu'\ndorkitude ~/a/dev/tutu [master] $ tutu add\nTraceback (most recent call last):\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\n  File \"<frozen runpy>\", line 88, in _run_code\n  File \"/Users/dorkitude/a/dev/tutu/tutu/__main__.py\", line 1, in <module>\n    from tutu.cli import main\nModuleNotFoundError: No module named 'tutu'",
          "pastedContents": {}
        },
        {
          "display": "!tutu list",
          "pastedContents": {}
        },
        {
          "display": "!source ~/.zshrc",
          "pastedContents": {}
        },
        {
          "display": "I tried tutu list and it said permission denied.",
          "pastedContents": {}
        },
        {
          "display": "!tutu list",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +26 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "make a new private github repo in \"dorkitdude\" space called \"tutu\"\n\nclone it here so it ends up being ~/a/dev/tutu\n\n\nit's a python project, all managed with uv\n\nall storage is in an SQLite db.   locatino of the db is configurable.  in our case, configure the location of that db to be ~/a/base/tutu.sqlite\n\nthere should a models.py using sqlalchemy.  all models have created_at and updated_at timestamps.  all models have an auto-increment ID integer as their primary key.  for now the only models we need are TutuItem\nand TutuItemStep.  one item can have many steps.\nthere should be a cli.py built on Typer.\n\nalias it in my @scripts/.startup file as \"tutu\"\n\nso i can type \"tutu add\" and it goes into interactive mode, helps me create a new TutuItem to be stored in the database.  require a shortcut key to submit, so that I can paste things full of newlines and hard\nreturns into it.  if I submit, it prints nicely\n\ni can type \"tutu list\" and it shows me the TutuItems that aren't in \"done\" status.   sorted by updated_at descending.\n\ni can type \"tutu status {item ID}\" to see a full report on the TutuItem and its TutuItemSteps\n\ni can type \"tutu start {item ID}\" and it creates a new claude code session with /opt/homebrew/bin/claude --dangerously-skip-permissions  and pipes all the TutuItem's context into it, plus the contents of a\nstandard README.md file, also in this repo.  README.md is important for users to read and understand.  README.md is also important because it will tell Claude Code how to use Tutu system:  which commands to use to\nadd and complete TutuItemSteps, how to mark the TutuItem itself as done, etc.\n\ncheckout marks the Tutu status as \"in progress\" also, and if it's the first time it's been started, it populates a first_progress_at timestamp."
            }
          }
        },
        {
          "display": "make a new private github repo in \"dorkitdude\" space called \"tutu\"\n\nclone it here so it ends up being ~/a/dev/tutu\n\n\nit's a python project, all managed with uv\n\nall storage is in an SQLite db.   locatino of the db is configurable.  in our case, configure the location of that db to be ~/a/base/tutu.sqlite\n\nthere should a models.py using sqlalchemy.  all models have created_at and updated_at timestamps.  all models have an auto-increment ID integer as their primary key.  for now the only models we need are TutuItem and TutuItemStep.  one item can have many steps.  \nthere should be a cli.py built on Typer.\n\nalias it in my @scripts/.startup file as \"tutu\"\n\nso i can type \"tutu add\" and it goes into interactive mode, helps me create a new TutuItem to be stored in the database.  require a shortcut key to submit, so that I can paste things full of newlines and hard returns into it.  if I submit, it prints nicely\n\ni can type \"tutu list\" and it shows me the TutuItems that aren't in \"done\" status.   sorted by updated_at descending.\n\ni can type \"tutu status {item ID}\" to see a full report on the TutuItem and its TutuItemSteps\n\ni can type \"tutu start {item ID}\" and it creates a new claude code session with /opt/homebrew/bin/claude --dangerously-skip-permissions  and pipes all the TutuItem's context into it, plus the contents of a standard README.md file, also in this repo.  README.md is important for users to read and understand.  README.md is also important because it will tell Claude Code how to use Tutu system:  which commands to use to add and complete TutuItemSteps, how to mark the TutuItem itself as done, etc.\n\ncheckout marks the Tutu status as \"in progress\" also, and if it's the first time it's been started, it populates a first_progress_at timestamp.",
          "pastedContents": {}
        },
        {
          "display": "/usage ",
          "pastedContents": {}
        },
        {
          "display": "commit all and push",
          "pastedContents": {}
        },
        {
          "display": "!git diff",
          "pastedContents": {}
        },
        {
          "display": "update README to understsand what we've done with crontab and the new screenshot backup",
          "pastedContents": {}
        },
        {
          "display": "!git status",
          "pastedContents": {}
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "are you sure you checked all the thursday classes?  because your list only goes to 11am.",
          "pastedContents": {}
        },
        {
          "display": "How about Thursday?",
          "pastedContents": {}
        },
        {
          "display": "I think you may need to use python -c and playwright to render the page because it has some lazy-loading.  Then you can skim the DOM or playwright.screenshot so your eyeball-brain can tell me the answers.",
          "pastedContents": {}
        },
        {
          "display": "This one https://www.funkydoor.com/berkeley",
          "pastedContents": {}
        },
        {
          "display": "https://www.funkydoor.com tell me when the next Yoga & Mixtapes classes are, be specific with your dates",
          "pastedContents": {}
        },
        {
          "display": "update gitignore so i can add dotfiles.backups and all its contents to github repo",
          "pastedContents": {}
        },
        {
          "display": "don't copy the entire .cluade directory it's too big\n\nJust grab the stuff that would be annoying to reproduce from scratch\n\nsettings.json, settings.local.json, claude.md;  others?",
          "pastedContents": {}
        },
        {
          "display": "edit script to remove the dotfiles zip stuff, since we're already backing them up inside of the a directory.\n\nalso, confirm if the dotfile copying happens BEFORE the a folder is zipped up.",
          "pastedContents": {}
        },
        {
          "display": "i don't want RR to be random, but miliseconds",
          "pastedContents": {}
        },
        {
          "display": "fix the naming convention for those zip files:\n\n2025_06_14_2147_31.42_users_dorkitude_a.zip",
          "pastedContents": {}
        },
        {
          "display": "no, they should copy the uncompressed stuff into THIS directory's dotfiles.backup, not in the dropbox folder.",
          "pastedContents": {}
        },
        {
          "display": "update @scripts/background/backup_a.sh to also copy the dotfiles (uncompressed) into dotfiles.backup folder",
          "pastedContents": {}
        },
        {
          "display": "spin up three tasks for this:\n\nmake me a README.md that lists the files & what they do, plus how they're wired into the sytem.  for instance, backup_a.sh is in the crontab.   .startup is sourced in ~/.zshrc.\n\nmake a new directory called dotfiles.backup, and update my backup_a script to copy dotfiles intact into that directory on its cron\n\nmake me a CLAUDE.md that says to occasionally update this README to make sure it's up to day",
          "pastedContents": {}
        },
        {
          "display": "!ll",
          "pastedContents": {}
        },
        {
          "display": "!gs",
          "pastedContents": {}
        },
        {
          "display": "connect this repo to git@github.com:dorkitude/a.git and commit push",
          "pastedContents": {}
        },
        {
          "display": "whateverr you're doing, ignore dev directory (which was already in gitignore)",
          "pastedContents": {}
        },
        {
          "display": "enhance my gitignore",
          "pastedContents": {}
        },
        {
          "display": "fix",
          "pastedContents": {}
        },
        {
          "display": "!code /tmp/backup_a.log",
          "pastedContents": {}
        },
        {
          "display": "is my backup script @scripts/background/backup_a.py properly cronned",
          "pastedContents": {}
        },
        {
          "display": "tie this directory to git@github.com:dorkitude/a.git\n\nmake sure dev folder is in the gitignore",
          "pastedContents": {}
        },
        {
          "display": "in @scripts/background/backup_a.py let me provide a list of paths to ignore\n\nspecifically, ignore @scrappy-head/screenshots",
          "pastedContents": {}
        },
        {
          "display": "tell me how large each of these folders is",
          "pastedContents": {}
        },
        {
          "display": "!pwd",
          "pastedContents": {}
        },
        {
          "display": "does this guy have a script that overrides it when Claude Code changes the tab name?   https://steipete.me/posts/2025/claude-code-is-my-computer\n\n",
          "pastedContents": {}
        },
        {
          "display": "!ls",
          "pastedContents": {}
        },
        {
          "display": "~ls",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": ":x",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "tutu.sqlite",
        "daemon-wrappers.zsh",
        "startup",
        "backup_a.sh",
        "CLAUDE.md"
      ],
      "exampleFilesGeneratedAt": 1752002327367,
      "lastTotalWebSearchRequests": 3,
      "lastCost": 8.248937799999998,
      "lastAPIDuration": 1399612,
      "lastDuration": 1459118,
      "lastLinesAdded": 2451,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 811533,
      "lastTotalOutputTokens": 44404,
      "lastTotalCacheCreationInputTokens": 101452,
      "lastTotalCacheReadInputTokens": 1768076,
      "lastSessionId": "d50bc251-83ea-496f-8252-422f37c75832"
    },
    "/Users/dorkitude/a/scripts": {
      "allowedTools": [],
      "history": [
        {
          "display": "where are you putting the copies of the new dotfiles?\n\nalso you should be copying the entire .claude directory, not just that one file",
          "pastedContents": {}
        },
        {
          "display": "you forgot my claudemd",
          "pastedContents": {}
        },
        {
          "display": "i see nothing in the dotfiles zip file even though it's 1mb.  test it and fix it.",
          "pastedContents": {}
        },
        {
          "display": "dotfiles one should only get dotfiles from the top level of my homedir.  it should also ignore .git",
          "pastedContents": {}
        },
        {
          "display": "make it also zip up all my dotfiles from home directory, into a differently-named file.",
          "pastedContents": {}
        },
        {
          "display": "make it also zip up all my dotfiles from home directory",
          "pastedContents": {}
        },
        {
          "display": "let it keep the newest 20.  also why are the filenames weird?  they end in \"n\"",
          "pastedContents": {}
        },
        {
          "display": "│ > replate @background/backup_a.py with a bash script doing the same thing.   update crontab to reflect this change.  I only want it to keep the OLDEST backup, plus the NEWEST 2 backups.  it should delete the other ones   │\n│   in the middle.  i want it to run hourly.  and I want it to ignore the /a/dev directory.                                                                                                                                    │",
          "pastedContents": {}
        },
        {
          "display": "/login ",
          "pastedContents": {}
        },
        {
          "display": "│ > replate @background/backup_a.py with a bash script doing the same thing.   update crontab to reflect this change.  I only want it to keep the OLDEST backup, plus the NEWEST 2 backups.  it should delete the other ones   │\n│   in the middle.  i want it to run hourly.  and I want it to ignore the /a/dev directory.                                                                                                                                    │",
          "pastedContents": {}
        },
        {
          "display": "replate @background/backup_a.py with a bash script doing the same thing.   update crontab to reflect this change.  I only want it to keep the OLDEST backup, plus the NEWEST 2 backups.  it should delete the other ones in the middle.  i want it to run hourly.  and I want it to ignore the /a/dev directory.",
          "pastedContents": {}
        },
        {
          "display": "update @claude-wrapper.zsh to include a new command, cla.  cla will do the same tab-naming magic, but it will NOT use the dangerously-skip-permissions flag.",
          "pastedContents": {}
        },
        {
          "display": "/init ",
          "pastedContents": {}
        },
        {
          "display": "ll ~/a",
          "pastedContents": {}
        },
        {
          "display": "make a script in background/ called \"backup_a.py\"\n\nit should create a zip file of my entire ~/a directory, named with a timestamp like users_dorkitude_a_2025_06_13_1741_43.771\n\nit should put that zip file in ~/Dropbox/backups/\n\nthen put it in my crontab so that it runs every hour",
          "pastedContents": {}
        },
        {
          "display": "make it so this project has the same python version as ~/a/dev/cerebro/src/briefs",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastCost": 2.974255149999998,
      "lastAPIDuration": 770573,
      "lastDuration": 1404175,
      "lastLinesAdded": 165,
      "lastLinesRemoved": 60,
      "lastTotalInputTokens": 78728,
      "lastTotalOutputTokens": 11629,
      "lastTotalCacheCreationInputTokens": 56085,
      "lastTotalCacheReadInputTokens": 828736,
      "lastSessionId": "63aac5d0-51f0-443d-95f8-0ffa73e6da8b"
    },
    "/Users/dorkitude/a/dev/cerebro/src/briefs": {
      "allowedTools": [],
      "history": [
        {
          "display": "fix [Pasted text #1 +34 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "Migration Summary\n┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓\n┃ Setting          ┃ Value        ┃\n┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━┩\n│ Organization ID  │ 6017         │\n│ Namespace Prefix │ dev_kyle     │\n│ Account Filter   │ All accounts │\n│ Batch Size       │ 100          │\n│ Fact Limit       │ No limit     │\n│ Days Filter      │ All dates    │\n│ Mode             │ LIVE         │\n└──────────────────┴──────────────┘\n\n📋 Preparing namespace: dev_kyle_6017_facts\nSchema will be auto-inferred from document attributes\n🔄 Starting facts iteration for organization...\n🧠 Processing facts and generating embeddings...\n📊 🔄 Iterating facts...\n📊 🔤 Generating embeddings: 0/0\n📊 ☁️  Uploading batches: 0/0\n🔄 Starting facts iteration...\n[June 16, 2025 14:38:24 PDT] [INFO | _client] HTTP Request: POST https://api.openai.com/v1/embeddings \"HTTP/1.1 200 OK\"\n[June 16, 2025 14:38:24 PDT] [INFO | embeddings] Generated 100 new embeddings, 0 from cache\n  ✓ 🔤 Generating embeddings: 100/100 (100%) - 4s elapsed\n❌ Failed to upload batch to Turbopuffer: the turbopuffer.Namespace class has been removed; use turbopuffer.Turbopuffer().namespace() instead; see https://github.com/turbopuffer/turbopuffer-python/blob/main/UPGRADING.md\nfor help\n❌ Error processing batch: the turbopuffer.Namespace class has been removed; use turbopuffer.Turbopuffer().namespace() instead; see https://github.com/turbopuffer/turbopuffer-python/blob/main/UPGRADING.md for help\n[June 16, 2025 14:38:25 PDT] [INFO | _client] HTTP Request: POST https://api.openai.com/v1/embeddings \"HTTP/1.1 200 OK\"\n[June 16, 2025 14:38:25 PDT] [INFO | embeddings] Generated 100 new embeddings, 0 from cache\n  ✓ 🔤 Generating embeddings: 200/200 (100%) - 4s elapsed\n❌ Failed to upload batch to Turbopuffer: the turbopuffer.Namespace class has been removed; use turbopuffer.Turbopuffer().namespace() instead; see https://github.com/turbopuffer/turbopuffer-python/blob/main/UPGRADING.md\nfor help\n❌ Error processing batch: the turbopuffer.Namespace class has been removed; use turbopuffer.Turbopuffer().namespace() instead; see https://github.com/turbopuffer/turbopuffer-python/blob/main/UPGRADING.md for help\n^C\n✅ All tasks completed in 5s"
            }
          }
        },
        {
          "display": "now try it.\n\nuv run tpuf-cli migrate-facts --org-id=6017",
          "pastedContents": {}
        },
        {
          "display": "merge origin/main in and fix conflicts",
          "pastedContents": {}
        },
        {
          "display": "I found some under 6017.  they're just in dev_dorkitude_mesh_org_6017\n\nSELECT * FROM `end-p1-gcp-v2-a804-home.dev_dorkitude_mesh_org_6017.briefs_v3__extracted_triples_v2` LIMIT 1000",
          "pastedContents": {}
        },
        {
          "display": "why doesn't this find facts?   which BQ tables is it looking in?                                                                                                                                                       │\n│                                                                                                                                                                                                                          │\n│   uv run tpuf-cli migrate-facts --org-id=6017",
          "pastedContents": {}
        },
        {
          "display": "i don't see why this doesn't find any facts:\n\nuv run tpuf-cli migrate-facts --org-id=6017",
          "pastedContents": {}
        },
        {
          "display": "update migrate-facts so it'll do the most recent facts first, not start over from the beginning",
          "pastedContents": {}
        },
        {
          "display": "uv run tpuf-cli migrate-facts --org-id=6017\n\nwhy does it say 📋 Preparing namespace: None_6017_facts\n\nwhen it should be kyle_dev by default",
          "pastedContents": {}
        },
        {
          "display": "show me how to use tpuf CLI",
          "pastedContents": {}
        },
        {
          "display": "/clear ",
          "pastedContents": {}
        },
        {
          "display": "make everything",
          "pastedContents": {}
        },
        {
          "display": "make the stub API.  it shouldn't do anyhting right now besides expose routes and log the functionality out.  no storage or anything\n\nthen make the CLI to exercise those routes.\n\nCLI can live in @briefs/tasks/cli.py\n\nadd CLI to pyproject as `tasks-cli`\n\nadd the relevant pydantic models in @briefs/tasks/models.py\n\norganize the code in files similarly to how the rest of briefs project is organized\n\nonce you test it and prove it's working decently well, make a new draft PR and commit",
          "pastedContents": {}
        },
        {
          "display": "make the stub API.  it shouldn't do anyhting right now besides expose routes and log the functionality out.  no storage or anything\n\nthen make the CLI to exercise those routes.\n\nCLI can live in @briefs/tasks/cli.py\n\nadd CLI to pyproject as `tasks-cli`\n\nadd the relevant pydantic models in @briefs/tasks/models.py\n\norganize the code in files similarly to how the rest of briefs project is organized",
          "pastedContents": {}
        },
        {
          "display": "for the manual trigger API, by default it should be a dry run.   i.e. it should just return the (e.g. markdown) results from the Assistant message.  but don't actually send the email unless dry_run=False is sent to\n  the API.\n\nupdate my linear ticket END-3996 to describe it that effect",
          "pastedContents": {}
        },
        {
          "display": "make everything",
          "pastedContents": {}
        },
        {
          "display": "the @briefs/threads/README.md will tell you",
          "pastedContents": {}
        },
        {
          "display": "how to do this non-interacively and auto-submit the feedback?\n\nuv run python -m briefs.threads.cli --message=\"Hi\" --feedback-mode --debug",
          "pastedContents": {}
        },
        {
          "display": "you figure it out",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "!git status",
          "pastedContents": {}
        },
        {
          "display": "then why are our other firestore models doing this?",
          "pastedContents": {}
        },
        {
          "display": "src/briefs/briefs/threads/agno_manager.py\n                        )\n                    parent_stored = StoredMessage.model_validate(parent_data)\n                    # Calculate latency in milliseconds using completed_at for assistant messages\n                    if isinstance(stored_message.message, AssistantMessage) and stored_message.message.completed_at:\n@dreverri dreverri yesterday\nWe already know stored_message.message is an AssistantMessage so no need to check again.\n\n",
          "pastedContents": {}
        },
        {
          "display": "\n    @pydantic.field_validator(\"created_at\", \"updated_at\", mode=\"before\")\n@dreverri dreverri yesterday\nWhat problem does this fix? Are we running into invalid dates for objects fetched from firestore?\n\n",
          "pastedContents": {}
        },
        {
          "display": "src/briefs/briefs/threads/agno_manager.py\n@@ -107,6 +137,7 @@ def __init__(\n        user_fetcher: UserFetcher,\n        settings: Settings,\n        toolbox_provider: ToolBoxProvider,\n        mesh_engine: MeshEngine,\n@dreverri dreverri yesterday\nThere is an async mesh client available now: AsyncMeshEngine\n\n",
          "pastedContents": {}
        },
        {
          "display": "commit",
          "pastedContents": {}
        },
        {
          "display": "make everything",
          "pastedContents": {}
        },
        {
          "display": "src/briefs/briefs/threads/agno_manager.py\n            )\n        stored_message = StoredMessage.model_validate(message_data)\n\n        # Extract parent message content if this is an assistant message\n@dreverri dreverri yesterday\nYou might consider failing the feedback form if it's not an assistant message:\n\nif not isinstance(stored_message.message, AssistantMessage):\n    raise TypeError(f\"Message {stored_assistant_message.id} is not an AssistantMessage\")\nThat way you can eliminate the nested if blocks which can make the code hard to read.\n\n",
          "pastedContents": {}
        },
        {
          "display": "src/briefs/briefs/threads/agno_manager.py\n        message_data = message_doc.to_dict()\n        if message_data:\n            logger.debug(\n                f\"Current message raw data: created_at type={type(message_data.get('created_at'))}, value={message_data.get('created_at')}\"\n@dreverri dreverri yesterday\nWhat's the point of this?\n\n",
          "pastedContents": {}
        },
        {
          "display": "but do they work?  insert a debug log in @briefs/threads/agno_manager.py that lets me see",
          "pastedContents": {}
        },
        {
          "display": "src/briefs/briefs/threads/cli.py\n@@ -330,17 +422,23 @@ async def create_or_select_thread(self) -> str:\n\n    async def interactive_mode(self):  # noqa: C901\n        \"\"\"Run interactive chat mode.\"\"\"\n        feedback_status = \"[green]ON[/green]\" if self.feedback_mode else \"[red]OFF[/red]\"\n        gpt4_status = \"[green]ON[/green]\" if self.use_gpt4 else \"[red]OFF[/red]\"\n@rtyer rtyer yesterday\nsame gpt4 vs gpt4_1 feedback from elsewhere.\n\n",
          "pastedContents": {}
        },
        {
          "display": "src/briefs/briefs/threads/cli.py\n        self.base_url = base_url\n        self.org_id = org_id\n        self.user_id = user_id\n        self.account_id = account_id\n        self.debug = debug\n        self.feedback_mode = feedback_mode\n        self.use_gpt4 = use_gpt4\n@rtyer rtyer yesterday\nThis will probably be changing soon but in the meantime, it probably should be use_gpt4_1 or similar to avoid confusion\n\n\n",
          "pastedContents": {}
        },
        {
          "display": "type checks and such, then commit",
          "pastedContents": {}
        },
        {
          "display": "src/briefs/briefs/threads/api.py\n\n    @field_validator(\"thumb_value\")\n    @classmethod\n    def validate_thumb_value(cls, v: str) -> str:\n@rtyer rtyer yesterday\nThis probably would work better as a Literal. Check examples in models.py (MessageStatus, for example) but it would roughly be:\n\nthumb_value: Literal['thumbs_up', 'thumbs_down'] = ...\n\n@rtyer rtyer yesterday\nIt provides you the constraint you're trying to build in with validators here out of the box.\n\n@rtyer rtyer yesterday\nhttps://typing.python.org/en/latest/spec/literal.html#literal\n\n",
          "pastedContents": {}
        },
        {
          "display": "Walk me through what this line means, why it's here, why we added it.  Help me understand what all this model_dump stuff is about too.",
          "pastedContents": {}
        },
        {
          "display": "/cost ",
          "pastedContents": {}
        },
        {
          "display": "src/briefs/briefs/threads/agno_manager.py\n            return v.to_datetime()\n        return v\n\n    @pydantic.field_serializer(\"created_at\", \"updated_at\", when_used=\"json\")\n@rtyer rtyer yesterday\nIs this going to change the current scheme of what we're storing in firestore? If so, is that a desired outcome here?\n\n",
          "pastedContents": {}
        },
        {
          "display": "commit",
          "pastedContents": {}
        },
        {
          "display": "cdb:  make everything\n\nrun all type checks, linters, ruff",
          "pastedContents": {}
        },
        {
          "display": "commit",
          "pastedContents": {}
        },
        {
          "display": "review feedback:  src/briefs/briefs/threads/agno_manager.py\n                    if isinstance(stored_message.message, AssistantMessage) and stored_message.message.completed_at:\n                        time_diff = stored_message.message.completed_at - parent_stored.message.created_at\n                        answer_latency_ms = int(time_diff.total_seconds() * 1000)\n                        logger.info(\n@rtyer rtyer yesterday\nI think we should consider leaving this on debug level to better filter out in production logs.\n\n@rtyer rtyer yesterday\nsame with the matching statement below\n\n\n\n\n",
          "pastedContents": {}
        },
        {
          "display": "commit",
          "pastedContents": {}
        },
        {
          "display": "review feedback:\n\nsrc/briefs/briefs/threads/agno_manager.py\n        :return: Unique identifier for the feedback record.\n        \"\"\"\n        # Generate unique feedback ID\n        feedback_id = str(ULID())\n@rtyer rtyer yesterday\nLet's ditch ULID's for these and just use UUID's. I have concerns about how ULIDs may be hotspotting and think we need to move away from them.\n\n@rtyer rtyer yesterday\nFor the record, i'm responsible for the ULID's in the first place and while they might make sense for messages, using them elsewhere was a poor call.\n\n",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "  12:51 PM\n@Ryan Tyer\n does the api currently support regenerating a specific message? what about updating the user input as well before regenerating?\n\n\n\n\n\n\n\nRyan Tyer\n  12:51 PM\nno\n12:52\nI have a ticket but haven't prioritized it relative to other bits\n\n\nKate Schaefer\n  12:52 PM\ngot it, just skimming our threads backlog to see what is ready\n\n\nRyan Tyer\n  12:52 PM\nI can look at it but I will say it's got a fair bit of complexity even in the simple approach (where we replace that generated assistant message with a new one)\n12:53\nI can certainly work on it next week while I'm pseudo off\n\n\nKate Schaefer\n  12:54 PM\nok yeah, it's one of the few bigger threads enhancement items on our backlog so wanted to check in on it, but I also know you are working to get v1 out of evals\n\n\nRyan Tyer\n  12:54 PM\nk, I can take a break to work on it\n12:55\nevals are a big thing b/c they require changes to how we do prompt generation so it may be nice to get something on the order of a day or so in.\n\n\nRyan Tyer\n  1:37 PM\n@Kate Schaefer\n is there a linear ticket already for regenerate?\nNew\n\n\nKate Schaefer\n  2:00 PM\nI only see the FE one, I couldn't find a BE one\n"
            }
          }
        },
        {
          "display": "git pull",
          "pastedContents": {}
        },
        {
          "display": "search lienar for tickets related to \n\n[Pasted text #1 +51 lines]\n",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "  12:51 PM\n@Ryan Tyer\n does the api currently support regenerating a specific message? what about updating the user input as well before regenerating?\n\n\n\n\n\n\n\nRyan Tyer\n  12:51 PM\nno\n12:52\nI have a ticket but haven't prioritized it relative to other bits\n\n\nKate Schaefer\n  12:52 PM\ngot it, just skimming our threads backlog to see what is ready\n\n\nRyan Tyer\n  12:52 PM\nI can look at it but I will say it's got a fair bit of complexity even in the simple approach (where we replace that generated assistant message with a new one)\n12:53\nI can certainly work on it next week while I'm pseudo off\n\n\nKate Schaefer\n  12:54 PM\nok yeah, it's one of the few bigger threads enhancement items on our backlog so wanted to check in on it, but I also know you are working to get v1 out of evals\n\n\nRyan Tyer\n  12:54 PM\nk, I can take a break to work on it\n12:55\nevals are a big thing b/c they require changes to how we do prompt generation so it may be nice to get something on the order of a day or so in.\n\n\nRyan Tyer\n  1:37 PM\n@Kate Schaefer\n is there a linear ticket already for regenerate?\nNew\n\n\nKate Schaefer\n  2:00 PM\nI only see the FE one, I couldn't find a BE one\n"
            }
          }
        },
        {
          "display": "search_triples too",
          "pastedContents": {}
        },
        {
          "display": "i want the same for fetch_facts stuff",
          "pastedContents": {}
        },
        {
          "display": "update @briefs/threads/agno_manager.py to add logging so i know how long each tool-call takes to return",
          "pastedContents": {}
        },
        {
          "display": "`make lint-fix`",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "agno_manager.py",
        "models.py",
        "app.py",
        "summarizer.py",
        "service.ts"
      ],
      "exampleFilesGeneratedAt": 1749847401816,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 7.256425350000001,
      "lastAPIDuration": 538640,
      "lastDuration": 1590569,
      "lastLinesAdded": 175,
      "lastLinesRemoved": 95,
      "lastTotalInputTokens": 35336,
      "lastTotalOutputTokens": 17253,
      "lastTotalCacheCreationInputTokens": 129319,
      "lastTotalCacheReadInputTokens": 2370173,
      "lastSessionId": "e2786da4-8896-4640-96e2-03ffb19d1153"
    },
    "/Users/dorkitude/a/dev/cerebro": {
      "allowedTools": [],
      "history": [
        {
          "display": "where can I see chat thumbs up/down feedback that has been gathered in the app? (edited) ",
          "pastedContents": {}
        },
        {
          "display": "I don't think the get_valid_at_timestamp does this properly eitehr;   it's not cehcking for existence, only truthiness",
          "pastedContents": {}
        },
        {
          "display": "help me diagnose this issue, and put your findings in INVESTIGATION.md:\n\n\n[Pasted text #1 +47 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "briefs-api    | ERROR    'Row' object has no attribute 'valid_at'\nbriefs-api    |          Traceback (most recent call last):\nbriefs-api    |            File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/pydantic/main.py\", line 983, in __getattr__\nbriefs-api    |              return pydantic_extra[item]\nbriefs-api    |                     ~~~~~~~~~~~~~~^^^^^^\nbriefs-api    |          KeyError: 'valid_at'\nbriefs-api    |\nbriefs-api    |          The above exception was the direct cause of the following exception:\nbriefs-api    |\nbriefs-api    |          Traceback (most recent call last):\nbriefs-api    |            File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/agno/tools/function.py\", line 600, in execute\nbriefs-api    |              result = self.function.entrypoint(**arguments)\nbriefs-api    |            File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/threads/agno_manager.py\", line 1565, in _wrapper\nbriefs-api    |              result = tool.exec(*args, **kwargs)\nbriefs-api    |            File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/tools/facts/triples/turbopuffer_search_tool.py\", line 367, in exec\nbriefs-api    |              all_raw_rows.extend(f.result())\nbriefs-api    |                                  ~~~~~~~~^^\nbriefs-api    |            File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/concurrent/futures/_base.py\", line 456, in result\nbriefs-api    |              return self.__get_result()\nbriefs-api    |                     ~~~~~~~~~~~~~~~~~^^\nbriefs-api    |            File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/concurrent/futures/_base.py\", line 401, in __get_result\nbriefs-api    |              raise self._exception\nbriefs-api    |            File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\nbriefs-api    |              result = self.fn(*self.args, **self.kwargs)\nbriefs-api    |            File \"/Users/dorkitude/a/dev/cerebro/src/common-py/core/src/common_core/timing.py\", line 34, in wrapper\nbriefs-api    |              result = func(*args, **kwargs)\nbriefs-api    |            File \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/contextlib.py\", line 85, in inner\nbriefs-api    |              return func(*args, **kwds)\nbriefs-api    |            File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/tools/facts/triples/turbopuffer_search_tool.py\", line 481, in do_search_for_term\nbriefs-api    |              search_results = rank_results_by_minimum_distance(search_results)\nbriefs-api    |            File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/tools/facts/triples/turbopuffer_search_tool.py\", line 63, in rank_results_by_minimum_distance\nbriefs-api    |              filtered_results.sort(\nbriefs-api    |              ~~~~~~~~~~~~~~~~~~~~~^\nbriefs-api    |                  key=lambda x: (\nbriefs-api    |                  ^^^^^^^^^^^^^^^\nbriefs-api    |              ...<2 lines>...\nbriefs-api    |                  )\nbriefs-api    |                  ^\nbriefs-api    |              )\nbriefs-api    |              ^\nbriefs-api    |            File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/tools/facts/triples/turbopuffer_search_tool.py\", line 66, in <lambda>\nbriefs-api    |              datetime.fromisoformat(x[\"valid_at\"].replace(\"Z\", \"+00:00\")).timestamp(),\nbriefs-api    |                                     ~^^^^^^^^^^^^\nbriefs-api    |            File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/turbopuffer/types/row.py\", line 59, in __getitem__\nbriefs-api    |              return getattr(self, key)\nbriefs-api    |            File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/pydantic/main.py\", line 985, in __getattr__\nbriefs-api    |              raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\nbriefs-api    |          AttributeError: 'Row' object has no attribute 'valid_at'. Did you mean: 'validate'?"
            }
          }
        },
        {
          "display": "tell me about the system prompt for the new book level chat stuff in threads",
          "pastedContents": {}
        },
        {
          "display": "revert my last commit's changes to @app-frontend\n\ni only wanted the briefs changes",
          "pastedContents": {}
        },
        {
          "display": "commit my staged changes and note that it fixes the issue 4169",
          "pastedContents": {}
        },
        {
          "display": "Try making that change",
          "pastedContents": {}
        },
        {
          "display": "Could we have done this by changing how we prompt the LLM for its steps, instead of doing this hacky language stuff?",
          "pastedContents": {}
        },
        {
          "display": "execute the plan simple",
          "pastedContents": {}
        },
        {
          "display": "!code plan_simple.md",
          "pastedContents": {}
        },
        {
          "display": "review plan.md and make me a plan_simple.md -- Is there a version of the world where we don't touch the frontend code, just return more substeps & in the present-progressive tense on the backend?",
          "pastedContents": {}
        },
        {
          "display": "merge this in dustin/ks/end-4115-add-research-step-status",
          "pastedContents": {}
        },
        {
          "display": "Is there a version of the world where we don't touch the frontend code, just return more substeps & in the present-progressive tense on the backend?",
          "pastedContents": {}
        },
        {
          "display": "!code plan.md",
          "pastedContents": {}
        },
        {
          "display": "Make a new Linear ticket under \"TODO\" with title \"Tweaks to reasoning steps\" and assign to me.  Make a new branch with the right ticket ID in the name.\n\nIn the description for ticket, paste this:\n---\nWhen we build reasoning steps for old briefs we had several data points per step: what it's doing and why, plus what it found as a result. This let us display a great deal more information per step. it would be great to do this again, especially for longer-running processes.\nRight now I get 1-4 steps, but can't show much more than this.\nI also want to shift the tense from imperative (commands) to present progressive.. \"Identifying stakeholders ... Pulling key facts... etc\".\n---\n\nBuild me a plan.md to achieve this.  Ultrathink.",
          "pastedContents": {}
        },
        {
          "display": "ultrathink.\n\nrun this command, respond to any errors (including code changes), and run it again until it works.\n\nyou'll know it worked because the output folder will have full length files.\n\nthe command to run, fix problems, and re-run, until it truly works, is this:\n\n`uv run prosaic parse input/`\n",
          "pastedContents": {}
        },
        {
          "display": "the problem is that the article body itself is really useful context, so starting a thread to discuss a news article and then excluding the body every time kinda sucks",
          "pastedContents": {}
        },
        {
          "display": "open the gist in browser",
          "pastedContents": {}
        },
        {
          "display": "then update the gist to not mention authentication stuff",
          "pastedContents": {}
        },
        {
          "display": "just edit the old gist",
          "pastedContents": {}
        },
        {
          "display": "but why would it be intermittent and only on some timeline moments?  the only thing that seems different is the extra content",
          "pastedContents": {}
        },
        {
          "display": "give me an assessment of how to fix END-4159 is happening, and make a plan2.md for how to fix it.\nput the plan.md into a secret gist and pipe the URL into my clipboard with pbcopy.",
          "pastedContents": {}
        },
        {
          "display": "give me an assessment of how to fix END-4163 is happening, and make a plan.md for how to fix it.\nput the plan.md into a secret gist and pipe the URL into my clipboard with pbcopy.",
          "pastedContents": {}
        },
        {
          "display": "what other callers are there?",
          "pastedContents": {}
        },
        {
          "display": "where speficically would we make the backend fix?  Change doc_ref.set(config) to doc_ref.set(config, merge=True) in Firestore\n",
          "pastedContents": {}
        },
        {
          "display": "put the plan.md into a secret gist and pipe the URL into my clipboard with pbcopy",
          "pastedContents": {}
        },
        {
          "display": "!open plan.md",
          "pastedContents": {}
        },
        {
          "display": "give me an assessment of why END-4136 bug is happening, and make a plan.md for how to fix it.",
          "pastedContents": {}
        },
        {
          "display": "is the prompt different for person scope threads?  is it hard coded?",
          "pastedContents": {}
        },
        {
          "display": "> Read this and give me some ideas for hooks:\n\n  https://docs.anthropic.com/en/docs/claude-code/hooks",
          "pastedContents": {}
        },
        {
          "display": "how do person-scoped thread work in python land?  (like a user clicks a Person card in a thread response)",
          "pastedContents": {}
        },
        {
          "display": "anyone know where we store the thump up thumb down feedback?",
          "pastedContents": {}
        },
        {
          "display": "!export BRIEFS_FACTS_QUEUE_SEND_TO_TEMPORAL=false",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +4 lines]\n\nis this related to a recent update?  is there anything in the README that describes what's needed to get my env up to date",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": " i'm getting this briefs-api    | ValueError: Temporal client is not set                                                                                                                                                    │\n│   briefs-api    | make: *** [run-api] Error 1                                                                                                                                                                                │\n│   briefs-api    | Exited with code 2                                                                                                                                                                                         │\n│                                                                                                                                                                                                                              │\n│   when i try to run the briefs API"
            }
          }
        },
        {
          "display": "wget it and look at the result.",
          "pastedContents": {}
        },
        {
          "display": "compare your ideas to this output from chat GPT:\n\nhttps://chatgpt.com/share/e/68640370-987c-8003-9d71-3c5de3140f68",
          "pastedContents": {}
        },
        {
          "display": "What would this look like in terms of the code structure?  Keep in mind that I prefer object-oriented code with imperative, simple, clean flow.",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +16 lines]\n\nPlease write your response here and let's keep talking about it.",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "I'm the CTO of Endgame, an AI-assistant for CRM data.Endgame has a feature called Threads.  It's the backend for a chat client (web) and a slack client.  Salespeople use it to answer questions about their accounts, their contacts, and their book of business.  I've attached the Threads code as it stands today.\n\nHelp me figure out a plan for making the core Threads experience into a multi-agent system.\n\nWhen a question comes in, I'd love to have a quick match score comparing the user-language question to known intents. This mapping should be cheap/fast, we can experiment with NLP-matching and GPT 4o-mini.  Some intents will have execution plans that we can then follow.   Some examples of known intents include:\n\n- Prep me for a specific meeting.\n- Tell me the status of this deal.\n- Summarize the last call.\n\nIf the question we get maps to an intent, we should run its execution plan.\n\nIf not, we'll fall back on a catch-all plan.\n\nThe catch-all plan should also be multi-agent, though.  This is because, in today's system, we're running into issues where the guardrails and system instructions are either too permissive (meaning the agent hallucinates a lot and is less grounded) OR they're to strict (meaning the agent isn't creative as a thought-partner).  Maybe we can make things like ResearchAgent and CreativeAgent, and train them to behave differently?\n\nI need some help thinking through this."
            }
          }
        },
        {
          "display": "export this as docs/NOOB_GUIDE.md",
          "pastedContents": {}
        },
        {
          "display": "I am new to Typescript and Next, but I am an expert in Flask and Rails development.  Walk me through the control flow of this Next app in the current directory.",
          "pastedContents": {}
        },
        {
          "display": "no mention of outreach, gong, salesloft?",
          "pastedContents": {}
        },
        {
          "display": "Which formats of email-to-Salesforce activity/task syncing do we currently seem to support first-class?",
          "pastedContents": {}
        },
        {
          "display": "Make me a new Linear issue, set to in-progress, call it \"Tiny Guardrails\", description \"Additional sgent instructions that specifically aim to stop hallucinations of Names, URLs, contact details, or metrics.\"\n\nmake a new branch and name it after this new issue.",
          "pastedContents": {}
        },
        {
          "display": "Let's not make the mesh engine optional.",
          "pastedContents": {}
        },
        {
          "display": "I'm pretty sure we didn't change those tests in this branch since main.  Did we?",
          "pastedContents": {}
        },
        {
          "display": "Wait, but is there actually any code that needs this to be optional?",
          "pastedContents": {}
        },
        {
          "display": "Can you look at the PR comments in github for this from dreverri and others, and help me address them one-by-one?",
          "pastedContents": {}
        },
        {
          "display": "you didn't change the code, just the comment?",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +24 lines]\n\n dreverri \n\nshould you skip this section if there are no sources?\n\n----\n\nWhat does this PR comment mean?",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "def _build_markdown_content(message: Message, thread_title: str) -> str:\n    \"\"\"Build markdown content from message.\n    :param message: The message to convert.\n    :param thread_title: The title of the thread.\n    :return: Markdown content string.\n    \"\"\"\n    # Construct the full markdown content\n    markdown_content = f\"# {thread_title}\\n\\n{message.content}\"\n\n    # Add sources if assistant message\n    if isinstance(message, AssistantMessage) and message.sources:\n        markdown_content += \"\\n\\n## Sources\\n\\n\"\n        for source in message.sources:\n            # Extract first reference from collection if available\n            if hasattr(source, \"references\") and source.references:\n                ref = source.references[0]\n                title = getattr(ref, \"title\", \"Unknown Source\")\n                url = getattr(ref, \"url\", \"#\")\n                markdown_content += f\"- [{title}]({url})\\n\"\n            else:\n                # Fallback if structure is different\n                markdown_content += f\"- {source!s}\\n\"\n\n    return markdown_content\n"
            }
          }
        },
        {
          "display": "make sure the docstrings are still correct in @briefs/threads/export.py and @briefs/threads/api.py for the things we've done in this branch since main.",
          "pastedContents": {}
        },
        {
          "display": "revert threads/manager.py to what we have in main, then test it",
          "pastedContents": {}
        },
        {
          "display": "but we didn't add any tests that depend on this, did we?  if so, show me",
          "pastedContents": {}
        },
        {
          "display": "vs. main, what changes did we make to src/briefs/briefs/threads/manager.py and why",
          "pastedContents": {}
        },
        {
          "display": "get rid of the export stuff that adds reasoning steps to the document.",
          "pastedContents": {}
        },
        {
          "display": "   # Add sources if assistant message\n    if isinstance(message, AssistantMessage) and message.sources:\n        markdown_content += \"\\n\\n## Sources\\n\\n\"\n\ndreverri:  should you skip this section if there are no sources?\n",
          "pastedContents": {}
        },
        {
          "display": "does the exporter write to the filesystem anywhere?",
          "pastedContents": {}
        },
        {
          "display": "please do",
          "pastedContents": {}
        },
        {
          "display": "def export_message_as_markdown(message: Message, thread_id: str, thread_title: str) -> tuple[str, str]:\n\n dreverri \n\nIs this the same logic as _build_markdown_content?\n",
          "pastedContents": {}
        },
        {
          "display": "Do it.",
          "pastedContents": {}
        },
        {
          "display": "how does markdown2docx work",
          "pastedContents": {}
        },
        {
          "display": "is it worth adding the markdown2 dependency for this branch?  do we have other libraries already installed that could do this export work?",
          "pastedContents": {}
        },
        {
          "display": "why do we have these overrides?  +module = [\"langfuse.*\", \"serpapi.*\", \"markdown2.*\"]",
          "pastedContents": {}
        },
        {
          "display": "undo this 120 +  [tool.mypy]\n       121 +  check_untyped_defs = true",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +15 lines]\n\nFix",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "🚀 Type checking: Running mypy\ntest_code_block_parsing.py:4: error: Skipping analyzing \"markdown2\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\ntest_reportlab_parsing.py:6: error: Skipping analyzing \"markdown2\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nbriefs/prosaic/parsers/contacts_parser.py:16: error: Cannot find implementation or library stub for module named \"prosaic_engine\"  [import-not-found]\nbriefs/prosaic/parsers/contacts_parser.py:16: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nbriefs/prosaic/parsers/contacts_parser.py:17: error: Cannot find implementation or library stub for module named \"joiner_mixin\"  [import-not-found]\nbriefs/prosaic/parsers/contacts_parser.py:205: error: Need type annotation for \"domain_counts\"  [var-annotated]\nbriefs/prosaic/joiner_mixin.py:35: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/prosaic/joiner_mixin.py:36: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/prosaic/joiner_mixin.py:37: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/prosaic/prosaic_engine.py:97: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/prosaic/prosaic_engine.py:99: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/tools/research_person_tools.py:1061: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/tools/research_person_tools.py:1081: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/tools/research_person_tools.py:1107: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/comparison_tools/tool_trials.py:16: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]"
            }
          }
        },
        {
          "display": "[Pasted text #1 +15 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "🚀 Type checking: Running mypy\ntest_code_block_parsing.py:4: error: Skipping analyzing \"markdown2\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\ntest_reportlab_parsing.py:6: error: Skipping analyzing \"markdown2\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nbriefs/prosaic/parsers/contacts_parser.py:16: error: Cannot find implementation or library stub for module named \"prosaic_engine\"  [import-not-found]\nbriefs/prosaic/parsers/contacts_parser.py:16: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nbriefs/prosaic/parsers/contacts_parser.py:17: error: Cannot find implementation or library stub for module named \"joiner_mixin\"  [import-not-found]\nbriefs/prosaic/parsers/contacts_parser.py:205: error: Need type annotation for \"domain_counts\"  [var-annotated]\nbriefs/prosaic/joiner_mixin.py:35: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/prosaic/joiner_mixin.py:36: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/prosaic/joiner_mixin.py:37: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/prosaic/prosaic_engine.py:97: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/prosaic/prosaic_engine.py:99: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/tools/research_person_tools.py:1061: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/tools/research_person_tools.py:1081: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/tools/research_person_tools.py:1107: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nbriefs/comparison_tools/tool_trials.py:16: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]"
            }
          }
        },
        {
          "display": "pyproject.toml: DEP002 'markdown-pdf' defined as a dependency but not used in the codebase\npyproject.toml: DEP002 'pypandoc' defined as a dependency but not used in the codebase\npyproject.toml: DEP002 'aiofiles' defined as a dependency but not used in the codebase\npyproject.toml: DEP002 'weasyprint' defined as a dependency but not used in the codebase\npyproject.toml: DEP002 'markdown' defined as a dependency but not used in the codebase",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +50 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "🔍 Fixing linting issues\ntest_api_pdf_export.py:39:13: E722 Do not use bare `except`\n   |\n37 |                 error_details = response.json()\n38 |                 print(f\"Error details: {error_details}\")\n39 |             except:\n   |             ^^^^^^ E722\n40 |                 pass\n   |\n\ntest_api_pdf_export.py:39:13: S110 `try`-`except`-`pass` detected, consider logging the exception\n   |\n37 |                   error_details = response.json()\n38 |                   print(f\"Error details: {error_details}\")\n39 | /             except:\n40 | |                 pass\n   | |____________________^ S110\n41 |\n42 |       except Exception as e:\n   |\n\ntest_pdf_export.py:39:14: ASYNC230 Async functions should not open files with blocking methods like `open`\n   |\n38 |         # Save for inspection\n39 |         with open(filename, \"wb\") as f:\n   |              ^^^^ ASYNC230\n40 |             f.write(pdf_bytes)\n41 |         print(f\"PDF saved to: {filename}\")\n   |\n\ntest_reportlab_parsing.py:13:5: C901 `test_reportlab_parsing` is too complex (18 > 10)\n   |\n13 | def test_reportlab_parsing():\n   |     ^^^^^^^^^^^^^^^^^^^^^^ C901\n14 |     \"\"\"Test the HTML to ReportLab parsing directly.\"\"\"\n   |\n\ntest_reportlab_parsing.py:62:9: SIM118 Use `key in dict` instead of `key in dict.keys()`\n   |\n60 |     # Check available styles\n61 |     print(\"Available ReportLab styles:\")\n62 |     for style_name in styles.byName.keys():\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM118\n63 |         print(f\"  - {style_name}\")\n64 |     print(\"\\n\" + \"=\" * 50 + \"\\n\")\n   |\n   = help: Remove `.keys()`\n\nFound 17 errors (12 fixed, 5 remaining).\nNo fixes available (1 hidden fix can be enabled with the `--unsafe-fixes` option).\nmake: *** [lint-fix] Error 1"
            }
          }
        },
        {
          "display": "Choose export format [md/pdf/docx/html] (md): pdf\nFailed to export message: Server error '500 Internal Server Error' for url\n'http://localhost:8767/v3/6027/threads/642b798e-7e1f-4fbd-8553-8e7815e91edd/messages/200f87b8-e542-4848-b2ea-9e9fdff7916b/export?export_format=pdf'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500",
          "pastedContents": {}
        },
        {
          "display": "You: export\nChoose export format [md/pdf/docx/html] (md): html\nFailed to export message: Client error '422 Unprocessable Content' for url\n'http://localhost:8767/v3/6027/threads/642b798e-7e1f-4fbd-8553-8e7815e91edd/messages/b8bd9e8d-11fb-4209-8636-aaea8b5c5a0d/export?export_format=html'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/422",
          "pastedContents": {}
        },
        {
          "display": "why doesn't agno agent actually see the URL?",
          "pastedContents": {}
        },
        {
          "display": "Choose export format [md/pdf/docx/html] (md): pdf\nFailed to export message: Server error '500 Internal Server Error' for url\n'http://localhost:8767/v3/6027/threads/642b798e-7e1f-4fbd-8553-8e7815e91edd/messages/b8bd9e8d-11fb-4209-8636-aaea8b5c5a0d/export?export_format=pdf'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500",
          "pastedContents": {}
        },
        {
          "display": "show code",
          "pastedContents": {}
        },
        {
          "display": "should I expect serpapi_google_search_tool to give me a URL in its response",
          "pastedContents": {}
        },
        {
          "display": "use reportlab and get rid of other options",
          "pastedContents": {}
        },
        {
          "display": "does @briefs/threads/cli.py go over HTTP the whole time",
          "pastedContents": {}
        },
        {
          "display": "fix @briefs/threads/export.py to not do all the conditional importing and typecheck stuff",
          "pastedContents": {}
        },
        {
          "display": "fix merge conflicts",
          "pastedContents": {}
        },
        {
          "display": "ultrathink.\n\nrun this command, respond to any errors (including code changes), and run it again until it works.\n\nyou'll know it worked because the output folder will have full length files.\n\nthe command to run, fix problems, and re-run, until it truly works, is this:\n\n`uv run prosaic parse input/`\n",
          "pastedContents": {}
        },
        {
          "display": "let's remove the defensive piece and assume completed_at will be set.",
          "pastedContents": {}
        },
        {
          "display": "This test is assuming a lot about the internal implementation details of agno manager:\n\n    async def test_write_message_analytics_assistant_message\n\ncan we make this less anti-DRY and more high level?",
          "pastedContents": {}
        },
        {
          "display": "When does this function actually run though?  Isn't it always after the thread is done?",
          "pastedContents": {}
        },
        {
          "display": "but why not just always use it then",
          "pastedContents": {}
        },
        {
          "display": "@src/briefs/briefs/threads/analytics_models.py       # Prefer completed_at (when response finished) over created_at (when response started)\n    end_time = assistant_message.completed_at or assistant_message.created_at",
          "pastedContents": {}
        },
        {
          "display": "commit my stages changes and push",
          "pastedContents": {}
        },
        {
          "display": "do \"src/briefs/make everything\" and fix the errors",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #2 +18 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "\n\n\n==================================================================== FAILURES ====================================================================\n__________________________________________________ TestMessageExport.test_export_message_as_pdf __________________________________________________\n\nself = <tests.threads.test_export.TestMessageExport object at 0x1431f7820>\nsample_user_message = UserMessage(id='msg_user_123', created_at=datetime.datetime(2024, 1, 1, 12, 0, tzinfo=datetime.timezone.utc), completed_at=None, role='user', content='What is the capital of France?', extra_context=None, user_id=None)\n\n    @pytest.mark.asyncio\n    async def test_export_message_as_pdf(self, sample_user_message):\n        \"\"\"Test exporting a message as PDF.\"\"\"\n>       pdf_bytes, filename = await export_message_as_pdf(sample_user_message, \"thread_123\", \"Test Thread Title\")\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       TypeError: object tuple can't be used in 'await' expression\n\ntests/threads/test_export.py:109: TypeError\n================================================================ warnings summary ================================================================\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n  /Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n.venv/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:298\n.venv/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:298\n.venv/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:298\n.venv/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:298\n.venv/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:298\n.venv/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:298\n.venv/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:298\n.venv/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:298\n  /Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n============================================================ short test summary info =============================================================\nFAILED tests/threads/test_export.py::TestMessageExport::test_export_message_as_pdf - TypeError: object tuple can't be used in 'await' expression\n=================================================== 1 failed, 150 passed, 10 warnings in 2.79s ===================================================\nmake: *** [test] Error 1"
            },
            "2": {
              "id": 2,
              "type": "text",
              "content": "\n\n============================================================================== FAILURES ===============================================================================\n____________________________________________________________ TestMessageExport.test_export_message_as_pdf _____________________________________________________________\n\nself = <tests.threads.test_export.TestMessageExport object at 0x1739f7820>\nsample_user_message = UserMessage(id='msg_user_123', created_at=datetime.datetime(2024, 1, 1, 12, 0, tzinfo=datetime.timezone.utc), completed_at=None, role='user', content='What is the capital of France?', extra_context=None, user_id=None)\n\n    @pytest.mark.asyncio\n    async def test_export_message_as_pdf(self, sample_user_message):\n        \"\"\"Test exporting a message as PDF.\"\"\"\n>       pdf_bytes, filename = await export_message_as_pdf(sample_user_message, \"thread_123\", \"Test Thread Title\")\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       TypeError: object tuple can't be used in 'await' expression\n\ntests/threads/test_export.py:109: TypeError\n========================================================================== warnings summary ===========================================================================\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:323"
            }
          }
        },
        {
          "display": "let's assume we have control over the environment, and these things will be available.  we should import them and get rid of the complicated conditionals.",
          "pastedContents": {}
        },
        {
          "display": "what is this about:\n\nif TYPE_CHECKING:\n    from docx.document import Document\n\n# Import optional libraries for better markdown rendering\ntry:\n    from markdown2 import markdown as markdown2  # type: ignore[import-untyped]\n\n    @@ -47,17 +38,14 @@\nexcept ImportError:\n    BS4_AVAILABLE = False",
          "pastedContents": {}
        },
        {
          "display": "gs",
          "pastedContents": {}
        },
        {
          "display": "pyproject.toml: DEP002 'aiofiles' defined as a dependency but not used in the codebase\nFound 1 dependency issue.",
          "pastedContents": {}
        },
        {
          "display": "Get rid of the fallback chain and just use our best option for each output format (HTML, PDF, DOCX)",
          "pastedContents": {}
        },
        {
          "display": "tell me about the export functionality, why is it giving me so many options for different libraries",
          "pastedContents": {}
        },
        {
          "display": "ARe there other parts of this branch (vs. main) that introduce filesystem access or vulnerabilities?",
          "pastedContents": {}
        },
        {
          "display": "pyproject.toml: DEP002 'pypandoc' defined as a dependency but not used in the codebase\nFound 1 dependency issue.",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +120 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "briefs-api    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                       briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/threads/export.py\", line 416, in export_message_as_pdf\nbriefs-api    |     return _export_pdf_with_reportlab_enhanced(markdown_content, message.id)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/threads/export.py\", line 300, in _export_pdf_with_reportlab_enhanced\nbriefs-api    |     styles.add(ParagraphStyle(\nbriefs-api    |     ~~~~~~~~~~^^^^^^^^^^^^^^^^                                                                                  briefs-api    |         name='Code',\nbriefs-api    |         ^^^^^^^^^^^^\nbriefs-api    |     ...<5 lines>...                                                                                             briefs-api    |         backColor=HexColor('#f5f5f5')\nbriefs-api    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |     ))                                                                                                          briefs-api    |     ^^\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/reportlab/lib/styles.py\", line 253, in add                                                                                                                 briefs-api    |     raise KeyError(\"Style '%s' already defined in stylesheet\" % key)\nbriefs-api    | KeyError: \"Style 'Code' already defined in stylesheet\"\nbriefs-api    | [June 25, 2025 15:57:07 MDT] [ERROR | httptools_impl] Exception in ASGI application                             briefs-api    | Traceback (most recent call last):\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 409, in run_asgi                                                                                           briefs-api    |     result = await app(  # type: ignore[func-returns-value]\nbriefs-api    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |         self.scope, self.receive, self.send                                                                     briefs-api    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |     )\nbriefs-api    |     ^                                                                                                           briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/middleware/proxy_headers.py\", line 60, in __call__\nbriefs-api    |     return await self.app(scope, receive, send)                                                                 briefs-api    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/applications.py\", line 1054, in __call__                                                                                                           briefs-api    |     await super().__call__(scope, receive, send)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/applications.py\", line 112, in __call__                                                                                                          briefs-api    |     await self.middleware_stack(scope, receive, send)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 187, in __call__                                                                                                     briefs-api    |     raise exc\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 165, in __call__\nbriefs-api    |     await self.app(scope, receive, _send)                                                                       briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/opentelemetry/instrumentation/asgi/__init__.py\", line 745, in __call__\nbriefs-api    |     await self.app(scope, otel_receive, otel_send)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 187, in __call__\nbriefs-api    |     raise exc\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 165, in __call__\nbriefs-api    |     await self.app(scope, receive, _send)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\nbriefs-api    |     await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\nbriefs-api    |     raise exc\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\nbriefs-api    |     await app(scope, receive, sender)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 714, in __call__\nbriefs-api    |     await self.middleware_stack(scope, receive, send)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 734, in app\nbriefs-api    |     await route.handle(scope, receive, send)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 288, in handle\nbriefs-api    |     await self.app(scope, receive, send)                                                                        briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 76, in app\nbriefs-api    |     await wrap_app_handling_exceptions(app, request)(scope, receive, send)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\nbriefs-api    |     raise exc                                                                                                   briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\nbriefs-api    |     await app(scope, receive, sender)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 73, in app\nbriefs-api    |     response = await f(request)\nbriefs-api    |                ^^^^^^^^^^^^^^^^\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 301, in app\nbriefs-api    |     raw_response = await run_endpoint_function(\nbriefs-api    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |     ...<3 lines>...                                                                                             briefs-api    |     )\nbriefs-api    |     ^\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\nbriefs-api    |     return await dependant.call(**values)\nbriefs-api    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                       briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/threads/api.py\", line 632, in export_message\nbriefs-api    |     pdf_content, filename = await export_message_as_pdf(message, thread_id, thread.title)\nbriefs-api    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                       briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/threads/export.py\", line 416, in export_message_as_pdf\nbriefs-api    |     return _export_pdf_with_reportlab_enhanced(markdown_content, message.id)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/threads/export.py\", line 300, in _export_pdf_with_reportlab_enhanced\nbriefs-api    |     styles.add(ParagraphStyle(\nbriefs-api    |     ~~~~~~~~~~^^^^^^^^^^^^^^^^                                                                                  briefs-api    |         name='Code',\nbriefs-api    |         ^^^^^^^^^^^^\nbriefs-api    |     ...<5 lines>...                                                                                             briefs-api    |         backColor=HexColor('#f5f5f5')\nbriefs-api    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |     ))                                                                                                          briefs-api    |     ^^\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/reportlab/lib/styles.py\", line 253, in add                                                                                                                 briefs-api    |     raise KeyError(\"Style '%s' already defined in stylesheet\" % key)\nbriefs-api    | KeyError: \"Style 'Code' already defined in stylesheet\"\nbriefs-api    | [June 25, 2025 15:57:07 MDT] [ERROR | httptools_impl] Exception in ASGI application                             briefs-api    | Traceback (most recent call last):\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 409, in run_asgi                                                                                           briefs-api    |     result = await app(  # type: ignore[func-returns-value]\nbriefs-api    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |         self.scope, self.receive, self.send                                                                     briefs-api    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |     )\nbriefs-api    |     ^                                                                                                           briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/uvicorn/middleware/proxy_headers.py\", line 60, in __call__\nbriefs-api    |     return await self.app(scope, receive, send)                                                                 briefs-api    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/applications.py\", line 1054, in __call__                                                                                                           briefs-api    |     await super().__call__(scope, receive, send)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/applications.py\", line 112, in __call__                                                                                                          briefs-api    |     await self.middleware_stack(scope, receive, send)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 187, in __call__                                                                                                     briefs-api    |     raise exc\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 165, in __call__\nbriefs-api    |     await self.app(scope, receive, _send)                                                                       briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/opentelemetry/instrumentation/asgi/__init__.py\", line 745, in __call__\nbriefs-api    |     await self.app(scope, otel_receive, otel_send)                                                              briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 187, in __call__\nbriefs-api    |     raise exc                                                                                                   briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/errors.py\", line 165, in __call__\nbriefs-api    |     await self.app(scope, receive, _send)                                                                       briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\nbriefs-api    |     await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)                                    briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\nbriefs-api    |     raise exc                                                                                                   briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\nbriefs-api    |     await app(scope, receive, sender)                                                                           briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 714, in __call__\nbriefs-api    |     await self.middleware_stack(scope, receive, send)                                                           briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 734, in app\nbriefs-api    |     await route.handle(scope, receive, send)                                                                    briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 288, in handle\nbriefs-api    |     await self.app(scope, receive, send)                                                                        briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 76, in app\nbriefs-api    |     await wrap_app_handling_exceptions(app, request)(scope, receive, send)                                      briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\nbriefs-api    |     raise exc                                                                                                   briefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\nbriefs-api    |     await app(scope, receive, sender)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/starlette/routing.py\", line 73, in app\nbriefs-api    |     response = await f(request)\nbriefs-api    |                ^^^^^^^^^^^^^^^^\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 301, in app\nbriefs-api    |     raw_response = await run_endpoint_function(\nbriefs-api    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |     ...<3 lines>...\nbriefs-api    |     )\nbriefs-api    |     ^\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\nbriefs-api    |     return await dependant.call(**values)\nbriefs-api    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/threads/api.py\", line 632, in export_message\nbriefs-api    |     pdf_content, filename = await export_message_as_pdf(message, thread_id, thread.title)\nbriefs-api    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/threads/export.py\", line 416, in export_message_as_pdf\nbriefs-api    |     return _export_pdf_with_reportlab_enhanced(markdown_content, message.id)\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/threads/export.py\", line 300, in _export_pdf_with_reportlab_enhanced\nbriefs-api    |     styles.add(ParagraphStyle(\nbriefs-api    |     ~~~~~~~~~~^^^^^^^^^^^^^^^^\nbriefs-api    |         name='Code',\nbriefs-api    |         ^^^^^^^^^^^^\nbriefs-api    |     ...<5 lines>...\nbriefs-api    |         backColor=HexColor('#f5f5f5')\nbriefs-api    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbriefs-api    |     ))\nbriefs-api    |     ^^\nbriefs-api    |   File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/lib/python3.13/site-packages/reportlab/lib/styles.py\", line 253, in add\nbriefs-api    |     raise KeyError(\"Style '%s' already defined in stylesheet\" % key)\nbriefs-api    | KeyError: \"Style 'Code' already defined in stylesheet\""
            }
          }
        },
        {
          "display": "implement python-only",
          "pastedContents": {}
        },
        {
          "display": "can this be done in pure python without touching the file system or the CLI?",
          "pastedContents": {}
        },
        {
          "display": "does pandoc run on cmomand line>",
          "pastedContents": {}
        },
        {
          "display": "Tell me how this feature could be exploited, since it's generating a PDF on our servers and we don't fully control the input.\n\nBe thorough and think through all vulnerabilities.",
          "pastedContents": {}
        },
        {
          "display": "why does HTML export not seem to be applying the styles?",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "agno_manager.py",
        "models.py",
        "app.py",
        "cli.py",
        "api.py"
      ],
      "exampleFilesGeneratedAt": 1751993350658,
      "hasCompletedProjectOnboarding": true,
      "lastTotalWebSearchRequests": 0,
      "lastCost": 1.5919978,
      "lastAPIDuration": 142101,
      "lastDuration": 3505695,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 4438,
      "lastTotalOutputTokens": 3796,
      "lastTotalCacheCreationInputTokens": 24836,
      "lastTotalCacheReadInputTokens": 559690,
      "lastSessionId": "08979c7f-8e5c-4c14-91a0-fd217d0597ba"
    },
    "/Users/dorkitude/a/scripts/background": {
      "allowedTools": [],
      "history": [
        {
          "display": "run this and keep an eye on it.  if it breaks, fix it and run again.  i'm going to be gone for 3 hours.\n\nuv run scrappy --mode=parse_screenshots",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +36 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "Updating profile: 683f651d2dbe303ec7c69272 (ACwAAA1aqVoBhdEd9wwaacfEpBBfKEBHEvVdD0E)\nSuccessfully updated profile: 683f651d2dbe303ec7c69272\n\n✓ Successfully parsed profile:\n\n============================================================\nLinkedIn Profile Summary\n============================================================\n\nName: Itay Vladomirsky\nHeadline: GTM Leader, Expansion Expert, Biz Dev Lover and Ecosystem Builder\nTitle: VP, Market Expansion at Yotpo\nCompany: Yotpo\nLocation: Tel Aviv, Israel\n\nExperience: 4 position(s)\n\n  Position 1:\n    Title: VP, Market Expansion\n    Company: Yotpo\nTraceback (most recent call last):\n  File \"/Users/dorkitude/a/dev/scrappy-head/.venv/bin/scrappy\", line 10, in <module>\n    sys.exit(run())\n             ^^^^^\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 346, in run\n    run_parse_screenshots(config)\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 322, in run_parse_screenshots\n    total, successful = parser.process_all_profiles(force_reprocess, on_profile_parsed)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/screenshot_parser.py\", line 502, in process_all_profiles\n    on_profile_parsed(updated_profile)\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 320, in on_profile_parsed\n    display_profile_data(profile)\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 197, in display_profile_data\n    if exp.start_date:\n       ^^^^^^^^^^^^^^\nAttributeError: 'Experience' object has no attribute 'start_date'. Did you mean: 'starts_at'?"
            }
          }
        },
        {
          "display": "for work history, list out all the data we parsed.  all the positions etc.  don't skip stuff.",
          "pastedContents": {}
        },
        {
          "display": "great, but now when it's actually parsing i want the same colorful output upon each successful openAI response",
          "pastedContents": {}
        },
        {
          "display": "improve my cli's parse_screenshots mode to have some colorful terminal output including name, bio/headline, title, company, location",
          "pastedContents": {}
        },
        {
          "display": "in that case, just make it every day at 9am",
          "pastedContents": {}
        },
        {
          "display": "please make it every 26 hours, regardless of time",
          "pastedContents": {}
        },
        {
          "display": "explain the crontab line you just made",
          "pastedContents": {}
        },
        {
          "display": "make me a backup_scrappy_head_screenshots.sh that zips up everything in /Users/dorkitude/a/dev/scrappy-head/screenshots and puts then in /Users/dorkitude/Dropbox/backups/scrappy_head_screenshots.zip\n\nrun it every 14 hours at 9am via crontab",
          "pastedContents": {}
        },
        {
          "display": "make finder show dotfiles",
          "pastedContents": {}
        },
        {
          "display": "update this so it doesn't timeout just because the bash command / zipping is taking a while",
          "pastedContents": {}
        },
        {
          "display": "update this so it doesn't timeout just because the bash file is taking a while",
          "pastedContents": {}
        },
        {
          "display": "run it",
          "pastedContents": {}
        },
        {
          "display": "update the script to run the zip stuff as a bash command",
          "pastedContents": {}
        },
        {
          "display": "try expanding it yoursef into a test directory.",
          "pastedContents": {}
        },
        {
          "display": "!python backup_a.py",
          "pastedContents": {}
        },
        {
          "display": "why can't i double-click these zip files in finder?  i get \"unable to expand\"",
          "pastedContents": {}
        },
        {
          "display": "update backup script to make sure the directory never has more than 5 backup files.  it will delete the oldest any time it adds a sixth.",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 9,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastCost": 6.856076199999999,
      "lastAPIDuration": 1150390,
      "lastDuration": 1176238,
      "lastLinesAdded": 231,
      "lastLinesRemoved": 34,
      "lastTotalInputTokens": 72689,
      "lastTotalOutputTokens": 22312,
      "lastTotalCacheCreationInputTokens": 158734,
      "lastTotalCacheReadInputTokens": 2008621,
      "lastSessionId": "b72d749b-d021-455d-aee2-211d5651f07d"
    },
    "/Users/dorkitude/a/dev/scrappy-head": {
      "allowedTools": [],
      "history": [
        {
          "display": "i'm getting this when i try to crawl:\n\naditya | [2025-07-09 17:41:37] aditya.khargonekar@gmail.com has used 400 of 400 quota in the last 24 hours.   Exiting...\n\ncan you perform some mongo queries to confirm this?",
          "pastedContents": {}
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +28 lines]\n\nplease look at models and make sure you're calling the right stuff here...\n\n",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "Connecting to MongoDB at localhost:27017/scrappy_head\nSuccessfully connected to MongoDB\n\n[248/6741] Processing: ACwAAAA04-UBDUfL_-fpVKbiHejMgIq41IC6DaI...\nProcessing: ACwAAAA04-UBDUfL_-fpVKbiHejMgIq41IC6DaI...\n\n[304/6741] Processing: ACwAAAA6i-YBXive0KFvGZR3xadjuN4lPrPVCNQ...\nProcessing: ACwAAAA6i-YBXive0KFvGZR3xadjuN4lPrPVCNQ...\n\n[404/6741] Processing: ACwAAAADLsYBvZjSQU6ac9OMKFi0vlBYC7Q8iwM...\nProcessing: ACwAAAADLsYBvZjSQU6ac9OMKFi0vlBYC7Q8iwM...\n\n[450/6741] Processing: ACwAAAAFqkkBH4e7busXmNdqyZQmbC25hWvemoc...\nProcessing: ACwAAAAFqkkBH4e7busXmNdqyZQmbC25hWvemoc...\nTraceback (most recent call last):\n  File \"/Users/dorkitude/a/dev/scrappy-head/.venv/bin/scrappy\", line 10, in <module>\n    sys.exit(run())\n             ^^^^^\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 370, in run\n    run_parse_screenshots(config)\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 341, in run_parse_screenshots\n    total, successful = parser.process_all_profiles(force_reprocess, on_profile_parsed, succinct)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/screenshot_parser.py\", line 530, in process_all_profiles\n    on_profile_parsed(updated_profile)\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 338, in on_profile_parsed\n    linkedin_url = profile.public_linkedin_url or profile.sales_navigator_profile_url or \"No URL\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'LinkedinProfile' object has no attribute 'public_linkedin_url'"
            }
          }
        },
        {
          "display": "[Pasted text #1 +18 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "th screenshot (ACwAACK5U5UBI4L-wK60cmukJcC4N6tOPLUWOVw_20250708_125815.png) and HTML file (ACwAACK5U5UBI4L-wK60cmukJcC4N6tOPLUWOVw_20250708_125815.html)\nsean   | [2025-07-08 12:58:17] [seanocardenas@gmail.com] [2 of 33] Scraping profile (created: 2025-05-07 15:40, search terms: \"CRO\" OR \"Chief Revenue Officer\" OR \"Head of Sales\" OR \"VP Sales\"): https://www.linkedin.com/sales/lead/ACwAAAAoWxQBAcrrFFWzyDJ0VOjQRd5oGtfe61o\nparser | Traceback (most recent call last):\nparser |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/bin/scrappy\", line 10, in <module>\nparser |     sys.exit(run())\nparser |              ^^^^^\nparser |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 370, in run\nparser |     run_parse_screenshots(config)\nparser |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 341, in run_parse_screenshots\nparser |     total, successful = parser.process_all_profiles(force_reprocess, on_profile_parsed, succinct)\nparser |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nparser |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/screenshot_parser.py\", line 530, in process_all_profiles\nparser |     on_profile_parsed(updated_profile)\nparser |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 337, in on_profile_parsed\nparser |     company = profile.employer_name or \"No company\"\nparser |               ^^^^^^^^^^^^^^^^^^^^^\nparser | AttributeError: 'LinkedinProfile' object has no attribute 'employer_name'\nparser |\nparser | Exited with code 1"
            }
          }
        },
        {
          "display": "I don't want it to print the already-processed ones, only the ones that we're actually processing...",
          "pastedContents": {}
        },
        {
          "display": "in succinct mode, add a print line when it starts processing a profile.  then when it's done, in the \"Parsed\" line it prints, have it also print me their title, company, and a link to the profile",
          "pastedContents": {}
        },
        {
          "display": "commit all my changes",
          "pastedContents": {}
        },
        {
          "display": "let's get rid of this stuff too in succinct mode:\n\nparser | Processing profile 1/6599: ACwAAA-3E8AB7B3doF6DBJvCj1B7xSbUlZho0mk\nparser | Profile ACwAAA-3E8AB7B3doF6DBJvCj1B7xSbUlZho0mk already parsed. Skipping.",
          "pastedContents": {}
        },
        {
          "display": "add a --succinct setting to parse-screenshots that doesn't fill the log with quite so much chatter, and update the procfile to use that.  also put it in the README.",
          "pastedContents": {}
        },
        {
          "display": "don't force them to reprocess",
          "pastedContents": {}
        },
        {
          "display": "add to overmind another process that does the parse-screenshots stuff",
          "pastedContents": {}
        },
        {
          "display": "I want it to fully stop all crawling if it hits the consecutive failure limit.  it seems to keep going.",
          "pastedContents": {}
        },
        {
          "display": "sometimes the linkedin_scraper.py (CLI in crawl mode) freezes up with \"Failed to load profile after 3 attempts\"\n\n\nI think when that happens twice, we should just kill the process",
          "pastedContents": {}
        },
        {
          "display": "move the script into ~/a/scripts/background, and update contrab accordingly",
          "pastedContents": {}
        },
        {
          "display": "update the cron so this runs every morning at 8:54 AM",
          "pastedContents": {}
        },
        {
          "display": "fix the backup's filename convention to match how the dates work on the other backups in the backups directory.",
          "pastedContents": {}
        },
        {
          "display": "can you just update the procfile so it knows they can die?",
          "pastedContents": {}
        },
        {
          "display": "instead of changing the procfile, can we just tell overmind it's okay to let the processes die",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #18: mongodump on a cron every day, keep most recent 2 in ~/Dropbox/backups\n\n## Status: in_progress\n\n## Working Directory: /Users/dorkitude/a/dev/scrappy-head\n\n## Description:\n\n\n## Context:\n\n\n## Steps:\nNo steps defined yet.\n\n---\n<README>\n# Tutu - Task Management System\n\nTutu is a task management system designed to help track work items and their associated steps. It integrates seamlessly with Claude Code to provide persistent task tracking across sessions.\n\n## Installation\n\n```bash\n# Install using pip or uv\nuv pip install -e .\n```\n\n## Basic Usage\n\n### Managing Items\n\nCreate a new item:\n```bash\ntutu add\n```\nThis will start an interactive session prompting for title, description, and context.\n\nList all items:\n```bash\ntutu list\n```\n\nView item details:\n```bash\ntutu status <item_id>\n```\n\nMark an item as complete:\n```bash\ntutu done <item_id>\n```\n\nEdit an existing item:\n```bash\ntutu edit <item_id>\n```\nThis will start an interactive session to update the title, description, and context.\n\nStart a Claude Code session with item context:\n```bash\ntutu start <item_id>\n```\n\n### Managing Steps\n\nAdd a step to an item:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nComplete a step:\n```bash\ntutu complete-step <step_id>\n```\n\n## Claude Code Integration\n\nTutu is designed to work with Claude Code. When starting a Claude session with `tutu start`, it will:\n\n1. Prompt you to select an active TutuItem to work on\n2. Inject context about the item and its steps into the Claude session\n3. Provide Claude with instructions on how to track progress using Tutu commands\n\n## Database\n\nTutu uses SQLite to store items and steps locally. The database is created automatically on first use.\n</README>\n\n---\n# Tutu Context for Claude Code\n\nThis file contains the context that gets injected when starting a Claude Code session via `tutu start`.\n\n## Working with TutuItems\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n### Other Useful Commands\n\nList all pending items:\n```bash\ntutu list\n```\n\nEdit the current TutuItem (title, description, context):\n```bash\ntutu edit <item_id>\n```\n\n## Important Instructions for Claude Code\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them. Print the name of the step you completed, plus a checkmark emoji.\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n6. **Tutu location**: The absolute path to tutu is `/Users/dorkitude/Library/Python/3.11/bin/tutu`\n7. **Print steps after updates**: Always run `tutu status <item_id>` after adding or completing steps to show the current progress\n\n## Example Workflow\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 --description \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\n## Integration with Claude's Todo System\n\nRemember that when using Claude Code's built-in Todo system, you should mirror those todos as TutuItem steps. This ensures that progress is tracked both in Claude's session and in the persistent Tutu database.\n",
          "pastedContents": {}
        },
        {
          "display": "overmind start\n\nwhy does it die\n\nif only one person's at quota i'm okay with running others.",
          "pastedContents": {}
        },
        {
          "display": "why can't i overmind start here:\n\n\n[Pasted text #1 +91 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "kyle   | Found existing user with email: kyle@kylewild.com\nkyle   | [2025-06-16 13:35:38] kyle@kylewild.com has used 373 of 400 quota in the last 24 hours.   Will crawl 27 profiles.\nkyle   | [2025-06-16 13:35:38] Initializing browser...\nsean   | [2025-06-16 13:35:38] Browser initialized, starting login...\nkyle   | [2025-06-16 13:35:39] Browser initialized, starting login...\naditya |\naditya | Exited with code 0\nsean   | Interrupting...\nkyle   | Interrupting...\nsean   | Traceback (most recent call last):\nsean   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/bin/scrappy\", line 10, in <module>\nkyle   | Traceback (most recent call last):\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/bin/scrappy\", line 10, in <module>\nkyle   |     sys.exit(run())\nsean   |     sys.exit(run())\nsean   |              ^^^^^\nsean   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 444, in run\nkyle   |              ^^^^^\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 444, in run\nkyle   |     run_crawl(scraper)\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 76, in run_crawl\nkyle   |     scraper.run_crawl()\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 128, in run_crawl\nsean   |     run_crawl(scraper)\nsean   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 76, in run_crawl\nsean   |     scraper.run_crawl()\nsean   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 128, in run_crawl\nkyle   |     self.login()\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 345, in login\nsean   |     self.login()\nsean   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 345, in login\nsean   |     self.page.goto(login_url, wait_until=\"domcontentloaded\", timeout=self.navigation_timeout * 1000)\nsean   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_generated.py\", line 9020, in goto\nkyle   |     self.page.goto(login_url, wait_until=\"domcontentloaded\", timeout=self.navigation_timeout * 1000)\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_generated.py\", line 9020, in goto\nsean   |     self._sync(\nsean   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py\", line 113, in _sync\nkyle   |     self._sync(\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py\", line 113, in _sync\nkyle   |     self._dispatcher_fiber.switch()\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_context_manager.py\", line 56, in greenlet_main\nsean   |     self._dispatcher_fiber.switch()\nsean   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_context_manager.py\", line 56, in greenlet_main\nsean   |     self._loop.run_until_complete(self._connection.run_as_sync())\nsean   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 637, in run_until_complete\nsean   |     self.run_forever()\nsean   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 604, in run_forever\nsean   |     self._run_once()\nsean   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 1873, in _run_once\nkyle   |     self._loop.run_until_complete(self._connection.run_as_sync())\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 637, in run_until_complete\nkyle   |     self.run_forever()\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 604, in run_forever\nsean   |     event_list = self._selector.select(timeout)\nsean   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsean   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/selectors.py\", line 561, in select\nkyle   |     self._run_once()\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 1873, in _run_once\nsean   |     kev_list = self._selector.control(None, max_ev, timeout)\nsean   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsean   | KeyboardInterrupt\nkyle   |     event_list = self._selector.select(timeout)\nkyle   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/selectors.py\", line 561, in select\nkyle   |     kev_list = self._selector.control(None, max_ev, timeout)\nkyle   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nkyle   | KeyboardInterrupt\nsean   | Task was destroyed but it is pending!\nsean   | task: <Task pending name='Task-7' coro=<Page.goto() done, defined at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_page.py:545> wait_for=<Future pending cb=[Task.task_wakeup()]> cb=[SyncBase._sync.<locals>.<lambda>() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py:111, ProtocolCallback.__init__.<locals>.cb() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_connection.py:198]>\nsean   | Exception ignored in: <function BaseSubprocessTransport.__del__ at 0x1058c2a20>\nsean   | Traceback (most recent call last):\nsean   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 126, in __del__\nsean   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 104, in close\nsean   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 756, in close\nsean   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 742, in write_eof\nsean   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 758, in call_soon\nsean   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 519, in _check_closed\nsean   | RuntimeError: Event loop is closed\nsean   | Exited with code 130\nkyle   | Task was destroyed but it is pending!\nkyle   | task: <Task pending name='Task-7' coro=<Page.goto() done, defined at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_page.py:545> wait_for=<Future pending cb=[Task.task_wakeup()]> cb=[SyncBase._sync.<locals>.<lambda>() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py:111, ProtocolCallback.__init__.<locals>.cb() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_connection.py:198]>\nkyle   | Exception ignored in: <function BaseSubprocessTransport.__del__ at 0x1019baa20>\nkyle   | Traceback (most recent call last):\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 126, in __del__\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 104, in close\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 756, in close\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 742, in write_eof\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 758, in call_soon\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 519, in _check_closed\nkyle   | RuntimeError: Event loop is closed\nkyle   | Exited with code 130\n[2]  + terminated  ( while true; do; _set_title \"🧠 🧠 Overmind @ $folder 🧠 🧠\")"
            }
          }
        },
        {
          "display": "make it 25",
          "pastedContents": {}
        },
        {
          "display": "crawl mode keeps hanging between pageviews.   add 10s more delay.",
          "pastedContents": {}
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "you can just base it on @scrappy_head/models.py ",
          "pastedContents": {}
        },
        {
          "display": "make a script to export all the profiles into a CSV.",
          "pastedContents": {}
        },
        {
          "display": "continue",
          "pastedContents": {}
        },
        {
          "display": "what do you mean it timed out?   were you not seeing output?",
          "pastedContents": {}
        },
        {
          "display": "rather i want the latest-updated that's been properly parsed from sfreenshot parser",
          "pastedContents": {}
        },
        {
          "display": "give me a script that lets me query mongo via command line, just show me the most-recently-added linkedin profile",
          "pastedContents": {}
        },
        {
          "display": "> run this and keep an eye on it.  if it breaks, fix it and run again.  i'm going to be gone for 3 hours.\n\n  uv run scrappy --mode=parse_screenshots",
          "pastedContents": {}
        },
        {
          "display": "is there a way to tell overmind that any proc can die, not have to name all of them",
          "pastedContents": {}
        },
        {
          "display": "gs",
          "pastedContents": {}
        },
        {
          "display": "update procfile so it knows that all of them can die",
          "pastedContents": {}
        },
        {
          "display": "It seems that Sean's scraper exiting is stopping the others.",
          "pastedContents": {}
        },
        {
          "display": "!git status",
          "pastedContents": {}
        },
        {
          "display": "what happened here?  i just typed overmind start.\n\n[Pasted text #1 +125 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "dorkitude ~/a/dev/scrappy-head [main] $ os\n[2] 55331\nsystem | Tmux socket name: overmind-scrappy-head-h8I4Dnk1dVmlYyEJxO2vG\nsystem | Tmux session ID: scrappy-head\nsystem | Listening at ./.overmind.sock\nkyle   | Started with pid 55340...\naditya | Started with pid 55339...\nsean   | Started with pid 55338...\nsean   | Connecting to MongoDB at localhost:27017/scrappy_head\nsean   | Successfully connected to MongoDB\naditya | Connecting to MongoDB at localhost:27017/scrappy_head\naditya | Successfully connected to MongoDB\nkyle   | Connecting to MongoDB at localhost:27017/scrappy_head\nkyle   | Successfully connected to MongoDB\nsean   | Configuration:\nsean   |   Mode: crawl\nsean   |   Username: seanocardenas@gmail.com\nsean   |   Headless Mode: False\nsean   |   Debug: False\nsean   | Found existing user with email: seanocardenas@gmail.com\nsean   | [2025-06-15 07:32:01] seanocardenas@gmail.com has used 550 of 550 quota in the last 24 hours.   Exiting...\naditya | Configuration:\naditya |   Mode: crawl\naditya |   Username: aditya.khargonekar@gmail.com\naditya |   Headless Mode: False\naditya |   Debug: False\naditya | Found existing user with email: aditya.khargonekar@gmail.com\naditya | [2025-06-15 07:32:01] aditya.khargonekar@gmail.com has used 502 of 550 quota in the last 24 hours.   Will crawl 48 profiles.\naditya | [2025-06-15 07:32:01] Initializing browser...\nkyle   | Configuration:\nkyle   |   Mode: crawl\nkyle   |   Username: kyle@kylewild.com\nkyle   |   Headless Mode: False\nkyle   |   Debug: False\nkyle   | Found existing user with email: kyle@kylewild.com\nkyle   | [2025-06-15 07:32:01] kyle@kylewild.com has used 549 of 550 quota in the last 24 hours.   Will crawl 1 profiles.\nkyle   | [2025-06-15 07:32:01] Initializing browser...\nkyle   | [2025-06-15 07:32:02] Browser initialized, starting login...\naditya | [2025-06-15 07:32:02] Browser initialized, starting login...\nsean   | Exited with code 0\naditya | Interrupting...\nkyle   | Interrupting...\nkyle   | Traceback (most recent call last):\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/bin/scrappy\", line 10, in <module>\naditya | Traceback (most recent call last):\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/bin/scrappy\", line 10, in <module>\nkyle   |     sys.exit(run())\nkyle   |              ^^^^^\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 281, in run\nkyle   |     run_crawl(scraper)\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 72, in run_crawl\nkyle   |     scraper.run_crawl()\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 128, in run_crawl\naditya |     sys.exit(run())\naditya |              ^^^^^\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 281, in run\naditya |     run_crawl(scraper)\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 72, in run_crawl\naditya |     scraper.run_crawl()\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 128, in run_crawl\naditya |     self.login()\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 345, in login\nkyle   |     self.login()\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 345, in login\nkyle   |     self.page.goto(login_url, wait_until=\"domcontentloaded\", timeout=self.navigation_timeout * 1000)\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_generated.py\", line 9020, in goto\naditya |     self.page.goto(login_url, wait_until=\"domcontentloaded\", timeout=self.navigation_timeout * 1000)\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_generated.py\", line 9020, in goto\naditya |     self._sync(\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py\", line 113, in _sync\naditya |     self._dispatcher_fiber.switch()\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_context_manager.py\", line 56, in greenlet_main\nkyle   |     self._sync(\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py\", line 113, in _sync\naditya |     self._loop.run_until_complete(self._connection.run_as_sync())\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 637, in run_until_complete\nkyle   |     self._dispatcher_fiber.switch()\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_context_manager.py\", line 56, in greenlet_main\naditya |     self.run_forever()\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 604, in run_forever\nkyle   |     self._loop.run_until_complete(self._connection.run_as_sync())\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 637, in run_until_complete\naditya |     self._run_once()\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 1873, in _run_once\nkyle   |     self.run_forever()\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 604, in run_forever\naditya |     event_list = self._selector.select(timeout)\naditya |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/selectors.py\", line 561, in select\nkyle   |     self._run_once()\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 1873, in _run_once\naditya |     kev_list = self._selector.control(None, max_ev, timeout)\naditya |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\naditya | KeyboardInterrupt\nkyle   |     event_list = self._selector.select(timeout)\nkyle   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/selectors.py\", line 561, in select\nkyle   |     kev_list = self._selector.control(None, max_ev, timeout)\nkyle   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nkyle   | KeyboardInterrupt\naditya | Task was destroyed but it is pending!\naditya | task: <Task pending name='Task-7' coro=<Page.goto() done, defined at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_page.py:545> wait_for=<Future pending cb=[Task.task_wakeup()]> cb=[SyncBase._sync.<locals>.<lambda>() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py:111, ProtocolCallback.__init__.<locals>.cb() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_connection.py:198]>\naditya | Exception ignored in: <function BaseSubprocessTransport.__del__ at 0x1015e6980>\naditya | Traceback (most recent call last):\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 126, in __del__\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 104, in close\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 756, in close\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 742, in write_eof\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 758, in call_soon\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 519, in _check_closed\naditya | RuntimeError: Event loop is closed\nkyle   | Task was destroyed but it is pending!\nkyle   | task: <Task pending name='Task-7' coro=<Page.goto() done, defined at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_page.py:545> wait_for=<Future pending cb=[Task.task_wakeup()]> cb=[SyncBase._sync.<locals>.<lambda>() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py:111, ProtocolCallback.__init__.<locals>.cb() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_connection.py:198]>\nkyle   | Exception ignored in: <function BaseSubprocessTransport.__del__ at 0x103d06980>\nkyle   | Traceback (most recent call last):\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 126, in __del__\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 104, in close\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 756, in close\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 742, in write_eof\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 758, in call_soon\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 519, in _check_closed\nkyle   | RuntimeError: Event loop is closed\nkyle   | Exited with code 130\naditya | Exited with code 130\n[2]  + terminated  ( while true; do; _set_title \"🧠 🧠 Overmind @ $folder 🧠 🧠\")\ndorkitude ~/a/dev/scrappy-head [main] $"
            }
          }
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "what happened here\n\n[Pasted text #1 +126 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "\ndorkitude ~/a/dev/scrappy-head [main] $ os\n[2] 54128\nsystem | Tmux socket name: overmind-scrappy-head-1HQTFDbro7iQgVQnnv-wd\nsystem | Tmux session ID: scrappy-head\nsystem | Listening at ./.overmind.sock\naditya | Started with pid 54136...\nkyle   | Started with pid 54137...\nsean   | Started with pid 54135...\njsean   | Connecting to MongoDB at localhost:27017/scrappy_head\nsean   | Successfully connected to MongoDB\naditya | Connecting to MongoDB at localhost:27017/scrappy_head\naditya | Successfully connected to MongoDB\nkyle   | Connecting to MongoDB at localhost:27017/scrappy_head\nkyle   | Successfully connected to MongoDB\nsean   | Configuration:\nsean   |   Mode: crawl\nsean   |   Username: seanocardenas@gmail.com\nsean   |   Headless Mode: False\nsean   |   Debug: False\nsean   | Found existing user with email: seanocardenas@gmail.com\nsean   | [2025-06-15 07:31:05] seanocardenas@gmail.com has used 550 of 550 quota in the last 24 hours.   Exiting...\n^R\naditya | Configuration:\naditya |   Mode: crawl\naditya |   Username: aditya.khargonekar@gmail.com\naditya |   Headless Mode: False\naditya |   Debug: False\naditya | Found existing user with email: aditya.khargonekar@gmail.com\naditya | [2025-06-15 07:31:05] aditya.khargonekar@gmail.com has used 502 of 550 quota in the last 24 hours.   Will crawl 48 profiles.\naditya | [2025-06-15 07:31:05] Initializing browser...\nkyle   | Configuration:\nkyle   |   Mode: crawl\nkyle   |   Username: kyle@kylewild.com\nkyle   |   Headless Mode: False\nkyle   |   Debug: False\nkyle   | Found existing user with email: kyle@kylewild.com\nkyle   | [2025-06-15 07:31:05] kyle@kylewild.com has used 549 of 550 quota in the last 24 hours.   Will crawl 1 profiles.\nkyle   | [2025-06-15 07:31:05] Initializing browser...\naditya | [2025-06-15 07:31:05] Browser initialized, starting login...\nkyle   | [2025-06-15 07:31:05] Browser initialized, starting login...\nsean   | Exited with code 0\naditya | Interrupting...\nkyle   | Interrupting...\naditya | Traceback (most recent call last):\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/bin/scrappy\", line 10, in <module>\nkyle   | Traceback (most recent call last):\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/bin/scrappy\", line 10, in <module>\naditya |     sys.exit(run())\naditya |              ^^^^^\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 281, in run\nkyle   |     sys.exit(run())\nkyle   |              ^^^^^\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 281, in run\naditya |     run_crawl(scraper)\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 72, in run_crawl\naditya |     scraper.run_crawl()\nkyle   |     run_crawl(scraper)\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 72, in run_crawl\nkyle   |     scraper.run_crawl()\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 128, in run_crawl\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 128, in run_crawl\nkyle   |     self.login()\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 345, in login\naditya |     self.login()\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 345, in login\nkyle   |     self.page.goto(login_url, wait_until=\"domcontentloaded\", timeout=self.navigation_timeout * 1000)\naditya |     self.page.goto(login_url, wait_until=\"domcontentloaded\", timeout=self.navigation_timeout * 1000)\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_generated.py\", line 9020, in goto\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_generated.py\", line 9020, in goto\naditya |     self._sync(\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py\", line 113, in _sync\naditya |     self._dispatcher_fiber.switch()\naditya |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_context_manager.py\", line 56, in greenlet_main\naditya |     self._loop.run_until_complete(self._connection.run_as_sync())\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 637, in run_until_complete\naditya |     self.run_forever()\nkyle   |     self._sync(\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py\", line 113, in _sync\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 604, in run_forever\nkyle   |     self._dispatcher_fiber.switch()\nkyle   |   File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_context_manager.py\", line 56, in greenlet_main\naditya |     self._run_once()\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 1873, in _run_once\nkyle   |     self._loop.run_until_complete(self._connection.run_as_sync())\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 637, in run_until_complete\nkyle   |     self.run_forever()\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 604, in run_forever\naditya |     event_list = self._selector.select(timeout)\nkyle   |     self._run_once()\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 1873, in _run_once\naditya |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/selectors.py\", line 561, in select\naditya |     kev_list = self._selector.control(None, max_ev, timeout)\naditya |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\naditya | KeyboardInterrupt\nkyle   |     event_list = self._selector.select(timeout)\nkyle   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/selectors.py\", line 561, in select\nkyle   |     kev_list = self._selector.control(None, max_ev, timeout)\nkyle   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nkyle   | KeyboardInterrupt\naditya | Task was destroyed but it is pending!\naditya | task: <Task pending name='Task-7' coro=<Page.goto() done, defined at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_page.py:545> wait_for=<Future pending cb=[Task.task_wakeup()]> cb=[SyncBase._sync.<locals>.<lambda>() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py:111, ProtocolCallback.__init__.<locals>.cb() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_connection.py:198]>\naditya | Exception ignored in: <function BaseSubprocessTransport.__del__ at 0x105782980>\naditya | Traceback (most recent call last):\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 126, in __del__\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 104, in close\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 756, in close\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 742, in write_eof\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 758, in call_soon\naditya |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 519, in _check_closed\naditya | RuntimeError: Event loop is closed\naditya | Exited with code 130\nkyle   | Task was destroyed but it is pending!\nkyle   | task: <Task pending name='Task-7' coro=<Page.goto() done, defined at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_page.py:545> wait_for=<Future pending cb=[Task.task_wakeup()]> cb=[SyncBase._sync.<locals>.<lambda>() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py:111, ProtocolCallback.__init__.<locals>.cb() at /Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_connection.py:198]>\nkyle   | Exception ignored in: <function BaseSubprocessTransport.__del__ at 0x101ab2980>\nkyle   | Traceback (most recent call last):\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 126, in __del__\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_subprocess.py\", line 104, in close\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 756, in close\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/unix_events.py\", line 742, in write_eof\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 758, in call_soon\nkyle   |   File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 519, in _check_closed\nkyle   | RuntimeError: Event loop is closed\nkyle   | Exited with code 130\n[2]  + terminated  ( while true; do; _set_title \"🧠 🧠 Overmind @ $folder 🧠 🧠\")"
            }
          }
        },
        {
          "display": "disable this sean   | INFO     [telemetry] Anonymized telemetry enabled. See https://docs.browser-use.com/development/telemetry for more information.",
          "pastedContents": {}
        },
        {
          "display": "update daily crawl quota to be 550",
          "pastedContents": {}
        },
        {
          "display": "make me an overmind procfile that does three things\n\nuv run scrappy --mode crawl --user=X\n\nwhere X is\n\nseanocardenas@gmail.com\naditya.khargonekar@gmail.com\nkyle@kylewild.com",
          "pastedContents": {}
        },
        {
          "display": "why can't i run uv run scrappy --mode=crawl",
          "pastedContents": {}
        },
        {
          "display": "getting this when the project finally starts to error out:\n\n[Pasted text #1 +12 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "[2025-06-14 22:08:17] [aditya.khargonekar@gmail.com] Saved profile view with screenshot (ACwAAA5CCOgBkrEnrAoaYZx64sIsYzjr5L9z-HQ_20250614_220815.png) and HTML file (ACwAAA5CCOgBkrEnrAoaYZx64sIsYzjr5L9z-HQ_20250614_220815.html)\n[2025-06-14 22:08:17] [aditya.khargonekar@gmail.com] [55 of 500] Scraping profile (created: 2025-06-10 18:45, search terms: \"Charles River Labs\" AND Sales): https://www.linkedin.com/sales/lead/ACwAABU55BEBrGPogPT0JbO73reomVYC7JNPU3o\n[2025-06-14 22:09:17] [aditya.khargonekar@gmail.com] Error scraping profile: 'LinkedInScraper' object has no attribute 'logger'\n[2025-06-14 22:09:17] [aditya.khargonekar@gmail.com] [55 of 500] Scraping profile (created: 2025-06-10 18:45, search terms: \"Charles River Labs\" AND Sales): https://www.linkedin.com/sales/lead/ACwAAAX0nJEB3wI2nuQdy8ibcMuFa5BSwiIPN8w\n[2025-06-14 22:10:17] [aditya.khargonekar@gmail.com] Error scraping profile: 'LinkedInScraper' object has no attribute 'logger'\n[2025-06-14 22:10:17] [aditya.khargonekar@gmail.com] [55 of 500] Scraping profile (created: 2025-06-10 18:45, search terms: \"Charles River Labs\" AND Sales): https://www.linkedin.com/sales/lead/ACwAACzW8rQBVP00HgM8fa3pg9BJQHkI9yKqS7E\n[2025-06-14 22:11:17] [aditya.khargonekar@gmail.com] Error scraping profile: 'LinkedInScraper' object has no attribute 'logger'\n[2025-06-14 22:11:17] [aditya.khargonekar@gmail.com] [55 of 500] Scraping profile (created: 2025-06-10 18:45, search terms: \"Charles River Labs\" AND Sales): https://www.linkedin.com/sales/lead/ACwAAACPuEABtbKI6v26j_ZAMeN61EybfS7D7R8\n[2025-06-14 22:12:17] [aditya.khargonekar@gmail.com] Error scraping profile: 'LinkedInScraper' object has no attribute 'logger'\n[2025-06-14 22:12:17] [aditya.khargonekar@gmail.com] [55 of 500] Scraping profile (created: 2025-06-10 18:45, search terms: \"Charles River Labs\" AND Sales): https://www.linkedin.com/sales/lead/ACwAAADHa_QBHIXZ1ZO7K_FWrvHavNE1-JpLR74\n[2025-06-14 22:13:17] [aditya.khargonekar@gmail.com] Error scraping profile: 'LinkedInScraper' object has no attribute 'logger'\n[2025-06-14 22:13:17] [aditya.khargonekar@gmail.com] [55 of 500] Scraping profile (created: 2025-06-10 18:45, search terms: \"Charles River Labs\" AND Sales): https://www.linkedin.com/sales/lead/ACwAAAK8FFsBY0KspCLaUYaiTpEmwzvipXIk8ms\n[2025-06-14 22:14:17] [aditya.khargonekar@gmail.com] Error scraping profile: 'LinkedInScraper' object has no attribute 'logger'"
            }
          }
        },
        {
          "display": "dorkitude ~/a/dev/scrappy-head [main] $ uv run scrappy --mode=crawl\nTraceback (most recent call last):\n  File \"/Users/dorkitude/a/dev/scrappy-head-old/.venv/bin/scrappy\", line 4, in <module>\n    from scrappy_head.main import cli_main\nModuleNotFoundError: No module named 'scrappy_head'",
          "pastedContents": {}
        },
        {
          "display": "continue",
          "pastedContents": {}
        },
        {
          "display": "okay do that for me then",
          "pastedContents": {}
        },
        {
          "display": "why can't i run git diff",
          "pastedContents": {}
        },
        {
          "display": "!git diff",
          "pastedContents": {}
        },
        {
          "display": "!Git diff",
          "pastedContents": {}
        },
        {
          "display": "!git status",
          "pastedContents": {}
        },
        {
          "display": "move CAPTCHA delay down from 30s to 1s",
          "pastedContents": {}
        },
        {
          "display": "scrappy crawl works fine for a while, but then it sometimes gets stuck like this:\n\n\n[Pasted text #1 +17 lines]\n\npage never seems to load",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "\n[2025-06-14 20:55:01] [kyle@kylewild.com] Saved profile view with screenshot (ACwAACFPoTIBd1Qx6RZLGTRfqHJirYhLn3I60Ek_20250614_205459.png) and HTML file (ACwAACFPoTIBd1Qx6RZLGTRfqHJirYhLn3I60Ek_20250614_205459.html)\n[2025-06-14 20:55:01] [kyle@kylewild.com] [58 of 500] Scraping profile (created: 2025-06-10 18:28, search terms: Netdocuments sales): https://www.linkedin.com/sales/lead/ACwAABtJecYBllb9WsbfE4A_oI12HMwBJ5a2jMo\n[2025-06-14 20:57:31] [kyle@kylewild.com] Error scraping profile: Page.goto: Timeout 150000ms exceeded.\nCall log:\n  - navigating to \"https://www.linkedin.com/sales/lead/ACwAABtJecYBllb9WsbfE4A_oI12HMwBJ5a2jMo\", waiting until \"load\"\n\n[2025-06-14 20:57:31] [kyle@kylewild.com] [58 of 500] Scraping profile (created: 2025-06-10 18:28, search terms: Netdocuments sales): https://www.linkedin.com/sales/lead/ACwAABhhzxQBFUxD3Ek9q5L29xAfrGqI3kLGje4\n[2025-06-14 21:00:01] [kyle@kylewild.com] Error scraping profile: Page.goto: Timeout 150000ms exceeded.\nCall log:\n  - navigating to \"https://www.linkedin.com/sales/lead/ACwAABhhzxQBFUxD3Ek9q5L29xAfrGqI3kLGje4\", waiting until \"load\"\n\n[2025-06-14 21:00:01] [kyle@kylewild.com] [58 of 500] Scraping profile (created: 2025-06-10 18:28, search terms: Netdocuments sales): https://www.linkedin.com/sales/lead/ACwAACjBd4gBMF26r5al-5IIKS-gO2niz2agwuA\n[2025-06-14 21:02:31] [kyle@kylewild.com] Error scraping profile: Page.goto: Timeout 150000ms exceeded.\nCall log:\n  - navigating to \"https://www.linkedin.com/sales/lead/ACwAACjBd4gBMF26r5al-5IIKS-gO2niz2agwuA\", waiting until \"load\"\n\n[2025-06-14 21:02:31] [kyle@kylewild.com] [58 of 500] Scraping profile (created: 2025-06-10 18:28, search terms: Netdocuments sa"
            }
          }
        },
        {
          "display": "update README to say how to run it just with uv run scrappy",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +49 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "dorkitude ~/a/dev/scrappy-head [main] $ uv run playwright install\ndorkitude ~/a/dev/scrappy-head [main] $ uv run scrappy --mode=crawl --username=kyle@kylewild.com\nConnecting to MongoDB at localhost:27017/scrappy_head\nSuccessfully connected to MongoDB\nINFO     [telemetry] Anonymized telemetry enabled. See https://docs.browser-use.com/development/telemetry for more information.\nConfiguration:\n  Mode: crawl\n  Username: kyle@kylewild.com\n  Headless Mode: False\n  Debug: False\nFound existing user with email: kyle@kylewild.com\n[2025-06-14 20:46:20] kyle@kylewild.com has used 0 of 500 quota in the last 24 hours.   Will crawl 500 profiles.\n[2025-06-14 20:46:20] Initializing browser...\nTraceback (most recent call last):\n  File \"/Users/dorkitude/a/dev/scrappy-head/.venv/bin/scrappy\", line 10, in <module>\n    sys.exit(cli_main())\n             ^^^^^^^^^^\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/main.py\", line 14, in cli_main\n    run()\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 275, in run\n    run_crawl(scraper)\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/cli.py\", line 72, in run_crawl\n    scraper.run_crawl()\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 120, in run_crawl\n    self.initialize_browser()\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/scraper/linkedin_scraper.py\", line 272, in initialize_browser\n    browser = playwright.chromium.launch(headless=self.headless)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/sync_api/_generated.py\", line 14493, in launch\n    self._sync(\n  File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_browser_type.py\", line 96, in launch\n    Browser, from_channel(await self._channel.send(\"launch\", params))\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/a/dev/scrappy-head/.venv/lib/python3.11/site-packages/playwright/_impl/_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nplaywright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /Users/dorkitude/Library/Caches/ms-playwright/chromium-1161/chrome-mac/Chromium.app/Contents/MacOS/Chromium\n╔════════════════════════════════════════════════════════════╗\n║ Looks like Playwright was just installed or updated.       ║\n║ Please run the following command to download new browsers: ║\n║                                                            ║\n║     playwright install                                     ║\n║                                                            ║\n║ <3 Playwright Team                                         ║\n╚════════════════════════════════════════════════════════════╝"
            }
          }
        },
        {
          "display": "uv run scrappy --mode=crawl --user=kyle@kylewild.com",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +23 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "dorkitude ~/a/dev/scrappy-head [main] $ uv run scrappy --mode=crawl\nConnecting to MongoDB at localhost:27017/scrappy_head\nSuccessfully connected to MongoDB\nINFO     [telemetry] Anonymized telemetry enabled. See https://docs.browser-use.com/development/telemetry for more information.\nINFO     [scrappy_head.main] Starting Scrappy Head - LinkedIn Sales Navigator Scraper\nINFO     [scrappy_head.main] Initializing browser...\nERROR    [scrappy_head.main] Unhandled exception: 'credentials'\nTraceback (most recent call last):\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/main.py\", line 55, in cli_main\n    return asyncio.run(main())\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/runners.py\", line 190, in run\n    return runner.run(main)\n           ^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/runners.py\", line 118, in run\n    return self._loop.run_until_complete(task)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/.pyenv/versions/3.11.0/lib/python3.11/asyncio/base_events.py\", line 650, in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n  File \"/Users/dorkitude/a/dev/scrappy-head/scrappy_head/main.py\", line 40, in main\n    logger.info(f\"Logging in as {config['credentials']['username']}...\")\n                                 ~~~~~~^^^^^^^^^^^^^^^\nKeyError: 'credentials'"
            }
          }
        },
        {
          "display": "doesn't work",
          "pastedContents": {}
        },
        {
          "display": "load the CLI into pyproject so i can just run \"uv run scrappy\"",
          "pastedContents": {}
        },
        {
          "display": "tell me how large each of these folders is",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 5,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "src/scraper/linkedin_scraper.py",
        "src/cli.py",
        "src/models.py",
        "src/utils.py",
        "src/main.py"
      ],
      "exampleFilesGeneratedAt": 1752001131494,
      "lastTotalWebSearchRequests": 0,
      "lastCost": 1.3138014000000005,
      "lastAPIDuration": 130245,
      "lastDuration": 154648,
      "lastLinesAdded": 86,
      "lastLinesRemoved": 4,
      "lastTotalInputTokens": 6810,
      "lastTotalOutputTokens": 4280,
      "lastTotalCacheCreationInputTokens": 14252,
      "lastTotalCacheReadInputTokens": 499142,
      "lastSessionId": "1bce0a28-3625-4c0f-b94a-6df04d7af7cc"
    },
    "/Users/dorkitude/Dropbox/backups": {
      "allowedTools": [],
      "history": [
        {
          "display": "!ls",
          "pastedContents": {}
        },
        {
          "display": "unzip this file @users_dorkitude_a_2025_06_13_1108_22.832.zip, check the contents of the unzipped folder, then delete that folder",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 3,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastCost": 1.8286179499999997,
      "lastAPIDuration": 140640,
      "lastDuration": 1519817,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 14307,
      "lastTotalOutputTokens": 1572,
      "lastTotalCacheCreationInputTokens": 64059,
      "lastTotalCacheReadInputTokens": 352199,
      "lastSessionId": "54390ef5-5fad-4a31-aa2b-1387891078d1"
    },
    "/Users/dorkitude/a/dev/cerebro/src/app-frontend": {
      "allowedTools": [],
      "history": [
        {
          "display": "bun secure-install",
          "pastedContents": {}
        },
        {
          "display": "for the manual trigger API, by default it should be a dry run.   i.e. it should just return the (e.g. markdown) results from the Assistant message.  but don't actually send the email unless dry_run=False is sent to the API.",
          "pastedContents": {}
        },
        {
          "display": "I think this should be a root API resource, not a sub-route of account.  just tasks.  update ticket accordingly.",
          "pastedContents": {}
        },
        {
          "display": "help me spec the API\n\nwe basically want users to be able to set up daily, weekly, or monthly tasks.  those tasks will have the same kinds of variables that you'd need to start a new Thread (see threads API, agno manager, etc)\n\nfor now they will have to be Account scoped, since we don't have cross-account (i.e. Org scoped) threads.  that's fine though.\n\ndevelop an implementation plan in markdown, and then paste that into the API ticket we just made.",
          "pastedContents": {}
        },
        {
          "display": "make a new ticket in the project Tasks v1  (email me a thread-response every day at 8am, etc) for tasks API.  another for tasks CLI.\n\nset project to in-progress.\n\nassign the two new tickets to me.\n\nmake a new branch that is linked to both tickets.",
          "pastedContents": {}
        },
        {
          "display": "linting and type checking please",
          "pastedContents": {}
        },
        {
          "display": "bun install",
          "pastedContents": {}
        },
        {
          "display": "!gs",
          "pastedContents": {}
        },
        {
          "display": "bun install",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "hasCompletedProjectOnboarding": true,
      "exampleFiles": [
        "agno_manager.py",
        "app.py",
        "cli.py",
        "models.py",
        "api.py"
      ],
      "exampleFilesGeneratedAt": 1749866913443,
      "lastCost": 0.42098984999999994,
      "lastAPIDuration": 44956,
      "lastDuration": 109066,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 6658,
      "lastTotalOutputTokens": 304,
      "lastTotalCacheCreationInputTokens": 20077,
      "lastTotalCacheReadInputTokens": 19883,
      "lastSessionId": "ff630250-88e5-41de-b392-e04cc2118b53"
    },
    "/Users/dorkitude/a/dev": {
      "allowedTools": [],
      "history": [
        {
          "display": "make a python script that translates this phrase into a language, then back-translates it to English.\n\n",
          "pastedContents": {}
        },
        {
          "display": "get rid of all the egg stuff, just make it a pyproject script so i can run it cleanly",
          "pastedContents": {}
        },
        {
          "display": "mv the screenshots folder over too",
          "pastedContents": {}
        },
        {
          "display": "move the stuff, don't copy it.  screenshots is too huge tbh.",
          "pastedContents": {}
        },
        {
          "display": "i had a correupted git repo in @scrappy-head-old  but i've re-cloned from GH in @scrappy-head and I want to move my changes over into it",
          "pastedContents": {}
        },
        {
          "display": "i dont' see www anywhere in the list tho",
          "pastedContents": {}
        },
        {
          "display": "i don't want the www, i'd rather it just forward to non-www",
          "pastedContents": {}
        },
        {
          "display": "how do i make it so this shows up on dorkitude.com?  I own the domain and it's registered via Dreamhost.",
          "pastedContents": {}
        },
        {
          "display": "get rid of powered by flask",
          "pastedContents": {}
        },
        {
          "display": "!gl",
          "pastedContents": {}
        },
        {
          "display": "!gd",
          "pastedContents": {}
        },
        {
          "display": "why did you write established 2024?",
          "pastedContents": {}
        },
        {
          "display": "go ahead and update Flask to serve an index page\n\n\njust say it's the homepage of kyle wild, maybe add an under construction GIF like in the old days of the web.   add link to my linkedin (kylewild) and x/twitter (dorkitude).\n\nthe theme for all stuff should be based on catppuccin-macchiato.",
          "pastedContents": {}
        },
        {
          "display": "I'm setting up some Advanced properties in my Render setup.\n\nHealth Check Path\nProvide an HTTP endpoint path that Render messages periodically to monitor your service. /healthz\n\nmake sure README knows that path needs to return a health check",
          "pastedContents": {}
        },
        {
          "display": "UPdate @dorkitude.com/README.md with what you currently know about the project.  This will serve as long-term memory for both of us.",
          "pastedContents": {}
        },
        {
          "display": "Root DirectoryOptional\nIf set, Render runs commands from this directory instead of the repository root. Additionally, code changes outside of this directory do not trigger an auto-deploy. Most commonly used with a monorepo.\n\n",
          "pastedContents": {}
        },
        {
          "display": "done",
          "pastedContents": {}
        },
        {
          "display": "render CLI is already installed.",
          "pastedContents": {}
        },
        {
          "display": "Can all of this be done via Claude Code and the Render CLI?",
          "pastedContents": {}
        },
        {
          "display": "add hello world, with a simple template, commit and push.  then switch to helping me deploy on Render",
          "pastedContents": {}
        },
        {
          "display": "Set this project up to use uv for everything.  Then use it to install flask and jinja.",
          "pastedContents": {}
        },
        {
          "display": "Make me a new private github repo, in my personal dorkitude org (not a work org), called dorkitude.com\n\nIt will be a Flask app servicing my personal website and essays, at least at first.",
          "pastedContents": {}
        },
        {
          "display": "honestly I think i'd rather have a Flask server so I can still do dynamic stuff and access backend services.",
          "pastedContents": {}
        },
        {
          "display": "I haven't made a site yet.  I'm just trying to understand the render-compatible tech stacks are.",
          "pastedContents": {}
        },
        {
          "display": "Help me figure out my options for deploying a static site to dorkitude.com, via Render.",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 5,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "backup_a.sh",
        ".zsh_history",
        ".claude.json",
        ".gitignore",
        "backup_a.sh"
      ],
      "exampleFilesGeneratedAt": 1749962928685,
      "lastCost": 0.0076728,
      "lastAPIDuration": 57466,
      "lastDuration": 19590,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 7581,
      "lastTotalOutputTokens": 402,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "8800e03f-4460-4e41-b6a2-38bd773a7c92"
    },
    "/Users/dorkitude/a/dev/dorkitude.com": {
      "allowedTools": [],
      "history": [
        {
          "display": "but i want it to be zsh not bash",
          "pastedContents": {}
        },
        {
          "display": "cloudbrain: aliased to ssh root@cloudbrain.dorkitude.com -i ~/.ssh/id_ed25519id_rsa\n\nhow do I make it so that as soon as it logs in, it runs `scripts/d`",
          "pastedContents": {}
        },
        {
          "display": "when i press backspace it still adds space",
          "pastedContents": {}
        },
        {
          "display": "give me a paste command to do this",
          "pastedContents": {}
        },
        {
          "display": "i switched to zsh and now my backspace key doesn't work",
          "pastedContents": {}
        },
        {
          "display": "how do i switch the dorkitude user to zshrc from bash",
          "pastedContents": {}
        },
        {
          "display": "how to symlink from ~/a to /root/a",
          "pastedContents": {}
        },
        {
          "display": "how do i give new user \"dorkitude\" the highest level of permission that claude code will still accept for skip-permissions",
          "pastedContents": {}
        },
        {
          "display": "how do i get around this:\n\n\"--dangerously-skip-permissions cannot be used with root/sudo privileges for security reasons\"\n",
          "pastedContents": {}
        },
        {
          "display": "okay tell me how to do that for 3 repos.  a, tutu, and dorkitude.com",
          "pastedContents": {}
        },
        {
          "display": "how does it know which key to use for which clone command",
          "pastedContents": {}
        },
        {
          "display": "but i want to do this for several repos on the same user;  how do i make sure it uses the right key for the right repo?",
          "pastedContents": {}
        },
        {
          "display": "how do i make it so it's easy to clone a remo and automatically use that key",
          "pastedContents": {}
        },
        {
          "display": "okay i'm logged into my remote server.  how do I make a deploy key that I can paste into github.",
          "pastedContents": {}
        },
        {
          "display": "command to install claude code",
          "pastedContents": {}
        },
        {
          "display": "how do I ssh into this and point to a specific keyfile ",
          "pastedContents": {}
        },
        {
          "display": "i got a droplet with a reserved IP 209.38.116.215\n\nhow do i map it to cloudbrain.dorkitude.com",
          "pastedContents": {}
        },
        {
          "display": "help me set up 3",
          "pastedContents": {}
        },
        {
          "display": "can i make a credential that only has access to my private orgs, not my work orgs?",
          "pastedContents": {}
        },
        {
          "display": "is a digitalocean droplet a fully functional linux machine?",
          "pastedContents": {}
        },
        {
          "display": "but my mac isn't always on, and i don't always know its IP",
          "pastedContents": {}
        },
        {
          "display": "Could I SSH from my phone and talk to claude code that way?",
          "pastedContents": {}
        },
        {
          "display": "but i need real linux if i'm going to run Claude Code in the same way, no?",
          "pastedContents": {}
        },
        {
          "display": "ideas for how to implement 3",
          "pastedContents": {}
        },
        {
          "display": "but can the render app even commit to github?",
          "pastedContents": {}
        },
        {
          "display": "I'd like a secure way to invoke @dorkweb when i'm on the go on my iphone\n\nideas?",
          "pastedContents": {}
        },
        {
          "display": "deploy",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #6: add a funny GIF under the Writing section on the home page\n\n## Status: in_progress\n\n## Description:\n\n\n## Context:\n\n\n## Steps:\nNo steps defined yet.\n\n---\n<README>\n# Tutu - Task Management System\n\nTutu is a task management system designed to help track work items and their associated steps. It integrates seamlessly with Claude Code to provide persistent task tracking across sessions.\n\n## Installation\n\n```bash\n# Install using pip or uv\nuv pip install -e .\n```\n\n## Basic Usage\n\n### Managing Items\n\nCreate a new item:\n```bash\ntutu add \"Description of the task\"\n```\n\nList all items:\n```bash\ntutu list\n```\n\nView item details:\n```bash\ntutu status <item_id>\n```\n\nMark an item as complete:\n```bash\ntutu done <item_id>\n```\n\n### Managing Steps\n\nAdd a step to an item:\n```bash\ntutu add-step <item_id> \"Description of the step\"\n```\n\nComplete a step:\n```bash\ntutu complete-step <step_id>\n```\n\n## Claude Code Integration\n\nTutu is designed to work with Claude Code. When starting a Claude session with `tutu start`, it will:\n\n1. Prompt you to select an active TutuItem to work on\n2. Inject context about the item and its steps into the Claude session\n3. Provide Claude with instructions on how to track progress using Tutu commands\n\n## Database\n\nTutu uses SQLite to store items and steps locally. The database is created automatically on first use.\n</README>\n\n---\n# Tutu Context for Claude Code\n\nThis file contains the context that gets injected when starting a Claude Code session via `tutu start`.\n\n## Working with TutuItems\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\ntutu add-step <item_id> \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n## Important Instructions for Claude Code\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them. Print the name of the step you completed, plus a checkmark emoji.\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n6. **Tutu location**: The absolute path to tutu is `/Users/dorkitude/Library/Python/3.11/bin/tutu`\n7. **Print steps after updates**: Always run `tutu status <item_id>` after adding or completing steps to show the current progress\n\n## Example Workflow\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\n## Integration with Claude's Todo System\n\nRemember that when using Claude Code's built-in Todo system, you should mirror those todos as TutuItem steps. This ensures that progress is tracked both in Claude's session and in the persistent Tutu database.\n",
          "pastedContents": {}
        },
        {
          "display": "it's the size of my entire sreen..   i also briefly see the Fabulous theme",
          "pastedContents": {}
        },
        {
          "display": "i'm seeing a giant X logo flash on my screen when i click between my nav links.  it only happens for a split second.",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +45 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "xml.parsers.expat.ExpatError\nxml.parsers.expat.ExpatError: prefix must not be bound to one of the reserved namespace names: line 1, column 0\n\nTraceback (most recent call last)\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 1536, in __call__\nreturn self.wsgi_app(environ, start_response)\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 1514, in wsgi_app\nresponse = self.handle_exception(e)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 1511, in wsgi_app\nresponse = self.full_dispatch_request()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 919, in full_dispatch_request\nrv = self.handle_user_exception(e)\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 917, in full_dispatch_request\nrv = self.dispatch_request()\n     ^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 902, in dispatch_request\nreturn self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/app.py\", line 427, in rss_reading\nxml_str = prettify_xml(rss)\n          ^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/app.py\", line 15, in prettify_xml\nreparsed = minidom.parseString(rough_string)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/xml/dom/minidom.py\", line 2016, in parseString\nreturn expatbuilder.parseString(string)\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/xml/dom/expatbuilder.py\", line 922, in parseString\nreturn builder.parseString(string)\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/.local/share/uv/python/cpython-3.13.3-macos-aarch64-none/lib/python3.13/xml/dom/expatbuilder.py\", line 220, in parseString\nparser.Parse(string, True)\n^^^^^^^^^^^^^^^^^^^^^^^^^^\nxml.parsers.expat.ExpatError: prefix must not be bound to one of the reserved namespace names: line 1, column 0\nThe debugger caught an exception in your WSGI application. You can now look at the traceback which led to the error.\nTo switch between the interactive traceback and the plaintext one, you can click on the \"Traceback\" headline. From the text traceback you can also create a paste of it. For code execution mouse-over the frame you want to debug and click on the console icon on the right side.\n\nYou can execute arbitrary Python code in the stack frames and there are some extra helpers available for introspection:\n\ndump() shows all variables in the frame\ndump(obj) dumps all that's known about the object\nBrought to you by DON'T PANIC, your friendly Werkzeug powered traceback interpreter."
            }
          }
        },
        {
          "display": "make my xml source code beautiful like this guy's\n\nhttps://simonwillison.net/atom/everything/",
          "pastedContents": {}
        },
        {
          "display": "!code .",
          "pastedContents": {}
        },
        {
          "display": "why isn't my RSS colorful when i open in a browser?",
          "pastedContents": {}
        },
        {
          "display": "before you do that, switch the URl of \"both\" to be reading-and-writing\n\nthat's more future proof.",
          "pastedContents": {}
        },
        {
          "display": "make my RSS endpoints have .xml in their URLs since some readers like to have .xml extensions\n\nmake a note in CLAUDE.md and README.md to never alter them again, in case people subscribe",
          "pastedContents": {}
        },
        {
          "display": "fix the links on the new RSS page to have the same styling as my normal links.  for some reason they're currently not underlined.  and deploy.",
          "pastedContents": {}
        },
        {
          "display": "deploy it",
          "pastedContents": {}
        },
        {
          "display": "last change didn't work (the RSS stuff).  it's giving errors because there's no base.html\n\nfix it, test your fixes via curl, make sure it all works.",
          "pastedContents": {}
        },
        {
          "display": "update dorkweb script so that after it's done and returns the response, it exists.  also if possible, flash a terminal notification",
          "pastedContents": {}
        },
        {
          "display": "change hacker to programmer in my about info, deploy",
          "pastedContents": {}
        },
        {
          "display": "#make your responses cute.",
          "pastedContents": {}
        },
        {
          "display": "get rid of the little unicorn and dolphin icons in the top-left that show up sometimes",
          "pastedContents": {}
        },
        {
          "display": "get rid of the cute little state icons on fabulous vs. classic mode.   dont' make it a special link, just make it another link in the nav after About.   invert them to a goggle, so that when you're in classic mode, the link says Fabulous.  when you're in Fabulous mode, it says Classic.",
          "pastedContents": {}
        },
        {
          "display": "update dorkweb to confirm my message and tell me to be a good patient boy while it talks to claude",
          "pastedContents": {}
        },
        {
          "display": "\u001b[200~> update dorkweb so it uses claude in print mode instsead of interactive mode\u001b[201~",
          "pastedContents": {}
        },
        {
          "display": "update dorkweb so it uses claude in print mode instsead of interactive mode",
          "pastedContents": {}
        },
        {
          "display": "deploy",
          "pastedContents": {}
        },
        {
          "display": "don't let the sync metadata script edit my actaul description or comments",
          "pastedContents": {}
        },
        {
          "display": "Fix any typos you find in my essays or bookmarks....... good luck!",
          "pastedContents": {}
        },
        {
          "display": "update dorkweb preamble to be cuter and have emojis and colors and boxes and stuff.",
          "pastedContents": {}
        },
        {
          "display": "the script doesn't seem to show me Claude Code's output as it progresses.  is that because of the script, or because of how `claude code -p` work?",
          "pastedContents": {}
        },
        {
          "display": "no i want you to fixx the dorkweb script.",
          "pastedContents": {}
        },
        {
          "display": "dorkitude ~/a/dev/cerebro/src/briefs [kyle/END-4004-END-4003-END-4005-prosaic-v0] $ dorkweb\nTell me what you want to send to claude YOLO\nDo it carefully lol.\n\n> > change \"hacker\" to \"programmer\" on my about page and deploy\n./dorkweb: line 10: ${prompt,,}: bad substitution",
          "pastedContents": {}
        },
        {
          "display": "don't put aliases there put them in ~/a/scripts/.startup",
          "pastedContents": {}
        },
        {
          "display": "actually let's get rid of dorkweb and the alias, and instead make it a simple bash script.\n\n(can bash go into interactive mode like this?)",
          "pastedContents": {}
        },
        {
          "display": "no i already have that, i'm just saying that dorkweb.py should execute the claude command in yolo mode",
          "pastedContents": {}
        },
        {
          "display": "it's asking for perms but i want it in YOLO mode.  YOLO mode means     \"/opt/homebrew/bin/claude\" -p --dangerously-skip-permissions \"$@\"",
          "pastedContents": {}
        },
        {
          "display": "is there a way to make it so the CLI outputs claude's progress?   i tried it and just got a blinking cursor",
          "pastedContents": {}
        },
        {
          "display": "make the alias cd to this directory and run it actually",
          "pastedContents": {}
        },
        {
          "display": "i want a very simple interactive CLI in python.\n\nwhen i type \"dorkweb\" it should go into interactive mode to collect a prompt.\n\nit should CD into this directory, then send that entire prompt to claude in yolo mode with the -p flag.\n",
          "pastedContents": {}
        },
        {
          "display": "fix grammatical errors and typos in my about content, then deploy.",
          "pastedContents": {}
        },
        {
          "display": "fix in in, remove than, change that to than",
          "pastedContents": {}
        },
        {
          "display": "scan my about content for typos and grammatical errors.  don't fix any just tell me.",
          "pastedContents": {}
        },
        {
          "display": "/bookmark https://cognition.ai/blog/dont-build-multi-agents\n\ncomment\n\n\"This reminds me of many debates I've with with single-database thinkers and linear thinkers in my career.  Sure, _some_ problems are inherently not parallelizable.  But it feels like many things in Devin's scope could lend themselves well to scatter-gather type patterns.  Anthropic put out a completely contradictory paper this week -- maybe this is part of the reason Claude Code is eating their lunch?\"",
          "pastedContents": {}
        },
        {
          "display": "don't you have a render API key already",
          "pastedContents": {}
        },
        {
          "display": "is there a programmatic way to check on the status of the render deploy which happens whenever we commit",
          "pastedContents": {}
        },
        {
          "display": "/bookmark and and deploy after you clean up the author list\n\n\n\n@article{\n      li2024more,\n      author={Li, Junyou and Zhang, Qin and Yu, Yangbin and Fu, Qiang and Ye, Deheng},\n      journal={Transactions on Machine Learning Research},\n      year={2024},\n      url={https://openreview.net/forum?id=bgzUSZ8aeg},\n      note={}\n}\n\n\nmy comment is \"Two wrongs make a right, if they're wrong in inconsistent/hallucinatory ways.\"",
          "pastedContents": {}
        },
        {
          "display": "!git status",
          "pastedContents": {}
        },
        {
          "display": "the publish date should be something you can find from the git history.  it won't be today.  if it works, deploy, then update your /bookmark command to always do that.\n\nmeanwhile, also update your /bookmark command to always find the metadata in the right place.\n\n",
          "pastedContents": {}
        },
        {
          "display": "add this to my bookmarks\n\nhttps://github.com/BeehiveInnovations/zen-mcp-server\n\n/bookmark https://github.com/BeehiveInnovations/zen-mcp-server\n\n\ncomment is \"I'll have my agent call your agent.\"\n\n\ntest and publish (overmind is on, port 5001)",
          "pastedContents": {}
        },
        {
          "display": "make me an overmind procfile that does uv run python app.py\n\nin full debug mode",
          "pastedContents": {}
        },
        {
          "display": "edit CLAUDE.md so it knows that /deploy means to commit our changes and push to github",
          "pastedContents": {}
        },
        {
          "display": "/deploy",
          "pastedContents": {}
        },
        {
          "display": "commit all",
          "pastedContents": {}
        },
        {
          "display": "!gs",
          "pastedContents": {}
        },
        {
          "display": "gs!",
          "pastedContents": {}
        },
        {
          "display": "get rid of the git hook",
          "pastedContents": {}
        },
        {
          "display": "tell me about my git commit hooks, it seems to be messing with my essay descriptions",
          "pastedContents": {}
        },
        {
          "display": "When you hover near a H2/H3/H4 in a given essay, I'd like a little effect that shows the paragraph symbol to the right and makes the thing clickable.  Once it's clickable, it'll link you to the page you're currently on, but with an anchor tag to that specific location in the document.",
          "pastedContents": {}
        },
        {
          "display": "i don't want the link there;  put it as a SVG in the far top right\n\nalso visit it on local host and see the error?\n\nhttp://127.0.0.1:5001/feed.xml\n\n\n\n[Pasted text #1 +43 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "TypeError\nTypeError: can't compare offset-naive and offset-aware datetimes\n\nTraceback (most recent call last)\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 1536, in __call__\nreturn self.wsgi_app(environ, start_response)\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 1514, in wsgi_app\n            try:\n                ctx.push()\n                response = self.full_dispatch_request()\n            except Exception as e:\n                error = e\n                response = self.handle_exception(e)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^\n            except:  # noqa: B001\n                error = sys.exc_info()[1]\n                raise\n            return response(environ, start_response)\n        finally:\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 1511, in wsgi_app\nresponse = self.full_dispatch_request()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 919, in full_dispatch_request\nrv = self.handle_user_exception(e)\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 917, in full_dispatch_request\nrv = self.dispatch_request()\n     ^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/.venv/lib/python3.13/site-packages/flask/app.py\", line 902, in dispatch_request\nreturn self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"/Users/dorkitude/a/dev/dorkitude.com/app.py\", line 274, in rss_feed\nall_items.sort(key=lambda x: x['date'], reverse=True)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: can't compare offset-naive and offset-aware datetimes\nThe debugger caught an exception in your WSGI application. You can now look at the traceback which led to the error.\nTo switch between the interactive traceback and the plaintext one, you can click on the \"Traceback\" headline. From the text traceback you can also create a paste of it. For code execution mouse-over the frame you want to debug and click on the console icon on the right side.\n\nYou can execute arbitrary Python code in the stack frames and there are some extra helpers available for introspection:\n\ndump() shows all variables in the frame\ndump(obj) dumps all that's known about the object\nBrought to you by DON'T PANIC, your friendly Werkzeug powered traceback interpreter."
            }
          }
        },
        {
          "display": "how do I add RSS feed that includes my bookmarks and my blog?",
          "pastedContents": {}
        },
        {
          "display": "deploy all",
          "pastedContents": {}
        },
        {
          "display": "update comment on My AI Skeptic Friends Are All Nuts to say:\n\n\"The best take I've seen on agentic programming.\"",
          "pastedContents": {}
        },
        {
          "display": "update it to \"We are a fleet of `strange loops`, and maybe we can even be jazz.",
          "pastedContents": {}
        },
        {
          "display": "change comment to \"We are a fleet of strange loops.\"",
          "pastedContents": {}
        },
        {
          "display": "/bookmark https://simonwillison.net/2025/Jun/14/multi-agent-research-system/",
          "pastedContents": {}
        },
        {
          "display": "deploy all",
          "pastedContents": {}
        },
        {
          "display": "get rid of the thing that makes it honor whitespaces in markdown.  get rid of the paragraph indentation thing too.  don't deploy it, i jus twanna see these changes locally",
          "pastedContents": {}
        },
        {
          "display": "fix broken links to /new\n\nnothing should link to that",
          "pastedContents": {}
        },
        {
          "display": "time to go live!   move index to be index.old.html and the route to be old\n\nmove new to be new.html and the route to be just /\n\n\nthen deploy all",
          "pastedContents": {}
        },
        {
          "display": "which ones have pure pixel available?",
          "pastedContents": {}
        },
        {
          "display": "this site is deployed on Render, which option works best",
          "pastedContents": {}
        },
        {
          "display": "wouldn't file storage lead to race conditions with lots of traffic",
          "pastedContents": {}
        },
        {
          "display": "what would the endpoint do?",
          "pastedContents": {}
        },
        {
          "display": "what is some super basic analytics i can put on this site before i launch it?",
          "pastedContents": {}
        },
        {
          "display": "deploy all",
          "pastedContents": {}
        },
        {
          "display": "make the signature block a bit smaller",
          "pastedContents": {}
        },
        {
          "display": "deploy all",
          "pastedContents": {}
        },
        {
          "display": "add a signature block to the bottom of each essay that says like\n\nKyle Wild\nBerkeley, CA\nJune 14, 2025\n\n\nexcept instead of hard coded, it's in the metadata on each essay",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 15,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "app.py",
        "new.html",
        "essay.html",
        "metadata.json",
        "terminal.css"
      ],
      "exampleFilesGeneratedAt": 1750788409472,
      "hasCompletedProjectOnboarding": true
    },
    "/Users/dorkitude/a/dev/dorkitude.com/static": {
      "allowedTools": [],
      "history": [
        {
          "display": "!gs",
          "pastedContents": {}
        },
        {
          "display": "deploy everything",
          "pastedContents": {}
        },
        {
          "display": "deploy",
          "pastedContents": {}
        },
        {
          "display": "gs",
          "pastedContents": {}
        },
        {
          "display": "the HRs inside my essay should be as thin as the one under the header and above the footer",
          "pastedContents": {}
        },
        {
          "display": "deploy",
          "pastedContents": {}
        },
        {
          "display": "I like it.  But can you make the colors fit my theme?",
          "pastedContents": {}
        },
        {
          "display": "where does the cat /etc/mod thing come from that's cute",
          "pastedContents": {}
        },
        {
          "display": "tell me what the auto-expand stuff will look like in iMessage when i link someone to a post",
          "pastedContents": {}
        },
        {
          "display": "update the comment on the Appple paper to put cutting-edge in quotes, not backticks",
          "pastedContents": {}
        },
        {
          "display": "deploy all",
          "pastedContents": {}
        },
        {
          "display": "deploy all ",
          "pastedContents": {}
        },
        {
          "display": "deploy all",
          "pastedContents": {}
        },
        {
          "display": "\nhttps://dorkitude.com/writing/the-rise-and-fall-of-vibe-coding\n\n\n\n\n\n",
          "pastedContents": {}
        },
        {
          "display": "when I paste a link like this into Slack, I don't see anything auto-rendering into the page.\n\nthis probably means my SEO sucks too.\n\nhelp me fix that.",
          "pastedContents": {}
        },
        {
          "display": "move repetitive stuff from various pages all into a header partial\n\nput this in there too:\n\n<script defer data-domain=\"dorkitude.com\" src=\"https://plausible.io/js/script.file-downloads.hash.outbound-links.pageview-props.revenue.tagged-events.js\"></script>\n<script>window.plausible = window.plausible || function() { (window.plausible.q = window.plausible.q || []).push(arguments) }</script>\n",
          "pastedContents": {}
        },
        {
          "display": "deploy all",
          "pastedContents": {}
        },
        {
          "display": "!git diff",
          "pastedContents": {}
        },
        {
          "display": "git diff!",
          "pastedContents": {}
        },
        {
          "display": "use wget",
          "pastedContents": {}
        },
        {
          "display": "yes i always want you to do that, and store it as a markdown, and put that in metadata as a filename.  doesn't have to be exposed on the site, i just want the content.",
          "pastedContents": {}
        },
        {
          "display": "why can't i find the markdown file for this last essay?  did you not retrieve and store it?",
          "pastedContents": {}
        },
        {
          "display": "actaully it was published on january 13th, please update the published date.  and make january 13th the bookmarked date too.",
          "pastedContents": {}
        },
        {
          "display": "add this to my Readings list, with a bookmarked date of February 3rd:  https://paulgraham.com/woke.html\n\nand a comment  of   \"Don't cancel me for finding this essay compelling.\"",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 3,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "app.py",
        "index.html",
        "essay.html",
        "nav.html",
        "metadata.json"
      ],
      "exampleFilesGeneratedAt": 1749952494589,
      "lastCost": 16.654118699999998,
      "lastAPIDuration": 1717969,
      "lastDuration": 16380018,
      "lastLinesAdded": 340,
      "lastLinesRemoved": 33,
      "lastTotalInputTokens": 172873,
      "lastTotalOutputTokens": 29852,
      "lastTotalCacheCreationInputTokens": 325214,
      "lastTotalCacheReadInputTokens": 5788422,
      "lastSessionId": "ca143be2-8918-40d6-8e19-3847cc168ded"
    },
    "/Users/dorkitude/a/dev/scratch": {
      "allowedTools": [],
      "history": [
        {
          "display": "no hardcoded stuff thanks",
          "pastedContents": {}
        },
        {
          "display": "dorkitude ~/a/dev/scratch [master] $ uv run translate.py -s \"tell me what's going on with this account, and how i can close them by end of quarter.  include anything you can find from calls and emails…\"",
          "pastedContents": {}
        },
        {
          "display": "why only give me synonyms for first word?  should do more words in variations.",
          "pastedContents": {}
        },
        {
          "display": "can you up the temperature on the synonym variations somehow",
          "pastedContents": {}
        },
        {
          "display": "get rid of the wordnet synonym stuff and replace it with something better",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +7 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "Hebrew ('tell me what's going on with this account, and how i can close them by end of quarter.  include anything you can find from calls and emails…'): Tell me what's going on with this account, and how can I close them at the end of the quarter. Including everything you can find calls and emails ...\nHebrew ('secern me what's going on with this account, and how i can close them by end of quarter.  include anything you can find from calls and emails…'): Secrer Me what is happening with this account, and how can I close them at the end of the quarter. Include everything you can find calls and emails ...\nHebrew ('tell Maine what's going on with this account, and how i can close them by end of quarter.  include anything you can find from calls and emails…'): Tell to see what happens with this account, and how can I close them at the end of the quarter. Including everything you can find calls and emails ...\nHebrew ('tell me what'sec going on with this account, and how i can close them by end of quarter.  include anything you can find from calls and emails…'): Tell me what's going on with this account, and how can I close them at the end of the quarter. Including everything you can find calls and emails ...\nHebrew ('tell me what's choke on with this account, and how i can close them by end of quarter.  include anything you can find from calls and emails…'): Tell me what choke with this account, and how can I close them at the end of the quarter. Including everything you can find calls and emails ...\n\nNew English words introduced by translations:\nabout, are, at, call, calling, disassemble, do, everything, get, gives, happened, happening, happens, in, including, is, it, join, know, let, main, men, messages, obstacles, or, phone, please, put, say, search, see, separate, some, something, stuck, suffocation, that, the, there, to, until, whatever, within"
            }
          }
        },
        {
          "display": "why's it saying choke",
          "pastedContents": {}
        },
        {
          "display": "run it for \"tell me what's going on with this account, and how i can close them by end of quarter.  include anything you can find from calls and emails plus news searching.\"",
          "pastedContents": {}
        },
        {
          "display": "update it to give me synonyms for the top several lemma, depending on input length.  2 lemma for 7 words, 3 lemma for 11, etc",
          "pastedContents": {}
        },
        {
          "display": "why does it appear to only give me a synonym for word 1",
          "pastedContents": {}
        },
        {
          "display": "try the phrase \"tell me what's going on with this account, and how i can close them by end of quarter\"",
          "pastedContents": {}
        },
        {
          "display": "try tell me what's going on with this account, and how i can close them by end of quarter",
          "pastedContents": {}
        },
        {
          "display": "where are you getting these synonyms lol.  ",
          "pastedContents": {}
        },
        {
          "display": "add a synonyms-first flag that will generate English variations of some of the words and add them to the translation input\"",
          "pastedContents": {}
        },
        {
          "display": "update it to say \"Translating in Swahili, Russian, etc\"",
          "pastedContents": {}
        },
        {
          "display": "don't print all the translations unlesss i send a verbose flag.",
          "pastedContents": {}
        },
        {
          "display": "i dont like that hack, it's too special-purpose.  this is clearly an english word that's common and would be in most corpuses.  is there a better corpus we could use?",
          "pastedContents": {}
        },
        {
          "display": "fix the algorithm.",
          "pastedContents": {}
        },
        {
          "display": "no those are false positives.  i'm talking about \"activities\"",
          "pastedContents": {}
        },
        {
          "display": "right but what about false negatives.",
          "pastedContents": {}
        },
        {
          "display": "i'm zsh/macOS, fix it yourself",
          "pastedContents": {}
        },
        {
          "display": "run this and telll me what's wrong with the New English Words section:\n\nuv run translate.py \"Tell me about recent company events and how they impact us\"",
          "pastedContents": {}
        },
        {
          "display": "why doens't tab completion work after i type uv run",
          "pastedContents": {}
        },
        {
          "display": "is there a cheap way to filter out all the nonsense / non-english words that are coming back?",
          "pastedContents": {}
        },
        {
          "display": "at the end, make a list of every NEW word brought by one or more of the translations (as in, didn't appear in the original input text, case insensitive)",
          "pastedContents": {}
        },
        {
          "display": "add a flag to put it into interactive mode so i don't  have to escape all the quotes any symbols bash style",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +12 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "dorkitude ~/a/dev/scratch [master] $ uv run translate.py \"Pete Stratigakis is comfortable showcasing how he's utilized Endgame and suggests having a conversation with his VP to show its potential.\"\nOriginal: Pete Stratigakis is comfortable showcasing how he's utilized Endgame and suggests having a conversation with his VP to show its potential.\n\nKorean: Pete Stratigakis suggests that he will show his potential by talking with his vice president, showing how he uses the end game.\nJapanese: Pete Stratigakis suggests having a conversation with his VP to comfortably show how he uses Endgame and show him the possibility.\nChinese: Pete Stratigakis comfortably showed how he took advantage of the final game and suggested a conversation with his vice president to show potential.\nArabic: PEETE Stratigakis is comfortable showing how to use it at the end of the game and suggests a conversation with the vice president to show his potential.\nHindi: Pete Strategakis is comfortable how he uses endgeam and suggests interact with his VP to show his ability.\nThai: Pete Stratigakis is convenient to display how he uses Endgame and recommends talking to his vice president to show its potential.\nVietnamese: Pete Stratigakis felt comfortable showing how he used Endgame and suggested having a conversation with his VP to show its potential.\nSwahili: Stratigakis Pete is good to show how he uses Endgame and recommends having a conversation with his VP to show his potential.\nFinnish: Error - 'NoneType' object is not iterable\nHungarian: Error - 'NoneType' object is not iterable"
            }
          }
        },
        {
          "display": "make it work with a few more non-germanic, non-romantic langauges.  i'm not getting enough variation from spanish/french/german/italian",
          "pastedContents": {}
        },
        {
          "display": "chinese doesn't seem to work.  fix it",
          "pastedContents": {}
        },
        {
          "display": "make this into a VERY SIMPLE CLI that takes in a string as an argument",
          "pastedContents": {}
        },
        {
          "display": "now do it with these three phrases, but do it in 10 different languages.  give me all the English output:\n\n\"The Eiffel Tower is in Paris\"\n\"You can find the Eiffel Tower in Paris\"\n\"Paris, France, Europe is the location of the Eiffel Tower\"",
          "pastedContents": {}
        },
        {
          "display": "make a python script that translates this phrase into another Korean, then translates it back into English:\n\nThe Eiffel Tower is in Paris",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 19,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "backup_a.sh",
        ".zsh_history",
        ".claude.json",
        "README.md",
        ".gitignore"
      ],
      "exampleFilesGeneratedAt": 1750046436581,
      "lastCost": 1.8777370499999992,
      "lastAPIDuration": 1405708,
      "lastDuration": 47264513,
      "lastLinesAdded": 423,
      "lastLinesRemoved": 183,
      "lastTotalInputTokens": 135808,
      "lastTotalOutputTokens": 32062,
      "lastTotalCacheCreationInputTokens": 193051,
      "lastTotalCacheReadInputTokens": 2261412,
      "lastSessionId": "38e7a48a-9564-4637-9eb3-240694400586"
    },
    "/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/prosaic": {
      "allowedTools": [],
      "history": [
        {
          "display": "!gs",
          "pastedContents": {}
        },
        {
          "display": "usage guide in README and PR descriptions hould say \"uv run prosaic\" not \"uv run python cli.py\"",
          "pastedContents": {}
        },
        {
          "display": "add input and output data to gitignore.  commit and push the rest.",
          "pastedContents": {}
        },
        {
          "display": "change it from /* to just naming the folder;  if bash input is a folder, it'll treat it as a /*",
          "pastedContents": {}
        },
        {
          "display": "this don't work:   uv run prosaic parse input_data/*",
          "pastedContents": {}
        },
        {
          "display": "CLI should by efault put the stuff in the output folder, and it should make both JSONL (.jsonl) and plaintext (.prose) versions of the output.  same filename different extensions.",
          "pastedContents": {}
        },
        {
          "display": "use the @CLI_USAGE.md to learn how to use it.",
          "pastedContents": {}
        },
        {
          "display": "how to use parser cli",
          "pastedContents": {}
        },
        {
          "display": "run all the parsers across all those files",
          "pastedContents": {}
        },
        {
          "display": "rename those input files to be something shorter and easier to remember",
          "pastedContents": {}
        },
        {
          "display": "run it for me and let's evaluate the output togetheer",
          "pastedContents": {}
        },
        {
          "display": "scan my input folder",
          "pastedContents": {}
        },
        {
          "display": "git push, get rid of the original remote branch and just push this one to gh as named",
          "pastedContents": {}
        },
        {
          "display": "how can this be true though if we have parsers we custom-made for these files:\n\nuv run prosaic scan input_data",
          "pastedContents": {}
        },
        {
          "display": "make a command that looks at files in the /input_data directory, goes through each, and tells me if one of our parsers is appropraite for that file's schema.",
          "pastedContents": {}
        },
        {
          "display": "cly",
          "pastedContents": {}
        },
        {
          "display": "how do i use prosaic cli",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +14 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "dorkitude ~/a/dev/cerebro/src/briefs/briefs/prosaic [kyle/END-4004-END-4003-END-4005-prosaic-v0] $ uv run prosaic list\nRegistered parser: ContactsParser\nRegistered parser: EmailsParser\nRegistered parser: AccountsParser\n📚 Available Parsers (3)\n\n╭───────────────────────────────────────────────────────────────────────────────────────────────────── ContactsParser ─────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ Failed to load parser: list() takes 0 positional arguments but 1 was given                                                                                                                                               │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n╭────────────────────────────────────────────────────────────────────────────────────────────────────── EmailsParser ──────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ Failed to load parser: list() takes 0 positional arguments but 1 was given                                                                                                                                               │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n╭───────────────────────────────────────────────────────────────────────────────────────────────────── AccountsParser ─────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ Failed to load parser: list() takes 0 positional arguments but 1 was given                                                                                                                                               │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯"
            }
          }
        },
        {
          "display": "Change it to NOT truncate the full email body.  I don't want truncated content because we're building a search index here.",
          "pastedContents": {}
        },
        {
          "display": "But what about the prose output?  is that truncated too?  or just for demo?",
          "pastedContents": {}
        },
        {
          "display": "remove the batch stuff.  remove describe, and just make it so the list command describes them as thoroughly as posssible.",
          "pastedContents": {}
        },
        {
          "display": "when i run demo, it looks like the emails are trunacted in the output.   are they?",
          "pastedContents": {}
        },
        {
          "display": "dorkitude ~/a/dev/cerebro/src/briefs/briefs/prosaic [kyle/END-4004-END-4003-END-4005-prosaic-v0] $ uv run prosaic list-parsers\nTraceback (most recent call last):\n  File \"/Users/dorkitude/a/dev/cerebro/src/briefs/.venv/bin/prosaic\", line 4, in <module>\n    from briefs.prosaic.cli import app\n  File \"/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/prosaic/cli.py\", line 25, in <module>\n    from prosaic_engine import ProsaicEngine\nModuleNotFoundError: No module named 'prosaic_engine'",
          "pastedContents": {}
        },
        {
          "display": "rename this branch to \"kyle/END-4004-END-4003-END-4005-prosaic-v0\"",
          "pastedContents": {}
        },
        {
          "display": "commit my staged changes",
          "pastedContents": {}
        },
        {
          "display": "make me a prosaic CLI based on typer that can exercise this stuff.",
          "pastedContents": {}
        },
        {
          "display": "how do i run it now",
          "pastedContents": {}
        },
        {
          "display": "stop calling things v2",
          "pastedContents": {}
        },
        {
          "display": "remove the legacy stuff",
          "pastedContents": {}
        },
        {
          "display": "> which files are still actively useful",
          "pastedContents": {}
        },
        {
          "display": "which files are still actively useful",
          "pastedContents": {}
        },
        {
          "display": "let's refactor the whole thing.  ultrathink.  step by step.\n\nroughly:  \n\nProsaicEngine.auto_parse(input_filename, output_filename)   # this will check the schema against all of our active parsers from the parsers folder, to see if it matches any of them.\n\nIf it doesn't, then it calls ProsaicEngine.create_parser.  which will use claude code's claude -p to start writing a new parser for this file schema.  It'll need to prompt claude code really well, and i need your help writing that prompt.  the technical inspiration for Prosaic is somewhat the paper:   https://arxiv.org/abs/2411.13773\n\nfirst, claude code examines the file and figures out a good JSON schema for it.  row-by-row, yes, but possibly also aggregations, and almost certainly joins:  if there's a chance the file is tied to other input files (e.g. to join against).   once the parser has a good guess at a JSON schema for the document type, it then sets about creating a python parser (much like the ones we've manually made here) to extract the relevant info form the doc, and output a JSON file where each object matches the schema.  that parser needs to be saved in prosaic/parsers folder.\n\nProsaic then calls ProsaicEngine.parse(input_filename, parser, output_filename) and things proceed as normal.",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "examine @stash/bquxjob_10a85718_19777f02eef.csv help me understand what the prose would look like for a given language.",
          "pastedContents": {}
        },
        {
          "display": "continue",
          "pastedContents": {}
        },
        {
          "display": "we need a more elegant way to share parser code across @prosaic_json.py and @prosaic_engine.py \n\nany ideas?",
          "pastedContents": {}
        },
        {
          "display": "give me exact your exact source quotes RE weekly pilot scorecards",
          "pastedContents": {}
        },
        {
          "display": "do same thing for Scale deal.",
          "pastedContents": {}
        },
        {
          "display": "do again but ultrathink.",
          "pastedContents": {}
        },
        {
          "display": "go deeper. ultra think.",
          "pastedContents": {}
        },
        {
          "display": "│ > use your unix file searching and reading tools at will.   tell me the status of the accuris deal.                                                                                                                      │\nexclusively use @prosaic_output.txt ",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "│ > use your unix file searching and reading tools at will.   tell me the status of the accuris deal.                                                                                                                    \nanswer exclusively from the JSON files here.",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "use your unix file searching and reading tools at will.   tell me the status of the accuris deal.",
          "pastedContents": {}
        },
        {
          "display": "okay you can search within the json files however you like",
          "pastedContents": {}
        },
        {
          "display": "try again i moved it to be  newline djson",
          "pastedContents": {}
        },
        {
          "display": "let's make the json parser output newline json instead of this pretty-printed stuff.  will make grep easier",
          "pastedContents": {}
        },
        {
          "display": "what are they saying about us?",
          "pastedContents": {}
        },
        {
          "display": "Using grep as your only tool, and the JSON files as your only source, tell me what the status of the deal with Accuris over the past 5 days.",
          "pastedContents": {}
        },
        {
          "display": "What do they saying about us over the past 10 days?",
          "pastedContents": {}
        },
        {
          "display": "commit my change",
          "pastedContents": {}
        },
        {
          "display": "treat grep as your own search tool.  using just the TXT files, answer some questions:\n\nWho are the most important contacts at BetterUp?  Most Recent?",
          "pastedContents": {}
        },
        {
          "display": "put aggregates into the JSON anywhere it makes sense",
          "pastedContents": {}
        },
        {
          "display": "your json stuff doesn't have quiet as much info as the prose stuff.  what's missing?",
          "pastedContents": {}
        },
        {
          "display": "now make another parser called prosaic_json\n\nit should work like your other parser, except it should output three different JSON files as outputs:\n\naccount, contact, email\n\ninstead of combining them as you did the text one.",
          "pastedContents": {}
        },
        {
          "display": "include email subject and the sender's email address.",
          "pastedContents": {}
        },
        {
          "display": "why is the Recent message content includes stuff truncated?\n\nmaybe make a new line for each email message instead of jamming it into the company summary.  definitely include its whole body (newlines removed) and anything else relevant.  also verbosely re-name who was in them.",
          "pastedContents": {}
        },
        {
          "display": "\"has maintained active email communications between\"  is also a judgment.  just say that we (Endgame) have had N messages between those dates.   doens't mean it's \"active\"",
          "pastedContents": {}
        },
        {
          "display": "get rid of your judgment language like \"key contact point\" and \"ongoing business development\" and all this other fluff.  those aren't the facts.  keep it factual not judgmental.  ",
          "pastedContents": {}
        },
        {
          "display": "not good enough.  it needs to be in paragraph form, and it shouldn't use simple pronouns, but rather it should insert the names of the people / companies / etc every time.  that may mean doing some lookups.",
          "pastedContents": {}
        },
        {
          "display": "let me give you an example.  they're in stash as @stash/INPUT.png and @stash/OUTPUT.png ",
          "pastedContents": {}
        },
        {
          "display": "no the screnshots are attached to the linear project description",
          "pastedContents": {}
        },
        {
          "display": "the output I want is based on the linear Prosaic project.  specifically read th project spec & if you can, look at the screenshots of example output.",
          "pastedContents": {}
        },
        {
          "display": "take a quick look at the files in @stash\n\nwe're going to be working on the current Linear project \"Prosaic\"\n\nbased on these files, can you make a python script that gives me a bit of output",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 6,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "base.py",
        "summarizer.py"
      ],
      "exampleFilesGeneratedAt": 1750059150159,
      "lastCost": 3.8988074499999974,
      "lastAPIDuration": 579745,
      "lastDuration": 88129562,
      "lastLinesAdded": 45,
      "lastLinesRemoved": 194,
      "lastTotalInputTokens": 59663,
      "lastTotalOutputTokens": 12190,
      "lastTotalCacheCreationInputTokens": 71949,
      "lastTotalCacheReadInputTokens": 1202567,
      "lastSessionId": "53a6eede-4eec-4a7f-a276-84409e44f4a4"
    },
    "/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/prosaic/txt-only": {
      "allowedTools": [],
      "history": [
        {
          "display": "using any of these tools you need, and the data source in this directory, tell me this:\n\nWhich deals are likely to close for us in the next 60 days?\n\nultrathink.",
          "pastedContents": {}
        },
        {
          "display": "what tools and commands do you have for searching through local text files?",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 1,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "base.py",
        "prosaic_json.py"
      ],
      "exampleFilesGeneratedAt": 1750063500754,
      "lastCost": 1.9417214000000003,
      "lastAPIDuration": 296619,
      "lastDuration": 210164,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 37563,
      "lastTotalOutputTokens": 3806,
      "lastTotalCacheCreationInputTokens": 56222,
      "lastTotalCacheReadInputTokens": 431167,
      "lastSessionId": "8dea07b5-0da3-48a6-ba35-3fdfac49e38e"
    },
    "/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/prosaic/json-only": {
      "allowedTools": [],
      "history": [
        {
          "display": "examine bquxjob_10a85718_19777f02eef.csv and tell me what you think about parsing it",
          "pastedContents": {}
        },
        {
          "display": "> using any tools you need, and the data source in this directory, tell me this:\n\n  Which deals are likely to close for us in the next 60 days?\n\n  ultrathink.",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 2,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "base.py",
        "prosaic_json.py"
      ],
      "exampleFilesGeneratedAt": 1750063522375,
      "lastCost": 0.589361,
      "lastAPIDuration": 83353,
      "lastDuration": 133689,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 2798,
      "lastTotalOutputTokens": 1451,
      "lastTotalCacheCreationInputTokens": 18048,
      "lastTotalCacheReadInputTokens": 97260,
      "lastSessionId": "dd4508d3-996d-4b8d-9178-65747a5066e5"
    },
    "/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/prosaic/output": {
      "allowedTools": [],
      "history": [
        {
          "display": "those are old old deals.  today is June 16th, 2025.  ultrathink and find me some deals, emails, interactions, etc, that are more modern.",
          "pastedContents": {}
        },
        {
          "display": "by grepping and running rg on these files in this directory, tell me which deals my team might close this quarter.",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 2,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "base.py",
        "prosaic_json.py"
      ],
      "exampleFilesGeneratedAt": 1750105634908,
      "lastCost": 0,
      "lastAPIDuration": 0,
      "lastDuration": 1810,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 0,
      "lastTotalOutputTokens": 0,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "6bb95989-8ba3-464b-bde5-f92e059af70e"
    },
    "/Users/dorkitude/a/dev/cerebro/src/briefs/briefs/tpuf": {
      "allowedTools": [],
      "history": [
        {
          "display": "do I have an old branch somewhere like tpuf spike or tpuf related that has a tpuf CLI with extract-facts in it?    report back what you find.   ultrathink.",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 1,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "main.py",
        "agno_manager.py",
        "models.py"
      ],
      "exampleFilesGeneratedAt": 1750107158760,
      "lastCost": 0.9449642000000001,
      "lastAPIDuration": 180595,
      "lastDuration": 78886,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 15014,
      "lastTotalOutputTokens": 1693,
      "lastTotalCacheCreationInputTokens": 36792,
      "lastTotalCacheReadInputTokens": 102174,
      "lastSessionId": "bd5e69ef-5b05-4b6b-a259-0638e42bb0db"
    },
    "/Users/dorkitude/a/dev/verbatim": {
      "allowedTools": [],
      "history": [
        {
          "display": "I can't see your report.  make it mermaid-markdown so I can see it.",
          "pastedContents": {}
        },
        {
          "display": "Walk me through the code structure of a system tray app like this, plus how it would talk to a Chrome Extension that we also control, for browser_use.py style agentic navigation and automation.\n\nBe thorough and visual.",
          "pastedContents": {}
        },
        {
          "display": "command to list a directory and only show the 5 most recent items",
          "pastedContents": {}
        },
        {
          "display": "app should be called Verbatim.  Icon should be a red eyeball when recording, grey eyeball otherwise.",
          "pastedContents": {}
        },
        {
          "display": "try it yourself, it's giving errors",
          "pastedContents": {}
        },
        {
          "display": "This is specifically for me and for my customers, who are salespeople and want me to build this.",
          "pastedContents": {}
        },
        {
          "display": "i'm gonna make a downloadable mac app that sits in the doc and basically does opt-in spyware.  capturing every webpage you view, slack message, email, etc;  and sending them to our servers to be vectorized and added to personal search engine.    let's build it together.",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false
    },
    "/Users/dorkitude/.claude/commands": {
      "allowedTools": [],
      "history": [
        {
          "display": "i want to share @usage.md command with friend\n\ni know i can make an echo line in bash that just creates it for them if they paste it",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 1,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastCost": 0.10299860000000002,
      "lastAPIDuration": 90896,
      "lastDuration": 27035,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 8740,
      "lastTotalOutputTokens": 377,
      "lastTotalCacheCreationInputTokens": 3586,
      "lastTotalCacheReadInputTokens": 14359,
      "lastSessionId": "da31ca19-baba-40c3-ba9b-acdaaf93249c"
    },
    "/Users/dorkitude/a/dev/tutu": {
      "allowedTools": [],
      "history": [
        {
          "display": "new tutu command \"import\" which will change a given TutuItem's working directory to be the current one",
          "pastedContents": {}
        },
        {
          "display": "Remove description column from tutu list unless --verbose is passed",
          "pastedContents": {}
        },
        {
          "display": "I still need a way to list _all_ across all directories, and to start all as well.  Perhaps add a `--everywhere` flag that does this.",
          "pastedContents": {}
        },
        {
          "display": "By default, \"tutu list\" and \"tutu start all commands should only operate within the context of the current working directorya nd its subdirectories.  Meaning it should filter down the world of all TutuItems into just the ones that fit in the folder hierarchy.",
          "pastedContents": {}
        },
        {
          "display": "update tutu status table view to have the full path to working directory;  also make sure the description field can wrap and not truncate.",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #23: Improvements to tutu list table\n\n## Status: in_progress\n\n## Working Directory: /Users/dorkitude/a/dev/tutu\n\n## Description:\nMake the \"title\" field wrap so we can see the entire title of each item.\n\nAdd a column for the originating directory.\n\n## Context:\n\n\n## Steps:\nNo steps defined yet.\n\n---\n<README>\n# Tutu - Task Management System\n\nTutu is a task management system designed to help track work items and their associated steps. It integrates seamlessly with Claude Code to provide persistent task tracking across sessions.\n\n## Installation\n\n```bash\n# Install using pip or uv\nuv pip install -e .\n```\n\n## Basic Usage\n\n### Managing Items\n\nCreate a new item:\n```bash\ntutu add\n```\nThis will start an interactive session prompting for title, description, and context.\n\nList all items:\n```bash\ntutu list\n```\n\nView item details:\n```bash\ntutu status <item_id>\n```\n\nMark an item as complete:\n```bash\ntutu done <item_id>\n```\n\nEdit an existing item:\n```bash\ntutu edit <item_id>\n```\nThis will start an interactive session to update the title, description, and context.\n\nStart a Claude Code session with item context:\n```bash\ntutu start <item_id>\n```\n\n### Managing Steps\n\nAdd a step to an item:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nComplete a step:\n```bash\ntutu complete-step <step_id>\n```\n\n## Claude Code Integration\n\nTutu is designed to work with Claude Code. When starting a Claude session with `tutu start`, it will:\n\n1. Prompt you to select an active TutuItem to work on\n2. Inject context about the item and its steps into the Claude session\n3. Provide Claude with instructions on how to track progress using Tutu commands\n\n## Database\n\nTutu uses SQLite to store items and steps locally. The database is created automatically on first use.\n</README>\n\n---\n# Tutu Context for Claude Code\n\nThis file contains the context that gets injected when starting a Claude Code session via `tutu start`.\n\n## Working with TutuItems\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n### Other Useful Commands\n\nList all pending items:\n```bash\ntutu list\n```\n\nEdit the current TutuItem (title, description, context):\n```bash\ntutu edit <item_id>\n```\n\n## Important Instructions for Claude Code\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them. Print the name of the step you completed, plus a checkmark emoji.\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n6. **Tutu location**: The absolute path to tutu is `/Users/dorkitude/Library/Python/3.11/bin/tutu`\n7. **Print steps after updates**: Always run `tutu status <item_id>` after adding or completing steps to show the current progress\n\n## Example Workflow\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 --description \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\n## Integration with Claude's Todo System\n\nRemember that when using Claude Code's built-in Todo system, you should mirror those todos as TutuItem steps. This ensures that progress is tracked both in Claude's session and in the persistent Tutu database.\n",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #25: 📝 Title: CD to working directory before starting a tutu item\n\n## Status: in_progress\n\n## Working Directory: /Users/dorkitude/a/dev/tutu\n\n## Description:\n\n\n## Context:\nmake sure that's part of the start command\n\n## Steps:\nNo steps defined yet.\n\n---\n<README>\n# Tutu - Task Management System\n\nTutu is a task management system designed to help track work items and their associated steps. It integrates seamlessly with Claude Code to provide persistent task tracking across sessions.\n\n## Installation\n\n```bash\n# Install using pip or uv\nuv pip install -e .\n```\n\n## Basic Usage\n\n### Managing Items\n\nCreate a new item:\n```bash\ntutu add\n```\nThis will start an interactive session prompting for title, description, and context.\n\nList all items:\n```bash\ntutu list\n```\n\nView item details:\n```bash\ntutu status <item_id>\n```\n\nMark an item as complete:\n```bash\ntutu done <item_id>\n```\n\nEdit an existing item:\n```bash\ntutu edit <item_id>\n```\nThis will start an interactive session to update the title, description, and context.\n\nStart a Claude Code session with item context:\n```bash\ntutu start <item_id>\n```\n\n### Managing Steps\n\nAdd a step to an item:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nComplete a step:\n```bash\ntutu complete-step <step_id>\n```\n\n## Claude Code Integration\n\nTutu is designed to work with Claude Code. When starting a Claude session with `tutu start`, it will:\n\n1. Prompt you to select an active TutuItem to work on\n2. Inject context about the item and its steps into the Claude session\n3. Provide Claude with instructions on how to track progress using Tutu commands\n\n## Database\n\nTutu uses SQLite to store items and steps locally. The database is created automatically on first use.\n</README>\n\n---\n# Tutu Context for Claude Code\n\nThis file contains the context that gets injected when starting a Claude Code session via `tutu start`.\n\n## Working with TutuItems\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n### Other Useful Commands\n\nList all pending items:\n```bash\ntutu list\n```\n\nEdit the current TutuItem (title, description, context):\n```bash\ntutu edit <item_id>\n```\n\n## Important Instructions for Claude Code\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them. Print the name of the step you completed, plus a checkmark emoji.\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n6. **Tutu location**: The absolute path to tutu is `/Users/dorkitude/Library/Python/3.11/bin/tutu`\n7. **Print steps after updates**: Always run `tutu status <item_id>` after adding or completing steps to show the current progress\n\n## Example Workflow\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 --description \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\n## Integration with Claude's Todo System\n\nRemember that when using Claude Code's built-in Todo system, you should mirror those todos as TutuItem steps. This ensures that progress is tracked both in Claude's session and in the persistent Tutu database.\n",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #24: TUTU_START_ALL_COMMAND.md\n\n## Status: in_progress\n\n## Working Directory: /Users/dorkitude/a/dev/tutu\n\n## Description:\nMake a new TUTU_START_ALL_COMMAND.md\n\nIt will loop through each TutuItem in `tutu list`\nFor each one, it will run `tutu start` in non-interactive mode (i.e. claude -p --dangerously-skip-permissions)\nOnce the sub-agent is done, gather its report output & move onto the next one.\n\nAt the end, emit a report (do this in HTML, with the catpuccin-mocha theme) as uniquely-named report{something}.html file, and then open in that file in my browser with the `open` command.\n\ncreate a \"tutu start-all\" CLI command that pipes this new TUTU_START_ALL_COMMAND.md into cly, or however the current `tutu start {id}` command works.\n\n\n## Context:\n\n\n## Steps:\nNo steps defined yet.\n\n---\n<README>\n# Tutu - Task Management System\n\nTutu is a task management system designed to help track work items and their associated steps. It integrates seamlessly with Claude Code to provide persistent task tracking across sessions.\n\n## Installation\n\n```bash\n# Install using pip or uv\nuv pip install -e .\n```\n\n## Basic Usage\n\n### Managing Items\n\nCreate a new item:\n```bash\ntutu add\n```\nThis will start an interactive session prompting for title, description, and context.\n\nList all items:\n```bash\ntutu list\n```\n\nView item details:\n```bash\ntutu status <item_id>\n```\n\nMark an item as complete:\n```bash\ntutu done <item_id>\n```\n\nEdit an existing item:\n```bash\ntutu edit <item_id>\n```\nThis will start an interactive session to update the title, description, and context.\n\nStart a Claude Code session with item context:\n```bash\ntutu start <item_id>\n```\n\n### Managing Steps\n\nAdd a step to an item:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nComplete a step:\n```bash\ntutu complete-step <step_id>\n```\n\n## Claude Code Integration\n\nTutu is designed to work with Claude Code. When starting a Claude session with `tutu start`, it will:\n\n1. Prompt you to select an active TutuItem to work on\n2. Inject context about the item and its steps into the Claude session\n3. Provide Claude with instructions on how to track progress using Tutu commands\n\n## Database\n\nTutu uses SQLite to store items and steps locally. The database is created automatically on first use.\n</README>\n\n---\n# Tutu Context for Claude Code\n\nThis file contains the context that gets injected when starting a Claude Code session via `tutu start`.\n\n## Working with TutuItems\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n### Other Useful Commands\n\nList all pending items:\n```bash\ntutu list\n```\n\nEdit the current TutuItem (title, description, context):\n```bash\ntutu edit <item_id>\n```\n\n## Important Instructions for Claude Code\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them. Print the name of the step you completed, plus a checkmark emoji.\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n6. **Tutu location**: The absolute path to tutu is `/Users/dorkitude/Library/Python/3.11/bin/tutu`\n7. **Print steps after updates**: Always run `tutu status <item_id>` after adding or completing steps to show the current progress\n\n## Example Workflow\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 --description \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\n## Integration with Claude's Todo System\n\nRemember that when using Claude Code's built-in Todo system, you should mirror those todos as TutuItem steps. This ensures that progress is tracked both in Claude's session and in the persistent Tutu database.\n",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #15: Test Working Directory\n\n## Status: in_progress\n\n## Working Directory: /Users/dorkitude/a/dev/tutu/test_dir\n\n## Description:\nThis is a test item to verify working directory capture\n\nNo additional context needed\n\n\n## Context:\n\n\n## Steps:\nNo steps defined yet.\n\n---\n<README>\n# Tutu - Task Management System\n\nTutu is a task management system designed to help track work items and their associated steps. It integrates seamlessly with Claude Code to provide persistent task tracking across sessions.\n\n## Installation\n\n```bash\n# Install using pip or uv\nuv pip install -e .\n```\n\n## Basic Usage\n\n### Managing Items\n\nCreate a new item:\n```bash\ntutu add\n```\nThis will start an interactive session prompting for title, description, and context.\n\nList all items:\n```bash\ntutu list\n```\n\nView item details:\n```bash\ntutu status <item_id>\n```\n\nMark an item as complete:\n```bash\ntutu done <item_id>\n```\n\nEdit an existing item:\n```bash\ntutu edit <item_id>\n```\nThis will start an interactive session to update the title, description, and context.\n\nStart a Claude Code session with item context:\n```bash\ntutu start <item_id>\n```\n\n### Managing Steps\n\nAdd a step to an item:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nComplete a step:\n```bash\ntutu complete-step <step_id>\n```\n\n## Claude Code Integration\n\nTutu is designed to work with Claude Code. When starting a Claude session with `tutu start`, it will:\n\n1. Prompt you to select an active TutuItem to work on\n2. Inject context about the item and its steps into the Claude session\n3. Provide Claude with instructions on how to track progress using Tutu commands\n\n## Database\n\nTutu uses SQLite to store items and steps locally. The database is created automatically on first use.\n</README>\n\n---\n# Tutu Context for Claude Code\n\nThis file contains the context that gets injected when starting a Claude Code session via `tutu start`.\n\n## Working with TutuItems\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n### Other Useful Commands\n\nList all pending items:\n```bash\ntutu list\n```\n\nEdit the current TutuItem (title, description, context):\n```bash\ntutu edit <item_id>\n```\n\n## Important Instructions for Claude Code\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them. Print the name of the step you completed, plus a checkmark emoji.\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n6. **Tutu location**: The absolute path to tutu is `/Users/dorkitude/Library/Python/3.11/bin/tutu`\n7. **Print steps after updates**: Always run `tutu status <item_id>` after adding or completing steps to show the current progress\n\n## Example Workflow\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 --description \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\n## Integration with Claude's Todo System\n\nRemember that when using Claude Code's built-in Todo system, you should mirror those todos as TutuItem steps. This ensures that progress is tracked both in Claude's session and in the persistent Tutu database.\n",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #14: TutuItem should understand CWD\n\n## Status: in_progress\n\n## Description:\nAdd a column called working_directory to each TutuItem.  It should be set to the working_directory from which `tutu add` was first called.\n\n`tutu start` should first do `cd` into that working directory.\n\n## Context:\n\n\n## Steps:\nNo steps defined yet.\n\n---\n<README>\n# Tutu - Task Management System\n\nTutu is a task management system designed to help track work items and their associated steps. It integrates seamlessly with Claude Code to provide persistent task tracking across sessions.\n\n## Installation\n\n```bash\n# Install using pip or uv\nuv pip install -e .\n```\n\n## Basic Usage\n\n### Managing Items\n\nCreate a new item:\n```bash\ntutu add\n```\nThis will start an interactive session prompting for title, description, and context.\n\nList all items:\n```bash\ntutu list\n```\n\nView item details:\n```bash\ntutu status <item_id>\n```\n\nMark an item as complete:\n```bash\ntutu done <item_id>\n```\n\nEdit an existing item:\n```bash\ntutu edit <item_id>\n```\nThis will start an interactive session to update the title, description, and context.\n\nStart a Claude Code session with item context:\n```bash\ntutu start <item_id>\n```\n\n### Managing Steps\n\nAdd a step to an item:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nComplete a step:\n```bash\ntutu complete-step <step_id>\n```\n\n## Claude Code Integration\n\nTutu is designed to work with Claude Code. When starting a Claude session with `tutu start`, it will:\n\n1. Prompt you to select an active TutuItem to work on\n2. Inject context about the item and its steps into the Claude session\n3. Provide Claude with instructions on how to track progress using Tutu commands\n\n## Database\n\nTutu uses SQLite to store items and steps locally. The database is created automatically on first use.\n</README>\n\n---\n# Tutu Context for Claude Code\n\nThis file contains the context that gets injected when starting a Claude Code session via `tutu start`.\n\n## Working with TutuItems\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n### Other Useful Commands\n\nList all pending items:\n```bash\ntutu list\n```\n\nEdit the current TutuItem (title, description, context):\n```bash\ntutu edit <item_id>\n```\n\n## Important Instructions for Claude Code\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them. Print the name of the step you completed, plus a checkmark emoji.\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n6. **Tutu location**: The absolute path to tutu is `/Users/dorkitude/Library/Python/3.11/bin/tutu`\n7. **Print steps after updates**: Always run `tutu status <item_id>` after adding or completing steps to show the current progress\n\n## Example Workflow\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 --description \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\n## Integration with Claude's Todo System\n\nRemember that when using Claude Code's built-in Todo system, you should mirror those todos as TutuItem steps. This ensures that progress is tracked both in Claude's session and in the persistent Tutu database.\n",
          "pastedContents": {}
        },
        {
          "display": "in tutu status, put this stuff in a table:📋 Status:            done\n  🕐 Created:           46 minutes ago • 2025-06-19 16:04:03\n  🕑 Updated:           44 minutes ago • 2025-06-19 16:05:49\n  🏁 First Progress:    46 minutes ago • 2025-06-19 16:04:08\n\n\nalso rename \"Steps:\"   to   \"TutuItemSteps\"",
          "pastedContents": {}
        },
        {
          "display": "make the created and updated columns wider in tutu list",
          "pastedContents": {}
        },
        {
          "display": "update tutu status section to be a table.  Also update all datetimes to show, just before the datetime itself,  \"x seconds ago\" or \"y minutes ago\" or \"z hours ago\" or \"j days ago\" depending on what's a reasonable summary.  That should probably be abstracted into a utility method since other command sare gonna want to use it.",
          "pastedContents": {}
        },
        {
          "display": "Why does the top of tutu status report have the \"IMPORTANT\" flag thing at the top?",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #12: Make the output of \"tutu status\" cuter with tables and visual elements to offset the tophalf.  the steps table is fine don't change it.\n\n## Status: in_progress\n\n## Description:\n\n\n## Context:\n\n\n## Steps:\nNo steps defined yet.\n\n---\n<README>\n# Tutu - Task Management System\n\nTutu is a task management system designed to help track work items and their associated steps. It integrates seamlessly with Claude Code to provide persistent task tracking across sessions.\n\n## Installation\n\n```bash\n# Install using pip or uv\nuv pip install -e .\n```\n\n## Basic Usage\n\n### Managing Items\n\nCreate a new item:\n```bash\ntutu add\n```\nThis will start an interactive session prompting for title, description, and context.\n\nList all items:\n```bash\ntutu list\n```\n\nView item details:\n```bash\ntutu status <item_id>\n```\n\nMark an item as complete:\n```bash\ntutu done <item_id>\n```\n\nEdit an existing item:\n```bash\ntutu edit <item_id>\n```\nThis will start an interactive session to update the title, description, and context.\n\nStart a Claude Code session with item context:\n```bash\ntutu start <item_id>\n```\n\n### Managing Steps\n\nAdd a step to an item:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nComplete a step:\n```bash\ntutu complete-step <step_id>\n```\n\n## Claude Code Integration\n\nTutu is designed to work with Claude Code. When starting a Claude session with `tutu start`, it will:\n\n1. Prompt you to select an active TutuItem to work on\n2. Inject context about the item and its steps into the Claude session\n3. Provide Claude with instructions on how to track progress using Tutu commands\n\n## Database\n\nTutu uses SQLite to store items and steps locally. The database is created automatically on first use.\n</README>\n\n---\n# Tutu Context for Claude Code\n\nThis file contains the context that gets injected when starting a Claude Code session via `tutu start`.\n\n## Working with TutuItems\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n### Other Useful Commands\n\nList all pending items:\n```bash\ntutu list\n```\n\nEdit the current TutuItem (title, description, context):\n```bash\ntutu edit <item_id>\n```\n\n## Important Instructions for Claude Code\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them. Print the name of the step you completed, plus a checkmark emoji.\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n6. **Tutu location**: The absolute path to tutu is `/Users/dorkitude/Library/Python/3.11/bin/tutu`\n7. **Print steps after updates**: Always run `tutu status <item_id>` after adding or completing steps to show the current progress\n\n## Example Workflow\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 --description \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\n## Integration with Claude's Todo System\n\nRemember that when using Claude Code's built-in Todo system, you should mirror those todos as TutuItem steps. This ensures that progress is tracked both in Claude's session and in the persistent Tutu database.\n",
          "pastedContents": {}
        },
        {
          "display": "when i do `tutu list --all` the table is wonky, why",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #10: allow `tutu list --all` to show all items, even the done ones.\n\n## Status: in_progress\n\n## Description:\n\n\n## Context:\n\n\n## Steps:\nNo steps defined yet.\n\n---\n<README>\n# Tutu - Task Management System\n\nTutu is a task management system designed to help track work items and their associated steps. It integrates seamlessly with Claude Code to provide persistent task tracking across sessions.\n\n## Installation\n\n```bash\n# Install using pip or uv\nuv pip install -e .\n```\n\n## Basic Usage\n\n### Managing Items\n\nCreate a new item:\n```bash\ntutu add\n```\nThis will start an interactive session prompting for title, description, and context.\n\nList all items:\n```bash\ntutu list\n```\n\nView item details:\n```bash\ntutu status <item_id>\n```\n\nMark an item as complete:\n```bash\ntutu done <item_id>\n```\n\nEdit an existing item:\n```bash\ntutu edit <item_id>\n```\nThis will start an interactive session to update the title, description, and context.\n\nStart a Claude Code session with item context:\n```bash\ntutu start <item_id>\n```\n\n### Managing Steps\n\nAdd a step to an item:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nComplete a step:\n```bash\ntutu complete-step <step_id>\n```\n\n## Claude Code Integration\n\nTutu is designed to work with Claude Code. When starting a Claude session with `tutu start`, it will:\n\n1. Prompt you to select an active TutuItem to work on\n2. Inject context about the item and its steps into the Claude session\n3. Provide Claude with instructions on how to track progress using Tutu commands\n\n## Database\n\nTutu uses SQLite to store items and steps locally. The database is created automatically on first use.\n</README>\n\n---\n# Tutu Context for Claude Code\n\nThis file contains the context that gets injected when starting a Claude Code session via `tutu start`.\n\n## Working with TutuItems\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\n# Interactive mode (prompts for multi-line description)\ntutu add-step <item_id>\n\n# Or with --description option\ntutu add-step <item_id> --description \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n### Other Useful Commands\n\nList all pending items:\n```bash\ntutu list\n```\n\nEdit the current TutuItem (title, description, context):\n```bash\ntutu edit <item_id>\n```\n\n## Important Instructions for Claude Code\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them. Print the name of the step you completed, plus a checkmark emoji.\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n6. **Tutu location**: The absolute path to tutu is `/Users/dorkitude/Library/Python/3.11/bin/tutu`\n7. **Print steps after updates**: Always run `tutu status <item_id>` after adding or completing steps to show the current progress\n\n## Example Workflow\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 --description \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\n## Integration with Claude's Todo System\n\nRemember that when using Claude Code's built-in Todo system, you should mirror those todos as TutuItem steps. This ensures that progress is tracked both in Claude's session and in the persistent Tutu database.\n",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #9: fix the tutu context docs to actually follow the implenetation so claude doesn't trip up.   the commands don't all work.\n\n## Status: in_progress\n\n## Description:\n⏺ Bash(/Users/dorkitude/Library/Python/3.11/bin/tutu add-step 8 --description \"Identify implementation inconsistencies\")\n\n⎿  Error: Usage: tutu add-step [OPTIONS] ITEM_ID\n\netc\n\n\n## Context:\n\n\n## Steps:\nNo steps defined yet.\n\n---\n<README>\n# Tutu - Task Management System\n\nTutu is a task management system designed to help track work items and their associated steps. It integrates seamlessly with Claude Code to provide persistent task tracking across sessions.\n\n## Installation\n\n```bash\n# Install using pip or uv\nuv pip install -e .\n```\n\n## Basic Usage\n\n### Managing Items\n\nCreate a new item:\n```bash\ntutu add \"Description of the task\"\n```\n\nList all items:\n```bash\ntutu list\n```\n\nView item details:\n```bash\ntutu status <item_id>\n```\n\nMark an item as complete:\n```bash\ntutu done <item_id>\n```\n\n### Managing Steps\n\nAdd a step to an item:\n```bash\ntutu add-step <item_id> \"Description of the step\"\n```\n\nComplete a step:\n```bash\ntutu complete-step <step_id>\n```\n\n## Claude Code Integration\n\nTutu is designed to work with Claude Code. When starting a Claude session with `tutu start`, it will:\n\n1. Prompt you to select an active TutuItem to work on\n2. Inject context about the item and its steps into the Claude session\n3. Provide Claude with instructions on how to track progress using Tutu commands\n\n## Database\n\nTutu uses SQLite to store items and steps locally. The database is created automatically on first use.\n</README>\n\n---\n# Tutu Context for Claude Code\n\nThis file contains the context that gets injected when starting a Claude Code session via `tutu start`.\n\n## Working with TutuItems\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\ntutu add-step <item_id> \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n## Important Instructions for Claude Code\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them. Print the name of the step you completed, plus a checkmark emoji.\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n6. **Tutu location**: The absolute path to tutu is `/Users/dorkitude/Library/Python/3.11/bin/tutu`\n7. **Print steps after updates**: Always run `tutu status <item_id>` after adding or completing steps to show the current progress\n\n## Example Workflow\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\n## Integration with Claude's Todo System\n\nRemember that when using Claude Code's built-in Todo system, you should mirror those todos as TutuItem steps. This ensures that progress is tracked both in Claude's session and in the persistent Tutu database.\n",
          "pastedContents": {}
        },
        {
          "display": "update my `tutu start` prompt to make sure it concats the TUTU_START_PROMPT.md contents into every claude code session before it runs `cly`",
          "pastedContents": {}
        },
        {
          "display": "what is using @TUTU_START_PROMPT.md and where, show line numbers",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #4: write all threads to an analytics table.  see END-4027 for details.\n\n## Status: in_progress\n\n## Description:\nsee END-4027\n\n## Context:\n\n\n## Steps:\nNo steps defined yet.\n\n---\n<README>\n# Tutu - Task Management System\n\nTutu is a task management system designed to help track work items and their associated steps. It integrates seamlessly with Claude Code to provide persistent task tracking across sessions.\n\n## Installation\n\n```bash\n# Install using pip or uv\nuv pip install -e .\n```\n\n## Basic Usage\n\n### Managing Items\n\nCreate a new item:\n```bash\ntutu add \"Description of the task\"\n```\n\nList all items:\n```bash\ntutu list\n```\n\nView item details:\n```bash\ntutu status <item_id>\n```\n\nMark an item as complete:\n```bash\ntutu done <item_id>\n```\n\n### Managing Steps\n\nAdd a step to an item:\n```bash\ntutu add-step <item_id> \"Description of the step\"\n```\n\nComplete a step:\n```bash\ntutu complete-step <step_id>\n```\n\n## Claude Code Integration\n\nTutu is designed to work with Claude Code. When starting a Claude session with `tutu start`, it will:\n\n1. Prompt you to select an active TutuItem to work on\n2. Inject context about the item and its steps into the Claude session\n3. Provide Claude with instructions on how to track progress using Tutu commands\n\n## Database\n\nTutu uses SQLite to store items and steps locally. The database is created automatically on first use.\n</README>\n",
          "pastedContents": {}
        },
        {
          "display": "let's separate out the claude-code focused stuff from the README.  Let's make a new file called TUTU_START_PROMPT.md that just has the context we inject into claude via `tutu start`, including all the stuff suggesting we make steps etc.",
          "pastedContents": {}
        },
        {
          "display": "Yes but that step has nothing to do with that Item.",
          "pastedContents": {}
        },
        {
          "display": "i don't know how tutu step 13 got made.  when creating a step, make sure we only do so if we're already working within the context of a TutuItem.",
          "pastedContents": {}
        },
        {
          "display": "make it so if I do \"tutu add-step 1\" without the description, it goes into interactive mode.  non-interactive important for agents, but interactive is nice for humans.",
          "pastedContents": {}
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "dorkitude ~/a/dev/cerebro/src/briefs [kyle/END-4004-END-4003-END-4005-prosaic-v0] $ tutu list\nTraceback (most recent call last):\n  File \"/Users/dorkitude/Library/Python/3.11/bin/tutu\", line 5, in <module>\n    from tutu.cli import main\n  File \"/Users/dorkitude/a/dev/tutu/tutu/cli.py\", line 12, in <module>\n    from .models import get_session, TutuItem, TutuItemStep, get_pacific_now\n  File \"/Users/dorkitude/a/dev/tutu/tutu/models.py\", line 2, in <module>\n    import pytz\nModuleNotFoundError: No module named 'pytz'",
          "pastedContents": {}
        },
        {
          "display": "now i get this when i try to run tutu anyhwere:",
          "pastedContents": {}
        },
        {
          "display": "make it so all time zones work according to Pacific time.  migrate all data in the db to match this new time system.",
          "pastedContents": {}
        },
        {
          "display": "make it so cli list and status show both the created-at and the updated-at columns",
          "pastedContents": {}
        },
        {
          "display": "if i run tutu with no commands, do the same things as tutu list",
          "pastedContents": {}
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "add tutu edit, an interactive mode for editing the TutuItem specified",
          "pastedContents": {}
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "tell Claude Code to print the steps when it updates them also.",
          "pastedContents": {}
        },
        {
          "display": "update README to tell Claude Code the absolute path to tutu, which is /Users/dorkitude/Library/Python/3.11/bin/tutu",
          "pastedContents": {}
        },
        {
          "display": "the alias will need to be an absolute reference",
          "pastedContents": {}
        },
        {
          "display": "kyle/end-4021-timeline-moment-chat-doesnt-always-know-the-user-cares-about] $ tutu start 1\nDebug: Current working directory is: /Users/dorkitude/a/dev/tutu",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #1: Add more context to timeline moment chat END-4021\n\n## Status: in_progress\n\n## Description:\nsee linear ticket END-4021 for description\n\n## Context:\nsee END-4021\n\n## Steps:\n- [pending] Step #1: Search for timeline moment chat implementation\n- [pending] Step #2: Find where extra_context is handled in chat\n- [done] Step #3: Testing the updated README.md functionality\n\n---\n\n# Tutu - Task Management System <�\n\nWelcome to Tutu! This is a task management system designed to work seamlessly with Claude Code.\n\n## For Claude Code Users >\u0016\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\ntutu add-step <item_id> \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n## Important Notes for Claude Code =�\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n\n## Example Workflow =�\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\nRemember: Good task tracking helps everyone understand the progress! =�",
          "pastedContents": {}
        },
        {
          "display": "Nope it's still moving me to the tutu folder before claude code starts.",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #1: Add more context to timeline moment chat END-4021\n\n## Status: in_progress\n\n## Description:\nsee linear ticket END-4021 for description\n\n## Context:\nsee END-4021\n\n## Steps:\n- [pending] Step #1: Search for timeline moment chat implementation\n- [pending] Step #2: Find where extra_context is handled in chat\n- [done] Step #3: Testing the updated README.md functionality\n\n---\n\n# Tutu - Task Management System <�\n\nWelcome to Tutu! This is a task management system designed to work seamlessly with Claude Code.\n\n## For Claude Code Users >\u0016\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\ntutu add-step <item_id> \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n## Important Notes for Claude Code =�\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n\n## Example Workflow =�\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\nRemember: Good task tracking helps everyone understand the progress! =�",
          "pastedContents": {}
        },
        {
          "display": "it isn't working.  when I run tutu start from an arbitrary directory, it always starts claude code in the tutu CWD instead of where I ran it from.",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #1: Add more context to timeline moment chat END-4021\n\n## Status: in_progress\n\n## Description:\nsee linear ticket END-4021 for description\n\n## Context:\nsee END-4021\n\n## Steps:\n- [pending] Step #1: Search for timeline moment chat implementation\n- [pending] Step #2: Find where extra_context is handled in chat\n- [done] Step #3: Testing the updated README.md functionality\n\n---\n\n# Tutu - Task Management System <�\n\nWelcome to Tutu! This is a task management system designed to work seamlessly with Claude Code.\n\n## For Claude Code Users >\u0016\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\ntutu add-step <item_id> \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n## Important Notes for Claude Code =�\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n\n## Example Workflow =�\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\nRemember: Good task tracking helps everyone understand the progress! =�",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #1: Add more context to timeline moment chat END-4021\n\n## Status: in_progress\n\n## Description:\nsee linear ticket END-4021 for description\n\n## Context:\nsee END-4021\n\n## Steps:\n- [pending] Step #1: Search for timeline moment chat implementation\n- [pending] Step #2: Find where extra_context is handled in chat\n\n---\n\n# Tutu - Task Management System <�\n\nWelcome to Tutu! This is a task management system designed to work seamlessly with Claude Code.\n\n## For Claude Code Users >\u0016\n\nWhen you're working on a TutuItem through Claude Code, here are the commands you can use:\n\n### Managing Steps\n\nTo add a new step to the current TutuItem:\n```bash\ntutu add-step <item_id> \"Description of the step\"\n```\n\nTo mark a step as complete:\n```bash\ntutu complete-step <step_id>\n```\n\n### Completing the Task\n\nWhen you've finished working on the TutuItem:\n```bash\ntutu done <item_id>\n```\n\n### Checking Status\n\nTo see the current status of the TutuItem:\n```bash\ntutu status <item_id>\n```\n\n## Important Notes for Claude Code =�\n\n1. **Always track your progress** by adding steps as you work\n2. **Mark steps as complete** when you finish them\n3. **Use `tutu done`** only when the entire task is complete\n4. The item ID and step IDs are shown in the initial context when the session starts\n5. **Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep**\n\n## Example Workflow =�\n\n1. You'll see the TutuItem details when the session starts\n2. As you work, add steps: `tutu add-step 1 \"Implemented user authentication\"`\n3. Complete steps as you go: `tutu complete-step 1`\n4. When everything is done: `tutu done 1`\n\nRemember: Good task tracking helps everyone understand the progress! =�",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #1: Add more context to timeline moment chat END-4021\n\n## Status: in_progress\n\n## Description:\nsee linear ticket END-4021 for description\n\n## Context:\nsee END-4021\n\n## Steps:\n- [pending] Step #1: Search for timeline moment chat implementation\n- [pending] Step #2: Find where extra_context is handled in chat\n\n---\n\n",
          "pastedContents": {}
        },
        {
          "display": "move README.md into project root.\n\nupdate references to it so it gets properly piped in during `tutu start`\n\nadd cli commands for tutu item steps, not just tutu items.\n\nadd this to our README.md:  \"Make sure all of your internal Todo list steps also update TutuItem and TutuItemStep\"\n\ntest everything",
          "pastedContents": {}
        },
        {
          "display": "make sure your internal Todo list steps also update TutuItem and TutuItemStep",
          "pastedContents": {}
        },
        {
          "display": "# TutuItem #1: Add more context to timeline moment chat END-4021\n\n## Status: in_progress\n\n## Description:\nsee linear ticket END-4021 for description\n\n## Context:\nsee END-4021\n\n## Steps:\nNo steps defined yet.\n\n---\n\n",
          "pastedContents": {}
        },
        {
          "display": "why does pycache show up in my git status even though that's in my gitignore",
          "pastedContents": {}
        },
        {
          "display": "make a standard python-on-mac gitignore file",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "cli.py",
        "models.py",
        "__main__.py",
        "README.md",
        "pyproject.toml"
      ],
      "exampleFilesGeneratedAt": 1750973326947,
      "lastCost": 2.950353500000001,
      "lastAPIDuration": 307479,
      "lastDuration": 362980,
      "lastLinesAdded": 40,
      "lastLinesRemoved": 6,
      "lastTotalInputTokens": 14461,
      "lastTotalOutputTokens": 7121,
      "lastTotalCacheCreationInputTokens": 74312,
      "lastTotalCacheReadInputTokens": 699175,
      "lastSessionId": "6f2fda06-fb37-4a70-a4af-3e7d373245b1"
    },
    "/Users/dorkitude/a/dev/c2": {
      "allowedTools": [],
      "history": [
        {
          "display": "tell me how thread templates & extracontext work together",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "models.py",
        "app.py",
        "agno_manager.py",
        "base.py",
        "cli.py"
      ],
      "exampleFilesGeneratedAt": 1750447355601,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 1.8990970000000005,
      "lastAPIDuration": 182019,
      "lastDuration": 219923,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 4095,
      "lastTotalOutputTokens": 3588,
      "lastTotalCacheCreationInputTokens": 37968,
      "lastTotalCacheReadInputTokens": 615466,
      "lastSessionId": "ff32755b-d489-4cbd-bc3f-e4bd59ba9fdf"
    },
    "/Users/dorkitude/a/dev/flagger": {
      "allowedTools": [],
      "history": [
        {
          "display": "keep checking til it's done",
          "pastedContents": {}
        },
        {
          "display": "June 2023 are you cray?",
          "pastedContents": {}
        },
        {
          "display": "check on deploy status",
          "pastedContents": {}
        },
        {
          "display": "get rid of the 2024 entries and combine them with the earliest 2025 entry",
          "pastedContents": {}
        },
        {
          "display": "/deploy",
          "pastedContents": {}
        },
        {
          "display": "make it just say \"Mode\"",
          "pastedContents": {}
        },
        {
          "display": "no that's fine i set those controls up myself\n\nthe problem is that the words \"Controle Mode:\"  are too far to the right so they're invisible",
          "pastedContents": {}
        },
        {
          "display": "okay it's in [Image #1]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "image",
              "content": "iVBORw0KGgoAAAANSUhEUgAABWoAAAR2CAYAAAClLY4mAAAMTmlDQ1BJQ0MgUHJvZmlsZQAASImVVwdYU8kWnltSIQQIREBK6E0QqQGkhNACSC+CqIQkQCgxJgQVO7K4gmsXESwrugqi2FZAFhvqqiuLgr0uFlSUdXFd7MqbEECXfeV7831z57//nPnnnHNn7r0DAL2LL5XmopoA5EnyZbEhAazJySksUg8gAhogAyegzxfIpZzo6AgAy3D79/L6GkCU7WUHpdY/+/9r0RKK5AIAkGiI04VyQR7EPwKAtwiksnwAiFLIm8/KlyrxOoh1ZNBBiGuUOFOFW5Q4XYUvDdrEx3IhfgQAWZ3Pl2UCoNEHeVaBIBPq0GG0wEkiFEsg9ofYNy9vhhDiRRDbQBs4J12pz07/Sifzb5rpI5p8fuYIVsUyWMiBYrk0lz/n/0zH/y55uYrhOaxhVc+ShcYqY4Z5e5QzI1yJ1SF+K0mPjIJYGwAUFwsH7ZWYmaUITVDZozYCORfmDDAhnijPjeMN8bFCfmA4xIYQZ0hyIyOGbIoyxMFKG5g/tEKcz4uHWA/iGpE8KG7I5oRsRuzwvNcyZFzOEP+ULxv0Qan/WZGTwFHpY9pZIt6QPuZYmBWfBDEV4sACcWIkxBoQR8pz4sKHbFILs7iRwzYyRawyFguIZSJJSIBKHyvPkAXHDtnvzpMPx46dyBLzIodwZ35WfKgqV9gjAX/QfxgL1ieScBKGdUTyyRHDsQhFgUGq2HGySJIQp+JxPWl+QKxqLG4nzY0esscDRLkhSt4M4nh5Qdzw2IJ8uDhV+niJND86XuUnXpnND4tW+YPvBxGACwIBCyhgTQczQDYQt/c29sI7VU8w4AMZyAQi4DDEDI9IGuyRwGscKAS/QyQC8pFxAYO9IlAA+U+jWCUnHuFUVweQMdSnVMkBjyHOA+EgF94rBpUkIx4kgkeQEf/DIz6sAhhDLqzK/n/PD7NfGA5kIoYYxfCMLPqwJTGIGEgMJQYTbXED3Bf3xiPg1R9WZ5yNew7H8cWe8JjQQXhAuEroItycLi6SjfJyEuiC+sFD+Un/Oj+4FdR0wwNwH6gOlXEmbgAccFc4Dwf3gzO7QZY75LcyK6xR2n+L4KsnNGRHcaKglDEUf4rN6JEadhpuIyrKXH+dH5Wv6SP55o70jJ6f+1X2hbANH22JfYsdws5iJ7HzWAvWCFjYcawJa8OOKvHIins0uOKGZ4sd9CcH6oxeM1+erDKTcqc6px6nj6q+fNHsfOVm5M6QzpGJM7PyWRz4xRCxeBKB4ziWs5OzGwDK74/q9fYqZvC7gjDbvnBLfgPA5/jAwMBPX7iw4wAc8ICvhCNfOBs2/LSoAXDuiEAhK1BxuPJCgG8OOtx9+sAYmAMbGI8zcAfewB8EgTAQBeJBMpgGvc+C61wGZoF5YDEoAWVgFVgPKsFWsB3UgL3gIGgELeAk+BlcAJfAVXAbrp5u8Bz0gdfgA4IgJISGMBB9xASxROwRZ4SN+CJBSAQSiyQjaUgmIkEUyDxkCVKGrEEqkW1ILXIAOYKcRM4jHchN5D7Sg/yJvEcxVB3VQY1QK3Q8ykY5aDgaj05FM9GZaCFajK5AK9BqdA/agJ5EL6BX0S70OdqPAUwNY2KmmAPGxrhYFJaCZWAybAFWipVj1Vg91gyf82WsC+vF3uFEnIGzcAe4gkPxBFyAz8QX4MvxSrwGb8BP45fx+3gf/plAIxgS7AleBB5hMiGTMItQQign7CQcJpyBe6mb8JpIJDKJ1kQPuBeTidnEucTlxM3EfcQTxA7iQ2I/iUTSJ9mTfEhRJD4pn1RC2kjaQzpO6iR1k96S1cgmZGdyMDmFLCEXkcvJu8nHyJ3kJ+QPFE2KJcWLEkURUuZQVlJ2UJopFyndlA9ULao11YcaT82mLqZWUOupZ6h3qK/U1NTM1DzVYtTEaovUKtT2q51Tu6/2Tl1b3U6dq56qrlBfob5L/YT6TfVXNBrNiuZPS6Hl01bQammnaPdobzUYGo4aPA2hxkKNKo0GjU6NF3QK3ZLOoU+jF9LL6YfoF+m9mhRNK02uJl9zgWaV5hHN65r9WgytCVpRWnlay7V2a53XeqpN0rbSDtIWahdrb9c+pf2QgTHMGVyGgLGEsYNxhtGtQ9Sx1uHpZOuU6ezVadfp09XWddVN1J2tW6V7VLeLiTGtmDxmLnMl8yDzGvP9GKMxnDGiMcvG1I/pHPNGb6yev55Ir1Rvn95Vvff6LP0g/Rz91fqN+ncNcAM7gxiDWQZbDM4Y9I7VGes9VjC2dOzBsbcMUUM7w1jDuYbbDdsM+42MjUKMpEYbjU4Z9Rozjf2Ns43XGR8z7jFhmPiaiE3WmRw3ecbSZXFYuawK1mlWn6mhaaipwnSbabvpBzNrswSzIrN9ZnfNqeZs8wzzdeat5n0WJhaTLOZZ1FncsqRYsi2zLDdYnrV8Y2VtlWS11KrR6qm1njXPutC6zvqODc3Gz2amTbXNFVuiLds2x3az7SU71M7NLsuuyu6iPWrvbi+232zfMY4wznOcZFz1uOsO6g4chwKHOof7jkzHCMcix0bHF+MtxqeMXz3+7PjPTm5OuU47nG5P0J4QNqFoQvOEP53tnAXOVc5XXGguwS4LXZpcXrrau4pct7jecGO4TXJb6tbq9sndw13mXu/e42HhkeaxyeM6W4cdzV7OPudJ8AzwXOjZ4vnOy90r3+ug1x/eDt453ru9n060niiauGPiQx8zH77PNp8uX5Zvmu/3vl1+pn58v2q/B/7m/kL/nf5POLacbM4ezosApwBZwOGAN1wv7nzuiUAsMCSwNLA9SDsoIagy6F6wWXBmcF1wX4hbyNyQE6GE0PDQ1aHXeUY8Aa+W1xfmETY/7HS4enhceGX4gwi7CFlE8yR0UtiktZPuRFpGSiIbo0AUL2pt1N1o6+iZ0T/FEGOiY6piHsdOiJ0XezaOETc9bnfc6/iA+JXxtxNsEhQJrYn0xNTE2sQ3SYFJa5K6Jo+fPH/yhWSDZHFyUwopJTFlZ0r/lKAp66d0p7qllqRem2o9dfbU89MMpuVOOzqdPp0//VAaIS0pbXfaR34Uv5rfn85L35TeJ+AKNgieC/2F64Q9Ih/RGtGTDJ+MNRlPM30y12b2ZPlllWf1irniSvHL7NDsrdlvcqJyduUM5Cbl7ssj56XlHZFoS3Ikp2cYz5g9o0NqLy2Rds30mrl+Zp8sXLZTjsinypvydeCPfpvCRvGN4n6Bb0FVwdtZibMOzdaaLZndNsduzrI5TwqDC3+Yi88VzG2dZzpv8bz78znzty1AFqQvaF1ovrB4YfeikEU1i6mLcxb/WuRUtKboryVJS5qLjYoXFT/8JuSbuhKNElnJ9aXeS7d+i38r/rZ9mcuyjcs+lwpLfylzKisv+7hcsPyX7yZ8V/HdwIqMFe0r3VduWUVcJVl1bbXf6po1WmsK1zxcO2ltwzrWutJ1f62fvv58uWv51g3UDYoNXRURFU0bLTau2vixMqvyalVA1b5NhpuWbXqzWbi5c4v/lvqtRlvLtr7/Xvz9jW0h2xqqrarLtxO3F2x/vCNxx9kf2D/U7jTYWbbz0y7Jrq6a2JrTtR61tbsNd6+sQ+sUdT17Uvdc2hu4t6neoX7bPua+sv1gv2L/swNpB64dDD/Yeoh9qP5Hyx83HWYcLm1AGuY09DVmNXY1JTd1HAk70trs3Xz4J8efdrWYtlQd1T268hj1WPGxgeOFx/tPSE/0nsw8+bB1euvtU5NPXTkdc7r9TPiZcz8H/3zqLOfs8XM+51rOe50/8gv7l8YL7hca2tzaDv/q9uvhdvf2hoseF5sueV5q7pjYcazTr/Pk5cDLP1/hXblwNfJqx7WEazeup17vuiG88fRm7s2Xtwpufbi96A7hTuldzbvl9wzvVf9m+9u+Lveuo/cD77c9iHtw+6Hg4fNH8kcfu4sf0x6XPzF5UvvU+WlLT3DPpWdTnnU/lz7/0Fvyu9bvm17YvPjxD/8/2vom93W/lL0c+HP5K/1Xu/5y/au1P7r/3uu81x/elL7Vf1vzjv3u7Puk908+zPpI+ljxyfZT8+fwz3cG8gYGpHwZf/BXAAPKo00GAH/uAoCWDAADnhupU1Tnw8GCqM60gwj8J6w6Qw4WdwDq4T99TC/8u7kOwP4dAFhBfXoqANE0AOI9AeriMlKHz3KD505lIcKzwff8T+l56eDfFNWZ9Cu/R7dAqeoKRrf/AteGgyldlGOCAAAAOGVYSWZNTQAqAAAACAABh2kABAAAAAEAAAAaAAAAAAACoAIABAAAAAEAAAVqoAMABAAAAAEAAAR2AAAAACgc4/4AAEAASURBVHgB7L3nkxzHle5dYwHQW9CLAJ1ESUtJG7uSIjZuxO6X+97/effDxlptaEOG8iRFD5AEaED48e/zO1mnJzs7y3b1dA9QCdRkZebJ49JU1VPZWWv/5//8x9HOzh+KnZ3fFXt7HxQH+1eKg4OvitMajqT4Wg/lqUfI1a0rC7VO7995/JXzFZ64V/01j111fq4rO709q38/qPNzXdlp9pWPm6oxVWdbnU/qyup4noYybOvrr6p696q/5rGrzs91ZaehD1Xp2NdfdfXqyqr0OC35fftBnU/qyk6LX6r0nMdf49xV5dXZ/Do/15XNcjo9OX3HTV29urLT45m8pn37QZ1P6sryWpye3Hn8Nc5d7du5zs91Ze0lrB5l33FTV6+ubPU80E2jvv2gzid1Zd20Wz3qefx1UnPXxsaTxcbm+WJr62Jx5szf6PhBsbmz83uBtOE42P9CINv+6nm3pUbewfo0RlUjILqurKVqK0k2+qtfs4z9q9lv3reaKWcp6sZbXdksp9OT4/4a+1a7Nhv91c5PKdXYv1KPzKa9b82WNOfUzU91Zc2cV5fC/TX2rXZtNPqrnZ9SqrF/pR6ZTXvfmi1pzqmbn+rKmjmvLoX7a+xb7dpo9Fc7P6VUY/9KPTKb9r41W9KcUzc/1ZU1c15dCvfX2LfatdFp8dfB4bXicPdmcXh4qzTsKAC1+3sfFYcH14qjo512Fq8oFQPSG2NFVRzVugc8cK9O/EM2zTgWu3lz9Fc3f43U/Twwzl3NfhvHYrOPYorRX7E3xvNFeWCcu5o9O47FZh/FFKO/Ym+M54vywDh3NXt2HIvNPoopRn/F3riHzo8OhGMeGCYLNkuwFbWHh9cF0t5ZiqUxsDrEZNaXh+vRt/5JOc/1RN68uvatP6QOi/bbkLreT/7qa2vcnn15eJv1rR/rsMhz1xMZQ+jal4fr0bf+In0U83Y9h/BXX1uH1CG2bRHnQ+p6P/mrr61xG/bl4W3Wt36swyLPXU9kDKFrXx6uR9/6i/RRzNv1HMJffW0dUofYtkWcD6nr/eSvvrbGbdiXh7dZ3/qxDos8dz2RMYSufXm4Hn3rL9JHMW/Xcwh/9bV1SB1i2xZxPqSu95O/+toat2FfHt5mfevHOizy3PVExhC69uXhevStv0gfxbxdzyH81dfWIXWIbWs6B5Pd279UHBzeKDb39y9rGerp3e6gydg25XFDtKEfaUYP3OseYEz0ndjm8U08Fpelwzz6n3Td2F8nLXuUN3pgFT2wrHkjHovL0mEV26NKp9hfVTRj/uiB+8kDy5o34rG4LB1OUzvH/jpNeo+6jh5YlAeWNW/EY3FZOizKp4vgG/trEfxHnsN44OhorzjSTgeHhzeL9eLosJErDZs2btu8JuYxGJTj2VR/3vLYrliXefjm7Ejz0nRbebGOfXm0lZXSpfJiXVLaLumUb5qGVy6vjYxYx7482sjJ0aTyYl1y9G3yUp7UaZvXhn+sI3xPMsTy0CPWpa8ebX2To2uSGevXp34T/6by1F9N9G3Kc3akeWm6DV9olumvVOdYl7b65+hSvmmaOrm8HK80L9axL4+UZ9t0Ki/WpS2PlC7lSXnbvJRXLh3rCN+TDLE89Ih16atHW9/k6Jpkxvr1qd/Ev6k89VcTfZvynB1pXppuwxeaZfor1TnWpa3+ObqUb5qmTi4vxyvNi3XsyyPl2Tadyot1acsjpUt5Ut42L+WVS8c6wvckQywPPWJd+urR1jc5uiaZsX596jfxbypP/dVE36Y8Z0eal6bb8IVmmf5KdY51aat/ji7lm6apk8vL8UrzYh378kh5tk2n8mJd2vJI6VKelLfNS3nl0rGO8D3JEMtDj1iXvnq09U2OrklmrF+f+k38m8pTfzXRtynP2ZHmpek2fKFZpr9SnWNd2uqfo0v5pmnqTOUJo10vimag1oVRmeBxSIW/uby4vO4cB8ROmIdXnZy0LJYTy0/puqRjnl4vl9emzGnSeChdU75d0kPp0MY3MU183lbfoXRtKw+6VM+hdUj5xzJzZV10j3Wdl1dbubGcWH7b+k10zt/jmD6XF5fXnaNrrO88vOrkpGWxnFh+StclHfP0erm8NmVOk8ZD6Zry7ZIeSoc2volp4vO2+g6la1t50KV6Dq1Dyj+WmSvronus67y82sqN5cTy29ZvonP+Hsf0uby4vO4cXWN95+FVJycti+XE8lO6LumYp9fL5bUpc5o0HkrXlG+X9FA6tPFNTBOft9V3KF3byoMu1XNoHVL+scxcWRfdY13n5dVWbiwnlt+2fhOd8/c4ps/lxeV15+ga6zsPrzo5aVksJ5af0nVJxzy9Xi6vTZnTpPFQuqZ8u6SH0qGNb2Ka+LytvkPp2lYedKmeQ+uQ8o9l5sq66B7rOi+vtnJjObH8tvWb6Jy/xzF9Li8urztH11jfeXjVyUnLYjmx/JSuSzrm6fVyeW3KnCaNU13r+Kd1h0qnOvTlW6e7l3mMjHB+WGx2EejKEjszj7vw6ULr/F02dcmL0134xbRuR8prHv7OMyeHPLcnLh/yPKd7Lm8embG/3J44rwtv91dVfeffhWdbWuedyh7CX24XusT8h+Cd8oztdZvivKHOnfei7HH+sb5D+ytul5y8WPa8585/kf6KeaPvPP6KfeO2x3luj5cNHed0z+XNIzf2l9sT53Xh7b6pqu/8u/BsS+u8U9lD+MvtQpeY/xC8U56xvW5TnDfUufNelD3OP9Z3aH/F7ZKTF8ue99z5L9JfMW/0ncdfsW/c9jjP7fGyoeOc7rm8eeTG/nJ74rwuvN03VfWdfxeebWmddyp7CH+5XegS8x+Cd8ozttdtivOGOnfei7LH+cf6Du2vuF1y8mLZ8547/0X6K+aNvvP4K/aN2x7nuT1eNnSc0z2XN4/c2F9uT5zXhbf7pqq+8+/Csy2t805lD+EvtwtdYv5D8E55xva6TXHeUOfOe1H2OP9Y36H9FbdLTl4se95z579If8W80Xcef8W+cdvjPLfHy+rio6MjfSsLfYg5iWuLK//X1uzQnwmr47OQRa00j5LALvA2WceZnCnAO8jghH/l/1Csv65Rjv+EqOaEelX6Uc35pyxaAbU5pVxgynDItCntmpdKeJI4p1dX+SmPIfinPNGJPOfdVce29MZff4i9H7tMy2vLqIIuZ1cFaafslK+nXfdOzLoQlwKOJDCVuQh/uT3z8HY9YzM9z/nHZUOdG+9SgPvL5RG7DvPIS3kMwT/liX7kOe959K2ra/xdSKmEJ4lzetXxy5WlPIbgn/JELnnOO6fHEHnGX3+Ix7mrhUfLBvGxSI0yK/iwBYs6krQfDME75Yl8z3P+dTr1LTPepQD3l8sjdh368qdeymMI/ilPl+O859G3rq7xdyGlEp4kzulVxy9XlvIYgn/KE7nkOe+cHkPkGX/9IR7nrhYeLRvExyI1yqxx7krcZ35J/DWkrxCXjpsh+Kc8XY7zTswcLGn8XUiphCeJc3p1FZ7yGIJ/yhOdyHPeXXVsS2/89Yd4nLtaeK1skHHuavaV9y0o3V+l+waZ5+Gbjpsh+Kc8XY7zJr2IEPvLDXOZxDm9uuqR8hiCf8oTnchz3m11DEDtkfZk1aGf+xtYS2UQVk1OgLTra+vF+sZ66Ysg2XxTKuEyLS8SHPIDSHt4eGgyAlirkpI/5Ovr4m+yJEP7DRhYG/EZ4jT1l6dd95yMVkBtruIi81zxiYyZjEnJwk6WILKTLehX2bCrrnwnSxdIXOPERbiwRtzcRlb2hbk5BwY53XN5A4k7tWxm+s1MxuJNW4LITkbV9ptVV76TpQskrnHiIlxYI25uI8e5a24XDsJgpt/MZAwippbJEkTW6pMW1o6DVVc+NWZZ6RonLsKFNeLm9sA4d83twkEYzPSbmYxBxNQyWYLIWn3SwtpxsOrKp8YsK13jxEW4sEbc3B4Y5665XTgIg5l+M5MxiJhaJksQOdHH+qHAUgNQDw6KczoeFlB7TnlBL5Xp7EgA6l2hp7cON4q7GxsG2q4JWG0Kxl/g7FF5PAx/nW+CoEkG5Qc62AT2pvjdWt8oDsS/WEPGIqDaJo1nyydArRmj8lyDedls9XY5cf0cf+eSllk6yUySXtXitnK8Uo6+jn9dPS8jjvnG+W3P4/p1+qRllk4yk+SUCm3leCWnj3nG506Xxl6P/JQ+LkvrOX0TjZenvGN+uTLLSwqSZMxi0q51NHGFnF5t6ubqOV8v83Qaw7+JxsvrdMmVac6aCZmsCU0bORNinaT0dbzr6uXK4rwu564Tder0ScssnWQmySk12srxSjn6Ov519byMOOYb57c9j+vX6ZOWWTrJTJJTKrSV45WcPuYZnztdGns98lP6uCyt5/RNNF6e8o755cosLylIkjGLSbvW0cQVcnq1qZur53y9zNNpDP8mGi+v0yVXNs5dqbeP06m/LJ1kJsnjykmb1dF5JW9D0k7vsdPk4ly9mC4uj/Pbnsf16/RJyyydZCbJKRXayvFKTh/zjM+dLo29HvkpfVyW1nP6JhovT3nH/HJllpcUJMmYxWROqKOJK+T0alM3V8/5epmn0xj+TTReXqdLrmycu1JvH6dTf1k6yUySx5WTNquj80rehqSd3mOnycW5ejFdXB7ntz2P69fpk5ZZOslMklMqtJXjlZw+5hmfO10aez3yU/q4LK3n9E00Xp7yjvnlyiwvKUiSMYvJnFBHE1fI6dWmbq6e8/UyT6cx/JtovLxOl1zZOHel3j5Op/6ydJKZJI8rJ21WR+eVvA1JO73HTpOLc/Viurg8zm9zbnUBaTn2D4r9vV2BqAfF68Jfn93QCloxoQ/tqZzji4O14gOBrLd0XmxsFhvrWHBsxfFZkO78WT17uL9frOk4f3RQvCrGD4mYVbOw2tGfHa3k/XBvrfhw/bDYVTqs4A0AsfP1uM42k1kSpPRxWY4H9DmaCVCbq9QmzxXJMW9T/16jafLDveAvbHQ7TqL94s5bJ3eResXtukg5sT+7yqnzjfON7fC8RcRd5XSlH0Jn99cyZA+h/9A8mvxwL/gLG92Oof2X44cs92ud3EXq5fLRb5FyYvu7yqnzjfON7fC8RcRd5XSlH0Jn99cyZA+h/9A8mvxwL/gLG92Oof2X44cs92ud3EXq5fLRb5FyYvu7yqnzjfON7fC8RcRd5XSlH0Jn99cyZA+h/9A8mvxwL/gLG92Oof2X44cs92ud3EXq5fLRb5FyYvu7yqnzjfON7fC8RcRd5XSlH0Jn99cyZA+h/9A8mvzQxl/GQ3/Y7uDg4LA4K6D2GW1v8OrWenFWQOwZrXLdFYgKkPrA7kFxbX+v+MYqCURlGwQJYe2ty5qyUYCrbaEgcHfrYL84s7dXvKDFsm9ubxSPqy6bKOyL5ppW2V7bPyq+Vryu5bWHkhm2RjjZeQvdscP96ja1AmrjirETnEnMPM5zWq+fK3OapjhVPKb3Ms9rK6evXnX1vMx1ieNYL6eL85y2rsxpmmL3SY6/lzmPHI2XxXFfverqeVksx88XrZfLIXaf5GR6mdPnaLxsiNh9kpPjZXVynKaufq6sjmdahk+qeMT+qqJJ+UFXxzOlb5t2vil9rJfTxHlOX1fmNE2x+yPH38ucR47Gy+K4r1519bwsluPnsV5OF+fFdPO2o/skx9/LYnl+XhfX6dy3nvPM1c/pXkW3iv7K6domz32Ss9/L6vg4TV39XFkdz7Sszt9x/2orp07nVHaXtPNN68R6OU2c5/R1ZU7TFLs/cvy9zHnkaLwsjvvqVVfPy2I5fh7r5XRxXkxX1zecri52n+T4e5nXz9F4WRzX6RzTped19bwsrUN60XrFMt0nOZle5vQ5Gi8bInaf5OR4WZ0cp6mrnyur45mW4ZMqHrG/qmhSftDV8Uzp26adb0of6+U0cZ7T15U5TVPs/sjx9zLnkaPxsjjuq1ddPS+L5fh5rJfTxXkx3bzt6D7J8feyWJ6f18V1Ovet5zxz9XO6V9Gtor9yurbJc5/k7PeyOj5OU1c/V1bHMy2r83fcv9rKqdM5ld0l7XzTOrFeThPnOX1dmdM0xe6PHH8vcx45Gi+L47561dXzsliOn8d6OV2cF9PZHsZCXNnK4ECJuwJW9w7Xi6e2NorntrcMTAVQhe7qwV5xQ8ctgbi3tQ3Ckeqw8patEVL+gK0H4nVGAOyTOs5rg4OLW5vFhTNbxWMG8q4VtwQO37gDUHtQ3JEAwF/2qp18uMwVbRk32lrBJ9U9JpsAtXVEVHDhXjlHn8uro/eyLnHdYIdPnQ45OV3pnUddPS+LB5TneX3iXJ6X15U5TVUcy62i8fyucrrSt5EDz1TnVE6adr4eN5U7XS5OZcc0cVlXGV3pY7l1dSlr0qupfiyr67nLJk7leBk807ImOV3pnV9TPcqb9KrjUVfmOrSJc/6K63WV05XeZdXV87Jl+SuW6/pWxa5rVXma35Xe69fVoyzVOaVP087X46Zyp8vFqeyYJi7rKqMrfSy3ri5lTXo11Y9ldT132cSpHC+DZ1rWJKcrvfNrqkd5k151POrKXIc2cc5fcb2ucrrSu6y6el62LH/Fcl3fqth1rSpP87vSe/26epSlOqf0adr5etxU7nS5OJUd08RlXWV0pY/l1tWlrEmvpvqxrK7nLps4leNl8EzLmuR0pXd+TfUob9KrjkddmevQJs75K67XVU5XepdVV8/LluWvWK7rWxW7rlXlaX5Xeq9fV4+yVOeUPk07X4+byp0uF6eyY5q4rKuMrvSx3Lq6lDXp1VQ/ltX13GUTp3K8DJ5pWZOcrvTOr6ke5U161fGoK3Md2sQ5f8X1usrpSu+y6up5WR9/UTfYGEDaNYGkB4cBqN3XCtuHBZh+R6Aq+8cKcxWIWxSf7e4XX9090DYIBway0muOtE2C6+E6E9uWBwJqN0X7tPi9JsTzlTMbxUXxfGRTS2sVvt7bLz64UxTfKL6ztmXAL4DxPPvT5nQxYfrjNnuaOKVP05vBSXGVdud967XjXk9VJTs1rp5Lv9Iq2U3c+tZr4ttUjlxCzje5vEA9zN862akEdHF6ylbFX6leqd5Dpt3+Nu0S67UsX3k7EbvOsV5D+ibHq6/dfevldOiaVyXb/deVXxf6KtlNPPrWa+LbVI5cQs43ubxAPczfOtmphLTPr4q/Ur1SvYdM9/XXsnyF7anOJ+2vPn142f7K6ZzLG7JveVv1kbMsf6V9K/ZHHzvi+k3ndbLTuuji9JStir9SvVK9h0y7/W3aJdZrWb7ydiJ2nWO9hvRNjldfu/vWy+nQNa9KtvuvK78u9FWym3j0rdfEt6kcuYScb3J5gXqYv3WyUwlpn18Vf6V6pXoPme7rr2X5CttTnU/aX3368LL9ldM5lzdk3/K26iOnk79sJaw2LxA4uqGPeN092Cg+F7D6sLY5eHb7wLY82NLqWe2EUDyhFbavnt3SHrLqR1oJ+6X2nDUQl/0PWFbLrIXCoLqk2PJANI9o24MXBea+eW67eF4rdB8QIAzFbXjsHRRX9g+Lz47Wi+uSf6Rjo1xRa0xa/gkS8/NmysJUjDKpS15VMG1dQBWR58MoZta2ntcfLJbgWHaq12ByEkYmM5GdkEwlU71inacIF5lAaKJzqtfCxGdk18lK9bqf/GW2lv6q81Fchr88LMVXCM/onLaj6zhk7P5qa3eqU9t6Q+psvCQ4lp3qNbi8kqHJTGTXyUr1inWuqzdoGUITnVO9BpUXM8vIjovT81Sv+8lfZmvpr9QvVWn85WEpvkJ4Rue0HV3HIWP3V1u7U53a1htSZ+MlwbHsVK/B5ZUMTWYiu05Wqlesc129QcsQmuic6jWovJhZRnZcnJ6net1P/jJbS3+lfqlK4y8PS/EVwjM6p+3oOg4Zu7/a2p3q1LbekDobLwmOZad6DS6vZGgyE9l1slK9Yp3r6g1ahtBE51SvQeXFzDKy4+L0PNXrfvKX2Vr6K/VLVRp/eViKrxCe0TltR9dxyNj91dbuVKe29YbU2XhJcCw71WtweSVDk5nIrpOV6hXr3FSPjWZZwQpQe0fHZ0JdP9KesV8JQN0R2MrHxjZU/rhWwb56drv4vgDX8wJm17VfbSEQttBqWYI2RzBngdNSZ12A77aA2ke17+13hPS++cCZ4rkzm8U5AbEHKr+u7Q6uaiXt51qq+9naRnFDsg91rOuwzW/rFE/LMDiIT0uy6S7+mmx9kOVUkYkAdBrDanpgqn2mEqup76hVfw+MzdvNd6O/uvnrpKmn2mcqcdKanH55do3mjkVh6jwkZq7huNtvTuxcr2V5UT0JSsTJSX7PE3gF7RSXOvVk1bqay7MKJGIlclwqbA7qTnHL1c7mhbrZosbMfhKr2Mp4b9AKpabkTSWqeA6fX6HarKCKtnLCYz6LM2SK81TCtUjiCp2Drm0YJPwmDZrm909PaVHOJ/XcknmjnrhzaewbnzfiPBhOdOYk6uZMaKHLH2d6uiRtpQ91JjJa1ZglsvoywGMoZs6VF/Qr60t/D26JpSd2eelqxUP4a7Usure0mWqfqcS9ZedoTfMtz+ijaQ+Mw2HaH4tI4WPbbkDxgUDSmxubxVcCTy8LqP1oZ08razfto2IArE9rj9ldXTef3dkvntI2CDeUB5h7oGvg+prQ27XwAbFD5T0ogPZxHS8o+zmtxj2vunycjBW6gMCXVf8D8bkinPfm5maxxqHyvvvTLsI38JRWyY1AS0k4Ng7hBkM5PfnFvHLnsTzbeDhHtOA8dOgjO9bdVbwv/JUz3B1QE+equb+i+9QaDt2KpuRNJbrxmYcasX36FjJTld1X41jMt8jor7xfcrmpr6C5L/pXzvCcg5K8XDX314nPXYAAlYfa0UAC005TRQmu2M0O5+EIwEYow7bchv0hf3YeSlxTnTQ9gj7HnauafNASmR88EHEtGwq7zDaK8EdJEtrz2LdldvcoJ7sll1hnzl23ltWtfY+NU61glPWJWh5z6FzLt01hjWzrr5gRtZP7BNPUxfhbjgfOCZYZThf1t6POEzXKcUs6qN6ga2y3Ge7WTzg2nuRqBNlBC9fD4xmGrgOMRESb1IWp0qlEXS14ezuG+FBfg+bfJN9ITMtSj1IX9DMdy7hMMw6Cql2UmB1zwS8SDr8aE0rNQl9Ed60GmpqnS/3JIxivCt3DPB1o6PsTejsb/g8SxvvU9n7t66/QktNy2vav6VrtU7HMvm3cXlqesuzC+cKa3Fh3J3N/9eXpfHLxlLypRI56MXmI7dtOqcruq6a5q68lsby+OveV7fVGf7kn2sV9/RW3tUtq07+sngYrWw8cCjC9qevfJ9qW4O1bd7X69Yytpn1QZee0bcFjWln73OZ6cXH9qLgkIPaKVs7uU1cALFdDQNpDrbR9SPkvi+a1bUDajeKsQFhW5kJ1XUDt+3f3ij8JqL26tlkcbW0Va+I/AWpd+ZZx33mmzl/OczNH1FKvPBktMjjTaVELZj8tLEkNJtt6bsJ8QcnBdF6Qfk1sJ4NchCfQvZrUWVj54O10As4aXOcO3h1c9uivdt63AdmOdF6qwdt4XoU61jdXlf5adPcKsgyy0ER5ZD/9OeKGpQQDiA8BBRRPhfLGxfLkcG5juEFY09vpNd34AAbYxvrQlQcEx21jlaZYNiXQYAJOmH5BX2Z48IkJ78lJE8fhy1O7sXmis/sXZZcVStFEEzdNTuqVovVkTlQTv5d9p77qSpaG/nncX4NpwRmTNvP+v8w2i7yX1bkstwcNjV10JzT1Mm92xux6OWZthIZGLrl2ixBNjzD/2RhFn5CX4zTRQQ9DrGxRZIFxNE8w290PivlJY5jXwtzmcxqAZwilPBcbGDCh0esV6ShXzdAG5i/TWRVcV6PtqTXyXHbJwm2YxDpBb9rZbHGbiHXEPjtmFc6O5+Tj/m59qXS42TdRHZtm1JmU9jk51qdP7UydjL8yVHNlDa5zB20Gk22dp4PgOUgH03kOHeapGsZZ4HAC3WseVeeqO3g7nYCzBte5gwcHlz36q533bUA2kJbX3CNdxwBqb+s6eFn71K7d2TNg9uLZQ9tbdlt0jwisfVbA6yvazmBPgOs1AbJ3VM9e1PPcIvC2UN4jusZeEKD7irY7eFL0Z3RvtC++O7pV+FrbHnyoFbXvi/SGgNxCMrX3Qrg/aFB1kcXmqtJf3r16bX2QU5IBwJuSZQTvA0sS38/kUtll6Hza/IWPvG+N/mrubrG/mqmHpfC+BddltFUfa1bBX6fFV+bfUtll6Oz9axmy5+1bi9IZnwC+AlTw4H/AoZsUjn3djEyv2IL4qNjS2+Ot7W3dm2zaxvkAFLs7O8XO7o4Bu9BY4OZJihsApJN13SCxj5Rttl+CGw56GEAAfahZ+deB43300/5QxA5MSTn7P6ncxGxCOPRJAHSwM7bZfXtoOgfge2jJnfiV7jI3dfAVrUS7eqC5Q4uHv55/WuJ12knHpn4yt6mft9FH3TzrZ9qnzMcE/c+tXaZ9QecN6axD45B+5uN4T/ru7e3ZuGivI3u8yQfiZeMavjq4Esdt3YYfHjIgUR/b2NfKlH3pgk5heNb1kaDD1uZWqQPjJ7RFDD621YF5yIFZbz/a80DzmoGcKjcguQSUNyXX5jb1Ac7xx927d4sdHYxdA75Rn3lKhwOc7jef22gbcxp0bZSFpQ6/T/UqYRqVDZKNHcwbB+ZT9A9ztOlvXVK2wEeMzpw5W5w9e8a4Un6gNtjdVRvs7gYCowvtanaU/R+9scH6Fror7XaiU9c2oM6iQs5fi5KV8vUe3LZt0/pLSZfKLkPn0+avuG+N/mrurbG/mqmHpfC+BddltFUfa1bBX6fFV+bfUtk6nYNPy+uyrlvsFfutjiOtqr2k41NtgcC18RHlbQtwZTuENw+3i9t3tMes7k1uSZBdY1WXfWnP6J7lGa2mfVEfD3vuzFbxkOrxKpePh32ha+l7Wk37hTJu6J5xT2V+zVx2Lwx+CL3S/TUYUAtbZxpEnODfcqQva0l9H0uX5Stz1eiv1k0W+2t5Hby1uhPCZfUvU6DsX6O/Js1RfTKOxWrfJCXxWBzn+uCc4JMA0gJEAMzua4N9QB4OHu4NnIAcUKOMH3zwweLM2bMlqKGf/OgOaFcgAPT7uslxECRICQ/40GwJBAIIcSBoQz9BWhdfAE3d6YQhz91URUC+A8rot3N3p9hV7CBMRbWlZDvoAfDh4A++Cb4NPsJPpzFYC1k7qUWsU0yi02iOgVO007b65hn9c/uIrZ/pJQQx44O+tgrBQMGyb509o5cmR5sGJtKn7mpc7EjnrrpuCaDc1gsYP8LXi7G2ekymvvA5gpWeAISAg3fuCOyUPmVXSatMpZkbABm3j7YLwabaDy6AhdRtq0XQITx4oQfg7J7mpt29XbXjNIjt8xvxuXNFOT9tSYez1h94GXRL9ZnfAEnxrwOWxIxz9xvj/Ig5rpzDDKZtq3TWvgAkI5O2NADe7AhzHvNJGtAHoPbMGfVjrQ6i3s4OYO1dPZTeScnNljBXyQ4AcntRwcuKY9DWAdsubTAjaAEZHVw7rPSyI4/3Ec1u9bEI5eivbv5qPeE1s104xdLGIpaV43H0V4tmvofnLuuDuvZyvQKovS4Q9aZWzF7a0xYHWv36gK5p27omPqrnjmcE1D4gwPaKyv+sa+pVXf/1GrM4XNfKWV1XH9O9yzNaRfuCVtM+J1q2PRCJgNr94p3bO8Vf7+4XX+ijZbd0vWfLg+MXyi3aYMEk6VgcFKhdsO7V7LHKB3o11VJLUC91/jIUMleViqyCPsvwQS+ZC3TWqvSNXn6pqtTBX/ek/VV+SfPx0zh3pV7Jps1VZb/q0L2yvE57JjccwK4AAIeTVW/7lsdKsnNCLB577DEdjxtg4avsDJjQjdBZlRuQIVAHwIj827dv2wEwYHzhXQIMgDQAHXcEFNwRncV379hqNUCCABSElYHOj9VqM0GKO08DPXVDhR4vvPBC8eyzz04BKDN1TygDwIfj22+/LS5dulR8+eWXpWTywaPXi8cff8z0ffrp81bmwM8JqTiXGNr3q6++soNzwDza4LHHH5ddj8/F+yQrO0BHf/rss8+Ky5cva6VlWDnLfmW0CYeD6w8++FDx3HPPFk8++ZS1Ie140u2W6ozevFgBiKRvHZSrLB9++CHrXw888ICNZUC7uhBA6P3i+vXrxddffy1g7+5kTIZtCPBFHYdQxqXIdJQy9A34AhY+/oTmEYGHDz38cPHQQw/ZnJFyY45g9eqtW7eKGzeuF3cF7uJf5gMpo0cihQYlkI8jfJsWVs7SfvhlXQ9gZ8+eK55++uHikUceKXjZxDwXAM0AuAJQk+bgnHkPfTiwxec2Yo6bN29K1xsW37x5w/RH3r4eEHkJxYpk6ydlX2nhQmtH5mZWR5sc6W48xRcglXn5Aen+sHzJATiMj5DDwTntjn34j/6N7sy5+Jf24YjnUVYM35X/b98OtgL0U4c5G34b8l1sjz2NyJg29tAk91zAcOtsq2sZ6q1C+5irSkVWQZ/VbbFEswU6a1X6RmLxfMkO/ron7W/rPfx0L89duuaZiboWAtYe6Bp+9XC/eFcrYLdVAFj7iLYzOCO6dQBbgbEXNveLu1op+/nuUXFT9ytPHh0Ur22tFS8LoH1CNGyXwJYHt/Ws9JkA3/e0L+2nWmNxU/x5Mcu9hXU/0a1i3+oF1MZ9xIxr28EWRBcc3J65699W9670qSZen7itzJTHkOmuOrj+beo5Lfq2oc/ZNQSPHN8+eWZDB0O66u70xB3ETJniPPrWn2I2Z6Kvv9ra77aiZh97560/p3tmqvf1V1vb3d629KmCXp+4L4+U5zzprjq4/m3qOS36taHP2TEEjxzfOA8ZDgQ4AMBKWH8o5yEfwO3NN79ffP/73xcw9aQ9+ANeGGCrm5PNaFUs4ACBB3sOAACAAEAG+MP32rVrdjggRnzlyhfFN998Y0AOPFiVdmZbgNK2tnrSjY927Te+/sf0BmDQEX6+LEBE/NHvRz/6UfHzn/88gCK6WVpmcCDkvffeK/7t3/6t+PzzzyfqAHoAhAPQ/t3f/X3xk5/8xMpOGvCbKNTjhDb+wx/+UPzxj3+0tmUV6hNPPFG89vrrxWuvvdaD4/Kq0Fb0of/8z/80YJ1+yqrJtUJ7m5V7tVLOKsxHH320+PGPf2J9jXEAQLaMgM60wX/9138ZsOo688LFxpzG3QsvPFZcvPhK8fzzzxdPPfWU6V6lK/wA8XjR8u677xa/+93bxU2Bj6GvslqEmoyp+nHlc5f1f4GMjNFd+Q0Qn/7OyxT0IWYuSYPPER9//HHxzjt/Ka5/e106hP3mTLLGTmOQLchnWwBWP+9pBe2O5h9lGXAJeHnx4kXrp+jC3AHw6bbGMefMS8xf+NtAU9lETB7HJ598YscHH3xQvP/++5rjvrUXFzaf6SeTgL38igDNWeUTf6zO/TXr1WOQFrmTQ4D89qNniqeefrp46aWXzA5sYb42OSVg633T+2fwB7+WCPOlz8/Ol3bnZRLHp59+avZcvXq1BM1vhzlfNmzLHv0pNjW/MsXqb+uHUreV9pu1t7FVp3CFPvWbJXSjMB06KOL2t63SlT7V3usTt5WZ8hgy3VUH179NPadF3zb0ObuG4JHj2yfPbOhgSFfdnZ64g5gpU5xH3/pTzOZM9PVXW/vdVtTsY++89ed0z0z1vv5qa7vb25Y+VdDrE/fhEezTX0BTPUcc6bL15e5h8Y6ecc6t72sbA90f6VrGdWxT93jn9dzxynb41cwNbY9wXTcLT22vFz/Qr3ountWLUYG6LBq5rev+Nd1TsDL3r/va/1Y3Rnf0QtZW0pb3il11d3p80MdW6rXh0QuohfkYRg+MHhg9MHpg9MDogZPzABf18CEdAanl6juAB35qzCozjvPnz2s13jPF3/zNW8Vbb71lQA8AB4CLAxkAERwAjA4yAgA4CAA4YKCRwAEADVbpAcqywhTgCGCPgxW7XgZYzJtpZMCTNXRTNy+gLRP9BUohz3Q/W7z88svF3//93090MsIl/TGgSrpix9tvv20+wS/4w38ibcCmQE10JrgPl6RyJ7GsfAT0AVjjnH7xzDPPFD/4wQ+sv3RitmRi2grACsDtV7/6lYG1Dmyt6Xe6gLUAt7QdgNgrr7xibeZg2DLURz/GFKDar3/9awGa34YxrXzAUdrm0UcfK1599VU7nnvuOQMkq3SlbwLWAdYSGKNfffW1+qR+Nq8HExuLGus6mR6PVQw1TN2H+A1fPS1wERAf/3GwkjUNAIWs1GZeQQd7GSPf82KG7VEY/VPzQcTAZgbR+BzEFgHsi8tDFL6g7QBlmXveeOON4nvf+17x4osvWpqXUujIga3p4Tw9xiYHapkr4cnKVsYBq4VZtcrBtg/Q0r8IxjecWDr94zbYPtbyOzGBecTmX/mMcYb/vG3xKWWTl2iyYTJ/0mZloD28TTymn2AHq4WvXLlSAM4yL/FCghdptAVzMyuGOfA9vCfb1MhXYxg9MHpg9MDogdEDq+QBuzJxfdoI18Cbeq64rOvdk3uHWjV7UDy/fVA8qLKHdI18XCtmX9b2Brd0zf1WL5aPBOq+pOvoRe1L+6xA3AdEw2rar8t9bi/BQ1dD9r9lxS4vYHXTYuYj167jq+QM6dIKqHXF/bLucZUtKT10ubyq+vPkt5HTpH8qvyt9qgP1ycvxMdqy0MvT+qk+Q6XbynG92sjtQgs/14Fzr+sxeWkwev6IyOmch6fTOkOl28hBh1K9VmK70ud0qLPb6PUnvifP8WilbEeiNnK62l9na069VIem+ik9PHN5OVnz5rWR06R/qkNX+lQH6pOX42O0ZaGXp/VTfYZKt5XjerWR24UWfq4D517XY/LSYPT8EZHTOQ9Pp3XitD2sKwPAwYAM3Ziw3ysBAODVV18zwBNgh594s+LsueeeN/DBfwbMg3oK0BqD8o8DAiQd2AAQAJgBEAEsYTUYIB9bAxD/4he/sIM0wAYHX1JnGZyvQHM7ie0ogQfOWTnGqjj0JQCILDPgAwK2Yrf7hHhDb+ABdADEKY+3a1imzl1kA84CUAG+AfRgI3b40YXXKtBiA/0HsMtBLm/DMEhDe1JOm7Ei1AArjYVlBdoAne3liR4qGDO8gLFD/Yz+9Z3vfMfAUdqJsVcVsBUfACjyMoWV4F8LpOOn8PwknrF4xAOJ6NLxCE8fbcTBU/wNwCDzCysxATMBGC9cuGB65YBadEZPdHhQwKrNH6pv4wdBkj91I0KegslUGfQOVPtq0fPnA7CJXF/Ry1xH/0UWICe6xPMaPH0OITb52F4eJkdzGj6nHnzgDfgLwAmAfkkHK+k//+Jze5mB3jzQ2QsuzpGBoCgYf9nA9hu8tCLNPuD0OwBZDtqU+Zmxhk9pW+Y/QGa3ARkEt8FFuP7EBJ9rAZfxA7zgC5ANQAtQiw2/+c1vit/+9rf2AoA6PJxuyAZCaoNlZv60pfOqQcNj/k31U3r45PKc/5BxGzlN+qf6dKVPdaA+eTk+RlsWenlaP9VnqHRbOa5XG7ldaOHnOnDudT0mLw1Gzx8ROZ3z8HRaZ6h0GznoUKrXSmxX+pwOdXYbvf6UU4TplOPRStmORG3kdLW/ztaceqkOTfVTenjm8nKy5s1rI6dJ/1SHrvSpDtQnL8fHaMtCL0/rT/RRB7SPfQqQ3RMYe+Nws7iiLQ0+0qrZx/RrvRcExD6wvl08rPLndY+yx1ZDujae39gvXj8nkFZ5bJGwpfuf69rH9lNdk3+nvWk/1ScKbuk+nu2NuKZznXVdkB2fT3SpOOlCCwu3lXOv6zF5aXB/tQJqvXLpX09mY2dMoW88HiuXrTRQ5knJqVO3Soe6xjB+VEyIMll1onuXnZSc3grGFascLJqTsqNJTtKMsfbZ8670MGnSwWl8ZnB64pMIXeT0sb+rDW5/XT3TuVR8nLuOPdXYPhnnZrKOGQ54dlJyBlG57Fs5Xm3sgAYgh4dtPpCzx09p+WmuHvRffPEl/RT/77SK9m8MCAAMAAQyIEgP5jE4mwIAOX08z8EBVmkB2PoqLoAUwCHfkxIgAHDAvmouHTcARcQEcGjqjr9kHPjKHpUDUvhKYJe7CjGr0wBZQghAz4ZuCvEp4AjlAEanLQASAhIBWtKGgDzY4eDtabOHvkj/caDWwU67n1L38z7MWAGUW4UXArQBOqMTfYpxY18s1ngASKR/AR6y0py2grYuGCiqel988YW9SAFwZIXlLe3BCgDInq9razpgEj+BVzBl2Mpx5jvmF/o6ICMvaVjJyhhIA6tSAZ9Z3XxOQK37ndjvQ9I6li7lOIBKe6Ivq/Ppo6z0ZouRCxcu2IFs2hq9sI3DHrZa2YVhx30CnekPzGOsSGZV8O9//3sdv5PKR8XVL68a6IqMTR7s8CBONEcaK/tj7pL/gw2sig6/LvCVwNjwD//wD8XFixfNR8yntD1Hn7nZfFragUzaJ56bWUELYM42FLxAM6BWfcw+piZ/AwUnJhwbM+AZfmmSYy0SmmV8Zox83+S3cIGNKui0jb+na/RLnZScftoltcq+leRa8qTsaJLT2NaJ8l3pqd6kg9MYYURf4z6qDBa6yOljf1dFO/tLSqFXFzu66hTTn5ScWGZ6XqVDY/tknJtmGQ/9Koj7ln1df3f0nPClPir2kVbUPrSmBQYCWZ87c2R71j63pl/UqALHc9sbxav6heF57U97RiAtfG7q2vep9qX9Ax8Q03X8jngd8nK0BGrb3BOltp9IunRwJ6DWHJdo5w3lZcSAHISpvChthS3/pI1XV81k1xGcQFmTDnX+cvWch/vP89vEffzVR04bXdrQNNma+mvSqTLM+9jRxV8uso8crztUnNMh9ZX5tiR0esvrqUTKv47NPHLq+PYtc/vj+qk9pnNJ6PSWp0qejus3nXfpWy6nieciy5t0qPOX6+U8TspffeS4rvPGTbam/qrrRHV2GB/9CXtYhv02AWkBJ1hF++ab39NqsDdtRRhACmAJ4FvVz4G72o0cwAT4EQNaADAAlgCasKKNfELQVX/tpL0kl9G+xuIpp8CfiT268VNjub5u9+K1GU6Ct6GDXB6Tf1rtQW9rL7lp0lScRAMrbjPOlxnc10EP61BT6lDu49fbZ4ogSUAPeAfYDigI8Pi2Xp58LsCW+vBiGwhboaK6WJ+4J3BUZvBfeNESMsMHweDhuhCnIda3yb9BRuAAKMs2LgCNgLTsTXvx4kU7vvvd75o9bBUAYA2A7StQYx82yXNdocNPTm9+ieY36C5cuGBjHKDznXfeFfjKxxUDaB28cuw5s6MEmtEbG+C/pfmRbWF4ccb2M69r/2f4YgPgLXMnst0G5LpOnDeF2A7vK+Rxjn+cFx9LY352emtdlI4boEnYHOX0szS4aC8jHp8ZUy8dp+v85VTmQyXcp57fJoZ/23rzyGmjSxuaJh1Sf9UZ19buWK8u/vJ6feR43aHinA6pr8y3JaHTW15PJVL+dWzmkVPHt2+Z2x/XT+0xnUtCp7c8VfJ0XL/pvEvfcjlNPBdZ3qRDnb9cL+eR9ZcV6p6b+zsAVr2UvKzr7FmBtU9oX9oXOVcZvxB5RKtun9Mq2od1b/KkPjC2pTw+HvataD7Uh8g+1ZYHVwT8sppWNzJ2rbTrpOiysl3BAeNaWyUn9Zcr1gqorTWi5Owr0LApR5/La7LflSZuW78tXZPsecqrdDB7Rn/NuLaNv7wD5GhzeTNCMhld+1dfORnRvbNqdVhg34oVRkytHiVxG5qY7yLOa3VYoL+69i1sr9V1Ec7J8KzSwewZ/TXjsTb+8obN0ebyZoTI7zz8s3JqTzcdgBkcPOy/9tqrxf/9v/+fgRr89BWQ1ldqcRPixwzPlhl2IyPaGFBAFz9Y3etArecdgxnHQrDTx8RxbjhzHXPgT0p7kmlsTgN2oC9lxKumc6pvLu1tSRwDb36eq7PKefRB70M6sYlUXTQMOzpd1PHitsMm0ssI3n8meidKUA6Q56Bk237GHPDDH/7Q5ofL2ieWLVI22WtVYOPGofqz+SfYXGe5uUx/zI+q4/qgU1U/ocwP6C1M/H/cCMdnomBe0/YItCEffGNeY9Unq3f/6Z/+qQCoZQUvdvlLodhnfdrP6zgf7MHPvlKXfFba/vWvf7W5FH0mq7SnlEd/TGBuLj++phXq+ICPKgLK8pHE//f//p+tePWtLtyHLj84qvvfnB0+B7sM9q91oBYJtCc0pnh3ka1r1PUtH4/jM+OxO6v8Zd3N/qjFROR0Hh9zOC6L85rOS9bWJDmeufpt6XJ1h8qr0iH2lzsrR5vLa6NbV3/1ldNGl7Y0tTossG/F+iGmVo+SuA1NzHcR57U6LNBfXfsWttfqugjnZHhW6WD2zOkv460/tu2Q0Mo7h9qr9kAvpXWv8KLAWkDYdS2jfUi/SnpE1/HtM2vFrq5vrLYFqP1az0yfacuDD3d2i0u6jl9Z39Q2UDp0jZ7cg2VsWmRWG395wzptK6C2Vmk4eQ+rJexeuEDW3ZUZoMbEHp1wPoaWHhid1c5Rkw7Wjrwv1T3THAv01wJZ9222uepN7NEJ52No6YE5ncWl1YAAgRn7Alz4wA5A7NPnw36E3/3u9+zDNOxNyGozwIYUSPGHd1Z78fNeDt/TEoAEAJjgAC+gRXoACjj44gABdTw/ziM/DvHtwTzuQE+OADTEEoY9d/6ARn7uEpDPthPuP2jmDe5D928VP7fd27OKrikfnfnpvfcD5PMxKvLmtQdebg9xXRiiPfEFOtO36csBUMvPUchz2yc36TU6xnY02eJt4m1UZ3eqc64O8tKjjqeXMQcwF7Cy/kkBhewVy3zgW6YEngC2eR85H2u5qPlSXUingbymPhzXObJVqmFP170S4Hz66fCBMFaismcsWz+wXQV2OfgY8+Ac/9H+HIxL+rGPT/KYy3xu8xheHIRYZ9qGXyNQ79y54DtNAnrEsZlY1PFsRiqAtPQ96gCMPyZ9L168aCuBsYG2YF72udn7ngnXH+pyoDNjktXQ9NN4LNKGrrvPzejPudvhbQRfL6MOdXPt5fJPPKbrTLtxMBUWyHowHbswmtijE87H0NIDo7PaOWrSwdqR96W6Z5pjgf5aIOu+zTZXvYk9OuF8rlDeDx3oWnZbQOs3unf4XPvOfqSVsofanezMuvarFVirO5BiW4LYAoFblBvQaMuDD3YOiq+O2OtWvywSD/tlEQQcqxYyKlUCtfF1NFNvYpqV1RFMKPudLJD1lEJur8vzdEzkZXGen8f0dXSL7Bd1cl3PIeKcrXGey6jTx+nraKysjsAF9YwXyHpKI7eVTJcZ5zmxl3k6jp2+jsbK6ghihj3OF8h6SpucrZ7nhHW6xLR1dFZWR+DCesYLZD2lkdvr8jwdE3lZnOfnMX0d3Th3BY+5v2p9BWkdgTu/KQYkEEgLGMEX3Hf1AM9+la+//ob9rPbNN980YIY9D/2hPX0oB3ygPgAGezDyhXD2MORnseQBMFCHVWQcgCJ+AFr4NgoxEOBqp7I8fxExYAbgBfGiAz4DOEll8SV3B4PwHaDKvMFBmBgwyvF0QIrY2zRH15SHzgCz3v7YSHuTN4896M+BPQSPq/RBLr7EnnkCPDjox7QPITf0kIN9rDJENwe4qmRTzuF2VPV12oKAfNOhRf9ED3T2/uw8qnRpm88qe987mf1dAQ2DfzTOpdc6DylCybTtW+VDSvBdzoNttaingzPimddYrQq4yce3HtNc893vvlH8+Mc/sbntwoULtkctACdzW258+DhgLNJ/r1+/bh84JGaOA/j0eY15k3mStP8KIJ3TSNPmvjUBaZ/vU6to9iBfIK18S9vTnvifPXV/9rOf2ZYHyPN+lMqDJ+MA/dGZfYX5CBhjk35Kn8VuAFf05/A5mZhx6+Mu1c9lEbcJbmdM7XlePy7zPI9j2jo6K6sjcIY94wWyntLI7XV5no6JvCzO8/OYvo6uZfM5205xndxOjBqIc7bGeV69Th+nr6OxsjoCF9QzXiDrKY3cVjJdZpznxF7m6Th2+joaK6sjiBn2OF8g6yltcrZ6nhPW6RLT1tFZWR2BC+sZL5D1lEZur8vzdEzkZXGen8f0dXRDzV0mQ9fBIx18BOyW7h2+0HXzvbu7xba2dHpya7N4ULedmxLI3SdyqXNd9xcfCqh9f/+o+EZbIxzpPgKglhW6ENXpXmdrbL/T1fFy+joaK6sgqARqXfj9ELsT7wdbV81GfF/RN1dN1ZXQ5173VzwW3dY4zxvByzx9v8Y539yvvjhpu0+qD/KwzseGWL3F5vePCGxgz8a//du/tZVb/pNafzB3PzgQBIDBQz97Ll6+fNm+bH7t2jX7yAyAEQADAT4AGQ5meAw4wL6KgBu+MgzgpC0A4PoQW3/t2Wn5KA5AxjxgYqxL1TngC8cl/XQcsMeCLlJcpwBV7gpUQRd8+d5771WxaZ0P4MJPu1k5WBXQx0EobzN06RMAhfiyPYA957Qr4aOPPjIQqw9P6tAnAJToK953crywhUAf5MXBPO0JL8AxbAGUwyf2gQiNE+ufdscebsgZB3xk69133zXgDPCsLtAugGzEAHccaUC+A7T0CcZYkz3UYWyiM7QHGn9DzSW0AcAyYCEfFGRFKmOGA9+wz/XRhqRVPaScwM2Ytb58wLyGTqysZXA9+OBDms9eKX7605/aKlT226UvYU8813j/wXcAmoxRDsYH/uejhsS0B/MefZG5jfHFQdpfRHkcrzwF+HRgddLeUtH0LjPCueYJbDA7jlfu8nEyXqCxKhiw3MfXhJdOsJ3+yuG6A9DSP+kX2MKBrehD30N37IiBZ+ZmB56Rgx0cHmK/eV4uTm2jG8R5Xoe8E+giLm5l45xvVlbZe0yxsQ92a9B73V/xWHRb4zz3lpd5+n6Nc75ZeV9wv6JrIUDtgVbO7mgLhOtauPLV3oE+FKZf1KiM6xK3e3G4o3uLrw+Oii9Vekd1dTGd3EskpHG1hZ337YOVd6oY4Q3qcZNhbemavDAPn651nR6dYvti+9OynP4xvfOM+aV12tCkdarSfXl1ref0rkdsX2w/5XGZ08dxTK8xZhXq6rjsOpqYf915X15d6zm96xLrHttPeVzm9HEc099v/optd5/U+Sum9zaoo4dnWzqXXxXPw6drXadHl9i+2P60LKd3TO88Y35pnTY0aZ2qdF9eXes5vesR2xfbT3lc5vRxHNMvaiyavmLOl+ABAmyvyU32UTxXPPPMMwbAvPbaawbwOWgaP5TzgM+DPkAYX2F///33LQYc4wC0AiQA5AI0IPCgHwOypD0PmRyAEHyNHiAIuYAInULaEB0qs2fkL37xCwOdOlTrTOpAEF9MB6wl4Fvewh9o+wn8Rv5///d/GyDUWUBSgZ9Gs/oOAMnkpHeboqeNPvzww+Ltt982+9EBsK9PoM3h9cEHHxjISDt+/vnntpLvL3/5Sx+WVseBTfoIH7Rif9FcwL8cgNz/8z//Y300R9eU5+0E2Peb3/zGgDnO6ZN8OMv+0W74UwdA2C9/+UsbF4B/RpfxtcvFDsYY7QOQngNqaRfGEoDhn/70p+J3v/udyXEeaew6A+7+Vh/7YizaStfyASIew2ndNmnqYxcAJC9zfv7zn5scgMvbt3cCAKmHnHV9VONIPmKyYz5bdGDY+6HGV3/WvKa2oi+iLyAtoCY+9+0O8DdlacCH+B1A8w9/+IMB7w5sAsz6wRjhRYTPafRPzol9XqOPctC+5DMWKkM8d5V92OxQW6JPmCOfNZCWPgOwipxcQC/mF8Yg4CwH/RNwGVvQHSAaW2lT9EJ3Dn9Z5jYA3iKPvXwBt7EFsNb7Wk5+nBebRb73B+Kqsri+n8f0Xs8CFqd1AABAAElEQVR5OU0at6VL66Xpefh0rev06BDbF9uflqX6ernz8jjml9ZpQ5PWqUr35dW1ntO7HrF9c/kLxmIQ83MZHrvsOhqnbYr78upaz+ldn1h3zuPyuMzp4zim1zRyX/krtt19UuevmN59XEcPz7Z0Lr8qnodP17pOjy6xfbH9aVlO75jeecb80jptaNI6cdrkRfdqnLK9wRndwxBzK5ML5G9wqBASvxectj5X87h9vTQWwbnbRHlc5vRxHNP3GYuVQK0LN2VKjeLNzGMlOI+VTsv6puHZ5ICYd1cdYvqcnFxeLC89nzRGybjOX163q41eLxf35dWnXs43ubycnp5n/ip9ZR2ogoGTUK+Pri7P63u6L6829WKdkZczLZfnuuXiKX/lCMq8VHYNaWNRX15d68X0Ob/k8uqUN19BUDKuG4ux7DqeXcrg2UXnrjrE9Dk5ubw6/bv4y/l0tdHr5eK+vPrUy/kml5fT0/PMX94INUo4CfVqyJztcSxi6Fltxio4vih+9szZ4mGtoOJhHDADIIYHeFZ/pQAPD+k89APS/vrXvzZADBAOgIADoAigBIDBH+h9FVkaA5gAWCGPDxWRBjAgxKu3LCPzx/uW+8LjDGltFmDzv/zLv9hHfmoJByoEgAPgIgQAbM18BkDKaloAoT/+8Y9zS/vxj39sABUr8NJ2dOa0Eyte//3f/93AHdoWMKdPgBe6Yx/nyKQfsdLU27UPX4ApPqAESAvolgNq6Wsc9D2A2n/+5382e/rI8zrw8xcQ3MBv6WdwawIifR8y9ylA2P/+7/8WjAPyPN/5pPH3v/998zGgLuAYtqUB/+FHVnECGmLPhwLBm4LrTDtyjv/t53hNFRvK3S4HaknTh9GNOQS/2z6+/mTDYOw6+TXoUFtctj/bHgBQA9QCOKIv/nWgtmpegzc+px5ALe35H//xHwZu4kvGpq9wJoaW9mNO84M5izkMuf/4j/9ofZ48L6c9/HBbfM6KY2j4EBp24Ff0p8+wmhbQlJdZuT5GPQdqeXHAuGNu46Ua+nPAj4MADwBrt4OYAx+hN3KYQ/hwGXUAnKHHdmTVhbg01w1yeXX8oDeeJePxvqvOW2HotfWXc4K+a7t43TTuy6tPvZzOubxUxzht/cscptwaJZyEujVkMevK8yF4tdEhloMyOd/k8ioVL3k0TAFWPZVdx7OprC+vrvVi+pxfcnl1ukNvPEvG49xV562Tn7usPbnB495N/3SXV+jbYfbRMNK5QC4gLUCn3/IYXZ7cinJ/cuS5vFxdz4N+MhbpYxUM4n7tZFmg1gtdwCRWQVXnNSWqZU9YxCdVcvrwgq/Xi2XkzpEbhwp/xSS151V2MOqr/OUMu8iulFMy68LL5RM31RvSX3U2WCeWMqk+pF2HtCy2Iz6vktOHV8yX8yYdXFev10TvdLm4yg7vW9RJ+cc25njm8qrk9OHlOqV+yMklry1dVf04v8oO91fqK+q6jbmymHd8XiWnD69Yh1hG7jz1VRedq/hleUjQOHdNe6yqzaEaeu5iVASwgJ/W6qFdoAMgGj9nBsxg9SUP6jywx4EHdUAAwCMAAIAAVvoB2AJk8PB+/AAfVmtx7+OzCDKRBQ1AByABwAE/lSdm5SAgJR8s8p+FA3whz7hkO5MVzf0Hu7AB4Am9HMAgXkQADIL32bNnBOLwgbVN8wurEcl3f3SVHdo1rArknBV02EYgXWUPNPxMGh9wANRCm1t1WK9T+Om99wNk0tbwJ69bwI5gC3oAHAEC45uqgDwCKwbj9qQ+9lTZX8WPfPQHaINHANzCz+W5gd/WODkQMEcZH+NDv7wMxlwAAvED7UK/xhYHzVIdsIUy5NMebg+ygj3UyPXP4HN0JWwRy3ZWbA8RmBtYaQlgCIDIT+TNbukCYLupZSjoh0y7ACvKaTmELjEP/IVvzWf6KB9j7FnNaYD6AI3Mb96OVfUAwlldz+rl3//+9zYf0Xe9/wIC0yexx9v5UHPo3l7wOe1JWzGXAWATeAmCr1iNiu84aPuZdg9d1yZ8fu3ASzRoiJkPWdnKylrm6lxfpg0A9ZlPkY3+YTXtl9Y+rjs68aLB2oeEgve18GE49kMOHwXEtnfe+YvZhB3wBfjGj9hIHv2TELexm2IFc/6BV8x7wk4FVfcR0FfWmzCYPqmi78MLzl5vWspsCrlxyNoaEzScV9lRd5/qLLvIrpRTMuvCy+UTN9Ub0l91NjBfo0yqD2nXIS1D/1yoktOHV8q/SQfX1es10TtdLq6yw/sWdVL+sY05nrm8Kjl9eLlOqR9ycslrS1dVP86vssP9lfqKum5jrizmHZ9XyenDK9YhlpE7T33VRecqflkeElQ11zufbD0vTOLYXzbO1SAbutZu6Vr2mO6TntVS2ZfPbhZP6b6cfWpz4VE9H104o+vg0UHxge47bqq+BV1bj3Tkag3pr9iGVL8uc9cMUOtKVgpQQVVj5IxOlfN0k5wuvJwncat6LlzErehjAcm5s0qyj5MV/uoq1+UQp3XT9LHw+rM29UyuC1eFNnWqpDqbnA2TOirM9a8ucpvkdOE10UsnbeqZ7FIB7rPnCU12TK5WGTmZrEpVmuR04RULaVNv4i8Rt6GP+afnTXY0XXhTflXpJjl97WhVz4UP6K8qO6v81UrPiKmrTJzWTdNRtdrTNvVMrgtXhTZ1qoQ6m5wNkzoqHHLuCqDGMRjgQC1bDzhQm4IBgAYADICZ/tNyVmuRJn9D+zsB7nq9dbvBOb5hAUQxqE43QtxIABwQA26wIvGSAAZWkbJ6kpVcxAC1AfwKnjBwhMmvdBbRTMhmzlBNZQDEAJ5hCzY4GOZg9bzz7ZQwJbAbnqy+C+DfpkAZVqDiG1b1afWegKbWHUv8MJv9htnOwgErwFf8S3ub71JFTJcArk4DtbRnWF2HEl3st3YWmOUyAXLI290NgHFGhZms0D8CUEm/Qxd8RV8AgKsLyPX2ZDUsbeltyh6zrX1aCoGft9GWQPXNDVbV0n5rsmvL7PQtRFgBGVriWEO3BT74gsN/gl4H1MIBv0HP+AKoxR50wR7khzF2LMvPTOeyHzMu0aGq/b1O2xigkbEJcA74CIgIQMhLGNoKfyPf5kQcRd+0RFsJHeno+MjQP/OXdMBn9BPmMlahvvXWWwbUojsh9oW3C/SAtP/6r/9qQC0gJNt2eHB/E/PPwE7Zybg9OqKPhz6PDvAE1GRlLlsQvP7668WFC+EDZoDbWaBWgmgnO8oxbGCtzh9++BEDe3mJ5ataXS+P4cm2KX/+859tHgWopZ/x0gLA1cdAsMPHQdkwEmpzR3CkbYvDPHT79i2BtHfF97IB8rQ1QC0xwYHaAPziV2uK8EfnJXdXsXNM0xKIs7zwV4WcLL1xm/3TJKcLr5h7q3ouvMKOmF/TubOqpKvwVys9I6Yuhzitm6ajarWnbeqZXBeuCm3qVAl1NjkbJnVUmOtfXeQ2yenCa6KXTtrUM9mlAozNeUKTHTZIEZCRk8mqVKVJThdesZA29Sb+EnEb+ph/et5kh021FXK6yG6S04VXbEOrei68wo6YX9O5s6qkE8G8YxHeLoc42Biu25u6zp7VvcNjulY+uw0Iu20fEtuuGDiPbK4XF8/opaseaq7tHRaf6p7D+Ov+x/gm9UyuC5/TX87m2AYTPf1HhW38NQPUTnMJTnKBadmpTdNCp9So0GmX4/l5ZWfdnslciJyTdtm8RlTpm/prUXKq5J+i/NRVp0j1alVPsVHL7Krzys66PZM5mByuT1zEeTjXzQkgEz/V9T0Iq4AAB1TZ/5AHdFbS8pNaA87Ey8AL3aQYyKmbFAND/GZF5fovsQjXG2eBGoe6iyC9K5AUYPKuVqJ9IyAKcINVehyssIW//dycG6ByxandCSEjmDKJqzt3fQkAE3I48AtgmINgAZgxteuZdCgF2FhbD/t5OsC9vs5X2AX+GfATbh6NZVPDB5fSoOZdABYHBLGHNm4K2O/gFjHgE+1IW9GE1pZNTMryDeyiahTMhCY7nJ6OUtJiCwBSrFtbe7w9aUsDp8wQs2jC30XWxfiBVaIbAmg3NmWbgE96Huw2ldbmAlqNIT3xP7rPBOWF/9YW5t8S1HRQb6aKMuDlYxQ66nHQR9DJ28TjmIeNQelMGQf1c3Rxnbbn8Ga7BmKAQ7Yt4aUC4xawn3x8bkE+Ml8pkfNMW5nNdMFX9pJC/YU2AtjnhQ9buVy4cMFWAed8QD/xj6LxYohfCQCuAorv6SWHAZwGege/Y5/ZJL9O2kj9VLC6xk2ph3QAWOeFAfyJeQkESMvB3AmA6u2jk0mftDZX29Nm1j8Un2N7DG35AfAMQJ4L+B69WQ38oVYGA57zcoQuaX1Gc+cE4EeerOA/AZmhjwb91zQ/k8W8wMrZsKL7mlYDb1vbc42gjXnBRsDf/msAfLOoAOfF9qNFaV7D9xQbtbiWrvFXWTSv7KzbM5kLkdNs3rAU8xpRpU3qr0XJqZJ/ivJTV50i1atVPeVGcS3hWeRI4OwZXevOa3Xsy1pN+/zWhkDajeIB3WtBc0v3dxy7uig+rGvdQ7ofeJD7n+3N4rryP9Xik0d1b7Yr+j3t08+HyQi5+w3Lt9L+f7Juz2SS1RRmgNpcJe4X4gtvjqapPFUkxyOlWVTaZA+kQMrGebs/0nK3qanc6Tyu4uPli4rdnqH4p3aQ5o2Ch+jUsyw+Tf7KvSGZMqZlIueLRfgrJ6elinOTuT1D6JDjMc5d1U2U+svS+tM01prKU4mpnLR8UWm3Zyj+qR2kFzV36bZED+EAS+WhG5SzAmodRAC0zQXABlaYAWYAoLJaCxAC4IKVapu6eQHI4uYkrLA6fmS3di3/EDnAEce2r6RWhQFgsHISEBgZrNRjJSQAILGBGzkF5bR52wXegBlsRYBNrKBknIc/OaH98gJL+UfM2T8UkAOgFhuPNsNKY9qpS+CGc10/Wd7fDwASIEvXcGw/e1SGfSrhQf6JBZltfRRwkRZV2gGmrjqgN4ASWxRs0qYAiB1tsTaSHhOAlD5Y+gTwlpcHhxthFWVosel2sz6utgFE5KflAM8B7OtmjbcNW2Wc0WoPeIQVwrNt4zqbJ/VwYUCcad1NJvXgFQfSPubZKoVtBQAUb+tFy9esSNccQJoXELRfUj1mNdg5HkdXX1EOmHnu3AM2p7HlAVsGAC7mAvMaL55YgcoqWNvKRSAtW0Vsy8/0PVZR0/6M1eBbccIwfFvKNvmym3HHiw7CjuYyQGBecgFksxqVg5ddzHH4MYCo5imrAx97kUVf0QH/bYHO7CGODb4q2IijPwC1rAjmQ3LM08zN9M0tPXBigx2l/t4otOykt+rErEE+vixj00fXCublsK3DDQOx0d1skB8Cf2wJ/qGrTfeaSNEOpzke5vaIR45mYpPocuVRdTttQ5PWGSptsgdSIGXjvN0fabnb0FTudB5X8fHyRcVuz1D8UztIL+q+ayidu/Bxe1I7u/Bw2hwP519HQ1mX/pWT4/wXHbs9Q+iQ4zHOXdUtmPrL0vrT1HeaylOJ8PU6XL91sS2OdM1+UGDtS8JX39Bq2ucFwD7Cs4xo90VzTVs6Xd7ZLb7ZOygunjtTXDy7XpzT/c1T2qX25sFm8fyuVuGq7OuD9eKa7gUP1dAz900oYkZxMn9IWZldUWZ0OiXMbffyGaB2ijpKeIUoazyt8UBbf9EgbWlrxJ3qonvN/kXb08TfB/lp6RRN9sxrx6L5z6vfqtVv669x7lrs3H0MBvBAfjhZfcYKNFbL5YKDDYABX3zxxeTnuwAHZwSMsKpqAqRyR1oRuDfiVilEAcACkNgr95UE6AAAMLBAN08EwDYHGwA1ARpcAvGkv3im1er+h5srACbkAeoBVk5uuGps6i6pbN/SDmQIZi02SnAEfuafNoxLfwKsuFNYeTnRuw2PksbsF9gC6B72zg32B7cmzk2SHcTUk5Y+oE/wc3L6g61A7uH/iT3qo9sl+D5xUkv9ncz8WbaX9z/6CuCUjSezKmq18jT0Y61QVl8+2N8MAJrqwKNtQDYHsljFy5izlxdqpxwf5xz2Oj2wuh3EmT34Hd2ROQHgSoU9DQDKR65YPcpqztBmAWAEgMQFrktbW3vRSU9sNTBcMYDmY489btsdoCPzGmM6DdgHAAk4+6tf/ap4T3tvA6je0gsjwH2ODdVjPHgbYJH70ppYPAj8BWA92Aj7ygKU7unFyY0b120+u3LlC7Xbtq2IZZsCfkkA33W9nFkDBMZR5qwwJ1vbiTdyAZ4BeNmiJmcH8pkz2Z+W/cN3du7auDl+4aQXCrQjQnTk2iRYgRGlPYrNp+oHB3pQZU7Z292Tj5mTjzkwLzNXmh3wRgQKLTAsmv8CVV8K67b+ouXb0i7FkBMQeq/Zv2h7mvhP5pUTaLshRDTZM6+MRfOfV79Vq9/WX13mLnjaPZuuceu6vm3o+saWBy9trxevajuD87pXPKfr5R3dg95U2ec7e8W7t7VQRdc/9qw9LyD3AZU/omvf+a0jrcDdK17S8wsv4m+I374ugrZPLRfDEwx9pM3eFfVU2JyqurESPvjjvJ7s77lqo7/mb9Kxf+V9WNm3yllyHI/Tfqv0l8hGX037itTor1mfdM1pmru8PNyoBDAM4MdXe1X9tJYHdVa4AtICChBsFW0JVhl4o5uXSb/O3aQY8EDNABawYYKqGxhBLkACQAAAHat+j442DTcI4FT4oJOBGhAvIBgYg27SI6yekz2AKAuQZYiG+Bpv5AGQ4DMO/NRWJuSiXtdNooNJfTWmPvKJaQsHSC2/1Kec6ttq15nObnDxhUIAsII+nRlRn2NiR7kaUunOQXUmteJz5a6thXYjChKD7l4hmMIq5znkwxm51jxluzDW4vGWGgW9+oRVcmVSmoo0Y53Vk6w25cUNB4Bc0GHiCfspPh+5YkUqW5Uwj0ADyGu00q/qwxoVojtnM48ZqClbkUt49tnnbG9a9oblw2eue8zc6qkOdjKn8UuBqwJpsR0wlBXYvKywn/XLDvx4bLk4kaZxFU+CyLR2tQRE2XJAq61tHpOOmtNs72nxt18JGLjJim/A2rJviBG9xx8inS/6My+7fz2fGFoCwDAAMFsVEOyFE9t1iPeEv+vqsVGGP2bFlD30s8Db5gHNg2aPfBb0w/TQF/GVbQtS2hGxXcoptqB51DKWRpk4j/QYgk9Gf83XE8JIGftX6sXKsVh2uHE8Tnus0l8iG3017StSffzl11deLD+oe4aHD/aK59ePihf065PnBMKyvQGXyG8F0n58d7d4785O8adbdwXU6mNjul4/owUcT+ua95DoHtTxgurc0rZHe7uHxZe6vgPUwoB7H2J0XNUwGFCLgTOGlrPiUD8FX1Un9tUr9pe5avRXpStjX0EU+2u241WyuW8KUn9N7oBx3EzhfeOWSkNnXDKOxUpfURD7Kx6L41w/67bYV5TG/ppyZFxVD+N+o+I/sQUA4AMxHFVALUAAQC0rziZggG5aHKydrNiKZaXn3LhEgSQAlvANAzcAJHxVXvi4Fvc5ASCgzFfsRiyGP+XGCpkmN5yfyM2W5BHsb3nexjibdtWmh2yfoAPd0bdvoL4dANQOIDk/CXPOntVXTlU965voIFkOFPf2v9uSxL35JUoHH0hX8t0x5cnxWGRVJKCdYvnUZIeKCbc2ybJtrK1DH7X2rqhqDwqUTStYQX2cDeDpoB/twfzgYJ9TIRdwlr1g2QLBgVoN6MleukdHWvHLfNPbXpdWHbM23+YxbTeA3mxHwXYHP/nJT+wjXgC1uVWozDPQA9SyVcA777xje9JiL3Maq0RZkerjIatBZBcuDg9maBTA0UPxYUsXwN99W5Xqq4191TpgcABTJx1I8vGZ/phI5DtQC22uvdEZGd5mtMnZs2cMPKUubWf9LmtElBnbI4PsBZDyjuChA7+E+Vk2SqbN+erTBgarzHSLeEScT/zUunwsNbhTbTTxdFx635/H/jJXjf6q7BOxryCK/XV8Haisft8VpP4qp7bguJnC+849MwbPuGQcizM+ijNif8VjsW6u95e757Qw5Gm9TH1eHwd7UdseANRuce8rAQC1Hwmo/bNA2j/e3i0+3z8USLtbvHxWK2t1nWP7gwcMqNUvb1Thy8Pd4q8Cc28f6GW1rrmH3D+j6IpcE00V/kRhUKAW58eNYYmy80Yyx9PSA7G/8BsdljDlw5C1lL+xfktRoI3QVXGWdF1pf1kHk5Ir5K82zXtSNDNt5/46KQVOmZzYX+aqsl+tSveK9VtZ17Z0FrYQHIywB/qQNfOXB372rwXM/VZ7ONpDuTOoGfyN/uImRkT20M/Df6mP6xLrZjJrZM0o3SdDOgBCcCNH7OH4zHPax7PNAeDWvn4dJWxMtwm/yUldtc5lJseFLUZE0Mn6Ax2C5NCCAr+hubozaQfnTez3XZNMJ+wZw9P428kk1ZNbdTXAOF7MsC0AACD7n7LiHjA23sPaAdAn9aGr1157zVamXtHqVFao7u9rKw/t12ZgO6KG6vCJ2mGsCnTVA1f4CJ4++KE56oUXXiiefvrpyq1cWC3MB8MAaYmxFYDUgFO9gGI+6qozLQJY6yttmcN4ECKfc38JxTlH1csn+hFTD7b5HOTzYJgDRZAE+AGo86INvhai+Sshb5WM7bF2BIxFd1tVK7t4oJW9Q7wgaqVQB6J4LFo1M6YDg/uMNPZXaPfgAM5XIcT6rYI+WR1WxVlSbqX95WNxhfyVbc8lZc60nftrSfqsutjYX+aqsl/lupddEvVnQy9QN3Vv85RA2te21ouXBdCyWnZD17Md/frlpvJZQfvBzn7xiX6oc219s7irbQ6+0I+U3rmzW2zq2veQ6J/Qwcrap3Wlf35zv/iO9qpdE++vtQXS7cNwnff7iJw+y/btYEAtjUBIG2Oom9/Avf9f1w8Oq9AQrs+Mv/qbOGjNnH6DCujIzPXxtrPYEx15LYLc9YvbcxFy2vB0XaB1F62qv1y/NnYtisb9FbfdKvnL9Yvbc1G+aMPX9ZnxV5vKJ0CT0+8ExFaKcH28r7ftW9QTBBD+lg/zTUAAD//skcgKNb72zYM7PzR2HXJKehmx65jSHesc3mILZSjWpVMAKFQa/hsgwA1PFZ+Ub780XgmyAwBUAsf4SLL7BveDc4DVkVC8lGVK11feouqZ/m7EooScUr7edsTuojQ+LabR9wFoAS8BNNmfmo8NAgLGQC1zAgAhQO0bb7xRXNdetb8ViMfHBsk/FHjKivnhx+2xtxmaNlbLFbUArYDKrPJlb1pWl+YCK2n5YCG6sscuwDQrRm2v7dKuKlA0x8/zwhjRX+YqKWfzqnyxYeBmeAHkK8UN9GQSCBOCsyjjYGOYB5OiJIkM2oL2wV7YySlhhsc/StouBqZcUrkhaVWMIfOV7IGf7IFpyC7nZEs0MDuhYuwlmN3hNIzJHvaX1QeNXD+YroJKrs+Mvwa1uj+znH79uc1f0/XxtgtjZH6+Q3Fw/eL2HIp3Vz6uC/VW3V+uX1cbh6R3f8Vtt0r9y/WL23NI+7vycn1m/JVhFGj1V9diB2rP65dOr53ZLC5ob9pHeUErZ9/RvcR1raa9rH1nP9w/Ki7pFzI3tC2CvvxQXCkOi78IvH1YtC+eOSieVD6ratm7lo+QXRBQu6uVt7fE46Y+EAxDiQjXyoxOJ50VfHA8FgcDak/akFHe6IHRA6fTAz4JoT3nq3DhPZ2eHLW+lz3AuAggBA/fa7bSC2AGsIJVX7kACABYc/HiRVuB9rH2pTR6ftq7tidgZkM/kT3+qU8Ye/rbchAamT/sK7ZVaRNF0HOSWNiJAT6yn58pr8kmQvCTnVm6659Y7WCDbtx0UweQxWH8E+PGuaurl0f6IT3AOODwDwiy6vQ73/mOvaThRY2PCWKORx99tLhw4YJtjXLp0iUGje3NylzCB75YpXI8DuKr9ABaS0//GSMf80BvwEp04qNivuo3lcQ+24C07K977ZtvrB62bGge43Ab03pt02av+OEL+0igYiznnDzKTUZ5btsmUEb+5C9p9jeWjaVtVq46HuBBOS/R2PLhlVdeKb6RPdhkHwFb3zdSVr8CELvskBm3i3PMx0Ek7c29FX+O7Qha5+uNuaMHRg+MHlhVD8RzV5htV1XTUa+5PaBrFvcIvDR9WM8tj+hF8vNaTfuSgNqnBbI+oGuktpotrun+/9O7ewJqD4urWlBxQ3vV75fbit042C8+pZ4A2S91PLl5aFsg8PGxpwXaXtD2CTePVCaabw/KX+Worl0zufzObcSwDAYDalfNsDZussFfjvqT1v+k5bXxRxPN6K8mD02Xm7+UddJtfdLypq3ulxr7Vje/jf66x/1VPqxjZXj4Lmz1HPsbcvDAnwt8UOjFF1+0FXZXr14t/vznP+vr6Lf0ZXPtv8jPiLSSbfOw/GmsGAMgrOkGhRCDHm3mLuaZeF/Lk5p3+OAPIO3R0a7tX7mnN+omeyAFzCfiyOo3fqZsH+EpAdtJY5jHwp9ljsVIjfG0hQcG6iItJJ0MCeAfe7gCvL799ts27i9cuGCgIBrEYxpAlLmBvavf/u1vbS6w+nog4meABhCqz/vYH8ICePn4YI9a5HGgF3MRYK3vrZuTh66AtO+9954Bm2GfVV6eaN7iEJ80uP6zJSnlcRpa2w5BcXxuFMyRx6TlmXIm+aEUkJYXaRzYlupG+vHHHy9+8IMfWBv87ne/K77++uviYG/XfHKwyd69AYA2++BfyuABUqedAuRuU1VFbxsM7Mi+imXr/JOW11qxGsLRXzXOyRSN/so4pSarz9xVw6510TgWW7vKCEd/De8vnyv8mxxndE/ylMDUl7VD0EsCVvkwGB8Q29SF8I6utWx58Cdtb/CpVsbe1PX2UNse8HHODT3P7OytF1/t7xWfC9G9JLpHlX9eIO8Z8Xhcq2wvnN0qrmuty+W7+8XXeke6K5679uIXu0Lruj6rcG0cDKjt1mwrQu2zIvFpHHkn7Ub310nLPYXyJoNcurMH3ti9jhsRX1R2pXEsHjuq7swdOPqrzkvHZe6v45yVP2Oc2IM6D+s6WBkLcMEqM1ai5QJA7bPPPms/rwXcYHUtP43e3d0xAGECzAgsORRP+3kvH1AqZRBPB6XD/+nsMpVSZ4kGygTQAaAGcPJVrtV69xfK23xfsez82cTSzmE746NS1pLGIm1wku1QWjtGK+IBgFr2m/3DH/5ge72yUtO2CNDDC8CfB7ZDeOaZZ+xFz1PaF5atB5gbjrTPm33gSw8qfExNGV5lsFjwrIGRrKolMJZ8GwDGNelcYK4DhP7gg/eLa9r6gG0IqOfjP61j3Ev1u953mQalHnltImkiiOkpwYesbgao9ZX4UQ07Zf/g7373u0bLnsIffPCBgetufliRq71yD8OKfptzyhX9bGcw5acWusZ2cF66JlUrFMTEsxRjDh5wBxKP/mruE+6vZsr7nsJcVfqr69x1rztvnLsGaGEfi8SrOHf5AND9CC+OAWrPa8J9bVsfEBPAyvYFrIjd0z0EWxYA1L6r7Q0ur20Ut1V+pBW1/MqGZxp+n7KjulcOtbJWdI8LqOWjYk9sFcUjije1hcLXAnjPq+wLLfq4rr1qdyRX+wWZa8IvZwbw+UAs7hugtnagD+TMe4mN+2sVx/Mq+nn0V79WGftXs9+8bzVTjhR4wP11mvsWuvNQzk0HH4HhTTGgCiuwONjXMRcACAAzAWTffPNN+8DQJ598YnUAcL799pq2RAh7Pe6XK7l8ZVpYzcXP/MNP/f1nuOgRVmZJq/A/J3rheawG/NnPfmb7WhqAIb0IU+DFAFqwFyYfYrshUJzVy+z/uS2+Br4gr3RCkD6AwJHF6IE5PMBYZ27gY1usov/ss8+KK1eu2MscgEEP9F9AUT7ixRYJb731loGgX3zxufr4ruYYrejUg4o/z3m9vnHAZAM3dDzkQUhhQwAyW7Sw6hSd4rGcymLsMW+xT+2dO7dFX64y1di3emWFkxqLyLG5EPnSPWyPwrYGWpUjkJYXacwZ2IV9aQAs5+NpfNQNEJoVxV9+eVU2XrM9eK9fv17cFIDLwygAOjYy/wc5YW9ee7nm9iv2VbNd5sGT8ldq/2lKW1ufJoWXrKv7a+xb7Rpi9Fc7P6VUY/9KPTKb9r41W7LKOeFl7qYWSmzrZedTAllf3ForXj2r7dwE0m7pWndXZbblwc5ecUlbHlzWG43renF7sMG9hL/A1T26npfWjzaLG6L5UFsfnNMWaexX+9y2bW5ggC88L2ql7m2t2v1QWyCw3619VVTXbnvQWSFXzd5JrJByQ6syDvBuHh39NfqrmwfaU499q72voBz9df/5KwAYAjIMENgwMIYPhHHwtfRcAGwFDAAIAahl9SlA7ccff2w/IWYF161bt4tdASCAIKz+MjkCQLYELGwKyLG30sjUzQ4fpLGvhds2TuqF4C5L6ozY/NOf/tRAjpztc6tVMvjkk0/NX6zkY9/PmzdvGFDClhFH8q+gER1zS8uZMOaNHujsAUBQProFoOlALStsmQtioNZXojpQ+6Mf/chk8eKHOWFLDzKHqsMQD/BqZ1XyFQx0ZP/WwBU9UqA2X1GrYkqg9urVL4tDrbAx0NJfJFEJwLKq8oLykWeHgaUBaKYNYqCWXzbkAvnnz5+3l2mAtPz6gTmZgy0emI8B3Ik5CIC+bPkA8LupNuKBlBd3/pEz4rYg7Un7KueD05Q3+qtba43+Gv3VzQPtqce+1d5XUJ42f4WXuUfFpq7zDwmkfUovKl/c2i5eO7ddPKhrHEDtda2k/UpbnbFK9pJWxLKadldbHuiCGK6JoiGsl/cxNwTAfijaba28fenMfrEDCKxnnbO6h3hK19KL2g7hru5LrgvQ/Vj72uK08CJ2iQ86ZsH0n/sKqJ02XSnadLXaY0bFlcpwf62UUqupjLmKPwplFBLj33oPjM6q94+XWgdTYvSXe6Q+dn/VU61OKTccOlhJxUM6xw2ttvrwww/t6+2sLuVBnod4Dg88sJMmZj9EAuAAP3PmA0N8+R1wgNVcHAbWakuFPe3ntK8boH3Fd7Q6D+Bnb1cf6kIN/QO0NYBA+jh/A3jR84QC9rz66qum/yJFnjv3gIEi/JQZ0ORAN4eATMJidL+gP1U2n5wrFmn+yPuUecAecPQAwnzAS5x33nnHxj5g6PPPPz9lDWPWAcLvf//7BuxCDw8+KMZBMPiT/j5UEH9kMHcgHwCZF0rx3JUThU2sFmY+sv1py7mtcgxKZ0kK9/WSF6zJcW7Oi4czfrOgmDPSYaVrmH9Z/cqq3z/96U+2apmVy8y5aXD7yfctavAD/mCbGj40BsjOvGzbKNjcrHlZ8Y62ryFv5254ycYK5bB1TdgOAv9MwFv0LXVNdcimY2OzBGOmeQA/MS5Gf7XrEO6vdtT3NZW5quxXY/fq0BVGZ7VzlnUwka6gv7g30E22tvzRB8QErr6oSfYVfUDsGa16ZV9annD2RfONVr1+JND1r/qIGB8Q29XLy0N7eVm+rOS6h4lcn3U93NNLzW91XNGq2c+0svaSVuI+qW0SntBK3QfF91kBtbd0b//ZwV7xmO41dlRvV/XYFi6wWg1n3ddArTXBarSDda5V/zP6q1sLjV2rvb/GvtXeV1CO/rq3/UX7Agn4DQer0PhJPvvOsj8tIAsP7b6/4wRIoF64w7DVtJQDBADSAgy8/PLLBuYAfNiHyQTW3uTQqlG2RGBrhC++uCKgQIDA7m2BK3yhnRfWG7aay1Z12dvr8DOj8m7mRO79sBv92X9zkQFbuXHkZ8isRA77RsoP9m9W8jgWZ30y5pysB+ivHAC1fECQ7U8A/cjz+cA1AsBlr1oeZABpeZEDHf2clxM252jFCXjU3EFMgm4hZv5glT8vXZiXUt1iea4T4525Dr039FBWV8dQtNIXVl/nfYONa1VGnm0Ho5dUa/BjfiVv8hJNK5HlO1bf//rXvzYgmlWzzLeprqQdrGX7Gt9zmxdoL730kq2K5uUQ8zMANS/T2E6Bueirr74svvryq+JLtTHbsuxp6xrnh1+32KOPubl8cLXXd+haE8a5q8Y5maLRXxmn1GSN/qpxTqaofrRmKtzHWWPf6tb4q+ovv0Kv6Rqqt83FIwJqL2yuF6+f3TCg9qyus7u67rIa9msBtR8KbH1nVy9GN7a0L60+2qlrnl1nuSa7S8rr7L7K9nVd/EqLZS9r1exHqgst2yCw3y0fGNuTAh/vHhRPa2HKNwcCd7n/V5kI9SLUGS43vq+B2uW6fpQ+emD0wOiB0QOjB/Ie0H1CWCGlN788fN/Ww/u+wADAQ7YzuHz5sgGwgLA8qMeBmxFWrgFucAAIQAeAwMM/IACrtjgHBAAEDtsqfKk9LFntdtb2TQQkYVXbgX4WBIjDylJW3RGjE58qspukKI71SM/9pizNb5PGBoBnAJhFBoAR/IG/8N0x0LRIqfcG78W2zL3ho0VawQeq+Ak9LzXYp5aXMYwZ5gcAQgJgHn2b+QEwlz1TGfuM8309CIWf1WvyGWCceX+wlxzihx6sNHWg1nVKfRLGXACPg177skMPZTYpas4pK3jsc4LNTTZP+Sr4OdfUSoDtE65VOega9orV6h3J9xW1+PNAD5dffx1WM7Mylj1o8S0gOIcH9OeAF/UAq2kHtqPwuZk281XEDtKyPQUrbQGDH9bqW+ZCwFyfl23Vv+zGDwdqx0P4o7OuHejqc7TrMcajB0YPjB4YPTB6YJke4P7Art16ptjm0HPG03pF/LL2jn1ZH/x6XCtqN3W9vKlftbGalg+IfSrA9ZKuard1bWMrMq6ldl2NDeE6qzRbOe2L700dn4k3K3EfEP153Us8IjD4IfFgr9rntHr35V1dJ7Xy9pauo/ui4S7jaCMCf2P+J3w+/XRXIdxvtjD8pENX2V3pF2HPsnQwufxRQ7Vpq2Xpmfp8WXqcRn8ty1e0WVfZXenTfjFEepk6dJXdlX4I/6Q8lqWDyeXPOHeFJilvNAAJeOAG4DgUGHD7jr5Sqgd2Vs0BdvAFcR7aJzcroo8DNzDUBSzwGFAA8AMQFrAWYADAFpAH0PbixS/tZ7yAlV4WPmL2Vbnq9tvi7s5dA04AgWxrBt0QWSj1jnXg3PtVmt8ljY0nAdQCzjrIjcwAAmGBjgHAqy42L4vW22u6N+W1cdp86cnluh5tdD45rWYlLVJPxjMrMgFpmSeI+Vk9B32ZQEwfZ25g1SegIqAfICBgo5apFGt6MqDfh74/a0OXHLO3/MMeqwC1vpq0CkB02WE1+7Ee9kDGHOeHFIE19NDuafsWe7mkh7Ij264keDv87aJ1EMEFybaf0fzG/GlHeZFCBXxpq1i1fzVzKB9y+1Db0/DLB+Zn/AtgWxWwx9uCOQff+ApiYv/lA3MzexD7wXxMnr9o44NkV69+aQAvIC9eYYXtptrSwWV8dlJjw/19UvJi/3aV3ZU+ljXU+bJ0MLn8YUi1MGZZeqaqLUuP0+ivZfmKNusquyt92i+GSC9Th66yu9IP4Z+Ux1w6cI+h67Yu3sWDumY/oWecF7QtwQta6fqMDkBVwrcCaT8WyPqxgNor5QfEDvUBsTU9G4V7iOnZi5R/9JP9avfE/4q2PtjUtglP6B7kpTMHtlfttq6JrNh9TrLeFBi8t6OVugJq7+oXRdoUFybqw7puTrM3nfr+6eOvVkCtK4SAAfV1tpWxGVRaJX81ynYHVDI8gYJV0MFmxw4Nhc4dyAf14lL91VP4Mv3lzj9pHcxVpb9Oy1h0XxGP/oq9kT8vmzdfeFK5HRuqI/mgVizSX8zHZpvuEFgVxQN3WGV11/aV/Mtf/mJgIgAsH9kCLABEADhIwQ8DEhxILT3gAAiAre+H6D+3BQDwA+AWcIBVegAQRfGJgQO3BUpw82LXDclFpsmG/5B3NfArA/w5Fh0AgwFP3J8mL2rsZfa5RdsOfzO1tLfNXE+NyD0noeKMjGXLn1GoRQY6D33fxVgG4OOjYgC1AIcEthugXxMYq5xzsIrz9ddft/HO6s0rV74wnfhZP3uglr3B6vX+I0PpIYCpjKkYqK0bzz5HeazqpjtwI36b+K4EaVnxj+28RDrQg53v1zpP30BngE504CDYXrDoUM559ssCAbW3b9/Ri66wohmgFjAae9nWgDnY5sdobvR5mrmGIw7YwsGWDxwO2ALMctBWAPK+0vbdd9+V7fs2V0PLvG4ekpP43QOy8Jc9vMaCFny+iD5ep7K1ddngbeauefpGnR5dylZBB5vAJwOqWXt07kDezLADxVL91VP4Mv3lrj1pHcxVpb9Oy1h0XxGP/oq9kT8vmzdf2CKX+oe6xq7pWndOx3ntKv+MXjCy4vUJXTsJ+yJiNe3H2rbgY62mvSoQ9RYvIXnmsecdEWUmI7LYsohHhv2No+Kqrom3dVl8SYAtWyg8oOcqnq34SNnTWlV7dLRVfLG/W7yrbRC4Xh6pjC0QwiU7IwDlOoa+/poAtc6gTp2qMupWlXW0Y4ocngxwQhv+Rh/IB/2b800uz/X0spwSXtbGnlz9xrwOjN1fHao0iocAG1OeuTxom3SoqkfduUOpZKprE9+u9E38UhtJE+rkVJWlvAKn+f8ibxXGIpakNo7+qm7fnG9yeXCwNq5mZX53uhqy/kVVnTrD0XXtUCXDZTYr7VtQ5PLIb9Khqh51W4Vwh2AP+A7EAq7wEA4I4x+uAZxh71Y+HAQ4kHvwT+U5SABf6J0/wC8/x+Wn0zzwOyjAT6XZ15KPmF26dKn4XADQFYFBX+rATm624GE/ty1vblxGKrtv2lfNES8yODACMA5YMkRYrMZDaHjMw/p1ObDaja8AAh1zGObMfRbrkMtDmulcI7aqXk2VhRW5rrFdQwnzMQKQ98EHHxS//OUvix/96Ee2ujP9CT4yAREBagH92FLF+rucZR8W08NM+JAe+1S7B+fQVCyYI/gFAPML+lTNEYCi6MJc57LL6XDqxgitOJh/0HVfq3LYvgEw+OLFi8VLmq/KJ63OijP+OfDN1atXBIJeM/3RjQ8rok+82hY9Dw7WbNsU9v7FNgdTWVnLAWDe5oUTdfEV8z30nDNP4ztWRzNH0XYA7Rys3uWFHdvhAM7zYTNk37p103gciY9/jE0Mbbx0dQh+jvssaUKcF3KO/1aVpbyOa8x3hrxVuE/N+SaXh7Wmc43ZVfVqqnQrqmqkDBfXtUOVDJfZrFx/yOVRs0mHqnqzUnvklIZ3tb8rfZNmqY2kCXVyqspSXoHT/H+RtwpjEUtSG0d/Vbdvzje5PDhYG1ezMr87XZZM10xW1HJNtZW1ejl8U9f8T+7u2ipY77Pv3Nkt3tFq2MuHa8UdnjO0KtZe8hpB9f0n12heOgO47moFLit3PxPyC78buk94WNsfANTe0L3DTaXvaEUv27pp7yB1Grc6q/kkEyrX0zNzeZRBV1VGeVWZAbUUukcZWKnQNA25B6urRJUAp+sb18nO8exKn+PRlBf7a8ZZqlylg/uqiX/f8iq5dfz61Knj5zbG/cH9letb8KrSIcerTnbXsiq5VXy60lfxifOzNpaZOX/V6ZDlFQub87xOdo51V/ocjzQvtdHSo79SN1WmY3/lBl5Vm7nfKxnPWVAlt45tnzp1/NxGYuft/sqNRXg5Xco3xyulaUoH3mx9EB6sD/SGeWuLn/fu2c+UWfUKkMD+km+99ZYBGvx8lof8dIVWKgsaP7jhAWSgLjEHN06+2hYZgLSAwYAAALXvv/9+8dvf/tb0ACQJN1qyWov24ItnLCoFk+M+SXVpm0YG4A36LTLEQG1YmTagtMWqPpiiVf06J6ALba5+2zxznfsvIzSTZay9Sls5J0FXpeu8sn1s8IIFoBagDxDve9/7no2bMDaPpfBi54033rA55Fe/+pWBnQCea/vHq0h9Tjiu1eOsbIQUqLWHrQw7n39sXpka74nn4FvOP+wTy/zAAVD7gx/8oPj5z39u3FO7MyJnstj6BbATP/IyjK0FDva1Bc2WVgCtIzj8egGb8BFymfOo8847f5ns+83qZuZnQFbmWNqkKficzDwOb+q5L4g50ImXaYDyvKTjOsC8/P5f/1q8p2OnvDawBYQFXT9szhe/ritrSw6T5zxLl5m5a2PSSlPmprymCgdI1MnOse9Kn+PRlBf7K3fTUKWD+6qJf9/yKrl1/PrUqePnNhI7b/dXrm/By+lSvjleKc086Sq5VTy70lfxifOzNpaZOX/V6ZDlFQub87xOdo51V/ocjzQvtdHSo79SN1WmY3/lBl5Vm7nfKxmrABqeHwBpOdgj9qaA1E+0e8+3AmwNgpWAd+7uF+8q/6pekN7V9ZbtDPjFjF3P6gTogsxv8A61OnZP4O6efpn42cFe8Rdto/CNfoHyqPLZ+sBe9Irutu59Dgyo1a9n0AsFJb/JxpLMNDG79Sc3FiHowssY6o8BtVQ05jVMvEJVXCW8iv6eyO9odOzne8L+jBH3g40Zs4fNGp3Y6E8ferGrPK+xckLQt17C5nQlOxod+/l0Gdpe21W0MYCdYVsBfupzqJ8E8bNewERAxE8//dQe2B1MASRg9Ssr1gAGWMHFQz6H/5Q/Bi3sRidGVCN3AQYAFLDyjZi9beEHb2JkEsJHyPQxIq1mCzdOrAYT+MtPbiN+nKbppLg2yX6bAMXsm7vI8KG2eACcYXUagJf7yHSXr+axYZF6rwLvE/FNRyGQ+/3tKvho0TowLgOweNVWYtKPmRdYick4Zh7wwOp5Vmb6XqrEvAAC/POXIj7OvU63+NjznDF6ADZ9Lqri5fOZx1V0tCx8oXMgk3PsYoXpD3/4Q6saz3nVvKZL2FaAuY25FgDUAFLxhr93KKZO20e8tOmQBz3Ng9eufauYlchaqVP6khds+BcQmfkTHZmjAW458Eusp597TDnB5CumDvM6fDgA5M+ofeFJGh9vq9zbE7UlQA99agWeXnvMZT704jHleeLYKfSt10nIqhF3NDr286qZMpQ+94ONQ/mqks/oxErXeIEPvdhVnuc0beO+9dryX0m6jkb//+y9ebsst3Xeu89EUnQsyYM8xZJJybY8Jn5y8xHu977/5kkeJ1ZsWYotS7LoaLBpUhKnwzPe9VtVb+/VaAAF1NDd+5wqshooYA3veoHC2b0aXR15LsWDDCcPFfrYzp/aF9g+tfcdP3v21BKowyMI+Pf1PWt/35K0n9q/acUfEDP99Bgw2L93/ENt/37yb+cHZv/7Zv/9Zy9uvnDv+c2bCI3Hv+DfZJ+Pm2McnDoz5WA/07Fy0+EvNuKYc8xUm+NqdR3+btFRiyPt8+u0UYYmyplqE1bP031uvu4yV4yI+KrFkevztlzHxDDPUJmweN7u2XzNDHym2nlJKXgTV3TX4kj7/DptLPhIm2eqpWYucn1uvlblyv5xxh5v1B/ZHxpcPbUkLb/u/aElE0gEkASg5FmyJF44+REbTnbNKbkK+XrDPzUQ/HGjhAo6Sgjox4m4xs+3vvU3/hXbX/7y8+EPIgN7z36NyHeFjdinfLX0v/feezf/7b/9N3/+Zov8XBl2wJEU/ulPf2JJjl9aHMMfevBRGlfNr1I/7S5TEpgL9hXXi3R5PTZ0xD5TrcPDdYnyIQ7JWZKLPCaFr8KTyOPDlpioJXHLvP7N3/zNm6997Ws3X//612+4z/iAAl0OJQaXRzgkVVvs+L1muDiotxyePx1vRBKYPBLg3XffddVWG9EP6xxJVdYD1jp48HNIDZuoObOMJzt7SKE6r9bEzl6Su/DPOPDIBD5cYk1hPf7KV77ipx5bID/aXTyFVf2sydQp9UEaydtfNdxfAruNNR/a8TxzThLvvOnlP9uT5LjZWavjtqaW2zLXF1RvBRtqOVsNalchMk4vx1KLI+3z67SxMaKZao3WtxU7N193mStGQnzV4sj1eVuuY2J4Z6hMWDxv92y+ZgY+U+28pBS8iSu6a3GkfX6dNhZ8pM0tavwbxr+hv7BE7Cc39oNftqPVvjh48+CePR/eDPDvzGNL0D62f9teWnnP/r3j3zHvSB1mrod/p+zfPPPxwnR/aTY+s79tHvDvoX2Qep8/HMbjM3bshmQwn2dOHWmMfp02Thmx/prKIVHbYGcX2RnYGWhk4PbWH/7xrd2EjSZfabHI1ysd6B7czkAnA8M//OOuWvsjgsN3d9kfGp/aV1+f2w443oSTDGDHqRK1PKqAHwMjIUAbyVreyGtXHW/wSS5QcpIo4FQiwP+Asr9yaFNyh921JC84qWP3008/8Z29JItJTHBqlxnYe79m6wFmXvhV+r/5m7/xZLS6hVXXa5R6Li+J78/sB4KGZzvaH5OFPw73tWsN1k9t7P9mnnIy1aJ7lvWB9YB7kR8IY+e97n92XOrQvU8Sl0Qtz6tFD/k1E7SDP3tWnL0pAhNrBWtW7VAsNZlDn7/Zur0TPWFpiUrWvrmHEqckO0n8DnyYj/DGbpijwxtNvvFAEvTmqSVr7UdJHluMTy1hyyMUeHwMyXIeIcOuWh5VwPO+WWPgnrFhXFhntSbHUuuyMBETdU7kwMdB3KzN2HrLksuU7KjlGwJwzryAd7g11SGW4Z2s6+8vOwM7A5dh4Hb12t8ztoxA5KtFfpe5QgbG9xckUEmQPrV/W1/w6AE79O8/7yUe2jcJ/d9G/o21ZCp9XYfJ+w+L2Seqn5v9T+zpQ89sx66/jxo/kMbeQ3s8wkN7li3/lvMPJP+ed3rqgtUqvDhRq5vlEsH0+u6VbyWxR+6SGHp9I3+JcRWfwsv1JXD0xC+sl8B5xNcI+tw4euPvlVeMa5aXxNDru1d+TZ5k65IYen0jf+57QDxRCi/1tXD4Hy72xwPJFXs/bn+w2JttEqPW9sy+yvPhhx/aV56HH79hFx1f2+Vrz+yoZdcWu+nYGUaCVbti1c5XcWnnVFIA7OlBH8kA5Ek6YO/HP/6/vuvsjTfetETx8DVr5B7YH0CU/ql07x9WqWO7JulMAumH9miCwx9xZt/rGfnWJo2VxumJJTSGR0s89eQM8T6wP94OvFgsl55frbFtISe+trC9lU1h1hhv5adkd+v5wj2gH7bShy5gIbn4s5/9683f/d3feTKP+5b1QAd6yJDce+edd/weY+349re/LZEVyoF1XkkSfmaJYJKXPJ6BN0q5w9cN1o7x/s7JaEzp83pssDatETndljZ8i0tsTR28EXzwgLVhAMKOHbjl+XcfW7KURCkfArFOw7Ge9c26DP+MDYlVSq3P6qOddYizhkVrM7t2wc+bW/nxfx8sYcy3Mfi348FLW5ktrunIpiLv69cwndsvKHt998r3MdEmfUkMvb6Rv8S4iknh5foSOHriF9ZL4DziawR9bhy98ffKK8Y1y0ti6PXdK78mT7I1hYE55/9OWcm/ayRJ9e8nNjxRakL8eOd9e5yafyOkcaJG367Ci/0bTTKWv5UevjBf9m9z9Hff+unzvzvs309fRBr+7Qfr0kN4sZOGuChR64ZH66UH5y4FX9KPQZVkYnuvfNRdq34X+QJzOmnW4qPJjgbuzCDktjf+XvkmDlqF5oJutd8g1xK/YGKuRb7BbbeIYxiB7GvXNH13ka9Lza0Dm+P8Wm0BtT8YSHry1R/+qOE5sPxBcf+eJWvtwfg/f/yhJQE+8OTCw4ePPEnLbjDtsCIBQJ1Tz6Qk2cquM776zKGvQlPPJQTc35gA0KMP+EovX+/9/PPh6758VdiTyZYk8GWbT6dXONgZRtKBRK1w9CRSWiHonxpsk+jwRK39cQcf6sPWxedXa0ArymlKr2hyc1OOeQR+7rWe4LaeJ7yPGE4eVWIf4ti9z/1BUvSFfbWPHbUkakn+vfPOOyd8M69ZE+gjcUqSlnlPYv+kbAAAQABJREFUO29klh3xjrFvAhgmvgXAhy7sMi3Zx/fJvS0oKgUsvVa7ldiZe8AhGDin7QyJckZbj33h0TTsHn5hazM7Zz+0RyGwq5ZvBrAWs4uWMdGHZyRl2V1LIp31mVOPR8A/J2sRnJXwsH5z8oEb9vDzT/bDYtgCC8nxZ0+f+I6hlw+Hx+gcLWpzyWrU86Eax+vc92JlmmTR98pnjSxsvIt8gXn+XbeQMNQ1cGcGIbe98ffKr8DQrYm5oG8tLK61xC+YOGuRXwwqY8AxjED2tStDUNLUwpf+XePf2kXJyJzvpM19Wdt9+9smPcZh9WYtG7Etld/sWk4FYnR0irgDAbaYsByJ3aFxhVdw52y77w77UV5cSD1nX31rlo5hdLaVz1eJrwP3W5FlDkp8yfcc15eaX36jTAWkwDYqW/hCJnIU6xvBOjHrGEawLZhPDDQ0lIYijX/KVJRPudoKe4rJMYzOtvL5KvF14G9FsoYxGJKFPNPJvxJkjmjxxOVz+wGvQ2LlpSdCeE4iX2XmDT5v4PmKLG/iSabymASSApxK6MbdXCQSlEwgnpgcoI5PDnZvffOb3/SdYjwjl12vHP7r8Qe55UTcxjZ+Cm9/cPnXoUii+uLnbhe/GGQ7hsQLO2lJfvH4A49/6Dz4SO/HQ8cdr6x1L14DDcN9MyBZPgv7I9reJx6GRN6wq3NMLtrOEH5J+eOPP/EPOPiQg132JA2V0FM03Ecka/nAhq/l89gU1gcSqosPg+dvkuzeIVnoSUvbVcq6VNpRq/VFa8wBg69vwx4Ye4TdcBwRPDTqGbHEwOH37iDt69awbtiPbY2JzRM/o2xTgX9hGcfB1wveEFrMw1cuh6QvOFjHSJj+8pfDrmKwkAxWcpXkLbgZCxK3nErosrNWazaJWK712IOIlXhY8xlTHmnxX/7Lf/G18hMb+09tV++zhzwLkG882LMAX9oHaUccRkvr1p2q0ddWLtdauxzrGP5heMfrrbCnbDuG0dlWPl8lvg78bUWWOSjxJd9zXF9qfvl9PxWQAtuobOELmchRrG8E68SsYxjBtmA+MdDQUBqKNP4pU1E+5Wor7CkmxzA628rnq8TXgb8MWYsStRjO2Dz4W1rRBKsNRo8PsMqm9LbELx+x3NKfYntV+HKuNiSsxlevW8nLJmOutjj+W9bd34ZOFVvORa6tFqvkZRNZtdX01uzb0p/iosz5ybXVYkNeNiXXa0N6c8st/Sm2V4Uv52oDwjDJM195etJLy1Twxp+kwPMXtvvTvsrju+jsDTgJEJIBnBzahUVCgMQAb/yVhNXXa9nZxckP3vCL6V/96lc9YUN/THS4QXuhjYQACQXq7Kz91re+5UkHZj1Y+BrR4FsjLO35pSeoLQ4SEY/s2VWU+K/RLe81mWNEZs+we8LFYsSnOTnyIZvotds99nKNV4qLMhcXbZK5Rvw5TLk4cnJbtZ3H/3A/PrD727/eZx/cvLAftvrkk4/9Q5uYqCWBp/uGmKlzn3Mvc/+/8847hx2YSzghbo99rDx7PiRqP7AfQSRRGz98iX60trC+UOcY0rPjFxVJ2B4ytcGHNWNTiVoe/SJbsq+kKIlReGA9XJKoPcQnB/zAmGHwNckfh2Br7vMHN88tOcrz99jlDD6eX/vRvY8cL+s1HwqBieSr1mfwKSGr9ZnnCHOSUCeWXKIW34wpH7yRdOexC3wjgd21JMuf2zg8f67HKIw7a4V/43IYzW2caF2izPnJtdWQIC+bkuu1Ib255Zb+FNurwpdztSFhNb563UpeNpkfaps7V3r13N+GThVbzkWurYZf8rKJrNpqemv2belPcVHm/OTaarEhL5uS67Uhvbnllv4U26vCl3NVIGxxonbuALbogVmD0SLfIrOFzRa/d1Vm52v+yJUWkPkWd827wsAW980WNu8Kn3Nwvqp8eVz2QtrQ6/ZmnTfmL0go2unJWkuSPveErSUGDvUXY/Jg2Nn2mX0FmR23JAd4s//GG8MzEPUr8TxHEhmSCuy45SSpEQ/8kgzALztr2f1FYoHEACfPqSVxsupaaD79l9bt0Q/+4H8SLdbmh8oIcmYdi/jxhAv1mXbumprPqbsGesfrDDBXuRcejD+4cf/FPX8m6ePHn/vX7t977z3/MT4+iCEhiDwH968SeyQA//RP/9STuyRU1zj8XjJfz589P+yoZW2p7agVLtYcJVM9sUuSNj3Mtt+n9uEKJbaJ9W//9m+H9rEfNeIkEcpJrKx/6bqWmu+5dkbNnzm2sbAkqH3tkDHxtZk1+fnwg17EzrcOSKazZvMrZM9szfzcHgkBfnYz367NwyMNWKdJcNNP4pWSx9cwliRyNZ7OhflkxzDJd3x99zvfuXnTrqmDgfLlC/sWxvhkmmEm9ER6fbLEkJkdi4BuYXMRoCtX3vmaP0Cr/p00H8aueQEGtrhvtrB5AWrO5vJa+Tq86/K/fQwlQNc69A9mzqb68JXrF4Zan2Rypezn9GlTv8qcXM4uba7Diyn16JXsqb2GpdYn/SVYavaxq37KXj+uOyr26iq2XClMOZu1PtnK6amvVso2MqkNXUuGUm01m7HPdUfFXt1oJ9aFh7bUZq0v2kj1Yl+tLvs5fbUhU5Or2kfRDMlWTba1r4ZFfdiq+az11XDIfk6fNvWrzMmV7LsOL6bUo1eyp/Yallqf9JdgqdnHrvope/247qjYq6vYcqUw5WzW+mRLeuyuZWOZJxTtH3FPCNguLn5Fla+2ageXvzG3nVyeNDV53qTzjMin9rxCdtyRRBA7PG+WZynyeAS+Kk39T/7kTzwRkEtokPggMcAOXX0tVz8W5MlicNkJ1jUOfClOcHtSigTNGsaPbJhF/38oj7rsQv4Yr5YxS/W3uq5hUR++hT+Ho9aXkz9Hm2PnJT8csyFgUudsIzMVPaaZuiU1bjPukQe2Dry085kn5Z76hzLsqPyN3/gNT1ayczY9uJdJXv6n//SfDvKpTP81s4n70z4gsoSkflCLJKMnXgsGPYZx5zwJR35QhPcpKWdunTXBP1QZPljBB7FiI564IvnJh0o8/xUd+CDJufYBLk3W4QMfPkizNfn+S98Jy85aT5r6Oj2szWCFkyf2TQiecctjCtAdYiOhbr+O/fgzf8wMa7OStYxlLgb0SEiz85YP0R4Zj9jnB85IEL+wHxTj2v0OaB11y4upKbwW8SYZje3A3bGK+mjN9Uu61ieZXCn7OX3a1K8yJ5ezS5vr8GJKPXole2qvYan1SX8Jlpp97KqfsteP646KvbqKLVcKU85mrU+2cnrqq5WyjUxqQ9eSoVRbzWbsc91RsVc32ol14aEttVnrizZSvdhXq8t+Tl9tyNTkqvZRNEOyVZNt7athUR+2aj5rfTUcsp/Tp039KnNyJfuuw4sp9eiV7Km9hqXWJ/0lWGr2sat+yl4/rjsq9uoqtrT0RK1AgW6LhySPmFPfm10f4jEPJd9xMGYDKRmfYbAFM2ZXdHlAGX0fGpNK5GsLDIm7ycsa5lrfpOGVBCJf3SavIYBu0NMKW8ybA1VW2deu6TE4SKw4GIcxMOM1s7W+A67OSvRdUo334hYYSn5L7TXMtb6cPWIb/pIYEhLo37dEwMvxDbjelPOsSiUFntvXb19akuDZs6e2Wza0WxLlWdjxxq+Ek3ClZMcWzzokyTEkDdyzQ9KON3bSkqgl8fHkyeeW6PnQn5EJBk8GuPQ6L558ITFDgtZOEreWbej+o2oKTe94TNk7Zz/Yb0fpnJ439rViYJcc3+18Kzk5PEPa7w0bEpJ6P/jBDzxxR2KPr8BzH3E/c1AnUUsCk+OH9qN9fPjCDk7JeMeMF79fzT67+z8ze6wrfFDEmlQ79JgCkpC+jti/MEN5rEWMfGDDDyyiwyNf2FFLwpYD/37YWvS2fQOAHcXsWCVWdv5vdrAscReaf1hmXR7W5+ERCMQCB4dyXKd5RAS46Bu+GcE6/dzliI0P04iNMUSXnbb8YBixx4NxY+1m3f6ijSVyJH75l1p+/R9tswHG1uMwd62y/93VyprTzoRY5TiMwYRZ5FZyecAdfR8akwo+JbcFhsTd5KWw5ARrfTn5LdoiX932ryGAbtDTClvMmwNVVtnXrukxOEisOBiHMTDjNbO1vgOuzkr0XVKN9+IWGEp+S+2eqHVQvNgxFsPFhq8iIucvEpnrXwtWDUPNh+ttCaziPOdWfOX6Kqa6uzxu0+r143r20qvXDXBUcH8V5XPxVYFQ7xqJOjdfJX/n4EtjVsJQIsz1RqVe3ZLNqXb3aUI5f+IKG7n+Kdut/TUMNRuutyWwivOcW/GV66uY6u7yuE2r14/r2UuvXjfAUcH9VZSn+Br0SdRghJKv3lpyg0SBvUFnJ9UDrnWOz0z0hIDtvHtoz1Hk4Ou3fO2Zr+Sy843nHHLNzjaSJiR00oMkALu22K32C3ukwku3bYjN11YHYXqooYy+5FkysW+tOrbxs6WPc2AVV/i6xlic52sEttbgrGnHeFJylOTdI3t8AAm+n/70p/5okj/7sz/zRxDw2JJht+ptspbnorI+kPhTQhO52QeLkZ1KlrKrlsepkGRUslB9qQ+w8cgVPvwhMckJtrimoMvaZo94vXn04pGvOyQjH9u6FR/dgC9OEpdax7A3PHYg9bzRNVS4acNsu52Jg9JWZI+LNZMP0Yhx+DbEkFB17MYbJd+C4MOz9370I7cEj6y7f/zHf3wY88inkuzETOycYMC++3Pvnk5uDhp9khwcYzFcbPjqPgv+zrV21TDUQne9cxGVAMm5FV+5vkR90aXHbRZ6/bievfTqzQXr/irK5+KrAqHeNRJ1br5K/s7Bl8ashKFEmOuNSr26JZtT7e7ThHL+xBU2cv1Ttlv7axhqNlxvS2AV5zm34ivXVzHV3eVxm1avH9ezl169GsDDow/WNFpzGPuKPjUSCBeFoqX59bnm5+rNRVr1N/K1xadDKd4qjlQ4XM/VCya6qiV/TtWZ+CphmApkrt6U3Vp/yWfka78Xbxks8eUZG4kVhSSwrJxrfq7eXLRVf2e6F8FexVEJbq5exWS1q+Qv3ou1tZ68CNGqHCn2pAD1IdFhZUgO+FdhLRFA0uK57dx6/PljP3mGLV+xJbFD0oOv0ZKkzSVqSQQoUftj+4V5/AyJhwOCatxrd0a+Zg9+I6jSmDWqn1WsiDUOU1HorFBPnF0prBOcl24g7eYJTHaYPuTHrIZE7U9+8hPfdclzqElSaje8knmUJGXZgUmiVs9wJbk36yBBa4p+Wp0pRmIxTdRiOyYXuebgwx8laklSfvzxx8O6Yoaw5fPB7IIb/ZcPhw+QeNQLO3b1eAVkWdvwTSx82ERCmt3C50zUCq9BdfTgOhwkoO3wdZNEbVg/id3XZovh6ZOnFtdjT7z/0nZJw+U3v/lNj42kfLqrFl5oY31mbH/F4v+cRLnt2B3+LThCcYAzVfEQpoRW7i/6jCEUhdYBM9f8XL25qKv+Rr5qf0fM9ZvqVXGkwuF6rl4w0VUt+XOqzsRXCcNUIHP1puzW+ks+I1/DAl2zsqyvhGHK6ly9Kbu1/qLPcW65blGoZrm9b675uXrtyI4lq/7OdC+CqIrjGPLR1Vy9IyPhYvgY3RqIPc6XILO42g1aCioTBFM4o1qsJ2YWXU5h6DUeccZ6k50JhSmsE+pNEKaEpjBM6af9czG7Hi92zrWRYtniem2+FmNcgawVTGTDgKut+OrGLAWVCeIpnFEt1hMziy6nMPQajzhjvcnOhMIU1gn1JghTQlMYpvTT/rmYXY8XO3tsjCqeyPDkjb1x1+MCSHDwdeGH9kaepI0nYS3ZQR1ZHo9AsoOvCZOwpSx9VRhdHn/w5S/bV2wt0QNvQ9KBcrt7NOX35LqHrBPloWEFEwXL2zV3Y5aCygTa2vdBYr7pcm0MhVCbsJSEfN6XOkP7Fr6Debt/WSeGJKbfz9bJvcsjEH784x/ffPe7370hcUtCU4evD7YmIM+PULFLk5NHmvQeMT7ZpeRgXSBpCh5KTxhmHJBYZFfvu+++6wlbdpuStIwJRixil3PYPcwHScMPkD2wOIiF9e2+/9DY4FuJz5LfDJRNmhw7+McYGLQhluG5tEq8PrRkOzE9sh98JJ4HNkZwxyMkeJY4Jes0bcSWO0h68yiLL7E+vzk8q/YQvy/QfXdX6zzPYZlqG2bJlFTol4LK0EV1KrKoFuuJmUWXUxh6jUecsd5kZ0JhCuuEehOEKaEpDFP6af9czK7Hi51zbaRYtrhem6/FGFcgawUT2TDgaiu+ujFLQWWCeApnVIv1xMyiyykMvcYjzlhvsjOhMIV1Qr0JwpTQFIYp/bT/9hm1srxiFHNNuV5BWTApCyIeY60vJaH32jHYi2NY0dFcU65XUHasFqBjrQRaUK9otHc5BntZ+9PbuZhreuKrJlPra2elLMnfzBxr8jUXs+sVlMUVWAsidFX7XGDBi2MQkBqITh9zTbleQVkwKQsijrLW1xnGibj4cgwrOppryvUKylfFl2EswDzhuKVhrq2anviqydDnP0DmIEnjmJYlB9AlkTE8Q5Hkjv1avLXxzFre/LOTjUQtvzBeStqQqGWXGsmAt956E0/Df7ag8R+/fr4qiR5D+cV5KJAhrtAuiLjhWl/Z82V75mJ2vYKy+KIsiGwetGOwF8ewIgiZUrl5IMHBtj7Nuv3PV+tJ+LEjk2fEsov0/9qO929/+9uHhCz3rQ4+vCGBx+MG2KmpZ1Srv7kc3LO82DGsKTxLlmvsg0c7a/HJmR7g+v3f/31PRv7rv/7r7df1/fEAwy5a18Gu/WdheqJzeEb34AdfnPLLB1Osb+c4er0MVNkr//t6OdxxL63OD4k9sLg92W39JLj5IUjGRz8qxq7Z3LcdiFW7k7/0pS97cp4P3XxlNm56D9eQmoPutZCXn2vK9QrKgklZEHEwtb482vZW8eUYVnQ015TrFZSvii/DWIDZTn6QnGurpie+ajK1vgBvdlW38Jp/Ys3F7HoFZXFFoAUR56DWN5ukUdExCMiKjuaacr2CsmBSFkTOxpdjqIHoHJi5plyvoHxVfBnGAsxOpm5uDo8+6NbcFdYbhZ3LnYGdgZ2BczKw1r8g58T8mvryPz7Gv8SHYvxzxJMTkNL3F8Fh6L0yXPHqCVz9xW/Xz+3rw7SzQ4uECgkennNZ2rFFooUkwRtvvOmJIUwdzAF5cGWV/ViTgXE2vHL0FqfMPo+apw/JyyEBas9CtQQlSb6ndi/z6IO///u/92TsN77xDX9kCXKeBDTrlDzm5Ktf/aqXuudJ+EqmGcRoz1LGniCVPjtASTKyC58Pd9gpmh48poAfPuNDou985zve7btqbWG5TcASpR3+QlKaPj50GqzdPvOVXbXESEJ4vUk0+CHlaYdfmO3hfwegeP2i8cXR3b4454N9+0E288F4+I5kewwCO6JZn/lAjeQ3vOQOxo5ELglb6n7kRXPqe9saDPiYrmFot7EzsDOwM3BGBva164xkH7vyv4zgf+knMbl/72vjKvmazDHU4cqxWrVVT37QbtUZPN2+yob0HYO96PpWsr0mm67BxYQ9yff67JWf6ydGntoAw6rz6xXiS1zBn8bKd36Ea/p6j2iXdxDYrB2SnxA7MtEjK8U5fqRLmeqDYdW5NTqrxZZiGFUmC8dqUjXb0Yj80NaqE/Wpy4b0HYO96DqVb7mWTZflYsKe5Ht99srP9RNjTm2AYdX5NYcve+OtpARv0pWBIAEwnJZ8IAiuYzAT9XysZkF2+aqw7zwbrJIc4CwlAnAnnIVcwQSi/m7F0KvZw5Nsy9cS3cMNKaNrlkwNhq9ic24M2ES3ZrvidnZX9OkY7GUJBsXvgEbjS+zNDuwcigQGX5yWoHxgOzL5Cj336Pv2dXmOd9991x9nQqKPD1lispTnuPL4A0qSqsiQ5GtPPIrZYZ1yLIbDfzzLMLCj87333vNnxmKX5+KmB75/67d+y5+V+8Uv/qr7Zth8LTIb8iA9YiVJ6zF7nR4Ss+xEHRLRWjels6QEy7DmDevisDaaY/43EOwg9sPKsXbkTvMx13ckaBfIEDH/waGPw2h/8DtgSfXidcsaHuVVT3E6FntpwS0baSmbsb1mT/I1mWhLdeTRbdWTH/RbdZCNh2xI3zHYi66jbGtdNl1+DKhmT/I1mZzvXvm5fqLv1AYYpv4ti/q5umx6HxdmtBab5GsyOT+98nP9yLf0uZZvloExRIl1l9EuxrR0lQxJXhhKcrG9R1Z6c/xIlzLVB8Oqc2t0VostxTCqTBaO1aRqtqMR+aGtVSfqU5cN6TsGe9F1Kt9yLZsuy8WEPcn3+uyVn+snxpzaAMOq88scHD7C7g0wAj2pj8hbwCLa67tX/gRfR4MGIVVZHUMjEY1iKdzu67l+Nuer5CBE2CASpOdXt/SzZH4d4RovKEo2j+Tn0zGpuaafGE8prklAOYER5L525cgptMXBKIjQ3ChWsdDWNdfPOPQnTlabXyUHwWMUUZ034cMvgFsyQInS8Y2/7xCzPASpWnDePtYgGM1UZTvtwoafbt9s+l/rAwNTCQ6SAOzoYqcXdctgpOY3ucaLxz6WWzg5TyQLkAcSXoW1q8TEMBNLvTPaxdsM1ZKK3z+lzjO2H3DYPUyq0p9FbbtWn9k9+sGHH9z83J5ryiMQ2NXKbnmeBxsTtSROSd6yq5WkKjLsyBzWhM5AHMOQYPQdvrY28EOFP/rRjw4/FpazCAYewcAPm7HrlmersrYMa+KLcbfwsaYvWb4i2LpgJLxgjF8Ma9nUGnZsqeHK4tBzc/3Hvw5r3uDvpSfItT7Rdmtz1ppi+tjwOCxGxaMxUXnr5bZ2sj7TFfDcSpZr8XbpVC0bpWck41VYu0rjuipf4qzBaByz+iAs653rZ3O+Sg5CuA0iQXp+dUs/DVOhCPwI13hBUbJ5JF+0urxjTT8xnlJcsxCPIPe1q4O9OBgVtUaxioW2rrl+xqE/cbLa/BodHBK1J546GwB2AD2irIGVfE0GCLI5JVeCO+UH+yXb8l2yvVp7CUDGwZSoME/JZUwfNZX0L87XCKyEjyDoEw9HQSUXkqnZSlSOLqf81OyrTwbnYpB+LI9wjYZr9iVfk8G+ME/JRSyxPuUH+yXb8i17JTn195TC5Tqj4Zp9yddksCXMU3IlrFN+evgq+Vjc3hHclOhSvhRLyc/F+RqBlfCBnz7xQKKThIQnPy25cnTQZw0v7BmyL18+868U83VWfX2ZHXTNfoJhbCoJwht7fj0dWyRM+PV1nhlZegaiftzmgw8+uPnMkjpkFA4YDpXgbIUqZmVaZc6sOK3J5PTUhh42SvpTfbJTNHAQmFkRMCtVzVmir4ZVOkv5kp2rLmtEXTXwTnDjfcjawBpBQvG5rRtPXjz1Z7/+0z/9k9/XPAs27mol6YcOyVmSuOjS74nWXggmz3NhefzCfbPDGsOPYPGcXB6xgG92zirxKPPyz7pDsvYb3/hDSyx/YD+e9cubZ09t3TOML4hvPNE7x9z1NdJisKyxfzBF8pskNyfr5lPDRsmPfj23kzg8duG0UsdtTS3HpcejoCw6PrR7/sLWfRPD7vC4mTd8bKiXkrU8tobkOOfnjz+3dWL0HLAce77lUu1TWCXXUmLrEJagVBQlP4VBNqfkSq6m/GC/ZFu+S7ZXay8ByDiYEhXmKbmM6aOmkv7F+RqBlfARBH3i4Sio5EIyNVuJytHllJ+affXJ4FwM0o/lEa7RcM2+5Gsy2BfmKbmIJdan/GC/ZFu+Za8kp/6eUrhcZzRcsy/5mgy2hHlKroR1yk8PXyUfi9s7gpsSXcqXYin5uThfI7DVErUEXApWZKTllLwPwgojUfIj07nBUN+cuNI4c9clTDnZVgyOWcB7HYyOa2oyTZnKqa8V6+iuuUj9TSk2yY+gWz4JK/lr8lNSHtvXsJG66LU5Je9UbciX5g9likV9xJj2pXHPve61OyXvmAV8SrgCuqQq05SpjPowm/ZVXDV39dpskXfMAt6ikEFbU5NpylROfZhM+zJuupt6bSIvTErU8safpISeMwkI8gTsXn3+/JknUR5ZA79yTnLgntWndtemuNwnenb67itLBjwn2WB+9UM0PE+ylKjlq9HsvON5kp/aV6X9MF3yAO4rdThIbP46xDW42WKtP4yVuUhDVN/WQYrf1H/O75RM5OskoJzBDdumsPa6Xtter/9LyHvMfh/yY1uWqLV7+sn4bFOSpd///vf9GbUkTEmW6iAJqAQopX6oivbeY7DD4xdIFt+3dev5DT8OxlpDAvY//+f/7LjkU/b14dOQqP3dmz/8wz+8+cEPfnDz8Ucf3zyxxKP/MJjFBKJSglK21iy5R/h2A0nvp7YG8yEVWB88sLdU9sEZP9rmz4y1eInJk7g39lzY8fowJhOg4r3oH82xNtsPivEBGtzJNmNDEh0/pfHhWbbsnuZkrWZhPk7WHt8dce067pkA3dHda3dKPvK1ZO0q+REnlKmM+gg/7eugpCjaa7NFfg2+an7EyavCl/4w2+LviOLAZzpqnGfEm5p6bU7Jx7m1BV+XnFsQOhV/SvqUfOSr23hwVvJzSb5KmALso2qL/Bp81fxcE1+rJmqPmF7zosbmSn4YlJKbWt9K7tc1UwpkRS81Tmp9K0JYbgqeALvxcWf4qPDgVI18bTG94lCkfNX6KpCvo2sLspLIUr5id60vyl1NfedrGAp7E+4JUyv5Ua9nlgjwH9358pd8dxuJ04cPH/mzIz/77FP/QZnHlhwlofvMEqz2U2D+fNnhWYZ26W/Kx1G2+uFggtgiKF8vbbfWM0v8kgDmmY583VgJnF//9V8/+Xr0wY5V2LHFbloSMJ988ol3+TMa3d8hJRBVZtXBqkcsHELx+EJciWUP09rKEokCsiYcE1WHXcru61Yem7Kf3m+x71Zj3VpPTF2eNzPchWK28DC1h7ltU8bm+PiVeS44xmKoDh9OkMRk7h8eMeKC7S8+N92GJeosGfr8wXNPnOVmP89/9h2hhgc9ziNQ7W6bJH0ue6LQEopjwpDdld/73vc8Ufsf/+N/9NhJ9CnZh46SgbG9yWEUsrnk8b4cnpX74t4LWyM+9vv4xz/+8c1PfvKTG/yTkOWMBxhIQv7e7/3ezV/+5V/ePLSEKEnQ99//t+FHtCzpyC5dnsGLLDc5fJMc4BC3sRx6FrwyXqZOQpb5QuL5i1/8ksXwe56wZccq6+Hnho2k6OeWJH38+WNP6jLmvpbALXhBO2Idwd8C83kxzF3mJrtpiZ3zLXt+L+szyeuvfOUrnkgnUesc3Fo4xA8OHl/Btx3A7jjAIucHDIMyl7pFKJPuQehaX88AtsZJre8qKdv5ahuWeFO0acySunPzJxOlUzXytcX0ikOR8lXry0C9rqYtyEoiTPmK3bW+KHc19deAr6tO1Dr/Gw6CTDMxOeIErfUN0tf3uvPVNybn4CvOLdBpXqmkXzJq64vifNLn5ivyQV08qYz952OhzdM5uAKJuKAUHypzfW3ozy+183XKOeNH4lRJyeEX0H/PdqD9tj2G4Nc8afqLXwxfZeVX3H/yk5/ePLHEC1/DJYHgyQu+aswPz4xJIbwc3phj35wMz1gcd9GOiQd2ienHhPhaMkmUqUQtO7bef//9m5/+9KeeqMUPfr3UpATAwoOECzHes2QFCTX4GWJa0YlhJJFBcopde76zb2wb5uqxL65K91vsOwgt5GBL9SG+LT2024bTY6bbdZnc6A+7w0lyDXOFe4N25v7hsIvhGaN8KGK71E2WuXUsdJDOVpQIxM8T5qZJDclNIjiNgjlF0pEDpOA5wuQ9671wj7AWsCsf348sqfcLe04tjz7g3v6zP/szTwAq2TfcU8N64fPf7oXhXj6NZQqlrQKDrt9PD/yeZb345JNPb1i7eFYu68zv/u7vniRqsc2OUdYg7nWOx5YE5f7kQ6EP7UMhYnlpH1zxeAX/0TBKBsBklHT3RL2tp0rYu6EZL5j1sbaSsSZJCy6epfunf/qnti7/B0/exh2s/2oxPv7Xz30nsydIDd+QLB+SywbT+WGeUMcHh/sxH8xHHleBH9ZmksO/YT/09o2vf92T1ySx4Yj5pnEbLAwYfU5aopYfhfvMeH/06KF/M8LH0wQ1ok6ZFMf2A5axXbJB7Gqqjm1DgDIdOVGbylzf1RCUAHHMAp70rXEp0zlOan1r+N7Cxjn4ilwRg3hSSb9k1LZFrGvYPDdfkQ/q4kll7F8jvjVtnIMr8IoLSvGhMte3Zoxr2nqd+LrqRO2agzrXFpNBk3eujV3v9WVgnz99Yx/5iv+QYCX29Vl9PaV3vu74uFvWhv/4qitv1L9gP+rz27/92zfvvvt1T2iQXGEH6wcf/Lvttv2iJV+GN9/s5CJJwPhzDAmkYTehkklDz9DHLi0lHmj3r9Habq1f+7Vfu3nnnXdu/uiP/siTJOysZScvSZt4oEsigCQAX6slWcvOrSGpMyYOyD4sPPDNbjtwDAlUvmqs3X/L7Z/AIy6+Zmyxsfr43wGWCME32ZTUI9f6WyFdu05sv6INiv/S4YFDc53kFsk07iXGjkRkLiEqeR7t8abJ81xWdi1yP6RzXvExx2WTXZ/MT3a+I8853APpTBm0hyTfs+HC7JBAvJ1B8rBmOSQBde/AA/cpu1nfe+89T5iyw5a4iQPsOmpxSKZaminuGP/wg3vWziePn9g69bk/q/aHP/yhr218OKRn1UZ7jMlvWmKSEsycHIzp02dPrTbcj8MY2j0LrSN8b2ONs6aHlqB8660veHw8c3vuM3d9nvu6x9pnH4zZGsF6yTN0wcnBOkwimUQ0ftD56KOPPNk6rCnWwv++xgxrDRPTbbsF6zPcrEHEwBgwZkrIkrj+5p/8iSfY+XeBPl+bRl0K9Nh9y78HrM9gIsn78CFzc/gA70CUfFp5O/JDPWIaxfaiwADc7XwVyNmbJxnY588kRUcCkS/uu33tOqKn6yJy2aW4C2/KwCuXqNU/kPFmnWJwSnaqf8r+tfbP4YpYdDPneKn1XSsPrbh2vlqZGuSW8FXytM+vY2Zy92CUmOqPsnepvmRuoZvj5Srnlr3RHt7Mv/Q3++zaYufZO++848ladsSxq/Y3f/Mrdv6G7Wb9mT8nloQAX3HlzTlv0jl5k/702RP/SvYhHYB5fFjwb77x5s0bllD4NUtg/Lr5YZcWX6vl/OpXv+o7bJV8inOFN/4kA3jcAc+oBRPJMU/KWHJh+A/SzQm+Zh4kaL/2ta95UkSJo2EHHSPHue4BXx8bj58YjyRTiPOlJd8eWhwPLI7cM4AnUUwKrBvDOazNH9FpdLPpsvFhhywJMXYg8rVvEv1fsq+n/wdLpJLQyiW1uNn8gwvT+32b8yTdSFqSHMsdzEOShyQYuTeZn7dzc3iWK9fx8MShYdPzQp8bPhKXao+yq9YNxpAsHXbUkthjd/Gndu/ygQ+7Wnn+KwlAdu+n/CzG4v7Nt3HPh0qsJfhgvfiHf/gHT3DDNx8McUTekBWmP/iDP/BxhfNf+ZW3bXx+1RK3n/juXNY8no/99OkTH/+4e/aNR2/cfOE/vO1jyjjhh6RwaWxb4mUdtaF0rCTo4Y71mbnGGsiHVjwHGD8kU3l+N+sk57Au367PT22O8k0B9HRgmznJWBE/SfQvW0KYJPMf//Ef3/zVX/3VzZ9YshbeIl/SZ/5//PHHPtfgmXWa6UiSlg+5XCdMz1CVCS9pB0qp/0j4jl1o/eqJbUp2qv+OUXSAO4crlOGjNH9qfQfHd7Sy89U3cEv4Knna59cxM1Nr01T/sbW7c7Vkbl167XqlErUaiLszda4DaWkS1tDVbuZaX83mXenb+ZoeqS3vxVdxfm3J1/Ro3V2JV/VeJK7Dae/WSeKwK4tdtCQDvv71r9+QsOBNOOdXvvJb/madxw6QHCAh4IkgS8D83N6g37MEKkmAl5YM4M26J2fHYSfZcN+e78gPkZH4+B37+vG7775ru8O+4ckMSpJQJEZImKQH9kgIg4NELad/tda/ikwyINWYd01ygphzGOZZrGuR7P6Zgec5kyR+SNRykGg6JGkbg4OCV/ceZwatfyydNsxx301rjzJ48vmTm7fefOvmSzaH+PEq5hDJr9rBhxMkwEjAlZJ5JLqUqEWW+cn11AEuThKk7Ah98JJni/I19S2YHNA4n/bChxsk6V6+fGBfg+fefew4/uVf/sUTtdzncDTFz1SMsR/fg3/bVQv3NjaMAThIIH7ve//oiUiSjtxn9JHEVfKROrg4GVft+mVc3rRxJRnK+YH54bEIfAOBJHRMen7hC2/7bnxiI1HLB1A827VlvGIsqoPD/j+spcwTPtxibSa5D+bhGw8feJIWv+yuHdbn929+/vPhQzbWS3Z88wNvPI/8qc1XVgtsK/5HlmT+FbMJXrBzfvOb37z5i7/4i5t33nnHE8OSFT5K4vd1zPzeJmrZBc7u5oFfHxeTVRn1Y32qP8relfp2d9tdYWAeTnjrnQ81+VrfPITXpbXzNT0eW96Lr+L82pKv6dG6uxJ38V6s/6V6prGYQ1wOGjfj3Mm7FoYcrrXb1sIqvuYsYmthWJubnL21sb7KfMEVx5wYB83hVXMrtvXU1x6zHt89smvhXMLXWhh64p4ruxZW8TVnnq6FYS4Ha+nxxpxEBUkL7QwjocrXlzm1Y4836LxZJ5HKV4ZJqg5JBpggGWDJR0uM8PgEkg0kqEg4sTOM5ALJYe1mi9hlg6/3/vM///PNP/7jP7pPMgxgIyHjyZaQcBk8RivtdZIUJCZ4juU5DhIqPL8Tbj78kEdMfOiJlBcPLclUAXBX5td6ONmneT0HcTE32U3ISbKKDynetvuEJBrPYiUJybjmkluKhLnPvcBX2vmQJHegz+5J7kE+QGF+UtYOsJGMBBuJO3b78pfrkKRdcofUvB738WNWxP/QdrbCBbs7uYf5cSo+EOHDGdpjsvTYwrwr1hpfG8w/9kmSPrNE9Ycf/tx39HK/fec73/EEOYlvuE0PxgKM8AyX7LTnXuXUmsc6x7hz+tw0x1/84q/aWjZ8U4DdqMwF1stSolbrG2XvQYzwy7ygTqzgZE7pQzTWZU4StR999Etbmz/zucAHXzFRqyQ1WFkDWZc5iZ82/g3AVzw079m5+6Mf/ejmf//v/+1JeNZ+fnSNk13cfOvBAPqpKJ2vaOwK62BdAyc2FHdvmGth6PU7R34trOJrDvdrYZgTf6/O2lhfZb7gimNOjIPm8Kq5Fdt66muPWY/vHtm1cC7hay0MPXHPlV0Lq/iaM0/XwjCXg4snaiGAYy0i5g7Cmhg8oI1edr76iF2TrzlzS/NK5VwbfVFfh/TcWNccsy2ZWBvnHL7WxrDztSUD82xrjFNtEgC8SSfRoN22JFxIyJKYJWlBwnZIBNhX+O1NO2/UOXkjTwKCOUfShkQCSVpOEgDaTcjOMJK0JAJIGKSHkk1/93d/Z4nafzB/H9q/5UOilt1yR8mAGQmP6I9k9J//+Z8fnk8Z+7ao81VwONJjI/793z8w3mxXsrVpTNJ7Vu2Uad8WGOfaXBPn1cU5jo8/39N2KCphxzx+9913b/7rf/2vPt+Z09xDpYN7gUQYCTZ2cuYO7gnuQexw33Av6vmpOXkl/UjOkqTlvuFepd0fuaCBySmv1WZYPUFn2OGAH+Jijr9nCT3iIUnLYz+ImbhqHPVDuvVNkpidovx424ePPzwkav/+7//ev9ZP0ljcRj+sdfBMH4lQHikw7FIdvkXAmscaRzLcE7VjDIwjHzqxjvBBFGucbEX7se73OvPJzt6DNZX1Ex6JhQ+YWJv1QdptkvYjnwPMG5K07N6XO7hnjLDBXCR5jR127mKT9hxH4CV+bJKo/V//63/d/NCeA+yJWtZyThtrf05tEtjrtHYRenkFSIgJl5oN184VkNfGuvMVJsJEdQ5XW4zZBMyr6X7V+drvxb6ptvM18HXxRC035tqD0TcV7q40vM1d2O5u1HcLueb23UK93gcnvXFHvq59bu9rV+/o3srva9ctF721mDRQ8pQ38+w+00lSiiQBiQnerPMGXQlHkkTYIMmqRAxJBd70x4QAiSoSIpzxUBJACWF2wZFc+cEPfmiJiE88sQAeTsdHosQMMObx/o42W+rEQ5Ji2HHWorFMBm5IpvFjS3ytmoPYPYnCi/XHI8Z23BOl1q/Lb49PjQdo0O/RrUWwlp2aj1qfuGCQ/D8fryHRxr3BjsR33nnnMDdrSUjkuY9I5nF/lA7mOXZInFGvzU/du9yD3Jv44B4hoTjMrUMEJXfrtBtePqDhg5QH9sNSz59bstQSnI9+/GN7zvVP/UewwMU9B8alxyEqmyCsBtjmgxySxP5jXE+HZ6mSVPzWt77l7uCdpCoYqGus0OVkbChZs0jYsvOZD6NYl0g0w2lc45BnTWOc9EiLwxo1Bqi1jTHksQU/Nj74xgDr5+C/PXGNPPY5WUPBCZeccW1mfdbaTHKVU/MEG8SIDolmTuIkaUubuND4aA7BA8lrfiSO9ZmTNeyZxcVc9g/RzO49ewRCuo5d+h5WLKUSfJpPlNeOtxTHJdp3vi7Bep9Pze0+rctLX2puRb6ufS3Y16758/RS82s+4vU0y399Bh+6EeJNkLbpGrUoF8wUq5eavBHzHNylgGRXPOg6+si1lezF9tQmdtQW5baoz8Vcw5KzWWvrjVXy2JRdtdVwrdEnf9hay2fOptqij1xbS0zYkK7KaLfFxlwZ+UN/LZ+yGe2lbbqe4zflK/qZy0OLXsQ8B3fJh+wqDl1HH7m2kr3YntrEjtqi3Bb1uZhrWHI2a21rxKo38CpTfCQFeAPPm3GSG7yx184yShIXaVJIyQB0ONEnqUBygURAPJQIILFAEpNdp9/97ndvvv3tb1tS4EeW0PjU9YZkgCVqSQiZgchLtNdTJx7iA/85DpIdJEXgEE788EBOo4kta4zzOeKL4wL+u4K7xE0cA40VbWpn5yFJOnZgMuc5awdzTfdESVb3DqXumZb5SSKRpCGY8MN9ea5jiHp4vW9fgWdn6zNL1JIw5Gv5JGpJmBI7a8Bh7s8AGPlHHa96vrM/q9aueZ4snJG8JrFIHT7xD098zV8Y4jjAG2sCcvTzOIRhRyrPeh0S3zFRG+ORHvaiTeRZ27j3SdLyOBd+YI1vJUh2WNGGV2KKR2ldlg/4VPJba7PWZzDjX3MBW+ixBhMruswXYqWkXXaFQfrs1v3+97/vH6D9n//zf3w8+cE1+h8+snXexjynX78j5GW61D0X7aVtusZalJu2Ps6jURA7vfotPnIyETP9a/mVXdnTdfSRa8thTNtSm9hRWyq79vVczDUcOZu1tt5YJY9N2VVbDdcaffKHrbV85myqLfrItbXEhA3pqox2W2zMlZE/9NfyKZvRXtqm6zl+U76in7k8tOhFzHNwl3zIruLQdfSRayvZi+2pTeyoLcptUZ+LuYYlZ7PWplibErWp42g47Zt7DSDZpRTAufZ69dbypxhq/ltkavqvW1/k6xJzYynfa82tKRziJvI1pZPrj/dirn+Ltoh5S76in7XiiHxpDNay3WJnLb5auGmRacH8ushEvpbODd7Qs7OLHWMkEjh5A8/Jm2698eYNPSfJiNKhhCv9SkCUZGknicCpRAi7zXimJb/W/r3vfc/rH3zw746FhMhDcCmRYMmGNQ6SE5znOkiksVNPCTh4yiVi4hivE2k5QvfPbt6VjlXXLt/FuhKwTjMlRuJ4MS8ZT5K1HGmSq9PlQVz3Dwk0JRQPnYWKHi0AJt23OdF4n+b6aYsxlmRO2n2ikgQcdn2yo/apJUo//vgjT9SS5GMHKh9UcB+0ctWCxefcmIAE10Pf0fvI1xd2fbK+4Rsusac1TgnKuN7BHWsd92h6iDuNT9rPtWS0tpGk1XNuf2iPCuBDqH/+5x/6owmGNXZM7FoQvp47j4MdxlTfMtCYUoJXGBRLaW2O/FGXXg678JN8VbIXDJwkmVmb//Zv//aGOP7939+3WG+GJK/NOd9Ry7oc1uYxlJKrRe2l+3OJUfDKro/FEmMzdNfiSzHUILTI1PRft77I1yXmxlK+15pbUzjETeRrSifXH+/FXP8WbRHzlnxFP2vFEfnSGKxlu8XOWny1cNMi04L5dZGJfGluNCVq46SCrHgdjW5BpOzHiSXwS/0pjtS2YpxjP2dTbdhTPHNsT+m47ZEcxSR/up6yUetXHNHWUvs5m2oDi+zXcM3ti7YVk9p0Pdd2SW+pfXET8akNn7Jf8r+kXbaj71zbHB+KIdrGDvbTth77siudeC3s6lu7lP2If2k8wqg4Utv0xzbJt5Q5m2pDX/G02OqVcdsjOcIvf7rutRnlFUe0tdR+zqba8C37Ececut5P8yxLfpmdnVgkJzjYnaWvBpPIUHtLYkUyKkvYSAQoMaxfMScRQIKWHWfsgiPBwfMOSUSAISYnxPlafJRwbtGuRE5MoKR+NOaKU/3Em7apLy1r9iUrLC9IiJJ12fCQ9Yh/Kh76wcV8qeFTHBG+/MW2nrrGINU5wn8G3lL/tWvxoDLKqo2ydrTK5Wywrty3e/blgzEZagk83LFTnh+fIqnNblYeE8AxtU5MYRUGj8he2JOKf60Z+jCItYY1BX/s8mXdY6cvj63gUQgkZTlJck/hwkYNN5jxy45ZfJAoJn4ed8BOVBK1rLlgwh9YSW4rhsH/MO951ADyfJgFTh5PAIecrIlaF8VDrhRWcKmek6NNY89OZD33VklmEu2MIXiIa0gyk9S2GCwOHnthDg6mb2tDE/GlbQfhhgq6ztEoG69je4OpbhHZj/iXxiMQiiO1TX9sk3xLmbOpNvQVT4utXhm3PZIj/PKn616bUV5xRFtL7edsqg3fsh9xrFWPthWT2nS9li/ZWWpf3ER8asOH7MvfmqVsR9+5tjk+FUO0jR3sp2099mVXOvFa2NW3din7Ef/SeIRRcaS26Y9tkm8pczbVhr7iabHVK+O2R3KEX/503WszyiuOaGup/ZxNteFb9iMO6k2JWgQj2HhdMozM0sNtjw5eGoA0oBTTHH8lG7gt9U35yenRtiVXR5gy4DNNRyqtFzG2GM8S+9GmcJyFLwWQAbAknhiD6pRyF9vm1DNwj+6NOTandBz7GEB6L07ptvancYkvyrSv1SZyqa6uZb/HVqus2x4dpHwtjUcYFIeuVS6xn7NJ2xiKXGxXZsBnmmb5j7HFeJbYjzYFahu+7nnCgkcNkJBVkoKEAAkMkrckEWifeoMPzhYZ5JQMIGGiZx7yVWBOErU8+5Akx5Cota8r21dqPSFhiQCSA+mR4yuVuZZrxT6VeARvGpfmV8/cwt/UEbFMS09Zy/e73dF419pl+F9OJGnlUdzGmJfG03rf4bN1/gvvFmWOg+iHsZ46ZGNKLu3XfOUZpbb3/eaFrRsPHw6PRvnZz37qOzR/53d+5+av/uqvPPGuHaKpnfRaeCiLx9jFGJArZM3QHcRuUD0CQclH1hfqf/RHf+TrG484UNKzNo61PmGDYyVqedwD6xpJYpKzJDu1vpGc9SSnJ2otuW3xPb9HIDA57LQnyfud73zH8bOzljWRJDc4lFhGrwVXiwy2wA9ffIAGZp3gBgvxIMP4wdkh2Qz3IiEpNXKKLuluvkzt61r2mw11CLrt0UHX2tXhQ3GkKkv4ytmkbUuujvBnwGeajlRaL2JsMZ4l9qNN4TgLXwogA2BJPDEG1SnlLrbNqWfg+v2/lv0cJrc9OkjvxZz8nLY0LsVDmfb12E91dS37PbZaZd326CDla2k8wqA4dK1yif2cTdrGUORiuzIDPtM0y3+MLcazxH60KVBTfDUnaiNIGe8pewJTIA5+vDhqqzju8YOZkrz8lVyV9GSzpNfaXrOPDeemZCwDPtPk2lN+UhdRPmIo2Zd+1FObSvq2PiLWg69s49BbiqcWx8FuoVJxd6JR83MOvgRIPDj28eKoTYIrlKWY5W+ui6V8lXDl8AgrJf/Ychy1DU3Z1x4/GCjJy1/WSUVPNkt6re0lXNJ3bnSRlhnwmSbXmvKTmo7yEUPJvvSjntpU0rfFASZOnvH6wJ8j+eDmM0uW8vxI3qCza4vkBYlaThK1fEWZhACPB9Cbcr0xJ4mrU0lekgGecBgfa6Cvz2Kbuk6SJyQhOEli8FVaEsZck0RBnkcdkAzgh4lqSR3xhW/730+SwDxG4a//+q+3oHK2TXYNk6xhhx2JlyHhkZ8tpTmSlSbucXwBh20SKv/zf/5P5w7+0gOO4Z3dhdTB0pTMMUNZDKmDIId879oFlmc2jz6z5BQ7+Eji58YzzjfmEnOLw/nwCeGXxZcSzyhobh2UzajPs7EBnhlPcA3zr5WZg8XVKiTXSAyyU5P7DF50gI3EG8k25gKPamDXfHrowxPmKfcidg5xwaUdTXyNPLE+cHz66Wc2v/7N5yRfnWeMwJGbl64wvhALmJjLH330S28V/0dpQaAdwrUeTxaT/ORZvcM3BZjf2NJ6x7xnreEkUcvJTlU+tNLzZpW8JQ6w4ptD6xj3DSfcq05JPz8YyJxlHdKO2g9sHiNLkpY1U2up2zXb92zM9OgIfhCNMeNxA8wzxgOb7KolWcujHFib9fgGYZVNrc3CrvkAD+Ajmaw4VCoOfdOCJC0+mQ/w9uGHHxzWrPv3xyQt4wj2kRv4Kc2RgT0k5h2HIZ6nXsSVMyesPrXGi6O2nNLYVoq/pFKSl79ePeSXciUbNQz0Ff1kFDNNuOkal1Q+YijZdycTfopxSHmFMmI9mMs2Dr2leErz5WCzUqm4O9Gq+TkHXwIkHhz7eHHUJsEVylLM8jfXxVK+SrhyeISVsvfvrh4/+C7JC0MOX01PfSW91vYSLuk7N7pIywz4TJNrTflJTUf5iKFkX/pRT20q6es9DolaKecAqK9kPAaQk5E+Zc6+dHJ9rW3YaPUjfzn5nD/Jq8zppX26TkvsSz/t07X6KWt40j6/ThqTS7nwstWPlHLyNfs1vbRP12mJfflN+3Qd+2t40j6/ThqTS7nwUn4oa3JSknyUjXXJpaX0cn7Ul+roGvtTMuqvYcn1tbYJS4ufVBYd+VEpmVJZ86O+ki4+ajLqo6zhyfW1toGt1Q+yHDn5nL9B+vY1p6de9ek6LbE/JaN+yhqetM+vk8bk8ghOqx8p5eRr9mt6aZ+u0xL78pv26Tr2n+DxN9T2xtoSD7yh5/m0JMJ4Y86PxfCmPCZq9RgEEgIkBkhgcCo5oFI/REMygwQAb/g52QFGUsb9mC+uqZMwIfHASTKABBO7a58+HRIeJBc84WBJWv+RmiQRQKwxTsWuUsmd//7f/7uarqIk4UjSCZ7hfEieWALIZ/btaCk2SrWqLAaCwJgsUQLxf/yP/3GUYIq6jBNYhsT4E0vADEmiKJPWc7hSGa5zWFvb3J7HMiTEmC/MDRJWpedwEgsJKOYR8oONwGrOuQnV4lEftmI9DhVjSPKTDzViosr9n/mFZBuJd8b++fNn5n1IngkXST8eK8K9QUKSezo9uFdZB/SVfXgVdUM5vMKH2mVDHDnr1slawH3MHGdMwMV84+vzfCBEP2ftYL3ghONf/IIf3xr8KibpOpYAyO8obNsax+CRSCQWcLAu4Z/EI7FSJ0lL8lon46k1T8+xZj0CL76xAy4SyTrhlVPJTu5xkvjMSfnRPH3wYEjSKqnqjw3wJO3AyUNb9168eOCJUX6wi/kPXtbmNFHLWLI2K8msNVklCVxOJWrj2ix+KYlJJ2uCdtLyyAZ9sDTMKx5rYd9yMD6UDOYRNePSc7hX4hwJQ6Mhy5a3c+i0W32nPUMLPmoy6qOs4cn1tbaBpNUPshw5+Zy/Qfr2NaenXvXpOi2xP2k6AxwAAEAASURBVCWjfsoanrTPr5PG5PIITqsfKeXka/ZremmfrtMS+/Kb9uk69tfwpH1+nTQml3LhpfxQ1uSkJPkoG+uSS0vp5fyoL9XRNfanZNRfw5Lra20TlhY/qSw68qNSMqWy5kd9JV181GTUR1nDk+trbQNbqx9kOXLyOX+D9O1rTk+96tN1WmJ/Skb9lDU8aZ9fJ43J5RGcVj9SysnX7Nf00j5dpyX25Tf2HRK1sbGn3gK8x95dly0RHeNqkYnyr3s98lWbb7W+pRzGm2dLP0twXhOuyNeSmLbUvSa+toyz1TZ8TI1bi0yrv9dBLvJVm2+nfWPiyt5R88MvJAmeWnKHH/whycUbeRINvEknMaAdWyQsSAIoIcA1Z0zaUlfihWQECR+9+VcCQ7vjSAbQRoLkF7/4uSVr3/eELT86JBs8Z1JJjPuG1RMzygTEQabNcNMvXZIG+CBphY1rOrQzDn4/+eRj/yOSJJJXxqILr+myC+82/oEH+CUpxpjS5/wlhhlzZMBEks/5uzf8SFEierZL5qyf43iyq/Dzzx/fsBORJCNzKndo/mpH7RDLGDfxo2Rlz4G01i4svBx5ZG4Oc+2ec8euSfi79AEH7N5k7KmTRONe0H3Bs0bhkLnH/UryLj2IA33mxPv2IcoLu5fRL82hVN+vR+LQAQMfALx8Oew6JenH1+cpsTt1aJcqiUKS4vftmwDHeApj6mPONwfMg60BYGEs7xkv2GR9emInu/Ypf8V2F7O+kaDlx85I3OpDKrgi6Qlf8g1HnGBivaTk1L0EjyTG2YkK36xHzF38PbRnupLkZG3ijNw6Z3zbwdrh7enTZ4b1ic0vPvz63H3w4RY4wcQJbmGNazN9YFeimbWAUx+gaR1WLCpp9/F//98c+89//gtfp4np4UOSvobb4uC5tOLD6L3ocWH3F40953y8BXNdh7YWmYPwXvF/Q27/PSgTsuVclH+8b+mnHN10zzXhinxNI7+MxDXxdRkGjr3Cx9S4tcgcW329ryJfmm+Hd0ZqyFEUFWN/1In1KEO91pfKlq41GXK21CfdnIz6YtkqF3WoT+nRn2JK9Wo2an3YaTnkP2dLfdjJ9Zfs98hGGzU99UVMOVySi3ZVr/VJZqqU/5wt9WEj11+y3SMbbdT06It4pBd1Yl39sZzqj7K5evSf2op96Kb9OXs9cjn9mg/6Ukypvyn9nM+eNvnP+VGf7OVk1BfLVrmoQ31Kj/4UU6pXs1Hrw07LIf85W+rDTq6/ZL9HNtqo6akvYsrhkly0q3qpb3gzPSTyeKN9Y3kaviLMV20ZIBIBv/zFc08okGTQbine6JMAUOJWJUkAnSQFkOeNO2/o00StkrQkA0hYkHwjYUASgvqzZ089EYINdtDyuAPZI3lh2YyTsSFOeKKfZCe+SeSQhFailjiu6SBOsMEPyTTn3/D6V4cD0NIYBhGvOgdH8Q+7GOGZJCxJotrBTj+SMhw8DoOk+CH5Ym0pjvTaFTtfNLeLtjyeYSzh6+mTpzcfWJKRecUuxdJBEop42JXtv0A/xuKJcFPK+cu1Rfv0O16vjHNMdo0v5jW7Jkk8XvpQ/MwvUCuhzAcZ9PHBCPdcvFdTzMxJeCaZ+djsoBfvQxuaLI/YEZe6J/2+tHuS3aHPnz+6eePRC09qsjMaDNjmrB3g4Xz8mOSh/fgWa4zzTxLefMppMHKw6FiHMZMcax3xPbfEJ75JXj8eE7YkHkl6anctyU8e/QJWzpZELclaxcU9/tlnrHc8iuOlJ0zh4pElO3198/XqOFnNXH1p8T16OSRwwcnjP/jwC9vYYk3TNxgYG9ZgsII9Jmppj9ihCGzp2qwE7e3a/PlBhrWZucDa8ODNIYFMEvmBYefU2hzoP8yD2NZazwznQZW+w9geWm/nHU1T+kFtVlX+c37UJ8M5GfXFslUu6lCf0qM/xZTq1WzU+rDTcsh/zpb6sJPrL9nvkY02anrqi5hyuCQX7ape65PMVCn/OVvqw0auv2S7RzbaqOnRF/FIL+rEuvpjOdUfZXP16D+1FfvQTftz9nrkcvo1H/SlmFJ/U/o5nz1t8p/zoz7Zy8moL5atclGH+pQe/SmmVK9mo9aHnZZD/nO21IedXH/Jfo9stFHTU1/ElMMlOdm994ff+Hqqo76TMgqmhk6EV26o+a71rQyjy9ylcEW/AE7HKvanfV0BrigcMeUwr+jqxFT0nfJR6zsxdMaGS+Kq+a71nZGeE1eXxFXzXes7CeKMDZfCFf0S7l24H6cwLxk2bA8JEPvhGPuKtBIBJAVICPBm/gXnmCQhcccbfiVl0920SgYMidLh0QckA4ZExbCTTMkAkrQki3jzT9KEN/okG3Rql5knLkkE+ICdJmlj/OAlhtsE8fDjQeAnnms6iHeIeeAU7t7wrya/4ckb4vXkRwdo4n/+3GK13afw+9lnQ3KF2Gvx40djRuLnrbcsIWWlxoA7xURWP+Lcjua9fZx7jKWPpyWmmEdPbL5oPtYAkQhjLvl8fZNElfHqyT3bXVpTnOgD28DzwCk8kzRjHk/xPGF6te6j8bQ5BQckBNmNCZdgFd4pp9hiLmg3JrZIVA4+6kxqfOGLk3Ej2a77nrEUZ/S1HMxJ/HO+ZVjetLlKolAfKsiGfHMtlAbBDrtHWM9YJzhtp+ozW/u4b2hzPNZPnCRnOZX8pA0e2EnKB0FwQDKcNe0T+5DjIzs/ZjetJe350EPrGtgO69r4qAPGQ4lO7HBGzEbYgTPweqLWxs7XMru/h3sAGRLYgyzrx9tjklZrdEzSDtiHRx8wHsyBYf4eP+6AmBgjPhyBj2FtAO/w4ZnfWyRp7X7yeWDYL3FEvs6NoOa71ncJnuTzUriiX7CkYxX70z5hP3cZMeUwb4kn+k75qPVtiWnK9iVx1XzX+qZi2rL/krhqvmt9W/IxZftSuKJfMN6F+3EKc8r1QymkwaWCIkDyKlv0craWtKW+wUDb1lhSvz0xnANfCU/J9zXxpTFUDCXM6t+qTMdYuLbminhS37UYhatXr2ZzTl+KWbh2vvJsXoqv1G8eXb4V3XOMZ857yffWeHr40pwX/hJm9feU2PY32raZy37SxnZ1DgmFFw+G3WsvxiTAkBSwRKc5R+cZb/CtfG6JA97UK6HHG3fexHviwSRJ8iIzJEQsORSSRNj03Y733vCEhicDSKSBYUy8UCc1O4zH8FqNzxIGJHbBQSKHBAbJEk/CWHLjrMfkIA9YifGNR5b8GRMfntwB6Kzkx5Dw0eMiSE5in2QLjw6oHfoqOUmoWyzs8jPeG6iv2W7pi3Thzh8vYCVzwbKMNy/eGB7JQTw+H21u1o5hLuqr5cO8GublsVb0e9xTvgKf7841LOyKfPkG86yN57LVjp4G0EfjaffCcK/p3iIxb/en3YNTB5xxL/kc9QSlLxZN09PH0RxggwOOSFDabB938Nuu+3FutmDBxjCuQ6KWdQebg/3BBzLpIbp8HtsvqvjYsVYZLu6VB895LANJ2uFDDiUnSWSScCVpSank/+Bz+PBIaxoyPDrhcytJgsKZr2O+63fY3Q9235E6rnMH7CM/4svxqw3OrE6MyA9rst0LNna3H6INSXD6ScSz65gkK6Ungz05PHxwwbxgITeIHrM+COHRCsTLNfH7uPN4Azu1u36IhxhuE+Nl1tNRaLvWWLXYjXz16LUhaZdKfQtXSwztXk4lU7+nEuUWdLfGV/Je8r01nh6+NIaKoYRZ/VuVKWbh2por4kl912IUrl69ms05fSlm4dr5yrN5Kb5Sv3l0+VZ0zzGeOe8l31vj6eFLc174S5jV/7DrTh/JFyAZOXspAIH5UN0OzuiXX+Zr8ScZwaVU23YgE8sZzOfA4G4zvhN0R5fCNar51FTbkeCWFxnM58Awly9xBSXUz4H1iH4BCI5D9Uh0zYvIV2vQ4BLcNbF02RKAQFKodpnqEh797mvXNGtxbl0DXyQtSIrdkA97ya+j2zx+GJMAY9KWHWckB+wkOeEJgRAucWHGj3E+jFe3TRjnMEESASSP/Ku/nswY3vwreeHJFwxmbA1GTl9xL32SJejiY0hUTielTi0uaBFucZKYIv2s5Is/63FM7JAs99gT+aZL8yWbPDbi5g2ezcnXzS0JNZmoHfj3pLsn9ki4g6XJ83KhhC93a84ZT0A8ejk8R5Vkl5JVNadK1KrUvDjRGf323IueRCZZZbgePjIDBlbzjN2Pmx/iCkeF8VEyTeNJ/PfvDx+ODI85GRLeU1iZTyTuPfE4JhiZu0XHicEDPLODzvCDgMNcY24+HOdmX6J2fK4reMY56uYT34dL8WUQkPN5bZ1w9PIBSU4StcPaxr0yJI959AM7j5/YYy2wNETifmRvdOCXtt6opJl72n8ozDB6gnbkbhiH4d4HzGB1NGQF1zIP91oLhJV1jdPxUjfcww5h4WdtfjoaRP/Wdq5mJuyQR+qDT3CSmObHJqnj3/GoRHLKOOY6jiMoE7hlNvKltrOXoi9gDtXt4Ix+e9YuwAgu5VlwRgYymM+Bwd1mfEdoaV24RjXnTW2p7GbXGcznwDCXL3EFH9TPgfWIewEIjkP1SHTNi8hXa9DgEtw1sXTZEoBAUqh2meoSHv3ua9c0a3FubcHX8IzazlEvTV7AdpqaZqAkcTZHAUAp8CDSU92KryOYRxc96JbJulte7BiL4aLjNdU7G18LMHeEdyTqfNFilTTuI8Hk4qA3qB56t+Lq4CBWegBHvTXqnb4jX9H9K89XKfBIQkd9K76OYB5ddIBbKOpuebFjLIaLjtdUbylfB3u88eZ/S9jGH6Z6aTtT2WXrpSUG+Lotb/A9NZGWxEECwYrB7mjTDdPGNQk4kohDwoZEwHESICQYTNyTCYOZJpawRXKEg91gJDXAznGLyy7M5urH4ObYbMEPXAiruCiIHtsrXLnu+EL8btu4Zbcgu+9qB7IkHknMHJIyZuuIr5qBNfqS4IdQDJPZJqHPeBEXYznMsLLTISF2PL+y0jipU3OidoDJPGPujjs7H3iyz360TRqHihpWKHNYM35OxhOc5t53bI/3h3+Y0QAJznkmLB8iMEewfRtkg4FRBDUz4MlV+2Uvs2P2sO3rSS6wU9s+p03ncL9g0w0fy9J8sMiFHWNxqGvX9tH6Q4xmX4lbEqGyc+BrXN8Gm4NVccI97f8bpqM5SKyMgbU7XEpHcvpCu3xKZsCKbZtf5h8798EBXu4H/xaErdNwmcEs7HEZcBzmy7GP5YAvxT6MufoIQLhO0a/Q0mkccfEVvdPWaSqq99XP5ijAKgUeRHqqW/F1BPPoogfdMll3y4sdYzFcdLymemfjawHmjvCORJ0vWqySxn0kmFwc9AbVQ+9WXB0cxEoP4Ki3Rr3Td+Qrun/l+SoFHknoqG/F1xHMo4sOcAtF3S0vdozFcNHxmupFvrqeUVvziVH/l9i8pQ5req9r385X38gf/njd59ckcYe5ZZL6Q39S6TUWOPC1z62mWbDz1UTTQWiLtWsYA38d3gCTEMAj5ThAvPG/rXvnrcxwyeu4RgyT39/oj3/5603/0Ibc+C/7CkmAW6xgDNiF62ruxQHIIfnlfI08gHXGMQ6PjYXVxjFSvWpOvFsJnqO/tC7I12EsDZEnm8K8m4xnjMnnluKrKrV3Oq4jTMy1EeMF+TpEkIn9wGUrh6OxeK/6vFgQ3y2GgSslEO3qAL1aIS6PjdIkxzirOpXOAQ8CYZ1wfhjP8fTu2/7x0nUO/kdMvryNmFLeHK8JDCVW2o9bnOgMXA1tt7h8/um+d7HQN6rd8m0NjOMIZuB0uPY2YuBET2Va5/pKjwNfC+bqlYa2Caydrz5audf82OfXJHGHuWWS43IzqfM6Cxz42udW0zTY+Wqi6SCUrl3DjtpD9145GwP6R+RsDndHOwM7AzsDKzCwr10rkLjMhN6cYyXWo9UhiUHLMGDDH0un9cObfL3ZV4lqrHO90iHMSkLI7IBxuHpV3zAMsTNuVlsYZORLHJ67PIwljhfGsyZ2x+WQbnlO/wBe098atsTlGrbm2hAGhvIl3+PjsGKsDddnfHW/48tQDEi0nimxqWugxTrXh3XGglJdtgZrSK13pD6i5WEOOkL/4OCwPluTp22HrkHFwA3rhPgHf4gnGt7rrzYDcV682pHu0e0M7Ay8Sgzsa9ei0VwtUcsfO63PZliEOKPsc4AX/6MmI3CFTf5H8AD57Oh0zzBmd+YYwV4Cs/9hfZfmlg3qfi+2z2zm1M5XB19G2LjctiutJLmvXT1E8qaet/7+Vt8TLf6sWzPBV3P9Hb/MkcBQnZJ/oCj89Xwv+NvvxXa+d77auUJy/7urjy8tAOdeB0A59XfXMPdv1y3HaAPs/zYdXhSv9Q7/Dw0brG8Dnuk1c5iDJu1LsAMdMZlubvHDsB1jYZVDbeiwV6wMgQe5Q+91VogiF+450N5JvoywMFvOQdPBh/NlV6cz7yByfZUR7CUwT61d10YWHO33Yvuo7Hy1c4Xk8G/eZdaPV2HtWi1R64PRN3brSWsk1rN4FksX+QeEyEa+LrUwzyH3ElwFqi73F9IcskznUnwd4DLHLg7igGaycjGo+9o1OTYScKr2tUt0TJdMalvkKfTe/jDP1TBt5ewSB4xn9zw63NeuNub3tauNJ5Pa165mqlzwMLUm7kVfK5K1bGjDzPlXklaPOYy3bX1cHUlP8HUkewUXrXytDvUwwVa3vKnBS/DlVI187e8Zp4f3MLWoXGLApiFmJS4OdecrOy4njYcJdtJz1Q2XmF9O1cjXXV67+A2IWcdVzRVmgJ09E6EHP7I98jlCl+rnbM5pc446+eqNf41Y17Axh59UJ/KV9pWue7H3yqd+0V9qI7W56HqcX602erH3yqc4luqn9hZdd96L+OrBj2yPfC6Wpfo5m3Pa4r3o9QYjvfGvEesaNhpCmxSJfE0KjwK92HvlUxzoL7WR2lx0Pd6PrTZ6sffKpziW6qf2Fl2PXLXei/jqwY9sj3wulqX6OZtz2uK92MpXb/xrxLqGjTn8pDqRr7SvdN2LvVc+9Yv+UhupzUXXkNY6uWZgXxrrUv1F3KTKI1cddHWN9Rpz41r4co46+eqNf41Y17CRTpM515GvVv1e7L3yKQ70l9pIbS66HudXq41e7L3yKY6l+qm9Rded9yK+evAj2yOfi2Wpfs7mnLZ4L3q9wUhv/GvEOmVjVqJWRlU2xL6pSOc9fpiE58IvPyo3JaPBeA9fvZglr7IBzomIdFWeCJy5YQ5frdglp3JJaGvYWOIfXXFF2XIIs8opHcmpnJJP+6WnMu0/97X4avUr3Cpb9ebKyY/KuXbW0uvhqxez5FXOwSxdlXNsrKkzh69W7JJTuQT3GjaW+EdXXFG2HMKsckpHciqn5NN+6alM+899Lb5a/Qq3yla9uXLyo3KunbX0evjqxSx5lXMwS1flHBtr6szhqxW75FQuwb2GjSX+0RVXlC2HMKuc0pGcyin5tF96KtP+c1+Lr1a/wq2yVW+unPyonGtnLb0evnoxS17lHMzSVTnHxpo6c/hqxS45lUtwr2FjiX90xRVlyyHMKqd0JKdySj7tl57KtP/c1+Kr1a9wq2zVmysnPyrn2llLr4evXsySVzkHs3RV5mzMStS23lA5h9fUdi1x1Abo0nz1ctQrX4uvZOua+arFs3Vfia+t/V7C/txY5+pdIsaaz2uJ45rvxV6OeuXnjM8181WLZ+u+NbnfGutS+3Njnau3FO/a+tcSxzXfi70c9crXxrRk65r5qsWzdV+Jr639XsL+3Fjn6l0ixprPa4njmu/FXo565eeMzzXzVYtn6741ud8a61L7c2Odq7cU79r61xLHNd+LvRz1ytfGtGQLvpqeUStio6FYj85ddlTQo6Okj1xJL9qYW2/104uhV144pKcyF5fL2kt8fob0ka/p5uz1tLX66cXQI5/DUNN3eXvJ8VXT6+GlJCusNT+1vpzdXnlhwJZ0Vebs+0PtR2HJyYauc3prtLX46cXQK5/DULLhsqPCvnYNM6DEFb3iK3cv0l/TpX/JoXHFRs1PrS/nv0c+h6GmX+OrppfD2dsmrDU/tb6cv155YcCWdFXm7O9r18BK5CjWI2eaW7Tta9cpb5Er6uJrX7sa78WRtBxfpTmZcj73WutGzU+tL+e3V14YsCVdlTn7+9o1sBI5ivXIme5F2va165S3yBV18ZW7F+kv8Uzf0iN3H+Rs9mLokc9hqOnX+Krp5eLqbRPWmp9aX85fr7wwYEu6KnP297VrYCVyFOuRM80t2va165S3yBV18bWvXY334kjarB21Kfn79S0DcVG8bW2ozVZssP2aiJyLwnP52WLY7jL2LfjYbd4yMHtuzFa89f26185F4bn8bDGedxn7FnzsNm8ZmD03Zive+n7da+ei8Fx+thjPu4x9Cz52m7cMzJ4bsxVvfb/utXNReC4/W4znXca+BR+7zVsGZs+N2Yq3vl+nWlOilk8Tap8oRM5dLlGQrsoegrEd7dd0ZV9lTXarPvlWmfpJ43E5e9GnMchLV2Vqo3ad2q/Jyr7KmuxWffKtMvrxWOyFUofL2UuUV12lZKfKHq6wJfsqp+xv0S/fKqOPHF8O2oQln5ZRf6o+hy/5m7K9VT/+SxjSeFwuUZCuyh6cqf2aruyrrMlu1SffKlM/aTwuZy/72pUyNaxZ7EyAMx0HvtRgpbhWGbqq1XQsqsIL/EzZ7elXjCqjrseT8LWvXbfzI3JFPR1/55SXQK6qKlMbtevUfk1W9lXWZLfqk2+VqZ80Hpezl33tSpna165TRm5vq9z88rllL5SHA0Hm19iQlge5hko6d6dURtdTYpv21zCk8Tg3iYK3GUKVPWBT+zVd2VdZk92qT75Vpn7SeFzOXva1K2VqX7tOGbm9h3Lzy+eWvVAeDgSZX2NDWh7kGirp3J1SGV1PiW3aX8OQxuPcJAreZghV9oBN7dd0ZV9lTXarPvlWmfpJ43E5e9nXrpSp+trVlKg9NTm0MAh6x+D1UZDBSAcuvR5Fq0W0WRUMnXP8BPVVqiUMNb5SxyUbqVy8ftX4OsSWBJbjJtd20J+oJOar0kv8VA13dBYxKBCVZhPZVD697nDtosF8r+rVyHsMvNgZ41mLr2izNeil49LqpyZXwuDx8GJnjC0nn2ur+aQv2pySVf8cP9Jdq5zEkASWk8+1teJLzFfVlvipGu7oLGJQICrNJrKpfHrd4dpFg/le1auR9xh4sTPGsxZf0WZr0EvHpdVPTa6EwePhxc4YW04+11bzSV+0OSWr/jl+pLtWOYkhCSwnn2trxZeYr6ot8VM13NFZxKBAVJpNZFP59LrDtYsG872qVyPvMfBiZ4xnLb6izdagl45Lq5+aXAmDx8OLnTG2nHyureaTvmhzSlb9c/xId61yEkMSWE4+19aKLzFfVVvip2q4o7OIQYGoNJvIpvLpdYdrFw3me1WvRt5j4MXOGM9afEWbrUEvHZdWPzW5EgaPhxc7Y2w5+VxbzSd90eaUrPrn+JHuWuUkhiQw5KuJ2kT+BKc75MVOr59ILGvYwmYJUS5W2nSW9GJ7zkbs93h4sXOL2LawGfHHei5WcZXri7qqN8mNfElni/IcvOVi7eErp3/ChQJReSKwTsPG5h1kGm/kKu3LRTUl4zHwYucW8WxhMxcnbblYI18lvdiesxH7PR5e7Nwiti1sRvyxnot1bb7c38hX9L12/Ry8LeUrp3/CgwJReSKwTsPG5h1kGm+cW2lfLqopGY+BFzu3iGcLm7k4acvFGvkq6cX2nI3Y7/HwYucWsW1hM+KP9Vysa/Pl/ka+ou+16+fgbSlfOf0THhSIyhOBdRo2Nu8g03jj3Er7clFNyXgMvNi5RTxb2MzFSVsu1shXSS+252zEfo+HFzu3iG0LmxF/rOdiXZsv9zfyFX2vXT8Hb0v5yumf8KBAVJ4IrNOwsXkHmcYb51bal4tqSsZj4MXOLeLZwmYuTtpysUa+SnqxPWcj9ns8vNi5RWxb2Iz4Yz0X69p8ub+Rr+ibejFRK2AqU0VdF+yqe3G5tX0AKkaVsU0BxD61xVL9KmNfrG8dz9b2iUUxqoxtijX2qS2W6lcZ+1RXLJRbHLK/he1oUzGqpC/Wc9dRX/VUR+0qPR57edX4ysWdaxMP6lOp9rTcevy3tk88ilFlbFO8sU9tsVS/ytgX61vHs7V9YlGMKmObYo19aoul+lXGPtUVC+UWh+xvYTvaVIwq6Yv13HXUVz3VUbtKj8deXjW+cnHn2sSD+lSqPS23Hv+t7ROPYlQZ2xRv7FNbLNWvMvbF+tbxbG2fWBSjytimWGOf2mKpfpWxT3XFQrnFIftb2I42FaNK+mI9dx31VU911K7S47GXV42vXNy5NvGgPpVqT8utx39r+8SjGFXGNsUb+9QWS/WrjH2xvnU8W9snFsWoMrYp1tintliqX2XsU12xUG5xyP4WtqNNxaiSvljPXUd91VMdtav0eOzlVeMrF3euTTyoT6Xa03Lr8d/aPvEoRpWxTfHGPrXFUv0qY1+sbx3P1vaJRTGqjG2KNfapLZbqVxn7VFcslOlRTNRGwZrxKLfXdwZ2Bo4ZWPveWdveMdrLX8X4tGCpjOhybbFf9WhPbXu5M7AzMM3A2vfO2vamIzivRIxP65PKiCTXFvtVj/bUtpc7AzsD0wysfe+sbW86gvNKxPi0PqmMSHJtsV/1aE9te7kzsDMwzcDa987a9qYjOK9EjE/rk8qIJNcW+1WP9tS2lzsDl2TgYcm5JrUmLT+MEh8AnOpJjnbppjKt13Nt9epF+RR3bwySxyZcQYLacnHLd00mp5drm2tLethswVGTb9GP2JGXvbvGV2usii/Hb6sNcbbzJSamS3Er/ve1q85Z5Ouu3YtEJvy1KDUXcvIt+tE28rJ31/hqjVXx7XzFkS/X1+JL4yN7+9pV5jzOTfi6a/dixF+LUnMhJ6/5UtOPffvaFdmYru98TXMkCc1Fzdd97RIz+TLyta9deY5i634vRjam6ztf0xxJIt6LtO1rl5jJl5Gvfe3KcxRbl96LTTtq9a5U/wBHAK9KXRNvtXiMrBa+WmRaMa1pq9XnEjnnXKCtVHWJzXPotuCMMmvNrZSvUqzRd0mmtX2urV69KL8WXx7jaDjab439rsityhdBG1ktfLXItHK4pq1Wn0vk0nvxruBvwRll1ppbKV8l7qPvkkxr+1xbvXpRfi2+PMbRcLTfGvtdkVuVL4I2slr4apFp5XBNW60+l8il9+Jdwd+CM8qsNbdSvkrcR98lmdb2ubZ69aL8Wnx5jKPhaL819rsitypfBG1ktfDVItPK4Zq2Wn0ukUvvxbuCvwVnlFlrbqV8lbiPvksyre1zbfXqRfm1+PIYR8PRfmvsd0VuVb4I2shq4atFppXDNW21+lwil96LPfhPErUoFw1YR6lfA6+yJaCSH9lQ2WILGcmrLOmlMUzJl+zQnto6krXOtWKs+RF+lUcYKheSV1kSTX1PyZfs0J7aOpK1TvrXOKp+ZjpQ3CpLZtaKAfs1W3ySlesXPpUlnLE9Z4d+2VAZdWr1Vnn8Rt+tejnfqa0jGess9cunyiO9wkXEHEVkQ2Xsq9Ulr7Ikm8YwJV+yQ3tq60jWOteKseZH+FUeYahcSF5lSTT1PSVfskN7autI1jrpX+Oo+pnpQHGrLJlZKwbs12zta9fxCFTH3DpL/RpPlcdW81elcZENlXnt01bJqzyVGFrSGKbkS3ZoT20dyVrnWjHW/Ai/yiMMlQvJqyyJpr6n5Et2aE9tHclaJ/1rHFU/Mx0obpUlM2vFgP2arX3tOh6B6phbZ6lf46ny2Gr+qjQusqEyr33aKnmVpxJDSxrDlHzJDu2prSNZ61wrxpof4Vd5hKFyIXmVJdHU95R8yQ7tqa0jWeukf42j6memA8WtsmRmrRiwX7O1r13HI1Adc+ss9Ws8VR5bzV+VxkU2VOa1T1slr/JUYmhJY5iSL9mhPbV1JGuda8VY8yP8Ko8wVC4kr7Ikmvqeki/ZoT21dSRrnfS3HCeJWikVDVQ89wQk+yrlV2WPLelQTum5vxDDlHy0XauX4mAkSn1zfK9p69x8lbAf8VrgC65a+Zry02PrCFsDBvfNi51L/OBXcaik7eQodLZyhT2ZUJn66LEVdZvix+noeK6f6JN6KQ7vKHT2+JYJlan/HltRd0rP/fEyOp6Sj7Zr9VIc+Cn1zfG9pi3imcLg/ngZHU/Jz+IoKpmf0VVs7VoHcvrRGDHMjWNKz33zYucSP+BVHCppOzkKnVM4ox2ZUBn7qPfYirpN8eN0dDzXT/RJvRSHdxQ6e3zLhMrUf4+tqDul5/54GR1PyUfbtXopDvyU+ub4XtMW8UxhcH+8jI6n5GdxFJXMz+gqtnatAzn9aIwY5sYxpee+ebFziR/wKg6VtJ0chc4pnNGOTKiMfdR7bEXdpvhxOjqe6yf6pF6KwzsKnT2+ZUJl6r/HVtSd0nN/vIyOp+Sj7Vq9FAd+Sn1zfK9pi3imMLg/XkbHU/KzOIpK5md0FVu71oGcfjRGDHPjmNJz37zYucQPeBWHStpOjkLnFM5oRyZUxj7qPbaiblP8OB0dz/UTfVIvxeEdhc4e3zKhMvXfYyvqTum5P15Gx1Py0XatXooDP6W+Ob7XtEU8UxjcHy+j4yn5WRxFJfMzuoqtJ+tAMVErgF7qQqbS67E951AqpbJgqiS+uP0Qj1XW9C1bKiPQXBv9rxtfWR7SRrtOmyKXLfWl+i0+JmVWAJE1kTam15PATgVWMHFqtLVlA+cy6aUuhCe9Httft3tRdFCKEpW5vthG/XXjK8fNgTiRY0JZOfU3lEv1G1xMi6wAImsibUyvp5GdSKxg4sRmc8MGzmXSS10IUHo9tr9u96LooBQlKnN9sY3668ZXjpsDcSLHhLJy6m8ol+o3uJgWWQFE1kTamF5PIzuRWMHEic3mhg2cy6SXuhCg9Hpsf93uRdFBKUpU5vpiG/XXja8cNwfiRI4JZeXU31Au1W9wMS2yAoisibQxvZ5GdiKxgokTm80NGziXSS91IUDp9dj+ut2LooNSlKjM9cU26q8bXzluDsSJHBPKyql/LO/94Te+Poe/xMzxILQ4PjHwmjVE0ne+pgdffO1ctXOF5M7Xztc0A30SuhfR2ufXNHfia+eqnat9bk1zhYTm1s7XzlcbA31Sml/72jXNm7hCcudr52uagT6JfX7N42u/F6d52+fWNEdRYucrsjFd3/ma5ihKiC+tXcUdtVFpr+8M7AzsDOwM7AzsDOwM7AzsDOwM7AzsDOwM7AzsDOwM7AzsDOwM7Axsx8DDtUwr8xvteVaYF+vM9UfZ162e4yPNor9unNTiTfna51aZrZQrJHe+dr7KDPT1FOeXmcn19Vl/9aRTTvZ7sTzGKVdI7nztfJUZ6Ospzi8zk+vrs/7qSaec7PdieYxTrpDc+dr5KjPQ11OcX2Ym19dn/dWTTjnZ78XyGKdcIbnztfNVZqCvpzi/zEyur8/6qyedcrLtjlq/0189EreI6LAoWmWnrYPhnawOskx056uNr52nNp40peDLzp22Ztp2sjqoctF9crUxtvPUxpNJOVW82LnT1kzbTlYHVS66T642xnae2ngyKaeKFzt32ppp28nqoMpF98nVxtjOUxtPJuVU8WLnTts0basmak8IJy1sZ5odnoa1jcQ4L7YxPsNq5Ms5ukK+ZoS1iUo6dpGvTRzOMBrHc4b6qiopX258nF+rOpppLItvpq011E7G7grvxROMawQ+00bEEu9Fr8+0uaZaxLem3Tm2wBLxRL7m2NtCJ+Lbwn6PzZQv1x3vxx47W8lm8W3lrMHuydiNXF3TvXiCsSGurUQilngvXhNfW8Xeazed65GvXltbycfx3MpHq92UL9eDtCuZXFl8rcFtIHcydiNXV0KX/7t9gnEDHlpNRizO0RXy1RrL1nLpXI98be271X4cz1adreRSvtzPOL+28tljN4uvx8DKsidjd4X34gnGlTnoMRexxHvR6z2GNpKN+DZy0WwWLBHPaolaGVUJoiu6x4+CbmZrQ0HxpPJa+Yr4NqSj2XTEc43zK+JrDmplwRwGcXUti6JCzmFV37lKYVCJX/F1Lgw1PxFXTe5cfcKjEr/XyFfEdy5uan4inp2vPFORI0mIK8prOnJYz41PGFTiX3ydG0vOX8SV6z93m/CoxP818hXxnZujnL+IZ+crx9DxGytJiCvKazrieF4KlzCoBIf4uhSm6Dfiiu2XqguPSnBcI18R36W4in4jnp2vyMxtPXKkVnFFeU1HDuu58QmDSvyLr3NjyfmLuHL9524THpX4v0a+Ir5zc5TzJzyrJWpzTu5Cm4i4FNZrWwSneNj5mmLo8v3XPqdKc6jUfnlGrxPBpfm69nmWjtrOV8rI9V1f+5wqzaFS+/UxfB2ILs3Xtc+zdJR2vlJGru/62udUaQ6V2q+P4etAdGm+rn2epaO085Uycn3X1z6nSnOo1H59DF8Hokvzde3zLB2la+FrtUQtA6AzDfZar30Q7OUSg3HXuGIMd776ZvJL5tY+v5pIu4a5dZf+EbkGvpoG9kqEdr76BmJfu9r5uoa5ta9dbeO1/93VxpOk7iRfdkPuf3dpBOvlvnbV+Ul7r4GvFNM1X+989Y3O/ndXO1/XMLf2v7vaxutO/h1BaDbJfJ61hbmaVMrXaona1RCe05BGQOU5fd9FXztPzaO2U1WmKv7jFuuusRNXJi72iCeVsW+vnzKw83TKSaFlp6pAjDXH9SrWXWMnrkxc7BFPKmPfXj9lYOfplJNCy05VgRhrjutVrLvGTlyZuNgjnlTGvr1+ysDO0yknhZadqgIx1hzXq1h3jZ24MnGxRzypjH17/ZSBK+Lp4Sm6V7Pl5OZ+NcNcLSr4Yp7uvLVRuvPVxpOk9nklJqbLnatpjqLEfi9GNqbrO1/THEWJ/X6MbNTrO1d1ftLe/V5MGalf73zV+Ul79/sxZaR8vXNV5ibXs9+LOVbKbTtfZW5yPfv9mGMl37Zzleel1Hrt9+LrvaO2NGp7uzOw3+x9E2Hnq4+vXXpnYCsG9nuxj9mdrz6+dumdga0Y2O/FPmZ3vvr42qV3BrZiYL8X+5jd+erja5feGdiKgWu+F1/vRK1GRuVWM+BVsQtPdu50TQ+oc7TzNU3UKBH5alZ6nQV1E6p8nbloiX2/F1tYcpl4L+7Ta5q2yNe09C5x+ANin1xtkwGe7NzpmqbLOdr5miZqlIh8NSu9zoK6CVW+zly0xL7fiy0suUy8F/fpNU1b5Gtaepc4/AGxT662yQBPdl4DXa/Now9yI+MDcA2jkAN3hW07VX2DsvO189XHQLv0vna1c4Xkfi/ufPUx0Ce9z692vva1q50rJPe5tfPVx0Cf9D6/2vna1652rpDc59bOVx8DfdL7/Grna1+72rlC8prm1uu9o7Zv3O6E9BU9/3jn604wsIPcGbgOBva1q28cdr76+Nqldwa2YmC/F/uY3fnq42uX3hnYioH9Xuxjduerj69demdgKwZel3uxaUetyDh3htn98mKOW3wLJ5OiRX7ryXNuDOLr5R3i65JjNpevc49rnKcX5UvOO+fXNfB1bgyaW/vaFWdvuS6+9rWrzFHsmcvXue+DE8xjw7lxvNzXrjgU1brm1r52VWk6dIqvfe06UFKtzOXr3GtGDELLB23nxrGvXXEk6nXNrX3tqvOkXvG1r11ipF7O5evca0aMYl+7IhvTdfF17jHT3NrXrukxQkJ8vQ5rV1Oito22DaUYkXPfNTPD0U0+U31XOycDyWA9ePD2zcNHX7x5cP/NExSJ6MWmY8RxzlvC/cq5OZ7yLVEROSUvuTXLS2JYwtcluIL3na++2Rf5mjNmz59/dvP02S9vXjx/3Oc4N1iNFsA8B2uj+dXE7t2/f3Of895ytEvuRQJajqCflji3zo1h56t9vI64GgeqNl/ScT332OLvkhhSvqZu7xRrjVtim3u8sGzoi+cvbl6+fDHXxCurd88G6f79B3a2sX+uMcsRfjS/DO4U4ktiFf5LYTjiCjATfKU4RxWFcZbykhhSvq5l7aoRn/I1dT/UbPX2HfE1MbewLawvWYtf2Fps52t5QMQ5B2oByRqzBSZ21QYGDolaEZ6bH7SpP7Wp9pxeKtt77X47DAtnh0oTpFyMuTaMTWEo6TUBmRBy3/bSGv8U1gl3xe40Rr/mJYNtCkNqq+h0Rgf/0I6wXPsLb3/t5stf/n9u3v7C106sCYc6wH2JI+I4J4bol7infPfKb8HlJTH0+o7yU9xuwRU2Iwauz4kj+m7x2ytPPGsfSzF8/PE/3Pz853998+mnP+yGlq5dUwbgFLwt3E7Ziv2pTXGS81PDkOo9fPjw5q233rp59OhRdLesnoJdZu3V1t656hvfna87zdfTJ09vHj9+fPPk6ZPsGtmzdvUR0SA9Lqa5NbWk3SNbsqF21uI33/rCzRtvrLgWy/gW5X4v9rG687Xz1cdAn3Tn/Hr69NnN56zFTz7v81OQxj1HXBNzbYPUIKd+talUe7SlvqUlNtkd2nq4vAl3qDSZzsWYa8PYFIaSXhOQCSH3bS+t8U9hnXBX7E5j9GteMtimMKS25NQTtQfD1lraRjxFxohLdlcrp/ymjnrlU/30WsTRrhgjX7lZUsIQbaV+1rou+S7Z75Uv2VF7NkY1UmYcZprcnNRke4sy+iZB+1tf+X9vvmTJ2v3YGdgZ2BnYkoH33///LDnwf2clasEV164WnL3yUza1Ph8t62Pj0r8jSA68/fbbN1/4wttTMPb+nYGdgZ2BRQx89umnN8+ePbPkwJP9PVDC5ANfi79g6/GvJD375c7AzsDOwLoM8IHZi+esxeskaoVOf6f6n6gr/Z0q22uVvX+j98pP4RxpcbEcX7k3HSUM0daU37n9Jd8le73yJTtqz8aoRhEo4bEsYZBaIu6XnqhFUZn8kpGccmybqxdtXKJe4PIAxbkZr05iPGk4qGUr0VZW4A409vB1CEeBXztfbFOz8969/Tf2DmO3V3YGdgY2YcBWGrPbuShugmSeUZCf/HswhjM3KukNpa7m4du1dgZ2BnYGmhjwv/1M0pacuavOXL0mfBsKnazhia8hrrsaXRLMfrkzsDNwBxhoW2+m1q4YqCxS7vmuyMxt3bkZL8XXofek4dCTrURbWYE70Dg1v7IxqnFFvg6PPui0eaB4rt7BwAUrDAJHy2AMksOrxzwz8Jlq0f3F6jtfF6N+d7wzsDOwM3A2BrTWT/17lfan162A5+q12t/ldgZ2BnYGphiYsw7N0ZnCca5+rfNT74HOhWf3szOwM7Az0MJA69qVW59zbS0+5+q12N5aZi5fHvPMwGeqbU3F/8/eu3XJUhvp392bzcHgEwcDBgMbjz0za/wF5mK+/8VcvsvzzjBjGzBnY8CAzXl3//WT6qmOViuVUp6qqju0lkqZUigi9GRWlPSUKqtJ/zHh5VsHmy6ZCzkCjoAj4Ag4ArcfAU1QGKk9vv0j9xE6Ao7AXUXglBeVd/Wa+bgdAUfAEXAEHIHbjMB+R+3UQcaFHC9hlrP1REeLyFa7vfJTMan1C39oeBCs8Kln/JKlXyu+yC6Zog8HxGvJsbguR8ARcAS2QKA3dkv+UHEeTDzWb3FnuA1HwBFYGoFDxq7e2N0rvzRWrs8RcAQcgSkIHEPs8ljfd+Wc72rHq3Zvzd9Rq3dPuz+LSPaa7ZVfxMlMyd6HcLA/zmTWOt3a3qLjOGnnF0XClTkCjoAjsAoCpTC7GXlbMr7KKF2pI+AIOAILInAEsavXhV75BdFyVY6AI+AITEbgoLHrQMZ7zfbKT74YlY57H8LB/rgiv2TT1vaW9L0E1nyilpVcyGst6AC8BHqvPSuf67RtiwKeKYt2eAl5LZslrHBD9lRmrt04tXLHgNcNBxeqGMJrIfWuxhFwBByBVRAYil2K3SrHjFu5IZ1jOma340TI1pfZOl2BI+AIOAJrI7By7Mrn33Y4ipcqbdvYsY31U/qP6fd2R8ARcATWQOBgsetAsb43Plv5/PPDtq1xbaQz2uEl5LVs2vtAdillT6VtKx1buWPAK/dx9qMP7ABz5XPPhy6C9PbalrzVqzrpXLtc057GRVmyU6qrjRd56USut39Nd2vbmjY1tiG8Wn10OUfAEXAEtkRgLHb1xs1Dx/pef7fE2m05Ao6AIzCEwFaxa2ie2mNfsvr8YEyqGxqf1zsCjoAjcGgEFKcOGbvkwxpY2HGV9PfalrzVq7qS/jXq1rSncVGW7JTqamNEXjqR6+1f093aNmRzv6MWB62TrYrnyI3ZG3J6js2875gPubzOp/ZT/zXKNfCyOueMeU7fNbCyOu0Ybb0fOwKOgCNwzAhMiV1DsdjqGpJpwWJO3xb9LuMIOAKOwNIIELfWiF01nbW2fHw2Pudtc857fJhjx/s6Ao6AI9CCQGtMapXLbdJvat9cV+v5mL214rv1b8wHK2uPp/azOpY+XgMvq3POmOf0LeEUidqolJeFtUtlSa3qVJacow7gLHhDcnm9bOf1nOc6x3zIdUT58BIflJw3zjiv+Vxrsybzsdm2oWPppiwli79kS3JDdVFveBnSP9SvVi8/hnSqvaZjClY1fd7mCDgCjsBcBNaMXYqXKnNf81ift4+dx8/EoHxI/1h/b3cEHAFH4CAIELQWjl2KgyrtuFSn0rbZ46nzVPQqW30c5zrHfMj7+7kj4Ag4AmsisFbsirFuSPmMAUll1J/pUZ3KrHl/msflfcPIgWyXxHKdYz7kOqJ8eHG+K0emfL7Hq9w8qXa/o3ZS7yPtZG9Ee7y4u7wDFkrWT3u8kPrZahYc6mxfXIEj4Ag4Ao7AOgh4rF8HV9fqCDgCjoAj4Ag4Ao6AI+AILIGA5Yvs8RK6r+lYcGFg/bTH1+wd8GTBoS4yiviMWpy6DC9bOlezFS8cLyv7hA87M11gxn4r+5Y7hM2htCVeQz7U6o8Sr+BwDdPaeLzNEXAEHIG1EKjFpRjrg+GazBJ+TdV/HjpO+UxdwmfX4Qg4Ao7AZAQIeiFPjX29dmt2jn1O3ztWl3cEHAFHYEkEavGzZod+znfVELredpfxuo5E29kaeO131E696dtc75TSarSzm8R7xtIjK/2UU/tZHfZ4lr6ZeFk/1jqeNb4FndpPgMPBCcC24MhdlSPgCJwyAqcSu44l1p/ytXbfHQFHYHsEji52+SR1+5vALToCjsCtRuCo4vzMGN8zlh5ZewNM7Wd12ONZ+mbiZf1Y63jW+ApO7Ylaxr7W+LudpkOlU4+fFTUFONqrjhGvobGO4TXUrx2NuuQaWE31OfbjJeSpOuqj9VZHwBFwBJZHYCx2tcRZxTyVS3vZ4sPSNl2fI+AIOAJLIDA2V+61oTirsrV/lOdloGNLnFVXla22Xc4RcAQcgWNAYK3Y1RI/p46/22c6VDr1fCZV1EwdTux3jHgNjXUMr6F+swAyndfAKj76IA5sN7olt4RPBaTWTxeBsiZXazOYTjq0eFWd6NQ+1edav2PAS98ALHlvAW1t3DXop/ar6fQ2R8ARcATWRqAldh3ys3GtWL82rq7fEXAE7jgCBM6Qj32eqjl9y9Vq+bxo0eMyjoAj4AhshQBxa63YFePnLoguGeun+lvrp1hPWZOrtc29ZhavqhOdhqb6XOt3DHitsQaKO2r3Aw8H++NO0O+k+EJg6eZaE8OFXJ3m4sLGt8Br2kC9lyPgCDgCh0Vg4XDbN5iFjHuM74PdpR0BR+C4EFgrhi0UYo8LLPfGEXAEHIENENjHz3CwP97A7smbWAistT4XLb4LuWpVth8vbBy84o5aPOBPQOaka+DvTmo6rXyP6R5ZxjPVjsVCOmQ7ljqxgh3H0hm7hJOxb3Yk32u2V36qHQ1d/TmX7VjqRIKdpdXbsutB8jPNdnrp4o6AI+AIzENgauzqjXVT7Wh06s+5bMdSJxLsKK3Ojm4u6gg4Ao7APARC3KqtWcaUX4tdu5PavN7K94bMHvk5dsbG7O2OgCPgCKyFwBKxq6RjTpxnrFanTmo6rXxP7O6Rzf3q7atrKF/VP5Y6kVBnKZ2xWzipfS4iI/les73yU+1o+OrPuWzHUicS7CytXsDYP6O2U8+dEb8G2BGMeit/trKzBqSn7PsaeLhOR8AROA0EPHadxnVyLx0BR+B2ITBzbXW7wDCj8c8kA4YfOgKOwMkg4LGr71IdG15b+bOVnb6rcSW9GFF7bZLDybWKK4M6UrNK1eclAM4BUfpV9ui3dof65/paz6/pCyfXzgtKaFcuNMeqiFV4sX4PyQ7Vyw+VVi7qtxXmOG8r9Tfi3YfX9IWTa+eZNtqUs6Zrp9Hn8ELpyRFwBByBQyOguFWLb/i4ROySrdKYo/5Sg2ybtjFfjejo4ZK6Ro25gCPgCDgCCyFwLXbtguu1usyO2lRmzfvTWizeC1UOpF9lLlrTT5snR8ARcAQOgYBilsrch57YNaQj19lyfk0XJ9cqbmpQs8qbEqmmNp6hPrZe+lXaNo5r+m2sH+qf62s9v6YvnFw7LyihXbnQHKviWMKL9XtIdqhefqi0clG/rTDHeVupvxHvPrymL5zsH33QranQ4ZryQnteNSYfL8DuKoxtlc512/MhOzvVVnR/bNuG+u+FJx6spTfeuTOUj3UFm5pMrW0iVLHb4nrtRZ7jmPd1BBwBR2BLBFaMXVb1IWI9cX7xWL/ltXFbjoAjcCcR6I1bY/IxFu8C8iHXQHfyYvqgHQFH4OAIDMVIO0/NnbRtQ/3zPr3nvXrH5I8l1o/52YuT5NfSexf4rsV21OpiLFnGC8tLyGtcZKvTvrEZQ96Wty85zsV1WecXV54U1vCota3kzjS14LQBVtOc816OgCPgCAwgsGLsykNiLZ7X2gY892pHwBFwBByBBgRiLN7F+jwuN3QfFbE6ieU2ntu2UUUu4Ag4Ao7AhgjY+FSLXXnbhi52mYrj4SVkO7YuJRVhq9PGebrkbXl7Re3hm6zzK3lTw6PWtpQ7R03UMkiuwZrXwerOAbdtSwG+pp6IVXhZy++o3wzA4lVrM12O6lA+r4XXUQ3WnXEEHIFbg8DasUv6Bdipx3qNw0tHwBFwBE4JgTwWL+17Pv/NY/3S9lyfI+AIOAJLIDAWu2y7jWtL2F5Dx5axPsfDYrXG2JbWGbEKL2v5HfUbpy1etTbTZbHDoydqFxtpRVHtQtfaKirvbJPjdWcvvQ/cEXAEHAFHwBFwBBwBR+CEELDzdnvMEPLzExqWu+oIOAK3HAEbn+xxPuxaWy57m89rONTabjMmU8e2FV6LPqN26mCX6pcz3j16a4DX2npsHJvsVLzG8BhrPzYc3B9HwBFwBG4zAor1vbG5Jl9ru81Y+tgcAUfAEThWBNaI9cc6VvfLEXAEHIHaXLTWdsrIKc4zht4x1uRrbXcRrzE8xtqXwMx31C6BoutwBBwBR8ARcASOHAE7uTtyV909R8ARcAQcgQ4EPL53gOWijoAj4Ag4Ao7AkSNwFEQtk4slJhhitlX2YL+UDz02p8ougRW2hZPKHn9OBa9T8bMHe5d1BByB24/AkrFLMV5lK3pL+tBq0+UcAUfAEbhLCCwVZxXfVfZguJQPPTZd1hFwBByBuQicUuxaylfFeJU9GC7lQ4/NqbL4ukQSTip7dB4ar4MTtUtdBIE+9SKo/7GXwkvlXH9vO17CZym8pM9LR8ARcAS2QGCp2DUl1mt8S/kgfV46Ao6AI+AIXN+kskScnRPnuR5L+ODX1RFwBByBrRE49ti1tH9TYv3SPqx5jeWryrm2ThWvyURtCbhS3RiwFrgp/cf0j7WvYbOks7VuzF/bXtJp29c4XsNmSWcoEWV+AABAAElEQVSpbu541tA51yfv7wg4Ao7AGAKHiF3Wpv2cHvO11m51Dskh0yI31N/rHQFHwBFYGoGWmNQik/uVx9YpOnKdPefYszZzf3p0uawj4Ag4AlshsFXssvFRYyvVqW2otLF1Sv8hva31a9gs6Wyta/UbuZLOnv5TZNewWdJZqrP+NhG1KLGKdKwShTpWaY2MHR/q5rW+4oP1Y8znoXbpVImcjlUO1Q3ptPW5n1anlVvj2NrK/ZhqTzpVokfHKlVnz1vt5X5O0dFqy+UcAUfAEVgKgUPGLhsn8WOJJJ0q0clxfr6ELdfhCDgCjsBSCChGqUTvUOyyMq32DxXrc1+XivWt43Y5R8ARcASmILBW7GqJ67Ktssd/G2On9O+xZWWtrfzzxsr1HEunSvrqWOVQXYud3E+rs6X/HBlrK/djql7pVIkeHatUnT2/P8UgTkuJyil6bJ9cJ+enmOw4hvxfCrMh/bet3uLF8aneG1tfl/MA1L3wVQz5kUfOzu6Hd/vFRXjvBhAfPkxZ51v75vZOC4Gnnjo7+/GPz88efXTYb+6p775TvozH3GueTheBrWKtx/XTvUe28Pw8fJg9+eSTMT8agtD98GH2MAScr7766uwf//hHPL4IH2aXHnC2uBxuwyBwW2LXVrHeQOeHjoAj4AjMRmDN2IVuLWNUznU417mm/3N9rfW34xiSWwqzIf23rd7ixTEYNxG1pZuo5QLNBTA6vPNUPthBqG6qnVJ/6S+1tdrJ++oc3dLfqqtHLurmJRi0NtGh8x59uWxJh8ZTasv7l85L/aiTXpWlvnProm5egsGSH3P1H7o/BC3E2mOPnZ/96EdnMf/ww9nZ998nMu2bby7Pvv02eenr20NfreO2/+yz52cPHtw7+8lPhv385puzs7/97TLmzz8/jyX3m6flESjFLsXKJWJZScdc/SWd1EmvyuXRursaIThL6dQIzUfCN43PPvvs2csvvxxi0E/OngrfHH0bPrzeeeedmDkmn9q4StfG644PgdK7aKvYFeNieLFvZcXKkl896JX6Szd6Su09+l3WEXAEHIE1ECjFpiViV0kvdVb3GuOJ+nkJxuSDtam6qbZL/aW/1NZqJ++rc3RLf6uuHrmom5dg0NpEh8579OWyJR0aT6kt7186L/WjTnpV5n2biNq8k86tAdWtUu4uxiq6B5QewOSAJxOqC84XqiYo3q7LJvcWoNySxCTe7p7lGIL2sccSQctuSEg27Xj86qvLsBPp/Ozrr8/OfvjhMuS025ZdkXeJtAU3dhuTtRBil7F2HN+S22P2MH7+8/Oz11+/d/bcc7wzy+kf/7g8+/DDy7Db7SLeU198UZbz2gUQqMSuNWJ9xdzswWwS62d7eVoKIGgff/zxEP8fC3Ht5nvWEpo6piT/ED4MyOxQJan9kAjcCx9ozzzzzNmDBw/OfvGLX5z9/Oc/j7tp8fOTTz6JPn4fvoGUz4f01W2fJgJTYtzasSv6tHOMYm17p3nlbofX/EpAvxZgRDZu8+uB78LknRhXSsiS6U8mXioprtPXY6RQ8dIR6ENgs9irQN/n3izpA5ic5e+1zgXnC1XXuhzbydi9tSdqGRiJDnlSW17fc94DnHyIzutkZyzWheOseu9Kjx065fJj+mVImJT8UJtkp5S5X7kO+WnrY13mkOSy6n23MTt7wXCgcQ3psrL5cc2O9OZ9Ws/Vv+ZXEYddh1q/Vh8OLcdjDZ566jzks7CIPQ/57OyJJ87j4w4gazl+4glI2URCQtiyoxai9osvLnc5HWuX7aHHtIV9dhw//fR5zCJsIRz/+tezs88/1521hSfHbYN76Mc/Pjv72c9uvlvC+iAm7kHup6++YjctXxw4frWrCjrKN1G96kkbctdkdifX6nZdSnW6EqW2K0tXR7k8/W74cCW+P8r77Rt2B2rP6/18WQQgaV9//fWYWbjbRb8saQEPuQnhqYX8X/7ylzMyjxWgDpLg0Ani4cchAL3wwgtnzz///NlPf/rTsy+//DLEo5+FX4r8KJIYpTEe2m+3f1oI1GLc3Nil/rUYnMfZeL7roH6SGUK2xY7tm8tLv+xZWT9eD4Gnn3767LXXXovxjV8QWLKVL6Peeuutsw8++CB+GWW/PCPuQfLypdyrr74adRD/Scjpizd+ffDnP/85PipmvVG4ZkdgOwSmxq68n/VYbbau9xgdrfFTcjHu6mRnMNZVdPXYQWUuP6Z/50bsx3HmXmzeAi/5KX/ky2XmkOSy6n23fPz7hsKBxjWkq9BlX1WzI7174YaDSNRO6SjdGkRNh9ooJa/+tiy1tdahp9WObA7Jl2yqj7Vj63QsnTrPS+muyamNUvK5Hs5Lba119G+1g6xN1q+SPSvLcc2O2vI+Okf/mIxkrV+qs2Xua35uZU/tGJKMHbPseHzllXsh80y/891u0UTYQkSyW5aNUmR20kKsffjhRZgAXoZ8Ec7Pw09IWxE/NZRu+gtuzzxzHia37D5Oz2D95BMeCXERiNqb8ne1JhG154EgYefGFQo6phRRy07tJ564vCZ31cOPSggsEbvMZSmZiHVjdvKOVr5Fv/rbfrZOx6US/fTzNB8BFu2vv/762X/8x39EInOIxISEZSHPbq2vw4cB5Owbb7wRHyNAPSTuMRC1+A9RC0kLWcvjDyAjIGx5di1+D41xPpqu4S4hsEbs6olreZzNz7kWpTrqe+zU5If008fTOgjwi4Hf/e53Z//6r/96bWct1v70pz/F+PzRRx9F4zYmQ+hC7D4RdmL8+te/Pvv3f//3GB8RJH7rsTD/+Z//Gb+A45nenhyBU0dgKNaNxa6hfi14SHdNh9ooJV/SXWprrUNfqx3ZHpIv2VQfa8fW6Vg6dZ6X0l2TUxul5HM9nJfaWuvo32oHWZusXyV7Vpbjmh215X10jv6STCRqhxrVeW65tn78Kw1urt9D/WvjqbWV9CE/lGptQ31a6+fgtaZf1n/ZoZS/qrNyOq61SaZaykhV6Lga2SULIcsO2hdfPA/5XljMngfC9l587AHErM0QauwipWRhS//vvjsP+SzsUILQPUEQZlyS+/fPw66ss7Nf/jLhBTbgBS6erhBgh+xbb13EndfUQvqzg5tHami3Nlhy/0DY8ss77jFPbQisCZV9R/fa6ZXXaHv7SZ7S+it9XvYhwOKd57g+99xzsVRvFvgs3on9ZHZcaUetFvScswsXUuCv4acFfwtvfkhcst3JJZ1blPjKrjHIWTJENOdkxmp3n23hj9u4vQgoFrWOUPK12FVra7WDHLFR9vJ+U+LmUn7lvvh5PwLENH4hwJdRxDViMImY+/e//z1+QcVjXzgmE6dJyLEbl7YXX3wx9ueLLBLxnrj+TfgDAT4PIHQ9OQK3AYGpsWtqv1bM1taPH1Nifav/uVxtPLW2XA/nyA+lWttQn9b6OXit6Zf1X3Yo5a/qIlGLsCpsRx3bjrZOx5S1/i3tVlfpWI6XdNXaSrpUN+az5Eplre9cvGq6S76U6oRJSZfa6FdqL+nrlbU6ajbUZn0q2ZKc1avjWptkamVuuyZ7bG0/+tF5mKBB0J6HP1o5P3vpJf7wiefRJlR41MF3312Gn7DyJ2KQaGnX6KOP8gzDs5i/+SYRtR9/fPeIWuatYAV+7KgN8+NASFwEXMDvlO+MZe9Udhn/z/9chC8Fkl7uHzCD4A5rhLBYSDttRdA6SduGP3fZnPhl79Bcj23Dm7y95mGPrNVT66e2Mb8kZ/X6cR8CEJsQmizY2YlKYmHPowzYKUs7i3ZKsv2JLIQBf9z13nvvnb355ptn7777biRsIWoPmSBjRc7iO1kkrcZxSP/c9ukjMBR7VD8ndknHVJRkmzLXpTZ0521j9nrlx/R5+zQEiG2QqfxKwBK1aIOI5ZcEv/zlL8Mv4D689vgCxWsee4AMZK9iPkQtJC1kLjtu/QutadfGex0nAlNjV60fbTaeMvJcPj/P0Rlrz+Xzc2s/11Vry/XY81yPbRs7rvWlzfqErlw+P7f2am1WrnYs+yVdaqN/qX1Ib4+s1VHrpzbrU8kvyUnvnqhVxVBJx1z5kKzXpxviUHhZuxznF13XZ6he7VuWx3B/Wdy2HPsUW2FtHRPPpGUHLSQtpNkvfsHuovRoAx5hwK+cvv76Mj6PlmfPPvroZSQkH3/8MvwkNhGT7KZFn/IUf061D1iFRxyGye29gE36+T47lCFsPV0h8OWX7LxLu7Gpfeyxy0CU8NzIy0jeXlwkopZ7SGTtVW8/KiGwewuXmibVnUqst4MbwmCo3vb142EEIC5Z7GsHKucs2CFbvwj/8sc5iYU7hKeVhaTVowUkB8H76aefHvQxCPgiYpaSc+VhJLzFEWhDoDfm9Mq3eeFSdxUBYhqEKjGbkpisRDxmx+xLL70UH/PCM8T1+AMRtb/61a/iF2w8CgYdJMlwjD7Fc849OQKOQBkBYvsp8QHlUWxXe0i87HU6lTVQL173+ZkvTB4dx5JVLnBa+o3p7W3PfZZfa/sSx3xL8OrFfIp87z2i64itHcxTzN6JPpBhZH56/sILiaTlT8SYn/3975fhMQaX4Serl+EfsdMfhaUdtYmIZP6HHERt2DwVdlilPxj76iv+eOBOwLcfJHzFvXvaZZyOA28Rsd0L+UHckc2frIEViUdDcL+wW/uHH9iR5yAdAwI2bq79eWjHm38m27b8OI/ztG/pa+7PbT63C3Oe48ru2LfffjvuqoV8FfHJDix2a/HTWRb+eh4sO22Rgdzlj2jYlXuoxx/c5uvkYzsNBI4lduXxVn55HD2N+6jXS4hXHmPz8ssvn3388ccxJksH8Zodt7SxG5d47ckRcASuIxCXKLsJckucVExFi5Y3Lf2uW51/dqhYf5vwmn8VxjX03iP5/VW7t9JXdrubd9yVtKCSQy3yq8lkPtcGuZgPEwZuL8ZifvQomuBzj/oh2Wh2Z5t/5mu9PhYvurf2G/Kjp35LWz1+5bKQi5CJEK5hXhZ31L7wwr1InvFog2++uQyTufTnYPxJ2GefXYZv1tMuWxG8ELQQtRBuHPOzf3bf1oha7CZiM5W5X/acD5c82/b8GL+kn5LEDk505PWp9forcsiTS6mkHzl20WonLdghJ2ypLyVskWr2ksR1vDQu+YpM69joY7P0q0SPHaPqh0phK51DcqoX0a8pC/eJHpnBvYUejU99ppTSMTQWtWPPJo1D1z9vt7K39niHSU+8XQKL/aUIB622d2/x/QQYHarDp73OJRy8ozosSQsE7KjlcQb/9V//FY85J7GjloU+fyjGz2P5UxsW/BAAEAS0Q9JyrkckDJG12uEqAjgaCC+5L+pPSYYA1jMX1aelRC+22C3GLjR0lWz12NEjFaSHvuxMG/MPP+hr+9HH7morjUlYUZLUX7LYJ1Gij3bJqk6l+ni5HgKKU4pReexaz3KmOTMsvzIpPz1hBHhfk4m9/NKBmM0fi/H+V5wQUcsXbey8pY0+eZK8radO2eosydJPeuUXJTFJ9Va3PVZMpU661a9mN7dDn5aEDenV+GS31F/+o19+qa4k73UnjEAWN2sjIabefCfVeqzUlvm8SayfMPCD4zXB5yWuWDS7s926BsKuxYvuQ9c1/Bai302r3PauGbJys48n+DzbJgp2dnvNCy/bb3dNpXIR96RE9uL5zqi1Lbk1y+jDTNvW583wWhOUhXSznuO5qvyB2HPPpT90gmwNc5NAtLKT9iIsyC/Cs6wSSfvll0ywErGIDBkSkkci0A/Cl/MvvmB3pJC+7iztZMhdyGF28uIHGX1K2CHDAUAYQ/6yw7f2eEP6/+xn6U+9eDYsdtDBruDwnwnhuV3pj6uoh0QlK0ESktndyR9eMQbmctQp0Y8/vkIPjzlgDPhNwu6zz3KefrpPHbKvvHIv/sEa5zahG5KSnaTY+/zz+i5k7LHTmcdE8hxXsMbHzz9PY8QnnvtKG35aPHXNwA8cwoa4iCmPqsgTdn7602QH0p3rmutCH7gwBrDFB3AThrnOQ5yDAfcAmPB/GDyGgnHYscgv4cN4uJe5z8GIR37wmI+7kHjrhcua0u59aN6Oalm1jD7MtG193o9nVa/vnnKeTcuu2s/DG5+SzGKUBS0EAGQnZO1vfvOb8L57MpK2PwqBhWce8uzDBw8exGfVfvbZZ/EPanIEWYyT6Qup8PPwAYVOMjZILJa1+MYWf3TDbl0eq/BleAOrLdddOscWxDKkMjb5WTAJW2TpYucwtmSH8ast10s//syH8ernw2DDcyH1j+t5H52z440dyfjCYh+b/ESZDPZ5kp/4T19wFl7IghV6IHrpz7+1c80YM8+ypJ1HWVDP2BjXGCmc++Dn8xEoxS5bN99C0oDOfWxcw8BSjrqexRDgfa/nihOPiBHEF76U4r1ODCFGEw8UE4hXtJNrib7EEjIEL3GI4zwGSQcxU0QmcYdYRMzW54nk8hI/+DwgMwaIZcZFX/Tw6w0ycvg09BnxySefxD7ox5daAiPGI92coxf9NkkP/sgn7CiWejy1aN2C4wlx81rcNRBwB05QZzQ0Hm5ipODLzm6veeRzbPRu7dVV8OpGlezFhp2BNezcMGwqog8zbVufc7zCHrJpKe8XFYeXHja5x3Jur6fvUrJzfLjRd3clHK+bVyfHSvcWkqvilRu+6dpR1DDXCHOQ/TNpIW0h5yDc+MMwHnnw3nuXYYEIUZpIq3xegw5Iw0ceSeTh/ftJjp2TpYQsBCd/HMUflvFHUtSRmQApXVwkohQC829/Ow8L+0QEQqQNJY3nV7+6F8cFOcdYPvzwIiyOL+OfpUFIQ6AmYvnKHuMN6+H4iIdAQYbJYyJSIe80ZnwEL/507emnIbgTKYo/jOm559gJxThSxg6+hDnljRTmczsCGmL3IhKo1A0l9PNoCjLHYR589v77l2fvvMMuhOTTM89ATNKeSGg9XgAs0c11JPMYC3BhvDbh9xNPnO92ViecIIAZk3RhC33aGQu2fJyiH33oPYbEfQypDXkOZlz3dJ9dEenykzHxxQJj+PTTy3ivcL9dhiABWXtX0tW74XAjnupD3i9eNV7uzuXb7KKx6GRh/LfwDRPkHpmFN/GbfxGHWGSBysKf5x2yuGXhDuEKAfnaa6/FBTL9IFjzxCKYRThkAn9s8+DBg9hfu3KxQ8YmC2QW6th9//33w3v4h3iMTi2ec/35uYgG7EFSsCjHPkQDJC56yPiLnQ8++CDagdQklezQD5L2d7/7XdSHDfACuzGiFiLi3/7t3+KOZMaDXfpDQnOeJ9rwld3Mv/71r+NPl0WcCCvsQtRw3f7617/GzPXgeZXIQJpTz05pxujEQo7yeueDsQuTeeNCbqykdiHvXM3SCBA3eO8Tq4gNImqJG4p1xGkRtcRwiFpiLPGFeDaUaCfWQ2jyJReZ2EK8JisGqT8+4A+ZmEYmpmIT0nYo4Svx6re//W0khPGXzw++/CJ+EW/JIonxC1uMgZhG5pE92OG4FLdz29jgCzc+t7DNF2ElPNBFxh8y4+Fc49FnVa7fz08PgTmxM++reeqqfMSBIc7H3OPOjb67+bzjdRPFHCvdW0gKr0Bh3I7E4PIBH/XIcHZ38x61n0fgXIRqh9dJXeOVsAvzmEjsQWKxI5QdiGFuESYy6dm0Yf0bFtzswkwkZmGNGCZBaWflvXuJvGM+hxz1SmEdGMm+MM+K5CbkGX9cBknLoxbwg3w9pSvEn0yRITslB1nLfA5fbcIO5CjjgbTkmMnSo49Cll5G0g7b+pMvfKUPmeejhvlbkOMfze/FyV3gGuL4RT5iHz/QC0kLYQshSIL4DXO6qEs+sREBXM/PbwwuEuH/+AfkYfozNvCrJexi88UX70U7kLUQvJeXTEbTjmjGDIEL2aqxoRPCkeuR5NP1CWt/WniJCVKT3c2MiT+U47pA0iY7kkrjQx/XmMw1xXdwC/Pt+HgM/LHX/6r3ukdcR64RYw+cS7y/uM+ef/5evPZqs/7Rh8SfmOHzY4+x84wvKtKXFWE+H/FNUv7qCDgCxFSIPDKLbQhAjlmQ08aimXp2FEFmsvjXDigIAn5aC2nJYlaJvpABZAhHyErkHjx4EMlau+jHBok+JBGoLNBJ7KhCP5kF8lhCHmKBZzOyI4xsd2WxMMcWRAe2sINefB2ygzxjfeWVV2KJDp4J+fbbb4+5E+0zdjI4giEkdIksQa/wgtSGqIUoEV74aTMkBePDNzLEA3hCSECEYKtkZ9RpF1gegd1n0/KK6xp5dx3IdN0xb52MALELQpR4QawjhhEHeP8Tv4l3xFxiteIAcZy4QDyAiB1KtKMLMpMYShwiJokAph8xhpiomM05nxnEIGTxB9/oA4nKl295wo7iNCW+4jslvkKkktGBHfTJJnGbTJtiN7GOLxT1eSJ79AEPMvgwHr5w5JjH+dgx0Fdjwx7xFZ+Q0RditFPnyRE4NgROLtbzwZSmf8cG5dH5E6Ha4aXP88WI2qhQWjceerz+4UXs88bmJ5k7KF56wwQnDnTJujE7JF7dzq7cIcwlIukHwcduWki3hw8hQdMfh/GzdghRCMyh9W6Yg8Q2lWHuFSYuKVv3ITIh/SBRX301/WkZdiEfSepDSQpzspAhVS+Db5CZEK4XIbMzNO1GxZZNjIf5JHqxA/HIhOmxxxLZy0/6IU7RgSyZ58liC9KRXZWPPZZIWiZd7FaFqJMddCEPaQopC2aQoiSwg+iWXtUl8jbJRMHdC5ienydyW/7Y9vwYGXxnXBDNZGw98kjaUfvMM+wiTmO7ri/JgStjfPjwIkxYL8Mk8roFdEPQ/vKXaZfzs8+mncCMiR20wiDAEibAqY57AryeeIKFfhoPpP7QPXDd4vJn6Xqm5yRzD/DYiV/+Mt1jYBM8jEa5x8ECTNJ40r2Qrh0/374IpEx6TMTyXp6exviW5CXAlxA8/jFEP3k5FYePH9JRD1mQQiyyi4iFKYtnMot4FtkQAOy6YtcTxCMLYZs4Z8FO+z/90z/FBTKLf87pS7ts0E86ISHY/QWpAEHJwv2Pf/xjJB1ZlI8l9EJSoJu+6CH+QySQaCezCGe3FKQF/uArz3mEVMjt0J+dufivxT2fH+geS8hAOEC4gic+gRs680Qdsv/yL/8SdyqLUMA/MteBzNjACz/RBekgvdhQGztqS3Zyu36+HgL72LWeiUHNivWntAYaHIw37BGApOTRKcQx4gvvfUhSYisxgbjJMTGLOEUMZ+c/MtSNEbXEFL5YgqglBkGkEkfIxBdiKcfEGdXjHP2Ij/iED9h55513ijte6SdCGHIXv9BLCbmLLvzFf+opGS9xkLjNZwQ28IHyzTffjJ8RxEab6EdsByMwefDgQYyt6MY+usFM46K/4i31nGOP57EzLuT4jPLkCOQIeKzPEamfHxQvhYngRPSj7upRtOZ4LUbUHnR0uhAHdeI0jDtUp3Gdal6GeU+YkCTyMswnwmQjkZLMKdhJC2Eb5htholHTckWyDklhB2IxzK3iTtr0yIOrnaHY4Cfm2GHOFOZJMYc5VuwX5kxhwkUdE7+L6BM/UQ9zoihv7Yb5V5i48fzbtKM2zMnCuBLhy/jIpDDXiglbyEAkgwUkZGq7CJO48/h4gSTJKzZTO76SeWRCSmlH5u4kFozlusxVK1+wk7FVGseVZDrCb0hoxiWilt20YEt/fGfsJI0tYckCPeFJCfHKLuBHHmGHwxVRCWHOYxogNiFpIaHpj270QSyTEp6Q5unxEdKJf3//+8Owa4OdZ+nayI/Uc/1XxsP4uJchahlL2oGcfOU+Y7c4Y+G6MT6+DGAMaVwJD+41YbS+1ydkgVs9YHxK6cTcPSVoi76yUGWRCjnI4pldSyz6WbCyCKfUzi0WzEoswlkYswBnsQ9Ry25UFt9aHLNAZtGLbuywO4p+LKrRLUKVeshTyGAW51pYy1ZessgWmaw2a4c6Le7xHzucUzJG7OCPFunSgU8s7hkTi3/txlX7UIn/jJt++EFfdFEqMW78FrHN84AhSIStCFpKrgcJvfiMT+inL+OhXT8Hps7akT0vHQFH4HQRIAZD1EJQ8sWOYgBfBpGo5yf+xGCIRuIavwDgGLKylohF9CeGEk84po54SPxSLFXMIm4RhxR3sUls4hwZbPOFEbZtoo34BAlMbKQfiTqIUOIWWfbUl1iNDPIcowc5PiOwg7yN3bRD/oKTyGe+cFP8xBZxVbtn8ZM2dKCfzFiUZS8fj/zz0hE4CALX314HceFUjN4WqHb0Rz/sAuBqCtqvY6kezIPxp9WXXt975UvjWkJHSW9vHRjxrTvpWPE6FqwSSsf5GuYTYWKV/oQKkhICiz/vYmck67slJhe8r8K6MCzA74VdQmlXqB5LgB1IV56bClnL3CzMk8KELxGtEIbs9oSgvLzkOYg8q+9h8Plqp2eYH+0TtsI8KepAD0QcOz6ZmH3++UV8RmtYu8dxYotdvmSISnKYz8Xy4UN21PIHOXvVYUKX/tCM3aiQkF99lXb4IhHW0ZHofOopJoKJGIXw5hmuPBc2T2GeFwnNsNEhkuJ2DLks5xqXxsa5fMUO14xHNVCSpQ857RqGQEUWnPEfP7n2YAmxyWMCeM4u2NPGNfn004ugL+lFJ/YhMXlEArIQtlxbCOzPP78XMQnz+4jv1kQtPod1QiAr0ni4nhoL9/LHH6drwfjBn+vPeMhh3RDHwpcT+pICGU8pvivWt+KhOz7cfk0J+VbZksJeeyUdXrccAnxuiPyDJGAxzIKVBa1dzMsii1p2eb7++uv756xqJyoLY/2MFOKVRTL6IQTQpz/t0sKdWM9zCyFQeTQBC3J8GUr4hS50souMDKlKHxbfkKRkCAvtOtPnIjYgPUj4yThJ+EDWwp1jLdijQOVFssjni311o14ksB6TAEmLn+DzQXisBL5BwpLRBVkhAgLMGDN68FnkQquP8sPL+QgcU+wiBvfspj0m3+dfidurgXgG8SpSk/c58YMvd4g3xALOiR/EA+R5dA2EKvGkloiRyBD/6MM5cYVYTQxFHxmbxBl0YofPAWIWWV9m8aUaz5FFjoQum6SDdo7JjIl4rD9c5PNG8V52FLshk5HFH+Ij8RC/iZHYJqGbzx4+i8CHY/BhPHye8FkElvoSEH2Ml3HhC7J8hvBYBfxArz4v7Fj8+LAI9MauXvnS6JbQUdI7pS687Z3vagROn4uIt65Teq91r3zuekv/SUStFOcGD3neehGsj4xjrJ8da4u81a9jq0N1hyzHxmx96/W9V97ayo+n4p3ruW3nBOowvwgTi/ST+TDniQQeRB+PPYDcyuZJkyBAL2Trr36VflrPjk12gH7xRSKEP/roIvxMKO3gDXOeMFFKO0chZ/n5On/cBbHLz+wffZQ/OGM3VdoZaf1jPJDN9Ieg1bHGxyMTPviAZygmUpi+EMHswGV3qo7pj898YY+O9HGWsIFYZdIFoffZZ8kWoKQdvJfhG3gW6QkmZLD35pvXJ5u0Midk/ssOz7DpLJ6nXuXXq7ElEpVzMIQ0DVcpTCB5JARlIhrRD5aMAxmISPqQIV5ppw1swtw1YqxnuYIdZCbE9ltv8aiERCqrDwRxQDiMmcdSJDL0/n12QkASp2f9Qr5vnbhuXDOIWu6Zn/2MXXppLJDUH398GX4SzR/FXT2eAQwSDgkLxsg1CXP9eH22HsOx2uMua029V17ylD12Sv4soaOk1+v6EWCRyoJfRC2EAMQqhCqLWRbZSiyOWbCzM/TBgwfxZ//IQbKyKxfi8Q9/+EM8ZpFNDGZRrEU6JC9Eg0hgdkpBRrJIZiGuhbvs2RI/WGSTsIUdCAcW79hBJ5nELivtRqWPdqehH7IC35QYL+Mii3ylHEvIqK9KixX9sY0fEBDs9oKsZfz4C5kAXr///e8jmcA4IBIYA6QDmL322mvxGqAf32kn46unwyBwLLFr/A69ic+x+H7TM68BAWIw5CIxgGPe98QPiEhiC3EZUpNMzBRRi3wtdqKbmEPsQy/H7IglDhK70YM+MnZkC8KUeEW8IX5BmGILOeqRg6TFT3SSOKZecUrHkoEYfeONNyJBSsyjHp18jiDL5wF2GSNtPLYGuyKasU3CJ4jjB+FziF93EDOJt+iHpH3rrbdiZry2D/3Qj049/xZccrI5GvGXo0GgN3b1ymug6S7W2XGUa8V6O9bbglcPVnb8LVe6V76ms4Z3M1FrlTDwmoNqswDZ/jVn57b12LH+Ddm1Y22RR0/ug3QM9c/lSzqG/JtbX7Jtdcp3W1c77pVH15APx4hXbexbtoX5S5j4JHI0YhhAZK0JScszW3dzpFkuYSPMjcLkJ5GhrIkhwyDzIF0hMyFrw3o62mOtCDkIkRvmWXH3JoQi9ZCEEKthLhcmQPzL+NXzU0tO4j+2GA8ELTtc+dMrdg5D1IY5ZbDBswnTn09BFUFU4qNwwX/0IJ92/bLzmMnv1Y5bMEv+gxkL7WSDMUAQ5gldZPrZHbC5XO2cvonoZTfBxf6ZupDsuzln9ANymzGBH5n2sDaPx2FOGfGFrA1z9ZjQqZ3OXBvGCX74CxbIPfUUO83oey9MZBNWkNWQvX/968NoL70jayNYvs3ez1wD3b/4zji4B3TPUIcMfbjeZBYFYAc+ENrqv7yny2nk7lIeinXLWUu2anZou3nHD3sg+ZrOvDf6S/Kluryvn2+DAItYFsws9LXoZjHLopeSxbIydSzQWbSzSIbI1WIfgoE/wmHxq4U/I0A/uiEGyBCQ6IF0QAckBPYhLllUDyX0oBcd7IRiRxdELYts4gF68YcFOzo5hizAjnxGFkKYXVZbJMaJPzwegrFyLrKEnWXsFuMZidSRwRu/GSfkLiQKY2MMnrZFoCd2KY7auDbUf+lR9Nix/i3th+ubjwCxlFhIIs4RByAvIWuJDcQzzm08RZ5+IkqHvCB+Ek+IncQh9FBHLEQH52TZoU1Ju1L5HKCvYi2xikTsqtlXzONZ6PyKgtgNoYrfJPRBzPKFGrESG/hBPY9Q4POGhJ/oIuELcRGSFz/wncRnmD6TiLGMWSSsxogt+jEuPneEYVTgL0eJQG/s6pG3MZR+iuclINRm9dv+pT5L1fXYsf4N2bdjbZFHT+6DdAz1z+VLOob8m1tfsm11yndbVzvulUfXkA81vJqIWhTnqaZ0f1fvhNR/yMFc99TzVjtDvg/Z7ZEf8mFIR5QPL5SQD6QhHal1uddWO0O+D3nSI1/yodY/yocX+zOvko4h325LPXOQMG8Jk5FELkJeMV+BPKRcgqjifuTxAuxyZAcmP5dHPz+t//Of08/R2e2aSFCRiexwZHckP9e/DBNKfl6UHk0AUcvP2pFnXQypNpQYD+0i6T78ELuJhKYPNsKcLUzkEnlJHZhA0uqRAZwzt0QXc11IXtb9u/kbXSJO2LB4gR+kaImoVR/k0Wv7RYUNL/wpFhhgg8crvPtu8gs/0EkC+3R9ExHJuMADMpZjsOQPyiBZIcNJtPOHY1wfiFoIaEh7dKKP6we5zR+83b9/EUjbR6Ken/70XhgHhDGksN5NUeUmL2ms6U/xGDPnSvjOfQRRG+bX+/HQLozUh3PkwfbUEh6bYS/uvhAZs9PrQ498yYee/ouD4gqLCIgcEFGLEItkFsGUImk5ZgEt0hPiERnIVRbDELUsxCFqIUO1cEcvBAMyEA/sZuKcxTWLcHZD0Y/Fey2JqIWctUStCAV8I/M8Rxbf+KldwfIZ8oP+WyXwEXEsvMADkgISgR21/CkP10AkOWMAJ3bTghnn4OVpOwS6Y9eug+appf5reo+9Wmytta3pl+vuQ0DEKaWIWuIkRK1IWohK4gIxjjghklFk5JBF2onNxGViOiV2FHuwQ1a8oZ52+hHPORZRi5zIWukYsks9uvCZna6WqFXM0+cBJC2xUTt3saPYjQ98TiiJqFWM5/OJMaFT9vicYMzUKdFPY6VeRDXj0GeWZL08PAK9satXXrHajnRIR5RVh52QTimH+lndU49b7fT60CM/5MOQjigfXihZr5GGdKTW5V5b7Qz5PuRJj3zJh1r/KB9efLY3hP7EekDXxehSUbtaXYrurvBdg5AJBsFOAY+5B3kKeWjvGulkN2dYV0ZCFJKPeog/dpt+9FF6tirkIsQmSe2QomG+GIlC2kSgspMTYhGC8vPPuVrD7xTITAg6HgmQHrWQSFuNDz8gJiFescGYsUMO87MwiU2lxYTjPKEjzMdiEm7IoZNxrJGwCQaMLT3yIJGL2JMPugb37iViljHhFxsOeCQCO5Yh0HmWK2OlDRIdvew8hbBFH2OTTjALc/lw7S4COcJPythZnP7MDOI3zIEjfmuMuaYT3yGgv/4aEj/5rPEzNsbIIzggkb//Pv0pHH2Eh8hobFCn61mzeWxtW8WurewcG77uTzsCWtxSaqGaPmuudtKyE0m7l/QzVRbqLI5JyCNDG8QkZKSSdjHpp62Spy8Lch6lQDlGRrL4hpiAaGXBLuJXPmMTWyzMWewjqwU5tnnsAgv3MTvye4nSjhEfOBdRC2kB2QIhA2FAxn+IF8gSxkFm9xdYezpiBLLpTXZ6xI67a8eEgGKxdnry5RdxS19uEWeJH8QFvuQhzkHcWiJyaDzIIAvhqbhIbCERd0S8EudF1hIrqScjo88F6pFBD/5QX0siTol5it16BAP9FBcV8/hSC93Y4bMBDMDCxm6wwrbIaohW2vU5BbnNZxF1iq/IKOuRCPhG1udIbRze5gjcZQQmf67Vw8NdhrQ49iaitoZppFp4CULIRdmsQ3ZadGSoUlROi44WmSE7S9bX/IikSRCQDKW+dZcPatN5aymskG/R0SLTanuqXM2H/N7SuA6F19Qxrt1PRJzIrbn20MN6O8y7wqQm7VANc7KYIAohAXkMAcQgxJhNIgbTrtm0cxQd9GfnJ0Ttp5+O79xEb9odehGJR4hT6jRW2WGXLKQubZobYgvfGQNyuY/W30Mcgxt/fAVJC6kKIa3xyB+NE98Zu9o5Z3ys08GSHc+cIwNpDlHLbmWuk/pIJ30h0Nkp/NxziWAHM0h4SFp2IgtD9dmixC8Idx6pwTWHeCWC8UUBfvHs2gcP+Pd1/hk4+c34GDMk/pdfpl3aGjP6TinVYuDQOO5CrB8au9evi4AW3zUrLKRZrLNopmSRzsKdRBsLfnY+UU/JYlhJ+vkpP0Qu8tSJHEBe9epTKrXYZ8EOuanFtRbY2OQYIgICAyJX/uIfu3chS+1iv2RnyTqLDbgxbsgFCFoIZ0gGSASNgVKECkQC44CkIdPX0zYI1JAemqfmk/CajtooFOtb+7fK1Wx623EhAFELqcmjUYgbPLeVWEKCbCV28MgUSE8ba8dGofhCHOQxA8RHYjbkpshb4iN12CNGc86XadQpEYuopw++6rNA7XmJz8QyfkVA7FasVtwj5hHPid36Ao6Yh34+GyBu9UWXdNMHWb58QxZS1srrkTqyhw/4SsYXYjCxGF/Q5eluIlCLn3msj7JZh+y0C8SeWD/HTpdTI8I1P+I6NghIhvJQ/I18GBnOqs01H/J7C0eEVxNRW/Vcd1ZVaFrjiqqnOTSz13484cDerLWLN9Pk7egOcAYkc3g7xjdhFARAJjU8V5XEmo3MDkl2Yc5Zw9EXcpV5GOQd62/qsAkZFuZOkSBjLhMD8c5/jlmPk8N8J+6OhExDTqRbmA9GknE3x9z1vFmgA+IRMhNyUc+mlaTsXJFzaXdowiCRtPYPxdTvGEqwgWAMc8NIUHJeSuApfBmvEtcD0vtqFyy7TBNBG+a8+12p6qt+nKfHK7CrOWEKXlwLdk5Tcr514v7gnuJagwtk7VNPpXuYsaY/tGNnWdrRzT0FZhDeELnn5xDe50HHFWGfj33rMbXYA+oDwN3i2vYy4d70dBwIiDRlsS0yUAv69JnDs7MTUctiGeJAi3hGoEU79Sz42cmkBbgdIaQANliQa4GMnEgB2bZ97DELaohNnoNLKaJWMuhChoU4i3NkWJxjE9/wC8JWhIf6rVliG/IA3MCGc8bOzjGIAogJYYwfOmZsGgclRMKWfq+Jycnr3ih2YeYQnxcbDe/kb4M1B8CueshYSEpIUuIamUQ8oI1HxWhXaIsvxFdirXTqudnERmIUxCuZGEVWPOaY+EWppJivfpJVe14Sz4jHEMuUjIVYpySilHETu4mL9CFeD8VuEbU8SoEv4dh1S4wlTvJZwx834rN0oRu8sM9uZOsDuqw/8svLO47A1S26OBArql7c1xaF+/GEA+e7WhDbyQCc+aDnsErUCmjT56a1XWNV5mavphp0Zj439ZsiVBqr6qRvbIxjvsbx7JSM6ZLNnjLqDx3W0J37kY81xwr5mh+Sr8nE8dQEcqc6z6P+ET87VW4mzpwmzFvC5OKKoIRYhbiCZJ2TEnmX/pgL8k4Jm2SINbLO1W5L2tn9iI8cXxGC6af6Y4QgfSDmIBTZnYutoSQ/JINu5pDkMTtDOtes17Ny7WMjeuwJS663xghe6OURAmA+lJjbg6eIb+HDxFrHQ33Xque6pefKnsfdvu++y0/yIPSvdvqGOffunmNXbRrrt9+eR0L3xz9Oz7CF+OZ+gbCF+L3NacvYxVvPhuH8rWjbSphLvibHvZfbKenyuvURYGHLgltEIgtWFrEQiiJDWfAiw8KZxT7xQ6QishCiLIRrC14RpyzEIQTQQR0Z4hJbtYQ97YqSXyV5fECOzDEJ//Fbdkv9WuvGSAmrB1lsiwChDZ/AFrzArpTya0AfJ2pLSC1bdwyxi7i5RWwsjVV1y6Lq2noRID5AahI3+CMtjom/xAVIWn5VQFYMbtFP/IPMZKfpq6++Gp+BDcGp2EQsIq7ajH5iWCneEteISZRjSTEPkrmkS/31uWNjtz6f8tiNTj432HUM+Qw+6OczimN22TJmdJLRyWcNZC1tfHHHDl9w5Esz/ELG0/EjoDhl55iqk/e2TXW2lHxVbtdYlbFKO47RiQ9r6M7dKI1VdZId82PM1zienZIxXbLZU0b9ocMaunM/8rHmWCFf80PyNZk4ngGBQUpHinOH8/MBvbnY5PO19eNYaaxDdUP+SJ5ySAZbtTba56a19eNf61hbxnIX8GrBoVeG9SZrOsowd4qEXZiDBHIr7YJll+HUFOZhYbJ2fZclNmzGbi3Rzjo7PT803ZXsqn300fTnYuz6rSX6Q9TyaADKIXvWJ+nDf+aKlMeYmPuxa5Sf+49wEUX3GRcEOo8sAFPSxUV6JECYz4f7oowtWGGP+wYfLKaHxErXGpI5/Lov/JkOY7mIfzzHn8899RR/QsciIF1X5PEfcpedtz/5CeVFwAMk2FWbdtdydpvTFre37iTKIXtjba3XYEh/a3+XWwYBFsAsbLUbCa1aMFOyWGcxTntO1LJYliyLZCX65EkLZRGd9KUPO574KerYIhl5ZJCnLNnApvxBhj7YY7HPop1S9nP/es7RoVzrh4wIDdnWOCBqIQeGEuNgDDViY6iv1/cjcPOOHdaxduxaW78dmeJ5z/htfz9eHgFiA78c4L0PsWqJWuohFyEZicfklkSc53EHv/nNbyJJC1kLWUkilkJi8iUaRCZEsY2f+EHcQk5xT3GNkrpaUsxrIWqxa23jN589OVFLfISopdSXcPjJI3YYJ2QsxDT+4TdtjI3MuHnkDtjRnzrJUHo6DQRqsUttpZG0XuH6XV3S3Fe3tn68KY11qG7IH8lTDslgq9ZG+9y0tn78ax1ry1im4jVI1AKAdRAnxkAZc6JlIJKZqqu3n8Youyrt+G2djmtlqw+tcjVbc9t6fRjCa44fvT7MsXUb+jJvCHOMsKhlB2XaoQoxyQ7En/zkPJQspOeNNMzBwoTlisxj3jUy97pmEFl8IKuf1dky94F8xAdka/K1Ntm+5lzjCX1ruhvV3BADB65fIrFvNI9W4FPC8vqjLyAyRWYOKWFMkpmDjfTji7KuNXp7dQtndsR+8MFFIGF5PEPKPOKB+xoiFmKaLxGUVf/oo+xS40sAiKL0WAnplK9e9iEQLu0+hUs6KdFPelS26JLsJKPeaRYCLIJZ1PLzVhbDLKohCli4U2qBzoKWxS6lFrOULL55TuAf/vCHLj9kBxs8j5GylkR64mONHBCBIGIUH8n4jc1S0nhos0SE+qoPusELYgBym/NaUn/syjb6GYOI46H+6EZO4xiS8/plEJgau5axnuJmS6ycay+PtbJpxz/XhvefhwCxglirZ7D+6U9/ivGCeAJBC1lLvCSG2NhVsqq4ySMEeIzCa6+9FslMHg+AHb4kg/DEFlmPjYGsJRGHIDQhQPOE7pYkH3pjN7rxUbHbjpVj+cjnB3GSzyLGwHhEYivOYpvM5xzP/GUXLn3QQQZTSmujZWwusx0CPbGrdmfaWCedNXlGiNyYTCsSU3X19tPYcr/s+NXWOrZWH1rlZH+NsteHIbzm+NbrA7YGiVoa9xdv5619zgTtNmlAU5ywejieqqu3n+SxWbopS3XIlpJko87wQln7zJLtKFdS2FEnXXSRHy3d1a/VB8mX7PTYtf2jzvBSu7eQl+1eO/TN05K6ct1bnIf5SPiGGaI2/QQ8zFvCBOMsTETSn3WF9WKYTIGURtrnFfohu3744TxMioIWo4Z7WtnW5xaQSc/LvfpJvYhXdNf6oot2MvbJWyaND5scj/na6xvjSUTt9LGhAxIbTHnXM/HlHgjzzsFrn65JkkGWc5Kw7h1nqV+ycXXNk4W2V/Sxg/r77yFo+ZOws7BoYMfs1fN42UUc5tPxubX8mRokbvpTtctAmLBb7l7oww0DLrcvaVS7S9c8QPWjQ0vfmnxLf+uY5KPO8FKL9dau1eHH2yBAHNHPRFnAauHPgjUnatnlBDnAopnEgpbMDleeE/jGG290OU1f7Z5iYd1C1LKw1sJ7yBhjEsEpIhWfc5I5748/9CXTD1uQBGTaSMILrCA+pD/XZc/pj23poQ9jgPDFRilhh7bSTrKSvNctg8DU2KV+U71QHKTs1aW+Lf0kKz/zPvm55LzcFgFiBTGYuEVsJUYTD4hDEKsiFWlXbBrykHhDPCRescMUopYv5tBJ3GV37jvvvLMnOCFqydgnDhGDIDaJYVMTekSU1mKm4h5j5Zix2fhp7dPG5wcYQNTyOcR4yGAkopZxM1aIaYhqMKCNY+ywm5bPOnTxCARPx4nA0rGLWBd17hS3zFMRnRsjNY5eXb39JM/VLPlcqkO2lCQbdYYXyvD2HEyyHeUGpdoapAvpiskbytSv1QfJl+z02LX9o87wUru3kJdt2akStXS4luitntca/KSEwG2CSzdOaZyz6qQ4lGM37yw7t6gza0R20/LHS5BWTz6ZdhuG+Ucktfip+OOPpz+XCnOWMLEpD57AqhzmblEOWfTTDzKYknMSssixsxEymDbmamqXDGWY70Q5ZOmDDLL4jd4hn+hrk9Vt65c8xoa1wzghPMN8dD/Gpe0J5yl66Zuw5Nonsha8H3uM3dRMgNMfcZV0c924XyD16aOxt5DnVh/98IHHD7AzmPOEGxN5/mwonds+tWPdh+jUs425v/gyIsyzg78QsUk3xC33EF8EhPVF2BGRiOGLC/4o4iLI1izd7baWj+9wKfepRX4vPHYgxaH0WD8G1rbtLFAhC0XS8lNQdhixmGbhy8KVxS+7k0RwQqSyqGUBz+KZxGKaY+r1nL8x8oA+ZBK6yegcIwJY4LPoFskwtOBnXCzEkRW5wSI89z06EF5Y8FuyA9+kA7/IakcfJC2LffwAr1oS4QKJgE70UKJD48j7Y5+xcW307EXsetoQgTsQu4Zi/VD9hujfeVPECRGUkLLEAzL1xDHiMu3ksUQ/EbXEHZ5LS2whzhDT+TXEH//4x0jOQtASq8joRo4+ioGK27KZn6s+L4lfNnYP9VPcxa6N3fiDD/l4hRPtxHhkKPn8QgdZhO0zzzwTdT799NOxHgIashYSmkdL8Pk15Fc+Hj8/LAKrxChi/iqKD4vVWtZvE1z6uF8cKykOZc8a6MasUnqG7s/wuRBv3rw9Px8bYM1Ory7Zau0Xbe/GQd/WfrJjy9o4oMVjezCQ28jPrc7Scc1Ory7pb+2na06/1j6ykZe1cUS8goGSjVJdrtue1+z06rJ6j+GYuViYd4Rvvi/Cwu1e2F0IcQr5lohFiCwILH4+DjFamruxLg7ztZhZW96/zx8E8NOhRKJCmHGsn+dzD9AHWQhhdjGG+WHQnR5PIFykN6w9oxzkGmtKJlBhDhgmlOmPniDhjiHFezs4Qqlj/AVPCE3ww1e1HYvPEKQ85zZsCgjXIGEM+cq1D3PReK1yX7nejOmZZ9IuVHanMi7GB/HZM0764cPf/87zYOl7GTHTded+4l5oSbpnKNFLxh921/JoD3bVpns0lT/7GURtUs4OWshq7ELYcl8y/lNOYfgxleAr1bWMtaVftMvLTrilz5BtjYH2op4gUJqoFGWHjHj9IgiwGGXhzjP69G/ZHOunoCzeWbTyJy2ULHwhX1kMs5Dn56VaMKNLJALHkK0QCcgPJeRZhCOPHjL9+MyoJfpoVxTkAed5QicLcOTIIkcZEzut8M0SwrKJDxyT0cviHkwYL/IaL22Q2vyjOAt+9NeScMO2/II8oC9k73vvvRfxk33hyfXBB2xRYlc+1Ox5Wz8C9q4rxqOFYlfNTtFu41Ba+kbbvOyEW/o0mnexFRHgPa8vy4gNxCfiETG4NRFviT3EHeIV5+giEdPZsctja4iRZOI9NpAt9VPfVvvIEc/4Ygpi9IMPPog+2P7oJOMjcsR3+jB+xsoOWXy1nyvI67MEXfhMfBdmxEwyBDEZQhb9+KAv2TiHwOWxDsTiKWOz4/Dj5RFYMnYpBg/FvzgFCY15e34+NsqanV5dstXabzO8gqFoKziW+5afawxD5UHxwvjO4V6/8/HUxtHDd90gamXI+KqqVcqt7FxzXuiFyrkXQnq3GsdWduy44vEChg3sUp8ugG0Ix6UF/FWH8SOrblz69CT48ICkC79QCovHyzCpSD/RhBSFuIOsg8yCZLwMYKYF59U4mZNB2oU5S8gsZNPu0W++SWQta2ry998zCUwknMhA+qQ/dwqXLuihXYnzpDMRnezuDPOeaAPCF3/4OfvXX18nd9X/UGWY+4XJXCIIwRaSEfIPspuJGiSk2uUjcsqq26rElzB/jqQ315nzMIeNRD2PAoCwhS/IfaaO++O55xKhyXVnDFxnuzO2ZRz0kw9cT+4D7ils6LpDBLO7V4k+JEp8s4n7hjGojXa+KMAvJd2zEMP4zi5b/kiMe5N7n/Mwn4/H3Iuyp/6nUF6N9oDeBifAb/XEYLews/pATsMAsYyFKgteMgtvzqmHlGWBCuHIH69ACLJoJVmilp1GImpZMIuopY4FsWywoGcxTF8WzLST+CwiIadSPrDIph09kotCAy+MAfJVu1mxSZ0SNsgiOFnsM2b0s8hnsV8ikWknQwJo4U9f8CGxS0v+gxEk60svvRRJbvTXEjqxCeGNTuzgtwhyCAPOkQMD7IAPY0Deidoauhu2nXrsSm/DCJiH4A3vm5mmiBfED3KeiFUtiZhCnFS8pB91xBtiGzEe8pQYROxWQo74Rswl7iluq72nRA+xTrEbfdhWUtzlcwk5SsVuxU9KfLQJGcYFTvhO5jMKcpvEGGnnswl7L774YtxtS50+H7BHTCfmKs5bG358YARWiF1bhfOt7Fy7Qo7XNThqJ3uoFrhQe13WIB+2tiEct/BdV7PanTLp0Yd3PNeJkbG2ddwzttyOdGxS7saTDWuWaemK49LJTmN2urfTg5c6DelS+9KlHc9c21FX5qDVr6aSHd3bpTb1U1myo7bbUIY5SJh8nIU/EbgME4r0CIQf/zj93Jx14s9/UgjhpwAAQABJREFUfn728suJrPvss7TrkT7kMB+LhBrr2TA3CZMfMhO3szBBSztqWVOH+UzMIuP4OTsEHIQYOzJfffVe+CksP9tMP09Hnnkia/swB4oy7N5EL23o/OornqfFT7US+XsM1wLfIGIhBPEf4poxPPvsefh33fOwoD6LmfmgMKTk/Lvv0i5hdGyZ8Jfr//HHl5GoZy7NNQzzyrCQT9g//3za6Uqbrg3X+4UXzgOpkK4h1xICHdL/008p07haxgIGEKbp/krXl0kt2EEGP/30edixkHxCFh+U6WfJenDnXqEfxyRk8V24U6brwxcF6d5NkulVumXLtp3S8SFjV7TNywJJ47im7trJsJGN307DjtyyFhaxEH3sJKKErCSxKGbxzb+Jk1m8spBlEYzMJ598En8Oa3fUaiEMEcsimMci8P5nsUtfdPz2t7+NzztkwQupiz76IaeFOIt9Fsla+PMTVTKLcGwjP5QsUcsOKMhS9LA4Z0GuRTttLLzxjT60s6OVnWMQppYgwBbt+Au5LHKCXVevv/561IG/9KGNRT12IbjZcYvNWkInP13mGZCQD1wLXRcIcnS98sor0TZ+CB/8F4EOvtj2tA4CS8SullBXtLPOkG5q3TnY4ufNzl5z6ggQVxWPiZVKxDa+NCJ+E+MUG4lDfGYQm8jEw7FYJ52lUjGP+Ed8Jn4Sn4l5JNqJc8Q8/OEzhJjH5w2xm8cz8EWb5OmDj8RgfCMRa2lXZsxkPgP4nOAzj/EyfmUwwQafPfpyMSrzl+NBYMHYlcfgeJ4Fxex0jwPvmqG2vdDuIOrtkM/7zzrfOdnqa4st6Yrj0smuY3a6V9eDlzoN6VL70qUdz1zbUVfmoNWvppIdRWS13SBq6azGmiK1qZTinouR25Gutcsl7ZZ0leryMfXi1aIzt7HU+ZK2S7pKdUO+t95fPTqHbB1rPWtXfhYOifrcc4mofeYZnlcLOXu+I2r5eRM/R0/kKEQppBxEZJjPhLa0A5Of+HPOug8yDGIy0GRx6Mzf0i7YyzBRSj87Zx0KUfv993y7zs6nRMDiE3rYbcuuTmQSUatHKiSCVkTtbj52cIjxH1/4Mp+xgQuYPPvsvVj3xBOJjAY/8AFDyRMp2Y1K/ZYJexC1EOUvvsgzf9lJmp5PK6IWQhYZrh/XhvsizHvDpPheIAPuRSIVUjXpugy6LiJhi2xLurru2Ek+8CUA+KUd14moDVxExAs76KafvhAQbtw3yEGOQ+xzjizXBNy1sxv9STbd59ZP9NJHNmzbqR0fMnYtaTvXlZ+Xrku4jJ5WQkCLYxbGWoRDmmqB++DBg/jHMpCCLJKRYTcSRC3/LM5PQSEwWfiysNWiloUzMix+yfSVDchIFsboQR99WHCTRdAijxx+oIeMfhbMtYQ8i21KLfYZI/1YkLO4J9MmolaLfchlFvt6lIO1w/jQgb/oI7P4//Wvfx3HB2Zqg6h9+eWXI8EKoYBsLdEPovbdd9+NfkEGoAOCAbsQtZDe4IwsY2MM7OaFtEAWvBiHp/UQyGNVfl6yPCV2tegt2Zpbdyi7c/32/vMRILbmRC11JOIXcQziFLKSL8yINcRwYhAkLV9YEQ+pm5roC/FLghQm7hHnFPM5JrZD5BIbOccP4qViN587xEwlYiWyfNlIjEaWGKpYzjnyyPHZg37GCxZKHNNHRK1wUbuXh0dg6diV68vPSyNWrKdskUdHq1zJ3py6Je2WdJXqcn978WrRmdtY6nxJ2yVdpboh33V/TY+0Q5qzehnKqv10h0DPRXPQrge7u3pvMaeC5KIMc5W4s/LJJy/DBCvtqIQsg/RizQgB9uWXLCwh0xIpSz1kZFjvBZlENoa5SVi0pl25us+Yv/CLoQ8+4CeY6Q+qIF/JYe0b6pjA8TNSHg+QyF6eERrWkvHn9djBLjs2P/nkajctu1fN3EjmVil3889B3fjBTlL84zjM4WLmkQLp+aeXYULJTuNEyPLMVPwPc9i4o5lShOOgkYEGfBvzr9QVe/jMNWEnLMQnjxiAeAVzHm3w+uv3IoH61Vfp0QjU80iEF19MRD67acO8NV4bdua+/366PhDRLQm/mSNDBHN9IWspsUPm/nv9dZ5jzL2XCG7wxfcwh47y1JPgHLhP2YUb5s6R6KUengaswRxZ5Lg+Yc4eJuRpHJDCJPzgz/XAg926U3CNivzloAhwNdvuwIO6eRLG80UmJCqkJQtWCFORpiID+RmqFs/sVtKu0z//+c+RPGTBy0JXeinRAfH45ptvxgUvC2R2RrEIZsGsBTFELYtfLZRlE9KRzEKcRTILeEhKCAJkxhL2kMN3dvBS6iex+ECGBIAIxld26+IvZKj+HA08lPABGYhp/MIfxgB5QRvH6GIcHDNWyASO8QN/aglbYItedvTyD+vgKL0QJOgGA7JwgqDFB1032aGvcs2ut62PwFDsIp7V74r1fXMLp4kA7+2lEzFEZCRxmXhEHOPzgdjGF0/I0EYshCAlPvHZQHyCpCU24hsxUbGox0/6kCFK+QLqn//5n6MfxG70Eu/I2MMWMZHPD+IlcZsv8/CNeiX85Au51157LY6FeuKtCGeOGTexl7ESTyGJIXepo127dfn1CITwGvjLXy9vHwIe6+vX1D8H6/jkrcJrMaJWCq2h+BETXlqewWD73YXjIl76TA6Npfa7gMvQGHM89vdW6DCyNhpSedL1YX4UJhGJ8ProIxa4kGDpJ6UQZc88w89ZE3kLiQXhBfGFnHZX8igD1sIQtOS0u1Y3YdqdCPn13nsXkSR7/HF20aadm2m3bNrJif4wr4syELXpD52SbohMyLO//OUi2uDxB2E+FCZ468LfOr9lngfJiH8Qs5Cd4MIYIAF5BjA+i2wMa+d4zp+igScEL+PpS1cY9/VL0mAtn8CWnbXsnoa8hMRkNzCkLOMiI69xIcPYwJ97guvO/fPOO1yfRL62+AS+6EVPmFuHSTb3Gn9uloh8fOAe0X0HRjyyAby/+uphIP95RyccElHLLubzSDJTsvMbwjXdu8nXe/fSjtswbw+T+PTHadyPvP/B49NPLyIWYf7u6YQRyGP9CQ/l4K7bhSZkKAtfyEslFrdkCEEWzSxYWQCzYGbHKSQtGXKTRTH6rE7qWDj/3//9X6xnQc/iF1ss7FlssxBHJ5nFMDbIkAJkFuLY1u4n9EEe4NdYkj8iDyAXyPiFfRbhlPiDbXbQfhCev8jYsJMv9tHHAh0ZEc70ZVGPr2DHzjLk8Jvx4iekg8VlyG/8YmyMFRsQAvRFJ/oglbEFSQvBgG7qLUbUtWAz5IPXr4dAHrviJ1x48TXQepjfds2KcS3xpQULyFW+dCP2EYsgPUl8BhDjXn311Rg3IS3J1IvEFYHKOf5A6NLemzQmYh+fD9hV7KZNcZvYjS1iIc/O1ZdbfB4xBuwr4YeIWvoRmy3hjDyZzxpiOmMh7pKRIyZjg5jMZx6fFWDlyRHIEcjjPO0e63OUrs6LeKXlXyS7Su1Xve/eUY7HYkRtEUpdiGKjV1oEHCqLhh+PIRDmMmGilHZW8qza83MmFCwY2QEKGcfP0CFuE0nHblp+Qs4fZSWyNrWjAzKP8uLi+k5E5ihhzRsWtYkIfOop+l9EMi79aRVeQswl0g5bkJtk5k+QbOz2hAh8771ECkJ4mrlVHCa22ckZ5lCxD8QbfSWLH8iUErrY7QohjA4IQfrV+lg9kIdhrhoWzTyjlh1T98IkMWED4Q3hyTw0rK9jDmvmMNFLXw7wWAnGXEv4Ae6MB6yYhDJOfG31MdcPFoyTDL4ffngRfeSP4yCb8Rcik+sc5qrRDvcCfkPG0x8SFJIWgpodtYGziD7iU2uSLDtpIYuffJJngEEiJNKe+wC74ISvXCtywvT6BeWa0w95CF5KfIc0Bz921dKexpR2gzMW9GE/4ZCw4H725AjcZQSIMyw8IVxZDJNZdEKQskBVHSWkH22QiCyIITDZucSClZ/oQyiyoEcGvTZRRxuJBTULYHSys5UFMAtwFtDUQ3Jig3PVQUDiEz7gK8dK1hbHEK3aHYUMfTjXzlPGJUKBhTf2yMixQMdPHt/w9ttvx/FBVFBvE3YgJ5CDqGXBj4/4i25syEcW/CQIBvqABbYgCDhmPFwDOw78wmfGAln81ltvxXZkwAs7kBTYBDMS+qinDz6TsE0f7KCT0pMj4AicLgK8j4llioPEGeIT9TaG1EaomKBYSbwgBqFXsYhYgRx1EJ7EeGyQiDlkbCueK6ZRxzF6kKekjqxY1+orPmis6FTMI+bim2I3nyXWT8Vu7Mln4YEscZJ4yecOmTpiKXrBRD5TZ2Ms+ojjxGQ+7/hFBeetuMsHL+8wAtenRncYiPGhO1TjGFmJq1mxrZ1wbIEXGxxiZPyWQecT1C7aRT4egz+5L/jEt+6kY/Lv2PwRNsJL5xG4O/gCAfjJJxBW7FZk8nMZFsn3QpmIrjDn2Sfej5CxibRNuxAhwSDZeEYppCyEpBJ92al4cZHItsceYzF/Hn+i/s03LO6vyMYw14pJBCvkaZjHRb1//nPalcuOzaH1ZJgzBuIwLXR5LizEK4SbHjkgn/KSdTa7OX/0o4tIROI/xB1lTjznfTlHDr8uL1noQnSnRzlAJkIUMn/FZ2Xwok64qizppi7MDcMOrfSTfAhLyEV2KTNebM+dCOL722+DE9fmXsiJtGVHKrq55lwb7g/GAJ5EGLCGoP3ww3T9IW4TZkMjGa7nvuHRCWDI9eD+wiYZmzmGuR1ksM/uYJ57fP8+O4LTlwbCd8eJxPFAcvNIBe417diFrGZXMH7wuA71G/baW4SAQsSxxFL5I/+87EeAhbAWniy8WbASD6gnk1RHPYteSAEyC3f+7AqyloU8JCTkYimhizZKiF0W3ZxbEhT9ZC34ZZtFM4tn2cdf7aZFh12II8NiWs+vFYlJH2xpYc5CXbbQL4IZgpjF9x/+8IezP/3pT/HY6tfYGAc7qdhRBVHBAp/E4p+MHvohJ3ICn/GL3Vw8BgECAB/YmYt/yOaJOvD97//+74gXvkJIQHpAwmKDjB4SJX3IHDNeSmTAUPW5HT/fFgHFLsVSymPaTZv7ty06bq2GALGX2MOuUeIAsYz4RWzgvU6uJdqJA8QoYiIxiTghgpJ4RLwgIUs9xOT//M//xFjGOV9MEaf5bEAWP9CJb4p3yClOEauIi+jmcwI57I/5ypgYKz4qtmps2EcP9tFFhjzlVxtvhkfsEG9L+pHXryHQD9lrv9BCLzGdsTEm4i1y+M1OWrI+96ijzdPxIKC7X7H1kJ7JF3yQP6y1qNf5If3Dtnw8Bn9yX/DJ+a7hOyTHazGidsjkMdwk+KaBD/l5qHr8EkYqD+XLKdh1vK5fJQg/CCtK5hWsp7/5JhGq2g3KLlpIR8gu5mn6CTqkI/Iff5x+Mg6hCAmmxLxQ+sMcJxJvYc60s5Uet8BPz8N8MrZJ/vvvWbwn8o3duBBo7KhNtqX9qqQf8uzwZAIFmQkBB+HGmLCJTCkxdj2jFT+wwTjCXDLoGu4nXeiG6GWjEiQtkznGzDN/wY/EB7AS+sGNfhyPJfwIc75IWKddomknK+NFBz7OSSJ9IWC5RpeX6fENPAqBa8M1x3/8kO8i599//yIQFuCX8J/qB8R4mEfvbKRdtVwLssWOa0jGV3s9wSBwMLvryL2Udm2HNUJYEKT7i2P6IMs40u7p9Ad1kLzcX+++y+5t7qGpI7nb/XiLmVv9IGDgg6f5CLBoZbEJeQpxyOK0lJDTghhylMxiGDKThTSLWRbmQ4kFMzJkkhb09EEvC2Ut5lmQi0ilTbpZENMPfyEvISfwg88CJexAekK2Is+Cm3b6sDjncQF6PAFtEAnowA90YwsCmsU+Y+McH/KEHdnHX+0+hvCAHObzgSy9IgbAmZ/wYgtyF98gNmi345A96iAc8J8+6MQfkRaciywRlmBHPX5AXpAo1S7dXh4GgaHYVX7nbe+j9e8YYv32CBy3ReIAX4xBSvI+5/0OeUi8I16UyMl8RMQQ4oFiJTo4JxNrFDfoRx3xVjGEeMMjZIifIjTxg3biJfEUHegmThHXkeOYNj4vGAPypZhnfcU28oyVeEZGF59V+Cw92CWzk5bY/Vb4BQJtJf3UEbuJxfSBdCZu6/MHvSKesY+fYCscwILPCEritqfjQeBUYtcxxvrjuYphDRecEUYqj8m/Y/NFeC1G1AK6lB7bYGv+HNrnU7pZwYp0SJ8PaTuN/jhfw5wjTKAgs9JP6yEvw7wnEl1hHhUmQOln5MhBcoX5SZjwJJKXfpCblGH+UkwQomEOGfpB7J2HyVDSh17ItDCfiwnSLMyRgu5kA71h7hQmVoloKymnDX/D+jn4yeMVEolJHfMldCFTSmGuF4iFyzC54t/Ekx12ikL8MZYAx2hCN7jgJ2Ttp59eEdvqLJ4DWdb34MdOZPrVEgQwz/j9xz8S4RjmimGCmsarXay1/mNt+ALx+vnn52EXGMRF+kMvSGGuDaQ3uCCDz+m6J1yR5ZqD75wEzuDN83rx57PP0rXArnDTdaBkF6+1SR/84BNEerSjmXtXhHOUCP25f7l3U073G2Q7Org+sjVnTHe9r+6IreMt9mT7rl+DOeNn8cmik8U3i9MholYEgBb49GOXEwtVEQStfiDPQp7EYhpSVcSjfmbKohmb2NMiHFn6sthnkSzyEhkljtn9xWIbXejhs44+9GdBToYkZScVdqknYwc5SA984pxFeimhE//AASL1jTfeiCV6ydgn4y+EBRlygAzJwm44bKMHGR6hMGSLawIRwu43CAj6Sz9tumb4w3h5vjCZ60k/9EMGY5sxIefpcAicauxSvN061h/uSh2nZd7HkJHEKcUGSEfiIfGPmDKWiFvEBAhQ5NkhqnhLLCIeKlGPLIl4wjGPIBBxSh3xiNhJjKJdMVtxilhEJhYRuxkDNsZiEfLawYosmbhO7EYfOpDBNpnPJOIxdfZzQWOhpB6Z//3f/42xWp85lGTisj5/wAld+mzg844MeSxMrG4/Pk4E9I7YOnYp1m9td+5VAK9D+nxI273YHeresn4Kr8WIWpRLqTV0zMfxQoSXQ/w06dSwitdxd+c6Xsd3V7Pu5FEBYU4TJkCXYYKVCNRHH+VPT9ghyrNj007TMEcJE5QkC6kK8UV/1sXkUkIOsg+S8ZFH0J/0hbVxmAAlEpJ5JD5ATqIv5SvdQ/NM1pf87B1SF2KPSSqTTHxBB+1DfdNu2OSP/MbPsX6SlV5ssaMXsu/evbQ7VQtlyVIm+bQjFByxU0vsNg3zwUhOoo/xCW/GRZ6T6I9+fAd3draGNX3I/Dw2PTM4zLfDxDcRstwfZHzQ9Z7rAziwS5t7hOvBvcenAWMtJch++ihhn/uGNQNkL/0hZ8Mmi3jvQjbzpQNJ49UXAow9XYerXdRJ0l+nIqDPRfp7rJ+K4mH7sQiFqIWYTHHn5pvRLvw5VoZYJLN4tjJjI2JxzQJYu7lYFLM4ZqeUCFSOWVCjn8U/Wf3oSz1lbps+jIXFPQSCYrPkIA5Y4LPQZ2ctZAMLfBbdWuxr8Y8NjbU0Jmxp0Q9JwiKfnbUiEbDDAp9FPWNFH1nEhnzDBteB8eRJ14Q+InyRkV8aI3IcYxvs+KMfcKUeHxkfPuJPz7XK/fHzZRC4+S5bRu9aWmysP7kF3FqgHEivvnB5K3xpQ+I9Tvwg814fe3/TTqxBli+MIDeJiyTapCtWhBdiJ7GRuEgMgtzlyy5ijb6UItbRhm/EGuIc+vGNREmW7VLsjoLZC77wxRSfURCkxDBiNrGbzwzFbMVvfUYodmfq4iltkMXEZX0e6LOH8XBMZtzoI2by+cP48Jv+Kkv6ve64EDh07DrVWO9z+sb7ON5gx7EGWpSobRz+QcR4U+1wv7KvCspTe9ddjcKPHIEwUbpJtEKohnlWmPSkDJEX5iIxh3lSmKwkcou+5FqCICNrzcmflnHMs3Dv39fP7tNjESDRJD+mVzbRJd2Fd6rEbpRX/UYGcKPnVYV8FDam5epw4lGY04aJrTpP91Ea8jL3nevC3JzrzrXhGcMQteDENYckhbRVv1zflHN0aZxTriH9wd4m7in85EsASGfIZxL3FbZo4/6V3SXHkyzdvddj+gg8Jl9O8U5g4cxClLxVYgFMZsHLQpgEqUhmQcyCnGNkWOzLPy2OqR9KjAed0pvLidiUDIt9HUMKcIzNloQtkogN/KQ/Y9BOMtpY4NOGvPq06JcM5AHPtSWhB51gh58iQyBKwAyyGHnteIMcwScIDggZfKvhJ5te3l0E7BrI4+vx3Qe898lzEnFI8YP4UEtWFruKx5CkxGpiKvGOc+IL+ogxU2Jd7gd6ZFM7WbGBD8Q8xWxsym6uIz/HL8VsEcjETsheYjXH+vzBNnqxx/g0riXGlvvl5/MR8NjVh6HFa99Ty09K/wDYw3IKB3eGqOVi+L3Zfks6Vu1YHask617mfalMO2g5Zh1KybqVY3Jvog+kHH/YxZfrZBL25uhNWvx1KgK6tro2kLNcG663rvlU3Vv24x7Cd3b+QjSTlTQOyqn3r3R56Z+Lfg+shwCkgQgBFsYs/jkns1imXYvkOV5IJzbQCcEgwgL95KmJvizo8VcEAHUQzLLbqxs97NJ96aWXIiaQCWT8JytpR9hzzz139sILL8RnSLLzjP74xE43dpE5USvEvKwh4PP6Gjp3t404RlJMIwYp1hH3yHNi6BCyip+KscRsPiNs7JZvQzpK9eqD3xCxELjoJZOwl9tQn5I+rzs8Ah67+q6B49WO17FjdaeI2huXjavD59OxX6UbjnuFIzCOAHOvMO+J+Wqn43i/VokwBwoTuFZpl9sKAXESXPtTTdy7fm+d6tVzvx2BhAALYjILZktALo2PFtkQDeQlk8awpF5IEHbIPv/883GXF2SCMgSsEkQthC5/8sNuWs4ZK7LspuVREOyoheTFT0+OgCPgCExBgLgi8nJK/6E+0qvdrnyJRizlM4E2sj4jloyxssuYPDkCdx4B57tO9ha400RtvG/Di/O0jffvDijHqxEvF3MEHAFH4MQQIL7zHCuSx/qEg786AksjwOMZeB4kWaSCyAzZso894CfBPH8RMgOilj8a4s9z+Okw/ZyoFWpetiJgY31rH5dzBHoQIC4Rr4hdHPMYF75g4sslYpkTqT1ouqwQ8NglJNpK4eVz+ja8tPg5BrzuNFHL5TqGi9B42xxczLE6+CVwBxwBR8ARWB0Bj/WrQ+wG7jAC7Ki1jzXgmJ1m7DIjK1EHQUtJguzgMQfspoWoZTctRK0nR2AqAh7rpyLn/VoQ4EsoEbXENmIdcQyilnPIW2Q8OQK9CHjs6kPM8WrH65iwOnqiVuG7FTTkW2XbL1mf5CF96LXdK9+HRJv0IX04pO02dFzKEXAEHIGbCPTGrl75mxbn1xyDD/NH4RocgXkIQE589NFHZ7///e/jjlrIWJ6fSD1ZCULXPluReh4hweMR2JVG9rQNAoeKXdglHXpdk7zwV0egDwF2+7/33nvxCydIWmIdXzbxRRNfMhHLnKjtw9SlbycCvbH+UJ9JFv1D+tBru1fejnOp4yk+NBG1KCZtPVGIdjuMS5Rya18jQOHlkD5E2+GFn622jP+Qvh4FXjsAWvGSz146Ao6AI3BIBLQBpTV23fVYf8hr5bYdgRwBiIkPP/ww7iyDuICQVcpJC9uGDO38XJjdaPZ5turv5fIIHDR+ds5T5evVHbU8Hq7REWhFgMcbvPvuu3H3P186Ec+IX3zhRPYdta1IutwWCBwqfka7HcYlSnmoWH9IH6Lt8HIX1kBNRO0Wb47bYoM3jG7e2zKmWzsOv1i39tL6wByBW43AxNh1qAndrb4WPjhHoBMByFZ+Dkz2dBwI+Lz9OK6De3G7EICI5TEHZE+OgCNwexCYuAy5PQBsNJI9URt36ATUSwu5Up380+SmJiPZ3jLq7FDcIdrlSj7GeM5LMFiyWaqTwVyX6pcosdv67QL2an7O8ScfYw2vmg/Ss5avvXjNwcT7OgKOgCOwFAK9sasWZ6f6VIrPxxrrp47R+zkCjsAdQSAEr6F1UC1+luLgkoiZzdZNamu+NilwIUfAEXAEbgkCis82Lg7FeYZs5XIISrpymann0W7NeKa4QzTrWT/NxxjPeQkGSzZLdbKQ61L9EiV27wrfdQ/ABCYH++NOJKf26zRzXOKdg+4UnzTW2ptmksLOTluMsdOlqvih8ao6542OgCPgCAwgcJSx69Q+AAaw9WpHwBFwBBwBR8ARcAQcgdNHQFNTlc53dV7TPXBt/TrF25RmUodeA20xRoYcido4WF5C7h245FVmOB796RSg41h56Rx0p/jRYQdWY3hpjCoZRDwOL7auZXCSV9nSx2UcAUfAEXAE5iEwNdbHIO+xfh743tsRcAS2R4CJ5h2MXS2xfvuL4RYdAUfAEagj0BK7xB9cK+9wrK8jerM14rbD62brcI3wHpY47pYp9xYjEl6945e8SovO/tEHpUYrWDue07emd+02LgSJsjaGUlupLiobeZnab0Ttps2O16ZwuzFHwBFwBDZDQJ+LGOyN9XM+3+b03QwcN+QIOAK3FoGpMWhqv0MDaWP9oX1x+46AI+AItCLQE7vy+Jyft9pEbk7fHjtLywqv3jn9nDGfKlYW+2PAK+6otU5NOdYNMKXvXesDVofCq9dur/wa1/IYfFhjXK7TEXAEHIG1EDjFuHmKPq91/VyvI+AIbIvAnEWlx65tr5VbcwQcAUfgEAh4rG9HHawOhVev3V75dhTaJYd8mE3UxocyB+1DBtpd7JfEZqtdybbK93sz3iPaliPj4otKaNwqx5RLTuWY/Brt0XZ4OaQPa4zLdToCjoAjsBYCipcqx+wgpzwmu1Z79DW8xHItI67XEXAEHIGFEThk7MK2csuwemRb9LmMI+AIOAJbIHAMscv5rvYrzfXq+nBqVz0qGW3vzI8KGzn1a+mztIzwKvkwm6hd2tkt9JWA2MLuKdtwzE756rnvjoAj4Aj0IzBnl1m/Ne/hCDgCjoAjsDYCPp9fG2HX7wg4Amsg4LGrD1XHqw8vpI8Ns/0zavuHknqch5Ucg1prQSfASvpLdUPjkKz0qURebUN9l6rHzmV4WctebUy9NqOvu4HX9C6FTUlP9CG89Ppe0lWq07jW0l+y6XWOgCPgCMxFoBa7YtwMBlrjmuTxSXo5bu2P7NwUfQgvW9qc67P3dwQcAUdg7dilmFyKjaW62hWJvu4EpJfTXj01G97mCDgCjsDSCBxD7HK+q/2qxusVXtb6bKl9fvXajL7uhlbT2z76fsnoQ3gp+b7IjtqS4n43b/awgN1snVaT+5qfT9Pa3mtre+2e3ZTMfc3Pb/ZYvmYLm2vcZ8sj4RodAUfAEbiOwFDs6o2buXx+ft3qOmeHsLnOSFyrI+AInBoCQ7G0ZRxbxK45/tkx5L7m51bWjx0BR8AROBYE8liVn2/h51o2l4rvFoPc1/zcyq5xvLW9OWPIfc3P5+hu7Ttkc0/UcpOscaPUdNbaGNiQ0y2Dbh3PmA9Dtlr1D/Uv1dd01tqkS3ipVH1LOYSD1dXiQ8nW1H4lXbZuyGdkWmxqbCqtbj92BBwBR+AQCKwdu4bipo2DLT6UsJnar6TL6xwBR8AR2BKBodg4x4eazlpbbtPG57xt6HxIv9U1JDOk0+sdAUfAEVgTAWLSUFxaInbV9M8Z15DP6Ky10W7HxXlPah3PmA9DNlv1D/Uv1dd01tqkS3ipVH1LOYSD1dXiQ8nW1H4lXaqLRG10eqc9Hqt1ZildKq061am0bfYY4Cx4tq3luKQ/11mSqemO8rz0dqwpbWwbMzkFK+lUmbsyFy+xpkP6c3st59Kl0vYp1dl2ezwFL9vfjx0BR8ARWAqBtWOX9KvM/Z4dD1Ec8pD+3J6fOwKOgCNwFAisELsUB1XacapOpW2zx/n827bVjqVXZS5rY/2QTN7Hzx0BR8AR2AqBobg0J3ZFnbyEPKR/yvikS6XVoTqVts0eT4310lHSn+ssyah/qYzyvPR2LCnrrBszae+DVtXSqTLvNxeviFNQPqQ/t9dyHona/WDDwf64pfeKMnMGOadv15AWBMv6bI9zf4ZM1vrkOuaeD/kwqLe7w6CmpoaNzTX55EKOgCPgCIwhcAyxa5YPszqPoePtjoAj4AjcDQS2mNN7uL4b95KP0hG4bQhMjV37fuFgf3xgcObE+jl9u4a9IFjWZ3uc+zNkstYn1zH3fMiHQb3dHQY17Rv2fybGQ5K3TDVz8SKElzX/eIux1nyoYRH7Te1cU1xpq5lzvG4CN4SXsKLH1vf8TS+9xhFwBByB6wgcQ+wa8uG6pzfPYr+pnW+q8xpHwBFwBLZBIMStLeeEtTCpeeraayCArfmxDfBuxRFwBByBfgSmxq4t4zyjqvm5Vayv+VBDPvab2rmmuNJWM3cX8do/o7aC2ck12Ytsj495INZPe9zkc7xzmyRdyCDgsBkw/NARcAROBgGPXSdzqdxRR8ARcASmIeCBfhpu3ssRcAQcgTuAgOWL7PExD936aY+bfL6Dn4l7opaxLz1+XQCVTRchCEX58DLUr8VX+g71b/VjSC7aDy9r4DXF5/jtUOhY6tuKFWMt9R/CoKd+Dbzkq8pWf6I8LyH39m214XKOgCPgCCyNwFjsOppYv/TAXZ8j4Ag4AhsgsMacHrd755qK9UM7v44h1m9wOdyEI+AI3GEEeuNmK1Qt8bNVl+Tkq0rVj5X7WD8g2OIrOnrtDpi7UR3thxfKJdNUn+8i37Xqn4lxUafePEP9lr5ZZt14R+TMEF4a35irY/2lZ1Ip4yonKbnZaarP9Jva96YXXuMIOAKOwDYItMSusTC7auzDeMhjPmyDlltxBBwBR6ARgZVi19R4O9SvJ7YO6WhExMUcAUfAEdgcAeLWWrErxs9bGOtXv0g9HzwrOzN2b4y5OtZ/lvsyrnKWstT56s/Edu+MOQPAL5vH/JsyDvmncswG7VPsWL0ak+qibV56nFBnU0qvStNUPJwzjh5X59jB8Rv9ZVxlcXT1SmGksi5d8GGsg7c7Ao6AI3AECNyIn50+tYbZuXZw64YOjIfc6kNpaK0xvtTX6xwBR8ARmITAgrGrNYbdiJ8Njk+JrVPsNLjiIo6AI+AIrIrAErHL6ojx88RifU/Mt2OdcmHob3VYvKboUx/pVan6odL6MCQzVL81Xtf8kHGV1xrbToSRyv2jD9A5Q++1CxtPRlBWs8o295NUj5/Sr7LHTk32VPDq9VM4qaxhUGpTP5XIRB/CC+XshOKQrf5cp9pU5u1+7gg4Ao7AMSKgmKWyx8eeWC/9KnvsSFZ9VVLf44P02NLqsvV+7Ag4Ao7A2gjMmaNei12chHytLnNebSqz5uppT5yVfpVVxd7oCDgCjsCRIKCYpXKKW+qrEh098bNk0+qKQf5axc0ealZ5U2K4puczSfpVDmvtazkVvHr9FE4q+1C5+ny3/aMP4YVydkJxyPdnKxpSsIiXQ8q3q7cXYFWrjXg1is12dSs73Y7i2MhFaRApmv3u24/PPv/8/zt7+PDrYvudr7S4H+0NciRXybHquxB3EK8vvvz/z777/rNrOE2NXdeUNJzMtWMvV4O5ZhH59fDhw7Nvv/0mxPplLEnLWmEL/UO6a23NwGws6Hj1Ab72Na7pr7X1jWIb6S3uLUbS83789rtvzy5CzJmTFLuijmsnc7Qevu/Dhxdn33377SCeh/fwugdb3F8999Z1747vbO34UdNfazs+pK6WnkPXf67PY/fuXcDru++/O/vh4Q9zoYz9hScna12zaGhV5dHCJi8Wr1UNNuLVKDbb1a3sdDuKY+GinP/mn3692bXpdTI6xktwdg0g7cBz/bYNv/P23rFsIb8VXiUsLF6l9i3G32sjx+uxx587e+KJl84evf+zXlVFeWEyhAftQ21FhQeuHBvPXPdqeNTa5tpdq7/j1Yfs2te4pr/W1jeKdunvvvvk7Jtv3j/7/vu/tXfaScZ7a+f0GjEk6g+2SrrVhiul9p2Ls4p7jzxydv/+/bNHQjk7WYdRtpbTsx09EgWOV/uF2GFFsb+t9gftau6MZI7XkWAFSfvDDz+EL+nnkbVrXMf9d1UBqzXg0tu9pJs2YvBisXgNgKxODUZ1pUGp7a6X+XsRPByv4bsix8uxGsaKlonvxYvwxdAPP3zfFItlonQp1IYrpXbqjylFf3kJzq7hbw0P2wYma9hfGuut8CphYfEqtS891vV21C7pKahsgcaAzwc0PeDRSPXKeK2sfmRwCzbbd1tQ+923f415KQtWfX4P1dqWsr+knuivnA6Dyccz15ZUoyfXbdtK7XNtr9Hf4jX0z81z7FpManjlbXNsrtnX8epE194AnV17xDFziHsI4uS7hUgTe28xmKXHYy9Frtu2gXve3nMttpK1eHnsGkfd8RrHyEpsRTxiM3+/2fdj3mZ9PJZj6+8aPtX0qw3ymnwyeO0c99g1fsdEqByvcaB2Eh67mqFKPK2CSAgeS8cPqS55VGsryR9VHc4vDVbHAA9ousNLI7oyXiurNwMZPtw/o3ZY5HAt8YbhZaU7x6rlYpCVam2SObYy+hxe1pigMNYaJrW2Y8Np7w9Og9e+Yr0De29hxdrM29bzYrrm6C8vIVvfp2u83tPqrL0X6XVqeF0f6TJnrXjlWC5jfXktcTzhxWNXI7YABl6N4nPE8vebtZm3zbGzVt/oLy8hW9+Xsmd15u8324a9U8NrKYysHotJDa+8zeo4puM4nvDisavxqgAYeDWKzxHL32/WZt42x85afaO/vIRsfV/KntWZv99sG/ZODa+lMLJ6LCY1vPI2q+OYjuN4wovHrsarAmDg1Sg+Ryx/v1mbedscO2v1jf7yErL1fSl7Vmf+frNt2Ds1vJbCyOqxmNTwytusjmM6juMJL3chdh01UctNwcWwN9jSN0pNd952Mm/2pUEy+nJMTNOq18naWeqYsdTGM9dOrj+/f6ztvG2u7TX65+NZ2kau32JSa1vaj6X05T4vpVd60D+U8jaL5VCfQ9fnPi/tT01/rW1pP5bQh79r+pzrz+8faztvW2J8S+vIx7O2fotJbtu2Le3HUvpyn5fSKz32/lGdyrztVPCS/2uUOSbWRq3Nyh3LMf6u6XOuP79/rO287Vgwsn7k47FtSxzn+i0m/4+9N32S40bPfau5NMnmTlG7KJEcjSTP4jmOOQ7H+XL/9nMjzv3gY/se29eexaNdI4qkuC/NZnO77w9ZTzUKjUQCWVlbNzIiC5nAu+HBC2TiLRQqVTaE7nnICG0eWgfy246wzMeyjWfZ+aHNQ9uTkp8qG9qOIeRh7zxtDuWH/uPrDsuGqN/QMsL6zFu+j0mo2y8b2o6h5IU2DyVXcnz/UZ7SsGxd8JL980hDTHwdqTKfbojrlQ/Ullayj3OlAPfL/OtSu1aVfp54rWqdZ7GrD17Sl/KfVJn4D1uawiRVtq449fGtFA5+mX+9rviEds8Tr1DXQbjvg5fqnfKfVJn4D1uawiRVtq449fGtFA5+mX+9rviEds8Tr1DXQbjvg5fqnfKfVJn4D1uawiRVtq449fGtFA5+mX+9rviEds8Tr1DXQbjvg5fqnfKfVJn4D1uawiRVtq449fGtFA5+mX+9rviEds8Tr1DXkPfrsUdtZo3VCKSlTpaiT5VlmraSZBWvsmbpi1fKf1JlZdatHrXwKq1jij5VtnoI5FskrEhL65iiT5XlW7d6lBWvsjbpi1fKf1JlZdatHrXwKq1jij5VtnoI5FskrEhL65iiT5XlW7d6lBWvsjbpi1fKf1JlZdatHrXwKq1jij5VtnoI5FskrEhL65iiT5XlW7d6lBWvsjbpi1fKf1JlZdatHrXwKq1jij5VtnoI5FskrEhL65iiT5XlW7d6lOuM14FbUbt67lEtOmgIHNSB7KC1U61PRaAiMI1AHbum8ah3FYGKwHogUMeu9WinamVFoCIwjUAdu6bxqHcVgYpAPgIrsaJWke5ZB7NZ+IeyIR/6fpSyE+5Z6jsL/5A29EMhn0u2zopVxSsfc1H2xXzINpMt80qHsrUvVtRrKBvmhZHkyk7uZ6nvLPxD2qB6zSuVrbNiVfEqb6G+mA/ZZuVWl3EMZWtfrLB2KBvKal5OLTvhnKW+s/APaUM5AmUcsnVWrCpeZbgPgdcQbVZudRnHUP41S12HsqGs5uXUshPOWeo7C/+QNpQjUMYhW2fFquJVhvsQeA3RZuVWl3EM5V+z1HUoG8pqXk4tO+Gcpb6z8A9pQzkCDcfSV9T6IPStxKx8q2DDrHWo/GkEahun8QlLl4WXr9e/Du1bhftVsG8VbFiFtjjINtQ2LmvdZeHl6/Wvy6xfDPUq2LcKNiwG7cOrpbZxWdsvCy9fr39dZv1iqFfBvlWwYTFoH14ttY3L2n5ZePl6/esy6xdDvQr2rYINi0H74GjJCtTSsGHjtuWVQuNHyWMyS+WV0of1KuWP0cfqEeqJ0cRkhXnLxCu02bcltLPkPsQG3jAv1J0r37cxlJkroy9daLNvS1+Z8IX1CPWIJqQr1Tkr/6z6hsArF5s+dfXti+kprX8pfR+bu3TE6hHqidF0yaV8mXiFNvu25NjeRhNiA12YF+pukxXm+zaGMkPaoe9Dm31bZtEV1iPUg+xYXqnOUE8pfyl9qG8IvGI4tOWV2uvbF5NZKq+UPsSrlD9GH6tHqCdGE5MV5i0Tr9Bm35bQzpL7EBt4w7xQd65838ZQZq6MvnShzb4tfWXCF9Yj1COakK5U56z8s+obAq9cbPrU1bcvpqe0/qX0fWzu0hGrR6gnRtMll/Jl4hXa7NuSY3sbTYgNdGFeqLtNVpjv2xjKDGmHvg9t9m2ZRVdYj1APsmN5pTpDPaX8pfShviHwiuHQlldqr29fTGapvFL6EK9S/hh9rB6hnhhNTFaYt0y8Qpt9W0I7S+5DbOAN80LdWYFaGSFhSpXvK4qV+XSxawDwQegjIya3K8/XE9rQxdtW7ssUjfKUKp80lueXx659rGLli8gbygbVXym261qpX59Ynl8eu/Zt7cMfk1ma59tQyuvTy36luWU+XeoaO31bY3pS/H3LfD2hDX1l+nySrzS3zKeLXYe2xuTH+GbN8/WENvSV7cuUDOUpVT5pLM8vj137vhUrX0TeUDao/kqxXddK/frE8vzy2LVvax/+mMzSPN+GUl6fXvYrzS3z6VLX2OnbGtOT4u9b5usJbegr0+eTfKW5ZT5d7Dq0NSY/xjdrnq8ntKGvbF+mZChPqfJJY3l+eeza961Y+SLyhrJB9VeK7bpW6tcnlueXx659W/vwx2SW5vk2lPL69LJfaW6ZT5e6xk7f1pieFH/fMl9PaENfmT6f5CvNLfPpYtehrTH5Mb5Z83w9oQ19ZfsyJUN5SpVPGsvzy2PXvm/FyheRN5QNqr9SbNe1Ur8+sTy/PHbt29qHPyazNM+3oZTXp5f9SnPLfLrUNXb6tsb0pPj7lvl6Qhv6yvT5JF9pbplPF7sObY3Jj/HNmufrCW3oK9uXKRnKU6p80lieXx679n0rVr6IvKFsUP2VYruulfr1UV5RoFbGKpUSCfMVDHUdkx3LG0rfrHJ8bGKysH2e9s9TturTVUfRDZFWvOIotrXBvNt/XvLnXR/JVwqqy/CteeEX95KyXB+bGOcy8IrZMUteVx1nkR3yVrxCRJr7tjaYd9+Yl/x510fylYLiMnxrXvjFvaQs18cmxrkMvGJ2zJLXVcdZZIe8Fa8Qkea+rQ3m3TfmJX/e9ZF8paC4DN+aF35xLynL9bGJcS4Dr5gds+R11XEW2SFvxStEpLlva4N59415yZ93fSRfKSguw7fmhV/cS8pyfWxinMvAK2bHLHlddZxFdsjbhlfWn4nFDCVv3g7k5NsH6cbYCOl0eWEtC+9j9ZJ8RMXKc1SEfLr3ZefIKaVx8u3jjSmM6VReqVzRx/hVp1iZ+FJpjE95kp3in6UshZdsmEV+KMOvT1iWqyfGpzxffq68Ero3YwXyL1+fbCiRF9KGMiSfNCwLedvuY3zkSXYb36z5Tr59ONvHRkiny5tRQaxeko/oWHmOypBP977sHDmlNE6+fci34Pd1yo5SuaKP8Ut+rEx8qTTGpzzJTvHPUubk20cML9kwi/xQhl+fsCxXT4xPeb78XHkldHXsykdr4lvGUt+7unGb4GXOHPNn5XVLilPE+NVfYmVxKdO5MT7lSfY0x3B3KbxkwyzaQhl+fcKyXD0xPuX58nPlldDVsSsfrYlvGUsdu7pxm+BlzhzzZ+V1S4pTxPjVX2JlcSnTuTE+5Un2NMdwdym8ZMMs2kIZfn3Cslw9MT7l+fJz5ZXQ1bErH62JbxlLHbu6cZvgZc4c82fldUuKU8T41V9iZXEp07kxPuVJ9jRHc1e0ojYmYB55Mnwesg+KzIrRQWnJWo+DhEDtl92tWTHqxqhSVAQWjUDtl92IV4y6MaoUFYFFI1D7ZTfiFaNujCpFRWDRCNR+2Y34YcdosqJW0dwYICrrhrOdQjJi8sUVlnHvrxiCzuWNU+7DI0ePeETLvXQrFU1bKt4YvcraeLvyxR+T7fOG5dyX4JWrRzpj9KENovVT8ZEX0vtlPk/JtWSEsn0ZDptAv8uzD5/Pv/b5uc7R4/OE9CnZKb5YmZ9Xeh3aFePHVuh8m/mWz8/zy2IycvT4fCF9zAafXtchn/JJVebnlV5LRqq+YZmz3T78fJdnyv0835YcPaIXLfeSp1Q0bal4Y/Qqa+Ptyhd/TLbPG5ZzX8cuH6G9a4eN3fqYteG1xzV9ldsu4grpfd2iiaUhn0+jMj+v9FoyUvY4bEywT1PHrnakfZygcvjZh5/v8gJMfYk57SJ60XIvHUpF05aKN0avsjbernzxx2T7vGE593Xs8hHau3bY2K2PWRtee1zTV7ntIq6Q3tctmlga8vk0KvPzSq8lI2WPw8YE+zR17GpH2scJKoefffj5Li/A1JeY0y6iFy330qFUNG2peGP0Kmvj7coXf0y2zxuWc1/HLh+hvWuHjd36mLXhtcc1fZXbLuIK6X3doomlIZ9PozI/r/RaMlL2OGxMsE9Tx652pH2coHL42Yef7/ICTH2JOe0ietFyLx1KRdOWijdGr7I23q588cdk+7xhOfeHZexyK2oFlA9K7jVghQCGvLPKD+W16ZtFT6gjdZ/SkypDZg5e0t0lS3R+GsMmlufzlOoppfd1lV4PiVcMh1hel4059fdp/Osu2X55H76u+pTIjMmK5fk267pEDzxt9F362vhkRypF9rzlh/rb9M1Sj1BH6j6lJ1WGzBy8pLtLluj8NIZNLM/nKdVTSu/rKr0eEq8YDrG8Lhtz6u/T+Nddsv3yPnxd9SmRGZMVy/Nt1nWJHnja6Lv0tfHJjlSK7HnLD/W36ZulHqGO1H1KT6oMmTl4SXeXLNH5aQybWJ7PU6qnlN7XVXo9JF4xHGJ5XTbm1N+n8a+7ZPvlffi66lMiMyYrlufbrOsSPfC00Xfpa+OTHakU2fOWH+pv0zdLPUIdqfuUnlQZMnPwku4uWaLz0xg2sTyfp1RPKb2vq/R6SLxiOMTyumzMqb9P4193yfbL+/B11adEZkxWLM+3WdcleuBpo+/S18YnO1IpsuctP9Tfpm+WeoQ6UvcpPakyZObgJd1dskTnpzFsYnk+T6meUnpfV+l1G14uUNtVsRxlkqHU51GeUr+s5DoFWKqsTYfsUdpGF+an6EvLYvTKUxrqz7kHjzZMwrJSPX3pY3yxPNUvVhbLS9GrrCttwwq+Pnj5dvrXXXb45aV8olfqy9J1qkw0OWkXXjkyfJq+dvXli+mOyVKeUp+v5HpeeJXalaIvLYvRK09pCUaiDfub8knDslI9feljfLE82Rori+Wl6FXWlXb5ll+eskF6fBr/WuU5aSmf6JXGdKTKYvRteT4eIU2qLKTVfV+7+vJJL6lkKM0t8+m6rlOYpMra5MpWpW10YX6KvrQsRq88paH+nHvwaMMkLCvV05c+xhfLU/1iZbG8FL3KutI2rODrg5dvp3/dZYdfXsoneqW+LF2nykSTk3bhlSPDp+lrV1++mO6YLOUp9flKrueFV6ldKfrSshi98pSWYCTasL8pnzQsK9XTlz7GF8uTrbGyWF6KXmVdaZdv+eUpG6THp/GvVZ6TlvKJXmlMR6osRt+W5+MR0qTKQlrd97WrL5/0kkqG0twyn67rOoVJqqxNrmxV2kYX5qfoS8ti9MpTGurPuQePNkzCslI9feljfLE81S9WprzJ1gfKEJOfqswHQnkxOj9P1zF6leWk0k0aylIZcsKyLtml9JKX4qPMtwmekD68l1ylXeWimzUt0VNCG9qV4qVsFrxSskM7YvfSTRrKUhl8YVlMlp9XSi/eFJ/KuuwSnWT6aarMp2u7lu6KVxtC0/nrhpfsVS1CfwnvRae0q1x0s6YlekpoQ7tSvJTNgldKdmhH7F66SUNZKoMvLIvJ8vNK6cWb4lNZl12ik0w/TZX5dG3X0l3xakNoOn/d8JK9qkXoL+G96JR2lYtu1rRETwltaFeKl7JZ8ErJDu2I3Us3aShLZfCFZTFZfl4pvXhTfCrrskt0kumnqTKfru1auitebQhN568bXrJXtQj9JbwXndKuctHNmpboKaEN7UrxUjYLXinZoR2xe+kmDWWpDL6wLCbLzyulF2+KT2VddolOMv00VebTtV1Ld8WrDaHp/HXDS/aqFqG/hPeiU9pVLrpZ0xI9JbShXSleykrxOhIyhArb7vvytckryW/TnQKnRH6Ktk13yLMIW0Kduvdt5Nq/Fw3pMm307VglW0KsVgkjHzPfrtBmn27e1+uoexVt9ttzXm2WW+9F2NJWR99Grv17n2eZNvp2cL0qtoRYrYpdKbxCm0Paed6vo+5VtHkRfpZb70XY0uaTvo1c+/c+zzJt9O3gelVsCbFaFbtSeIU2h7TzvF9H3ato8yL8LLfei7ClzSd9G7n2732eZdro28H1qtgSYrUqdqXwCm0Oaed5v466V9HmRfhZbr0XYUubT/o2cu3f+zzLtNG3g+tSW45Qq7aKxYT7CnL5Qjkz3wc2Y5Nv18zyWwS4+ga6W0hdtm8XvI4/xTCvssBm3655qUTuG/QGulP6/DYEK86FHxGbF4GXq+9Yd26dQ7xy+Qalw2ZPoLDybfOKB7t0OgPdKeGySzS+zcpbSBrYHNo1LxtmwQveQ4cX7cSZ2SC+v8OTy5cpPo8Mezk96kX4F/o01nuqk5chXknieRW2YOXbNg/Vrn0C3Sk9YRs6/hTDvMoCm0O75qjWOXVuvX274MnlG9z+ZeGF3kB3qm6+v4MV58KPiM1+O87LHlffse5cHSFeuXyD0mGzJ1BY+bZ5xYNdOp2B7pRw2SUa32blLSQNbA7tmpcNs+AF76HDi3bizGwQ39/hyeXLFJ9Hhr2cHvUi/At99b3LA73j0rVP0E4plrAN/fZN8Q1eFtgc2jW4vrHAWfCC99DhRTtxZjZIydjl9qjNlFvJcltgyUj5DpDtNUu2WeqnbFdmTVsRWAm81qRftIJ4GArWpI2m/HlNbJb7TNmuzJq2IrASeK2Zj7WCeZAL1qSNpvx5TWyW20zZrsyatiKwEnitmY+1gnmQC9akjab8eU1slttM2a7MmrYisBJ4rZmPtYJ5kAvWpI2m/HlNbJbbTNmuzEh6hKWoucTiF71S8sGnJJosWbmpr6uPzbl6UnQbGGHnlC0phnGZ6JWSvTC8UGqnr3ts1vyTnrplq1IMdXjNyWJfjwPKMqby5qTXF+v08dFDcYxt0Xj5dVnEtfAqhUv0SrF1YX0RZabY103WIo46dhWiTA1IYvUAAEAASURBVCP1aCu1rVK0Lrov+roLa92L3Onjo4fiGNui8epV6RmYhFcpXKJXigl17GpvCOGkdKF4odROX3e7pQOX9NQtW5VO8BrYPInz9TigLGMqT4RzTJ0+PnoojrHVsSveWIJXKVR17IpjRa5wUkrewvBCqZ2+bvQv5OipW7YqxdZF90Vf9yKwcvr46KE4xrZovBaBka9DeJXCJXqlyFxYX0SZKfZ1k7WIo84ZC1GmkXq0ldpWKVrDvnjMLywxax8fkjlI9xW6kpk/5iS2yK6+NuzjE15F2suI9+ksY5+Zehb9Pq+DaozXGyvwy2Y2cixgHjJLbRvKBh+vuYBlFRvK1lKMfPq+NuzjU18k3Vfoa+x/PSexRQb1tWEfn/Aq0l5GvE9nGfvM1LPo93n9vljHru5m8fGqfXE/Xr5vuVL1RdJ9hfv5++TMSWyRKX1t2McnvIq0lxHv01nGPjP1LPp9Xr8v1rGru1l8vGpf3I+X71uuVH2RdF/hfv4+OXMSW2RKXxv28QmvIu1lxPt0lrHPTD2Lfp/X74t17OpuFh+v2hf34+X7litVXyTdV7ifv0/OnMQWmdLXhn18wqtIexnxPp1l7DNTz6Lf5/X7osau4bY+kCalM1c7XwAVW4Af5BuUQwlOdi4Brn3R+hxzl0njMKp4ZTeBj1c204CEa9kXqf8SOmMdu8ocb93w8vviEtxrrcf6Ms8YhrqOXfk4rltfdDWjE9pZ+2J3OzuMKl7dQI0pfLyymQYkrGNXPph17MrHCsp1w8vvi+66rLozU68zXjNXvoeAOnblg7ZuvuVqVt8jshs4NnYdy+buIJwI76CbS/G4lyv6PBcdAwtdxsODKjioKl7ZrenjtZTZXbal04TL9q+164tLBcz6pelflgnTntN9tyw7/b5Y8epuJx+vtXEuq9ay/WvtfGupgNWxq7sn1veuHIx8mjp2+Wh0XwuvOnZ1Y+UoHGB17MpBS74F7dr5V04FB6bx8Vray0yPOi31NcJAWzvfWipga4hXD5+clcXvi2vnX17lh1tR6wld+OWyOszCKzq7wgpVTwwrcD2Bq2xJBKpfJeHxCytUPhoF1xW4ArAqaTYC1a8qVNkI9CSsPtYTuMqWRKD6VRIev7BC5aNRcF2BKwCrkmYjUP3q0EHVe0Wti1QbXKvgM86GAkNKbS+lD71I/OQXmBmKGezebRJdIE3259peSh+aMit/KG+W+76+hc4cvFTXXPpYXSQjR1+Mf8g8bCj55kq2Y0OO/aLPoW2r1xAy2mSX5rt6FFSm1PZS+tB+8ZNfYGYoZrD7OnblQ9nXt9CQ09ZD+IZk5OjLr3k/SmyoY1c+dn39K7etZ/UN8VOjXJ35tS+nrGNXPmZ9fQsNOW09hG9IRo6+/Jr3o8SGOnblY9fXv3LbelbfED81ytWZX/tyyjp25WPW17fQkNPWQ/iGZOToy695P0psqGNXPnZ9/Su3rWf1DfFTo1yd+bUvpzwIY1evFbV+Q5TDtjocB6Ue80S0FKNS+pTtQ8pK6allwyKwiMG5r2/05RsWodmlHZR6zI5Eu4RSjErp2zXbi2eqsJatLAJ17Jp/09S+0Y1xKUal9CkLhpSV0lPLhkWgjl3D4hmTVvtGDJXpvFKMSumntU3fDSlrWnK9mycCdeyaJ7qN7No3ujEuxaiUPmVBSlZWoBYBvhB1KqWh8pCe8lheyDfEfY4e2a10CL2+jNAG6VHq03Id0isvpJvHPbpTh2xWmqKlTHRKu+gpD20Qr1JfhrDyeZTn083jOkePbFbaZYfolHbR59jgy4jRx/J8nqGuc/So3kq7dItOaRd9aIP4lIb8IT3lsbyQb4j7HD2yW+kQen0ZoQ3So9Sn5TqkV15IN497dKcO2aw0RUuZ6JR20VMe2iBepb4MYeXzKM+nm8d1jh7ZrLTLDtEp7aLPscGXEaOP5fk8Q13n6FG9lXbpFp3SLvrQBvEpDflDespjeSHfEPc5emS30iH0+jJCG6RHqU/LdUivvJBuHvfoTh2yWWmKljLRKe2ipzy0QbxKfRnCyudRnk83j+scPbJZaZcdolPaRZ9jgy8jRh/L83mGus7Ro3or7dItOqVd9KEN4lMa8of0lMfyQr4h7nP0yG6lQ+j1ZYQ2SI9Sn5brkF55Id087tGdOmSz0hQtZaJT2kVPeWiDeJX6MoSVz6M8n24e1zl6ZLPSLjtEp7SLPscGX0aMPpbn8wx1naNH9VbapVt0SrvoQxvEpzTkD+kpj+WFfEPc5+iR3UqH0OvLCG2QHqU+LdchvfJCunncozt1yGalKVrKRKe0i57y0AbxKvVlCKusQK0YfQUxoRMjxtJFr1Ry5pWW6GmzP2YbtLn0bTa08Tt6PjxGXSqN2TREnuQrbZPZZvsQ9NKtVDJbdUIYEo+ZWrIlcrC0S0+r7S0WlNIjxrcB/pgMR8OHnaJXiox5HiV6YranbCulR5ZvTxu/o+HDTtErTdkzRFmJnjb7Y3ZAm0vfZkMbv6Pnw2PUpdKYTUPkSb7SNplttg9BL91KJbNVJ4Qh8ZipJVsiB0u79LTa3mJBKT1ifBvgj8lwNHzYKXqlyJjnUaInZnvKtlJ6ZPn2tPE7Gj7sFL3SlD1DlJXoabM/Zge0ufRtNrTxO3o+PEZdKo3ZNESe5Cttk9lm+xD00q1UMlt1QhgSj5lasiVysLRLT6vtLRaU0iPGtwH+mAxHw4edoleKjHkeJXpitqdsK6VHlm9PG7+j4cNO0StN2TNEWYmeNvtjdkCbS99mQxu/o+fDY9Sl0phNQ+RJvtI2mW22D0Ev3Uols1UnhCHxmKklWyIHS7v0tNreYkEpPWJ8G+CPyXA0fNgpeqXImOdRoidme8q2Unpk+fa08TsaPuwUvdKUPUOUlehpsz9mB7S59G02tPE7ej48Rl0qjdk0RJ7kK22T2Wb7EPTSrVQyW3VCaGdRoLZNmK/U0fBhp+iVyqh5pYvSk7K/y4Yx7vtFRBgjWfv5ghy/LYKi1ts+elqFFRZ06d5XnwRDoqjVqn3yWyn3Cvro2eMe5qrNBr8+joYPO0WvdBgr2qUsSk+7BdMlbfZUvPZwasNIFGDl46X8iXNNMvb8zcvqvIzK7uDqsrmDfabiLt376pNgSBS12rhPfivlXkEfPXvcw1y12eDXx9HwYafolQ5jRbuURelpt2C6pM2eitceTm0YiQKsfLyUP3GuScaev3lZnZdR2R1cXTZ3sM9U3KV7X30SDImiVhv3yW+l3Cvoo2ePe5irNhv8+jgaPuwUvdJhrGiXsig97RZMl7TZU/Haw6kNI1GAlY+X8ifONcnY8zcvq/MyKruDq8vmDvaZirt076tPgiFR1GrjPvmtlHsFffTscQ9z1WaDXx9Hw4edolc6jBXtUhalp92C6ZI2eypeezi1YSQKsPLxUv7EuSYZe/7mZXVeRmV3cHXZ3ME+U3GX7n31GTNk/ZlYSvibsWR/M+gYfSyvq8a+0bn8uXRdumcpb7PB1UeVGhO5JGAIbrNNkWjSHBk5NNnKZyBss0N47fOtgCG4zbZkHfFK1bUVrwCRlIyAdOpWeOXy59JNKRn4JmVDHbv2g92Gl3zLcYyJXBIwBLf7FbTkyLdIc2Tk0LSoGjS7zQ7hVceuPbjbsIKiFa89dneVkhGQTt3Kv3L5c+mmlAx8k7Khjl37wW7DS77lOMZELgkYgtv9Clpy5FukOTJyaFpUDZrdZofwqmPXHtxtWEHRitceu7tKyQhIp27lX7n8uXRTSga+SdlQx679YLfhJd9yHGMilwQMwe1+BS058i3SHBk5NC2qBs1us0N41bFrD+42rKBoxWuP3V2lZASkU7fyr1z+XLopJQPfpGyoY9d+sNvwkm85jjGRSwKG4Ha/gpYc+RZpjowcmhZVg2a32SG8YmNX0YraQa3NENZWoQzWSlIRqAhUBJaGQB27lgZ9VVwRqAjMgEAdu2YAr7JWBCoCS0Ogjl1Lg74qrghUBGZAoI5dM4B3wFmTK2oVsU450IYV5ka0+2CZ0t1HXhtPWFfd+/QpW3z6Njry/Wi5L3uI6za9Q8gOZai+0ql7n05lfp6uRZ+ioewg4KW6UnfV188TJirTvZ+KPkVz0PDy66r6CxO/THl+KvoUXR27GsSEFXdteJF/EPoidVR9VVfdU6ZDZbr3U9GnaA4KXqor9Vd9/TzhojLd+6noUzQHDS+/rqq/MPHLlOenok/R1bGrQUxYcdeGF/l17JrGqw0r4XgQ8Ir5hp/XINLuN5SL/jDh5ddV9c/BKhsvU4BcX4/kD5HOS25om7CRPt37dCrz83Tt07fRkX8Q+iJ1Vn1VV90LD1KV+Xm6Fn2K5qDgpbr6mPh5wiSFhehTNAcNL7+uqn8OVtCI3pchXqX1vatBQlhx14bXQfEt6qj6qq66p0yHynTvp6JP0aTwag3USrCvrO06pbyNZ5XyS+o6q93rjhX1HxIvZKUwSZXN2hbrwu/jfZjwUl39+qvNVKZ7P43R++X+9br7V6yuRzaOjDZ4o1j3yvkNVa8rAhWBQ4fAG/utIad9zFT3tqGwGSc31mKoBAHVQ2kMFZXFAPPpU3Qx3nXLi9XVz1N9UjiIPkUjOeuexuqqPNUthQO0KlcqvoOYChvVVfd+XVXm5+nap0/RiT4nnYyXOcSFNBsbR0cbR46PjmwcL+RsyH3/kAAfA/JSOIg2RSO5ByEN8VL9VbcuHETfRSd565zG6qo81asLB+i7aCRr3VNh49dXeaqbX6Y8P113vN68eTl6/fqFvVq+9Ku17zrEZR9BQUYXZm2YtwZqYZCBStuEyM4uI0SXk/aVVcqnuoU2+fUPy2L3Pr1kLgqvXH0xu2fBy6+fX3/0+GUxvX5ejv05NL7M1HVfWaV8opctKUy6ynxZXKfo0Sf6LjrZlkpz9MX4S20QvWTJdtK2MtH6qU8vPsny6fxr6LpofPrUdV9ZpXyqm2/LxpEjoxMnTrhTNZrUa3Lhc9i1CZrobqMJWNb21q+rVwkfywkEk4sWQrJjNB75Wl+OQZnyDS9PdXMQtOHgAwtDG52ErXMaq2uA16T6k4ugwjEZAcmBuY3V1fL87FevXo6eP38+erG7G602MIpeaRu0EgCdaI4eOzbaPL45Onr0qIqz01x9MYG+DbHyME+6yJftokmViUapT0teKEt0SkXfRSf6VNpXVimf6GWLb3uqTPR+2pfe1+nLK7lGdx85sjmXV/SyzedLlYneT/vQ+/p8WaXX6O4jq5QvVcdUWaw+fejb6kiQ9sWL3dHuLsGH1zF1kzzpbZM1IfQujh07Ozp9+hejrdPXvdx6WRGoCFQE1g+B5zs3Rk+efjl6vnOr1XiNkxD4YyXXbWWtwsYF4vPlhTwhTWugFsaJMWOu1E8wJJg0ZUBoUOy+r6xSPtFjQ8zmWF7MXuWFeEWFjomlm7RUj/SFaamsUhtEj96YzbG80Ebdi9bJlGBliiiSQppBFuFssqSqlSCjoI8Noc3hfZda0WthUU5f7JKZUy68Sussvhwd0Pj0qqvPG8vzy8Nr6J3MseAcvCAt1RPqVT1KZZXyiR79vs1HbCXtyRMnR2fOnm1W1YYG1vuKQEWgIrAmCOxagPb169etgVqqEY71UwNiUE+Nmxqfj1mg9tSpk6PjFqwtPSQLPn8M7pJTyldK36Wf8hyZPg08JXWE3j9mkeXzdtng06K/i963MXXty22TmUOT0uGX9ZVVyldK79vYdu3LhKbi1YZUk+/j1YYVlF10BGq3t0ejFy9fjt68SutUKTJTOkVHSqD23LnfjN66/H/52Yu/7gJi8RattsaKV377+FjBlds58jUcLMo1xuvhw38b7b540Bqo9asWc4NYXlvjitbJlGBltjFZPqSQJQO1+/iNKxXw2Ee/4AwqJAy6VOfSdclJlbugmhmVao9UWUp2rGxIWb78EKtB9XjCueyS3VXu2x27ht9TGSPpzOuyIZTfRd+pMEZgStr64hB1lMq+skr4Qryke9A0gdegenoKGwwvC9RuHNkYHbGVtZz1qAhUBCoC64oAY5jbnqCgAiXvXWx6sGFbxfQZK/XcYuwuPeDN4fPpcuhz7ZDtom+TLbq2cvHnpH1llfCJFnuGsFn1ypUruiF095VVwifaZeI1BFbYT136yBIGObwltNiUc0imaNvsEF1ruQ18jJVt5ZLvp0W0tvXBkaMnXcDWl7HwawGB4pIKLNzQFVFY8SpriIrXocDr6NFTto3L/hCo3/wAMegQ4wnnsku2yvdZ6cmJCzGCWIBIAnNbOKWnVJavM4fXvcjDZMQ59L788Fr1aJUzMF4xPbG80M7YfQ6fq59XyRyemC7leaKUtZeCld2xvWZ4RLJCkqn7lJ5SWRKcw+f0uko0XDk8kh+mqgP5UTlGEOuLrfShgvF9l56o7hZZfnYOn9PNhxHn0Pvyw+uueuBcMbxK9ab0lMry65DDO+TY5euu1xWBikBFYF0Q0BjcOmYOPNbH9MTycvHL4e2sY64yo+uSRXnMplheSm1KT6ks6cnlS+mWrJxUcqCN6VZ5rCyWl9I5pCzpybFBetvqKFk5qWS16U2Vt/HE9KbkzFKPHBukexY9qpNktemlPFYWy5PMWJrSUyorJj+Zl1KeZCwsXJSeQrOKydsavVhQB8Oi9HSYMXPxouqxKD0zA5IQQB045t7pTcea4+Wg8vCaFTJPlGuCqQ8rpDwn3tW55GpWQ6cMqzdrjcCsviCnnQJhVqFTwlbrZi5Vm4vQ1cJtKGsqVEMhWeVUBCoCFYGKQEVgNRGIvluupqkTq9bR5onxkYtF1WdReiJVnEuso76nxpBO5FXAEuBEiipeEVBqVkUgjcCs3Sb6nOopdN+KWuSgYEre1E1QNq6rb1RAHkUjqidKOXwmEex9deypJqyrq1eQGdw6TcIrVhYzJZcuxjtLHnpZhTjEEROTK3/d8IrVtRRDh40x+bJCvPwyX34JXjE9vqx5Xqs+bfUo0R2tRyA4uHXihRU3sfLQhqiekGhO90OOXXMysYqtCFQEKgJzRSAcp92YHGQGt84ejfWxspjBuXQx3lnzhtQdygrv22xdF7xy69NWTz8/JiuW5/PougSvXJmSPWQ6pO6YrFhezH7wyqXNpYvpmTVvSN0xWbG80OYS34I3R2aoY7D7eSuft/zBgMgUNO/6zFt+ZjUHI5tnfeYpezAACgTNuz7zll9Q1VlJqcoqxrv2BWqpaIh7eD8rGOKfl1zJT6Xz1F0iu+RFJVWfeZaV1KePHSXyDxteMWxieT7ueqHz87quu2R28c9SPqTuUFZ4P4udPu+85Po62q6XqbvNpppfEagIVASWiUDJuLgO7xHLxLLqLkegz3tXuZaDwyG8al8sa9OKVxlelboiUBGoCOQiUPIemSvTpyuRr7G+c+sDX0HqWsqVQosSznq0I1DxascmVlLxiqEynedj5JfUvuijsXctvJRSUseuPXzqVUWgIlAROEgI+GP9QapXrcvyEJBPKZUl9b1LSEynwkmpSiteQmI6FU5Kp0vrXUWgIlARqAgcJAQ01g8WqAUcCZ0ANY521AfvBJHJBVj5eDmMKl4TfMKLFF4hbb1vfCvmX7Uvxr3Dx8pR1L4YB6rmVgQqAhWBNUUgfI9QNepzUUhMpyFe48diXYAxDdPkLnyPkF8pnRDWC4dAxavMEWJ4Vd8qwFADWAHLoSatzpXf/NW38rGCsuLVilf43jVooHaf1vCpso+gZggBHyr/WuU1bUGggtUCTM2eCYHqVzPBV5krAhWBikBF4GAhUB+LZe1Z8SrDS9QVNyFR08ERqM41OKRVoCFQ/aq6wZwQiO5R20eX/8WL/NWluukjdGAe2bgKJskWqih7+KOgVTli9i3TNtkjiFyqm2UaNtYt+7hdBbNkj2xZVbxk3zKbUFj5bVfxWmaLVN0VgYpARWB4BGJjPVpW4TmEHW32UbaMQ/b4+PjXy7DJ1xmzzy9f9HXMnopXvBWEFaXCSGmcY/G5snEV7IrZsgp2Lb5VZtBYASsDr+JV8SpDIJ96hXxLYyvGr4JZske2zHdFbX6TzZ1SFZ+7oqqgIrBkBFbd1337/Oslw7ay6itGK9s01bCKQEWgIlARWDIC9Rm55AY4gOpX1adW1a4D6AK1ShWBikBFYOkIDBaoVeRX6dJrlmEAD7w39rGMB59wUpph7tJJHF5LsmKdcBJEy8JLWCmVPaueVrzyW8hhZR+k9agIVAQqAhWBbgT0TFTazbEaFMsa58FpHbGqeOX77TKxwsp19K98dIejVF9cN7yGQ6BKqghUBGZCYFmD/UxGL4cZqJYFVzjGDxaoBcpQ+HLgLdCqVlBawDoE6VriZVgtCa618i+HER9LwmvdfMvHa4i+VSpj3fCadEIHXGltK31FoCJQETicCKzbWK8hXunhbLVa63kgIJ9SOg8dKZm1L6bQOQBlONaynGsd4at4lbVaxSsfL/VDpfmch5Ny7FvLgst/Ng4aqF3l1vQrvcp2roptFa9+LVFx68bNx8i/7uY8nBQVo8PZ7rXWFYGKwOFCQGO90sNV+/LaCiel5RIqR0UgjkD1qTguNbciUBGoCBwkBFZ9rB/sz8TWodFWvTFWDcOKV36LVKzysYKy4lXxKkOgUlcEKgIVgYOPQH02lrVxxSsfr4pVPlZQVrzK8KrUFYGKQEVgHRFY5bH+0KyojTqOWkZplKhmThCoOE2g6LrwofKvu/gOfXkFK88FhJPSPK5KVRGoCFQEKgJriEAd6tew0Vbc5OpTK95A625edbB1b8HVt7/6WF4bCSeleVyHl2qFcDpUK2pDj6Md3tjHCrVHaOJK3Ve8yppjozpWNmDVt7KhcoQVrzK8KnVFoCJQEVhHBOprRFmrVbwqXmUI5FNX38rHakJZQZtA0XlRseqEaIqg4jUFR+dNxasTIhEA1arEBw91oJYGqX4rt8xLK155OFWqcgQOi29tWATfnUeOjI5w2v2bN2/c+fr169Frrl+PdzJPwHhY8EpAUIsqAhWBikBFoCJQEagIVAQqAhWBikBFoCIwCAKrMsfOCtTqX8+WYXSp7lL6QVozELIsG6QXc3LbCp5c2qCag90uywbhlVv/UvrBAPIELdOGUt2l9F41B7tcpg1tuo8eOzY6fuz46OTJk6PTp7dGJ06cGO2+eDF6YefOs53Rs51noxe7uxa4tW/0+KhHRaAiUBGoCCQR0EiZ+zxPCissRHeJ3lL6QnOyyJdpQ6nuUvosAAqJlmlDie4S2kIIisiXZUep3lL6IhAyiZdlA3p1lIxf4qlpRaAiUBGoCOQj0GeszwrUyoQ+CsTbJ3UPkfGTJGcJ8pi0j6rBeJZugwzIeOqKlDSDfDCMfEFLtWGsPMe3QpuXhZfsWHSbOagK8BqTytylp6uE17GjRy1Ie2J07tzZ0VtvvTU6e+7caHv7mZ3bo0cPH45evX41evXy5YjVtTVQu3TXqQZUBCoCK47AMp830p37jCmlnwf0y7ShVHcp/UHFq6ReYLbMd1S1WYnNQ9BKb279S+mHsDGUsXQbZMAyHSYEZVXvK1ZlLVPxqniVIVBGvWb+JXNJS4bbSaBWAlLMqbIydPOo0efssosc3RP6PPEzUbUBvUgbWiuQA5bHXEjuceZftuHVJaEvX5dcV96zsYbGK1bHWJ5fpzYbuvh8GSXXDqqx0jbdvjxH72fM8Zo6c6TsSpU13MN+qv6smj1z5vTo7NmzowsXLo4uXrzgVtKeOMFqWsu3YO3W1tbo+fPndu6Onj59Mnry5Mno8aNHowcPHo4eWuD24aOHLoD70oK3h+1gawiwO3PmzOj48eOjY7YaGRzAiJPrV69e1YD2YXOMFa4v25q4LU3Md8/ZlzCc+G7JgV+zwn7XVtbv7Oy48YF+wMmXN4wX5D979sydoWxs2NzcdCfjCycHXwZxIpdz3b4Ianu+abwNcVjEvXSHz5ij9oXchYs25l+44MapZ9ZeO9ZetNuOtV9Iv89Wa0PaDX5Sx0ebj+VMngdGd9zGxWPmY6eNTmPli7EPPfXGSulosxm/hf+0nVunTo1O2Ynv4k/2MXo5/uUHPvTY5D6zFD3k64Dn/PnzTgbb+iATP2NLH2zG75rnnT3zrC6v+EIy40vJTrxkwBzTZdmwaW3gnoPW/3kG8mUvPsR7Am3x0p6BfLl72A/5dS4OpfS5ckvoVsGG7sGopEYN7ebmcxs/ntq5bb8ae2bvvTs2Fryy08aC10fs+bZp48AJe487a++952xsOGbjBGPFsnpZRh1XorEy7FwVkoKmlK+cPLntfAX/OXLktTtfvDju/OXZs1PmLyxsOeN85fVrFBQoWRVcUnYckOq8++6Po/fe+9HmuU+ttm/s9UEz9ZG9y5yy99Yt1/cfPHhr9OjRhRQi6bIVxKvtPTVdkSbeGauOC9Q6+IRhhCqSNdEnNjJSdBOGwgveD0uOQvIs0aqjZAsv0ph9oosJD2XFaPrmOb0p5YHgAtKAs/1W9YNC8id4WYbyJCG8Vz6pZJGm6Hyekmsns0BwAWm2GbE66tfusZW+KRtisrINySBM6Y6xl9LHZIR5qiP5yHf3yowojGRNRIpNsiYFA10wNpw6dXL09jvvjD768KPRL37xCzuv20vrSTf53Tyx6bY9YCL88qVNtF5pErs7un/v3ui7778fff/9d6PvvvuumYwdwomYC3ZYoOLDDz90gW22iWCS/+OPP7pJP9d15fFADlvFDIYAfktA5e233x59/PHHzndLhBOAJQDzyH1h88Cl7733nusH+PuDBw/ceffuXRfACwOuBMf4kojgzuXLl0fv2BjE8fPPP4/u3Lkzevz4ses/fMmxLofGetJVeu8Cv9hzBh94x9r/F59+6tronrXVPRvX71vbMW4lD6sgMs/Yl3n4D+13//790T07eTYQlFOgFjqC8qcsSAvd+++/74Kt20+fjp6aD/30009Ov+ilt83m8zbeIgO/4RcffKGIPxGsxSeRe9v86MaNG86XCNb6gVroGa/fMxkKKhKMxdcINhNcfGT+9xAftnwCt6/spSf04ZSdKuubxp79yovhEsuTbvFxn6ITfWmKTNr3svkSuJ60Z+AJ69uMAT/+9a+j27dvO39SoHYeNqiOvuxYnurm0ylPaYpPNLOkKd0xuaX0MRlhXqyOsTzxpWxI8Ym/b+r0ppT3FWx8BNouXLhrY8jPlt6386HlvRgdPfraxq6jFqQ5bc+hszY+fWhBuBMueEvgbRKopeJzsm2Gaq2mTfN0kpnAymcmUHv58u3RpUt3nb+cPfvYnh+v7Hxtz52TFsw/bc/PS85fnj8/Zc8Ta4qNo+Yv+TomlOJZNf9aNXsEWA+8Pvjgh9F//+//x95JHo/f1yRkZM+uU6O7d8/ZO8T7o2++GfUP1C4Zr70a7Q0LLs8+hozfTFbUqj36pkvGq6/Zs/EdykrPBlnlrgisGgLz6MasKjpp5/vvvT+6dv3a6Pr166NffvrL0ae//KWbvLoVSgZEE3Dgz8VAhY9m6L9//4GbnJHDxPbHv/4IwaE6wIiJPgEDgtysTCT49NQCBQQOmPgTvCAAQfCqHhWBVUAAvyVI54Ir5rvXrl2ziUfZigG3YtGCWQRV8XMCqxdtdebVq1edbFbaE3QluEXAJvyyAv0E2T766KPRu+++606Cg6zSpc/Qf9b2cGPl6ltPGzB2/XIcqL1l49emBdloA4KUqeOotQ9jH0HTKxao/eSTT0Y3b950X+y9HvsDwXwO2pKAvPtC0NobWsZKfIixEv+5a35EkLTt4AswZOCnV65cGX1kJ18yvHXpkgvUboz9xa3gNrkXLZ+VtwSSCQSjSwerfz80Oz61ertArdUD/5wEas2X+QLCBWoNB3ybX0cQVMZGVtnWY4yAjSW4O8+99+2Lmi+++ML5APf0f8YaxgAC+PTvtmB3xbMiMH8EWDU3svHisTsvXfrZnjs3bQy8Y+PKYzu3bYHCa3t+vbGxYMP6/Kb1/S27f2Xjw1F7jl1yK+wIwq3bsbm5Y78ieGBj6EN7Hz1m9TtmKwZP2fh71vrl+tVnMfi/sefDS3uOPHL+8s47Ny2od8veW+4blk/sGbbjfIVA7bNnxwxLnlEE/XiWHLX7c85fwHrdDvrIuXP33cph/IUTX2Gl8MuXZb++WljdC9+7Njd3rV13rJ4v7R2F9xSeY2/s3LAg7RN7jr20vrFp7zUfLKwK66rIeTj4x6K/OZUqbLsckQujiUXDY8rDOh52vEI8fMxiZX3xisnyda36tfwrVQ+HjVXEp+FlB14/L6euMVk5fKtCk4uXb6+rs32UYoWMPjy+7rZrJk8EVd7/4IPR9WsWoP3slxasue6CJQRPmLCyAok/EGNy9fLlC3uB3XSrbE+MV9lubBwZPbbVUUy0WVXLpN8/hBV586qHr2/R12BIAIJgF4EmJqj8nJaJPxN78OD89ttv3SSf4Ec9KgKrgAB+yyp5gin0dwJnBOxKDgJiBK/4wodgLasOCYB9YGMKQTjuWUkH3Q8//GBjyPQWIPQbgrS///3vnQ3wIAdagmHr2F8Y59bpPZXxiYDm1WvXXPswfuEX7EPOLwJSB3S0/SXjpx35ooo2xbd4Jty6dWvCTh7+9Zl9Cfix+Rr06KKNaWsCol9/9dWEPnaBf/zS+Fn9y2paVm8TiMUGbCEAyMmzi1OrO/Gnf/mXf3GrayV3a7yi9vPPP3djNPaJHz/lmYf/YhsnAei/2spQVujesuvbljfLoWdj6rkYK4vl5djRly9LNs9BO8GUdv3tb3/rnoH4FkF1UrZBAN8HFqwlLT3EkapHrCyWl6O7L1+O7EXQgFdXHWLlsbwce/vy5cgejqb5aTM/b3733Ru2MOFLG0Nu2fj12Mai5xaUeW3nGxesMXc2Px2Z//L++8zGl5dWtmNjwMc2Ln5ieePA5npU3EF45szj0eef/4edX45Xf27ZF1jv2/vpp/aFygICtWuEFYA1P4MnaLdtvxj52vzlaxegvXjxqT13Xjh/scedC/zb48OenzZnevnc3n2eWdmu8TX+srNz0p5HPQK1S8br7bdvjn796//Pvgy9a89zAvpb5ivX7NeTn1o9VzBQ2wOvx49ZMXvZ+vND6/dv7P3lpY0Nz+ydgm25GA/o96ywX81fdc3yXOzznpqCeOLhKaLhBvODI+kw45XzohK29GHDS50cHLrwimETywsxjd335YvJWmSej1ep3tWqs62AsTdRJti/uP4LF2D83IKM/HzVrbK14A2rj5isKhjz/PmOvXg0+wEyqeWaPxvjT8aQw09ajxxd4xVwpQ1q9OBAUBbM+DkvgQqCDxwEasGYk2sm+fWoCAgB/IJDPqIgUZ8ghmSWpOglgEKAi5+BE1ChH7cd8nV4ZDNjBIFaxgkCdAS2kMcXQATRuEYmvk9ATWMKKxeRQ1CXwM7f/u3funL6EgE20ubLoZe9gjptdVhU/mqN9ela064XbMyiHThoJ/Zz5culruO4tTnBuUt84WeBU1a5EuQksMkKVvaj1XHE2psvBBgjP7l61dETeMXf4fnLX/7ixlH8Ilx5bQ7ngk48awjSKrCvLxa0ElYBWmRwUi/8EP9max7/YMzmy7VrFqCWP2MHJ/LI4wAfzu9tix8FsfFNvlBQn/XlLuTabNO+uuypy965HIsaO8I6upXV1tZnzXf44vezzz6b4Af2HGDKlhq0Zekxy3tXqa6DQC+8ut7pD0JdS+pA4I3VkUePEoy5Mfqbv/nKtukg6MYqug179vAlTxOgRS6uSlkzvjyye/ZdP2l9v9mip0T3KtBubT2xYOO3o//xP2xrm/sjO4/ZM/qFrRx8xwK176+CiStlA6tim9W0j21u9N3od7/71oKwr5xP2OPF+QpDr753smmT+Ra+9MLybKyzg72Nf/qpebauVOUyjLl06c7oV7/6xp6Rz81XNuxs9mv+6acrFrQ9myFh9UmaQO371k5snfTG3kEI0t6w9wbeQ5tgLX2EfatX+egz1pc/idMITAK1abL2Uj24hjasXeNeSanuPoDvaRvmqtTmYbQ2UkrrX0o/pK2SVfESEt3pMrHCuhJ/Wbatspd0qLGLCeiRI83elKw44qef12zLA35CSrCFn3v+9NMNtxKOFVEPHz6yifczF4Q5sXnC0Zw+wx+PnbOXkiO2F2CzR+WTx09ckAVbD8sBXgSiCFIQ6CIwpQk+1wQiCAbwc10CB/WoCIAAgR/8AR9hRStBI4JbCnouAiUmnwScOP7rv/7L9V2CdG0HQSq3p6cFvrCXk8ArKwwJxDJuIJOfOv/pT39ysllZSzCWAN7vfvc7R6cvLAjaIY/+ofojg9WPBHTWOVDbhmFX/rKeN+glyIdPsr0APkmwPHXAw/iHz/CnXlxz0G58McUXfAROdbgVl+YLb9mqWnwJegVI0attEeDjD8D4QzMd2HL8+LHRORtHGW/xHfLQwzOKPVDZWkN/+EUAGfn4Ff7HFhxszeMfPE+lXwFafO87C1CzvQG8BBkJ9DK+Y9/Vq1edCFYL3zE/12pb/L7rAK8hnuHYfNTqTlD0jNkETvRDviQB75QtQ9kQ1hWMWZVNkJZnHuObDvyJNmMfZPxkCAwke97pvPAa2u51sXPoektebv2PH981X/zZxo879uy5YdfPbJwY2VjFfpQje+fdsufXBetHzZ+FsYp2a2vHaPhj2JM23py2ANXp1VxNKDASKYFmglFHj/IlLWlz38yKEoyHtIjANnsXv//+X+05wNYY/CEwe5VyHjVfOWPByyZgyZ7FJ08+N39haxcCtDx3zphvnbL7vfFwnaDc8xcC0I2/kHeQ/IU/fbtx4yN753zmvohh1fnbb9+3MeDJStYzd6ybp59hA0f4LE+/MTY86c+x5D5LfdOC06WqUJpqr1T0pCEIe1TzvXI2jA1ZFl659R+bWRR8Gxo9H69FN1pp/Uvph8bKyRsbsWjfQnff+sO3rP4oo4fCy030bGK8uXncJk/vuP1or127NlkJykqo7777dvT111+Pvvrqa/enMC9s2wP+BIQJIj9hZMLFxHXr1JabECPz8ZPHbqK4VKycgy3ug0moAk4EagkeMEkl6ME1AQmwqYHaxbXJOmjCJxSkxW84CVISbFHwdN71UKCWn57/+c9/disG8dm2g6AqKxkJ4mE/gSwCVgRqCXARDCNQpEAt/QD/5wsgArX0Cfj4YzFS5PEzdgK1BHrYIoGf2rNykUAtQTB4OA/D4Wo5rupQY30ubsKZgCnt2xWoVYtMArUW0FSgFh/Gl8NALW3O6tvLFmQNA7WUMUbyq4QnFnx12yEEgdpT9gsOaNiPlpW0BGk5v/zyy9E//e//7XwQnzaPGUGLf/JFJEFWDv4YbOownejlIFCLvTzz/p//9b+cj7IqHHv+1r5gINCIboLS1BNfZYUuPs/WQKngKPKFF+lM7xFje+mn56xv0XewwekY95U2WwazwWmb/qD/You2PMGPXFuYTfgS+DFWEPgW5tMSpu9k60xYTYssvpMNxYwDMEh3Tv1FS5pDP4B5URGyY9E2SG9O/VkZxx9B8RP2Dz8kYPvKBS3v3t2wL3xO2xeM1+38jY0/zZdO/OT9woV79uXDQ/NbVtm/MT8eaH9OGb5gwI4ceW3vqHuBN+6b4Fu0WVcjc0lYbW09tefHj7ai9FsL1D4yX9iwgP5re74ds/H/LfOVzyz9dILR2bMPnL9sbW07TF+/PmLvMadsLFxwoHYgvPD5JrDfrBRuAvv4y6TKa3/x+PF5+7LzlNXTvmy1ep0798B+9fONtVnwvrACNVWzki6rCZwNMiQwon32kAseAiU8l2cAulK1Pv0SzHU1nthgF1wv8pjo7qE0xGvRti8crB4Y+SxLw2uWRvYrMMN1H98I8ZpBfRnrwHgRIGpWJV22FTDNv2YzCWXyx2SKvfj++Mc/jr7/7vvRD3/9we1V2KzU4dt3fgbaBGnY6mDLJsP8s/PxY8dt7zlb0TReQRVixeR20/a3PX16y22VwCR6d/eFm5CvcyDGD9RqJRGBNgUpwIvJPfUFd38CGzoBtJQjk+AWwQhkscoSjJDBCQ0nE17yCWoQsICOkzYk8MAhWQQcaBtomUA37djsrUvbIIsTGnQSJHP//G6/j4OHA/upI0EW7GByjs9o4q1gj34Ojx3YBRbQM2EXPzzI50S+7HKKIh/opi7IUWCTusJPSnCIOuPHnNgGLTxgRX11UH/qSR0JuBBYbAtuiGfolPqAI/2QQBInQUphNrS+mDzai3pz0ka0u9rSpwdD2g4M8RVwhZd2JuiK3QRraQfyCdKRR6CLrVRoL/oAwVrGFvKpP/dXr151OGADfx5G8EsBMPmTb8tBvp4M83bB9aIOxmr++Is+SPvSp0n5OTv+QJ/lxAfIZ9Wq67vW9uSxslNjAW2GL7EP6VPzB77cc+OaycRv3Gl9k/Z2f1Rm8gnekU+/JdBHoBYfYoWsjtPGw3jIH5GxipQ+TV/hS8WfzPfox2xFwDYA5oSu32MrfRx7sCH2x2jCGbtdPzCfxg9vmbxt43Nj13ic+9Bse8eCkfjzR/YlA3vt4qv0A/ZyLznC52Mur9vuwOrOcxcbvvibv3Erin+wPnrbxjFwe2m4pw7VOUVTWsa7wLvWNoxjtKfGFH3ZQnsxBuAvbIeh7RrAPTzYIkNfBvMcZFsNxpYn1t74pnvnYFy3a+S6w+Q8s7Z2z0HvWSj56CaQzKrfF/asILgODvz5HLrwFU53mE/SFxgP8TF8/b6dkoWvqk/g95zu+WJ8HM6XrD9hL32A1eHYhY+oD/Dne2zLgQ7GUILt6OQ5ljqwEQypzwXDhT7j+qLZ92y8qto67dRzELxYYU5/xk4hTp/nOYht9B/sWMcD1FWnLvubFbX37Nlz04K0OzZO8GdhIxtHztiiBPaevWJ4Xp6smN3cPGNtdMJoGHPYMgG8zls7GZ52z561nAR3+IMu8h88eMvoz1l7btrJ1i+NX5w69dTGjrtG2wR9CQw9fHjRfOuyjTX6JQurFvnJ9UvrR/yR0wPzL/z+hcvbW83Iux8/veed/YydzR88bW+fdnrBAfsuX75p75K3HT+8XF++/Nj8YMPV/cyZ1xaAvGd71v7R6RJ+/FkUspDN9c7OloqcXOxr6nPP1Rub+Wn4uAuYbbxLHnX28edrnE3Akn2q+UVfQ3/x4h1rhzvm089cPkoUHISffVBfv7bVvy64bPJd+tpwZmu2ZnVz82dd5yb2DXlx6tS2w+zDD+/ZewrtzzZmR23cf2v0zTf8ceaH9rx4a6ISX2FrDHwCTMAcX+BP6HSQf+LEM1dnfIYTvyQg2nhy07aN/2y6Nnj48JLzO2SAnw7agH1kWfWL7t3dEybntZN33HymwYvtPGiLo/Y82zI5F5w/S77ksXr48mX2a76DFteW169/Y37B/qzM+ZDz0vrODWvL/2NympXE+KDvK/iLvuiQnaT4Pl+S8OUH5fwxGfhgL/7Nlyj4VXO8cXWhPvQ96g+OOugb4IbN+A57AU/3Dcbw486uxrazro/E9gkGl9evbfHBWPjmJv/Hstdeske602kzEtFnz5+/Z+P0I3uuUDfaV1+IQEMbb0zajDGl6SN7/SytZ/+YJ/u7+AYrjyicOVDrZEYED2V00zwakqellqqFXvIkqVSG+PqmGnD78qf4/LrF6hXLa5MnWl8mtMpv4xsy3+mao0K/bqGa8L6rXqL3ZcKj/C7+IcqdrjkqVN1iKmJ5qTpBL3miK5Uhvr6p0zegUv7RmwknewWyqo2AEcEYJldMOm9YkOU///M/R7dvNS/vz2zbgzevQYGTgF4TtNPkBnnHbdLEBFcBQr+umH7SaJhU8DNS/rSIiQqB4O9s9RyThXU9wI0VtVpJRGADDJk8US+CUkzkoAMvJppgFKszkyjoCAT8jU3A2bcTTAlGQM+kFV3QcLpJl72tM4llRSMnATMFLcGUSR2rFv/u7/7OBS2gRZaCMbQJJxNebGfiSIAE+/n5OhNVJpAc6GQifvXqVbfSDHuoG3yc+A8nP0XGDk5+5o5MJpbYTttft202sJ0vA1jJKZvgbTsU2CTgzFYdnNQXfoKCBCjgJ/BJAJBJOfaBJbxgr4m2JsRMTP/1X//VTVBTuttsmiUfe2Qr/ZATfKnTIg9hgk+0YUDbEZig/bCZ8YI2ZYJPkBv8CcDi9xy0Jz4O/mBMm1E3AjhcE3DDL/EFfIky2gTab+1n56yoRYZsWyQey9Zl3Whuh/8cm1JjYwjtz7hxytqFsYA+Q8CMfs1WBbQTbc/WA9DRdwmoQo9/0Lbw4ENu/LNxi0AVfkBfZ/xXQBbfJ1iG71DOM0HBL/bJJaD6o40d/oEOflZPvz4zDgQyTv1gvkKQ6cnT5ssa8RAIJBiHXxEoo774VNuBr3EShMYmgl6kBBoJ5hFwe/brX7s6sE8udlIOFoxze5s0xDUIbz1FoVJenCOeu2EBFp614EH/YYX7N99844ixHVyxNXb00ReTE8vjOcA7hfYDxg94dtCnaW+eg7QxfsA9QcKXY8xDeQROGR8I/P7uv/03t3+++zLIxhlkEKxnXEcWXxK7ccJkoev78XMQevwQv+bgfeM3v/mNC2zjt/IJnoMnCbyaX/MFgHuWGT1bX+BfPHvxdZ7DpsjJwo/5Agr8Gc/wSYLPBNE5XDuY3/EehR/zDMRP8RHsYPxjvP/UTnTwrkUbMp7ir9Snra2oP8FmvjT4pe0DjB3Y9yc7XaDeAr7UAeyuWBkpNuIvBGvxHY0D+C7jOM+c/9f+aA/8ZjnabJ5FpnhlM/cxPbE88fopgaALF+7bO8Jjw4RfPR2xcWHDnjkf2PvOr60NCMLyLtx8sUswhetnz1gJ3gSVKH/xgi+AX5oMVlnes/Hxa/MH3kNO2wp/3k2uugAbgcax2zjaq1e/MrrvTS/vYK9G33z9yeiPFrRSoBYXImBFoO+dd35yct9992fze35Sv2s2WP3NDg4CmM+fH7fx57L56fv23vW+jUkfmG3NFw4Evz7++Ft7j/wPG7f4EvaNyXhh/krQiD5GwPSN0WybbV/avtLfTaC6deuiPdPfMZkfWPqBjYN7ASQwJNj29tu3zI//y9WbrSE2N5vAJC306hW2sc/8ccPjmu0//oXDscGWbdea4NWVK9/aHqh/smfLY1cf8AYXVm7u7hIAtLHCgpxsQXHc9B49RlDvleG8Zba9Zba9Z/X/2AXhFHCcVGKAC4KAly/ft3FtxzBsBN67d9Lq9AsL1l43Oy4Y5nvhKfyENsc3CMxxEKAmGKjj6NEXLsh48eJd1z4EPs+efebqTHtQD3zmyZMT5o9bVsd37UuEz+z+rCvzewA/0//ssz/aH359acFMtlo467A6e8a27rEtGBo/Y4urpi1+/vmi+fonhtlHJu+cs1W4Efj8/PM/2Hj7jfMV/OXSpR0bu0cmx34NYy5w7Ngbe/e+Z/lPzM+aOtHGN2++Ze3xnqXvW/7xiQ+qzqQEgX/723+398gH1l5sm8X2SrT1K/PvHfNB/gOlmWug+/HjU66df/zxA8P7c2ev5J07d9+ewaxyvmlyWcX81PkyfNSHvrG9fcJsumTnu2bXh+ZP8T90a+pvmI+FN/jnjiiyaC/FBrCkr3/00Y9WL/bA3rG68r8MaOFs+gh+zPYY33//scPN72d7EveuZJVsVYnydT/P1OlqUbjXE+ZpQU/ZIWg9xUyxgcM85E4pOUA3Fa/+jdnS5/oLPGCcB823WNn6tk0WCJjxEs/Eg5d7XtpZ2XHr9i0XRH3w8IHtP7sXqPOblck3E3omOkxSjh3lRWDHTcCEFzKZdB21MiYX79mE5urVqxY4/MxNWHae2T+i2mRGkylf/rpcK4BIUIpJFHXRChUmXExgCWwppYwJbKzOYIo82oMA+q9+9Ss3QSRIBj0TQiZ5DnPDHXw5kMk1gQNkE7jQwaQYPmQRdIAWWchAl4Is6OaABh/AZgIp0qXJNgEK/iUdmZxMqJmUU1dkcBLQIfiLfORhE9i4SbbhRJAVeeTrD3kU5JPdYQo9k3MCxfjtry1oQp0JkqCHcg7agXLww7fBDjqd0GAvJ/IIClK26ANc8QmwIrhBcBm8wXMZB+3HGR5ggz+CO19GYC+BVQIXBGcJiOBvBBwkgzYnCEDb0j4EafAVeEkJcFBPySPIjixoCYwQMKB96rEYBGg3xo7n1m4vra3pS/Qp+jJBStrv+rVrzgcYF1hlyhhBAEpf9NC38WnajT1TCbby7EAusqBj7HIBI7tnv1i+0MFXCJRdsi8B6A/4B74Q9gOCxshxdtm1eiwBWew8eaLZroFAFyd2KJDKOMOR41NgwfjogrxgYs9EDurCCkaCY2ynQPAa2m/siwXqvaiD/kh9+XIUzAjUgSFYsmcu+CzjIGhK/+bLHPyH/s+YQFvS5rS/+7LGrhl3H1k9aJdYm/BegQyCmldtrPjtb3/rVp8iQz6CT+rZpPqe57lnctGNf/rjOnwf2RhLsBbfY8yhnHcXfE3PQdqUg6A+9mMHYxL+dsyuub/8dvPFBc/B92xcfN/Gb2QRoOWgfagXfYWgPvcEzxkzWd1KX2E8ZTU0K3Ufmi0PzN6X5nd8uWGO5eTEPrCVrT+oC3/YxrOUunxvK7s3rS74BTbypcYX3nManQ4Ps5PU2Wv68HXwZvuQw3AQQNvaema+yorTJiC2vX3MnlWXzVc/Mjz4Ip0AVDPCsLcoec+fn7K8pl2aQA5/pss+1tvWzg+sPW9ZW9y3Z9dTa+cLJu9t88MTU5AS9Hvnnduja9duWz99be3Er1JO2hjyiwkdQR5WC7LS9KOPvjfav9pz8rGj9bu2NaG1IfuBNysJCQSycvDevbcnsggUEsh7911WH9rqSqM/cQL5tH9Tf3MVo2EV7wt7V9JqRlbq2n9PbBMo27Z+tpePcK285M+1rl//wYK1j40GGY1cZNMVbBg2DNhWhpWczU/LWW2MnQTnmtXNd62Od8xGFi80fOaOJo9+3OwdTNAX+QyzYED68CFf/u/YPXsHn7V3h48n9R7u4o3h/tywY/sL8OYdm71pT5mvvG/va+853/BXy+7uHnEBNzDY8xfGA7BpthFogr+3x+37g9X/kbWJ6BsMbciwejX/WXDy5K5htuXqyYrYnR1+sdC8r7My9913b9s7OV8sPTPfoy1od1Y882yknXm+0w78Ooavi5rVztjI6lcbsVDu2uP8+Yf2PtoEPeHd2uLXKbzXN20Cz/nzDS7I49jZeW5txcru00Z7yfTF391YSX7lyi17N7dfGjzlFzE2b3TBy9dm6yunC39sDn6ZtWvzFVbfHrP2/cjhh8/wRQZfEnz88Q8m77Zd71h/5hcxjf9gI/Zubz+ztttx/R28+NMw+i6BdD9wDh7+kNv0b9lRlp44wZ/q7rig9JUrP1j/uGVty5jTrFCWNOzD3kePnhue24bFlr1PfaLizhTk258SnexzI5i8Ccm4xkWG0ZeSmSqTdoHWx6aUfMlFT4pOdoSp4+HDBPWxLZSn+5QtqTLxq159bErJl1z0jKstlVmpkz1m7GNbm5KUzakyyVO9+tjUJl8y0dFGI/1taV++NnnKT8lNlYm/D07wpmSvKl4pm9vKjh8/5iadH310xV5AmgmPJjd37vzsJhSPHvMHYjv2QIs/dN2E1p40b+xtzK0gOdLsYauJDngxAdjaOu32Jbx69ZqbWFy9etVeUD5ykwomB7z8rPPR1NG2c7BJJAeTT1ajMrnjUCCOgCGBKSb+TOIUAHBE4w+wYFLHZJvJFpMyBWbhYTJJHoESrQ5DP+0EnybDXOtAJrKYqDJZI+iGLGgo4xp5BDU4mbiRBy12QAMvE3Da7dq1ay4QSh62uBVrFvzFf6i6sVS0AABAAElEQVQjpybR6EA2J9fYTL2xGTvAhgkrvGCWOqgDcglqMtHHPg5kU39sxSYCtExekQ0PdWIiy8SdiT26sRssuRcOKd3zKkO3zmXbEqujsKHtCUoQGKANwJQA7b//+7+7PT3Bl36vvo8sfIjABH9SRj5+RBCOk8AL7YVvQ0eAFjr2B8VHyPNlxWxb5Tw37vJhQ9vQo9tY7L7qt431PmGbLfASmOSn/mctJaBGP1H78xNtVufRV+ljtBGrJ9+1vkiwkD5Pf4SHttuxPs4XQvRNxhN4WAX5ydVmVS6+zorFGzZGIosAKLLhJ7iFPPqufzCu3rZgJD6DXH72zjW/FsBOczDHc9fGEbZdwH+0DcJrK+PwfUp4KfV1jYnd+wD1YXXtG0sJ8LFiFV8GI8ZbApROfyAAuTG8lUe5dCsvENFya9SmHxvQqzEN7AiqU9b3aLMZeakyylmt6Qc7GRP4ooZgPuMHX5qBF+PyJ+ZL9HnGfZ4fHL586kZ9WP1J4BH/wdfcFks2bvDsoN58uUcwFVpO5DGuYMcJz3+QDVa0GWX4lls9S77xceCn+Kyeg6TYwbMCXRysusXnrl+7Prpuq2Gv2rMQ2wj2EsjXHsj4LzZSZ/iRjZ9jAzJ5FlFvbCWQy5fmjIv4GcF27G076Gd8UQA9fQX5+CgrypGpgPnHFsj9/IsvXJ2pN9tCoBfMwIo6sZ0I/zXAl+m+D/tt0WZHab7qFPPOVJn0wDebXY0WAqFNkJCADas22arlmKXNT7GbP33as7IJ4CiQ0wTRyONsZLGSlOAM4yZBrSYAyYrR5l/i96zmnj+bInBz/DjBLgKnu84e1RMaVh5++ul/WRDqpo2LT8xn2ReXvVGPWRsfMbtpP8ZVfBRbmj+xwg6t4kReE5w6a0HFc+bbvCMSpGX8emG8+DzbZvGLrJE9q49buvclD3+odv8+W46cNZrpsZif2X/xxR/sXfCG+eG2ySRgzArGphbYRLciuHru3IYF1O5Zff9g9Xhiv4D6ldE1q5MJ6BFo3dwkaE1gdi/YxjVykM24TbDW3NzSRgdB7nfe4fnCvvYfNJmDfjb6aeMmmNjYh107O2xpYVsAWQCfAKx/NP7S/EcFTwC1D9d8SUCgke0srlz5zhYbfG3vUwScG3+ijQn0njzJ+ze+AYZ8mfLQ8P3Gte2NG1esvh+b3uZLAOwDQ1ZHK4AKTui1IcxO/Fwy35hvPTfbbzqfYyXwzz+/6+pBHajTgwcXbGy+53yF9sE+vlQgcE5/wV9saLf3dbZZaMZOVtTeuXPReC9aX9oyeU2+jwvXzZYPrEKnbq/sedBslaFVxNjN91TYzBcFtDk20Lfg5WQ1PF9iXLnyvfnVbZsPsO1B08fstcD8lXGeuRJB5pH5yI5h+bPr32wPQv9g1Twrn+dxsNKXrSg++eRbm4vctWffC6sPQeMN8xu+sGhW2FN//Kr5EoIxg/EiPtdusxPPo+Yce6NMc5/z6XjHjNNenMMdp3FPyolgo7GxKfoiFGfPy01VNlWG9D4VdfUZm9Ym32+MvFpEqNqER0i7snJsRkaXylnxarPTx6vLhn0yVLlixn2SJhkSOcnwLlJlHpm7nAdePlYoKa72uAJD9sUUJqmyEK9Z7ttwCPEq0eFsH1dgSLxkQ5vNlIdlTCwI0BLUIujFS/tTe9F/aCtoWdVHgEV/6CL5YeomwfbW5N6bmNSEBHbPhMAF5GyidvXqVfdTflIma0wqmNAwcVnXA9sVIGQSymSMkxWBTESZ/LB6EDrqCt4EHJgwxQ7oNIliMskkDLm0kYJXTCDhJ7DJCyz6SeFl0ggf1zq4Jo8yaLmHnhNZTHSRR7BTwWP0QostHPASIL1qbadTE1rqi79QL+ipJxNIAnrIQL50kCqorEAtcqkLPii7laJbtjLZ9AO12MhB0Aa7kUc5AR9W1DKhpQzb8Gl+3gkOnPgf+jRxdoLm/OHXCVXo5gQz/4QupJVpYLGoAxtkH6uUCdLyc11wA2/8+9/+7d8ctkz+8U8dspP25ssYAigEFjiQRTshvxl3mn1GkcXqO4IlvizJXMs0HHgXUIleKs2vGI9pR9pKbeP2Q7V24k+r+JKGvkWfpu8RhKJNCcLR59kCgfak7VmZSzvS13lO0Hdpd8ZC2l7tftMCtfRPxkX6KrIZ65BHPzVDGAAcagTCWLmNXuzEN9FNv+eaYBi6+dKQ1YtudeM4j3z5JMKye5Hx8RN99Ln9T02u29vU7HJBPxubSdHvH5KfagtGaNH5vPuuTdfeaA4kzfhA6o8b2ODOcbkvx6+7n+9fy5aYzaky2gj7WM3JlhQ8K3gm0P6MuwRqaRvGDvaapf3xA8YQnpNgG8p39bBxEX8g4IpMcNYXO9QHf8G/0AEd/oLvwsvYzzsOGOkAK9dmzODHh3BBDs8gnoPYxYmPTp6D4/bFL+kHPF9YYc5qZj0H+ZKDwDQHtkCLf+L30LBylpXmzbPwgetv2I0eAq/vGBYEaf32HZvpEmzldIFak0s/QAd1Yrx8+qT55ROBaHDSiltw4kQv4yt4YR+66b/wO51jZWFb+DbM+zrme77Ovdb0c/OvCWqxqpHgT7Nik6AbvoTvNIG3/dL2grSUWRNMjr1A7a7hyH61vGs1gSVWoYaBlyZQtWtjFgFK3h0JWE0HaOBhH8/PPvvexttn9i7VqLt//4iNf2fNXgu6P2MP1F3rS4+tb+xa/yI4ReCfwO2egVpFePPm2+bL7JnKr4jY8qHZ+9u6pfkhwbEj5rusxm0WG6CRFcb377Mv6F6gVrIvXfrZvrj93vo0AWqe4wShCCazDyrvDfyBICvKWa17xIJqr6wvWPDPbLtlK1Fv/vSRXbNYgGAVgVreYwkEgm8TlMU2AnBbW814t73NgoKmLXjVgMeGX5Px1PoBf/rU5T0NjrmfzdDBitRmGwaGAAKVTcDthF2HqzIlud1fmvbfMVz42f5P9is3tqOgDhsW/CSA2ATLL1zYNVwI6o+sjviUATO6bSm/Ftm0X0+wvcVeoBbaxvfYm5oVrvbFjQXfCfyyWnx7+7iNQ8+s7Zvg7/Hj20bPWHDZ+QQ+wMEKcILzN268bTY1/WQ0umt8T60dmsC+DbE2Th43Gwh2NjbQd/AXArUE4Qlgxw4C1QQoz5zZ68n0J75oePqUADDpURt/+dLtmNESgG62CGn67UvD7p69L7CS9qadz6wPENTli4LG/+7cYa/7XeNjP3C2W9iwky/K+NVXs7c0WyDMJ1DLFxMPrG1/sGfDDdd/L13ivzio2zFLt+w87+p7+vS2Yfrc2Uk9wZs6lh4gqR5f3AN6M7Zb6VreGTVu472mbmcasqRNXzE4PYxy9Ta+NhvaRDq+UqY2YYX5MbXyi1hZofgs8mI9MCyiQcfWS11bZRaBl29DL7zM+GK+tgp35Pu2xkgXjVfMhrY8Z/sYqEXhJVtCfUxmeEFnkstLO/cv7I+9Hj167P4QjAmFJjGS0SdlksWflbHVAascmZAzkWDixoobJkjrejBhYgLJxJNrJjtu1ZcFE5gQ8VNUMGaSBJbUm6Akk9OSfUg12WQSyR/XMPFlEsyJXAVHwJIJ5k8W/GDCGh7IoZ1JmbS5Pf8s2EY7cBKo4eRgEgcd+pDFhJMgDRNTAilMetkygH31mPhpgkseQVAms9CCD6uImYwTsCPQgo3owRb8zw+2EJRmkknK5JOTQA6YUU8wJAgMrviQJsnYjCx0k2I/uNMOBBSpB5hjN3KwCzngRz6y5nFQR+mkn2G3DvwGG7CXfPAmJZ9JeNj/aAfqBH6LOMAQf2Uyf/Vq84dftBttiG/jPwRksKstsAqu+CW+is8RyCD4IRyoD75DmYL9tOm6H4y3fBm3jKOPWnxtEly1NqE98V18gLZiHCcQxz359CGCRPgH/kq/lA/T5vAj0/mwpay2ZNyAHlqnz/wY/6Ht6d/4FbLUT6BjHNg1Oo0ZjCPQyweh5SQYhl504KsE3QjssmqXa/zukfkZNJyufQobB5upl+onfLQis1BcJznjATjzbOHUQQCS9mDc5Gf00IEBeFF/xk+/DxFYdvhZPyV4TeC59BBeoW+xgpdVmYynrIpmxSsY8Txh3CUQf8vGYPo84wBYsTr7Q3s+KMDaaYvVzz9o+2+//dY959wWBja2gBPjLH9c51Zzm36CntgSHuClk3GM8Z+V2mw/gN384dcLk8Mfb+G3jFGs/Kb9+cKCleXYz0pYcOZXAJwK9CKb5yLtQECa5yDjPCntQHvcNH1cw0/b0Zd4duk94tJbl5xPnzppWylZHVjFTR/hZIUxdsBDf2RMxmZkgYH7Ytfagjbhnj7GOwH1/M5w40/y3HZUhtlfLe9L8xn6Bs9Kjra2DnGcx/10SzcahnqnJ0jGasZTp/hCqFmJinu8eMGfDvFLgPgqwK56Nu4pK/kipeFQGuOnTOd0LZu7zU2CubY62gJ10NkwZu1z1lajfmq2NkFlVuDxh0XQNn9gZX8mePs9u26+wEYSdeJPmNj/kiAfgaC33/7Zxo6n5s/8gopANatpT9h7JVvOvN8YYJ8EaPmpOKsQ2XOUgCXbPHBeuMAfnBFc4ovyRsYPP2yZj71r+lkoQBD1ifn8HTubPyg1t7XV2+xD+tjSx7ZaHnv2cGOl6t27BLVOml38idgR60Nsu9AESu/cOWr1O2M+zT0B5+dWF4KJLAh5aXT8Gow/KmM1a8yTJlXLuOC9utlDl5+yo4+DoXN3l4Ay/lKuY2vrsT0Db7jVoBcvUjewf2N1Pmrj4Vl7r7pkYxC/TuHPd3eM7mcbQ/izOrYb4M8+Hzn8pr8A2MMQf2aVNDh+++15a8+3zN7GX65f/878/oHx837Pymr+OJR5wh4/vnPnzrvOb/AVAu7oeu89tvdg9Xnji3funLF36maPW3BhZS773eIvqRW10HI0vs8K6Tdm4xsbn9in9bTxbxn/KSePYG/TBi+tPs2f0dHG7Af98cc/mm+wnRrBaN7hN+199KLxn7HzrMPvwoVHRvPQ5h/bZv+G85crV350eGAnf9w1j4O9pc+ff2T+z5cYTXvcvn3C9mi2vfcfghFzG+bfz92pOtL3/D9L62NbsUfCQPMXM7ZbNwnRDyizXZtXktLnXNw+5rFCzjPBXabsCGn9+758voyS66S+8Zgwb7ySNiQq4/j6Mifkpora1Mm34F1pvFKVm0NZDl5DDjyxKrTZEKP18/ry+TJKrtv0Mck8caKZ3GmCzQSCgAoBE1YPjbtqibp9tEwqCPD95je/dqtQCNoxqVJwkMmKm8zv41z9DCZVTK40wcJiBWqZAHIShCO4wMFEmkAFEyIFqlxB5gcBrf/4j/8Y/fM//7O9sDUTM7BjYsihIAL6/ECtJqVKaXsmb/wJFz9d55pTAQhkQcOBP9BGTPoUqCWYQjkT8X/8x390ATto0E99Of/+7//eTVQJHMBHGRNz7NYEFXuQq0Atk0owvXat2QuTiacmwtjHpFTBCCa32CscJAvb0I+PYTttwKT5W5ugEqyFDtvRhQwOcI1N6F3hjB/owm4CFdjOiQ0cTN7BhzxsIR+/II/AE4ffN9RGtK2f7wjn8IFN9Ff2Ar56dS9QS7uzTUFJoBbbFailvcGDOhC8CQO1tOtBONrG3nnVLaVPY3kbDate6Zf8ioLAFP2BPkKgCp9kHOeafsWBTxMQIojPKkp+Rg4NPqxxBJnyU4K8+LUCtcjAj+UXdy2QqpV+9GF+vo3cs9Y3WCsFLX0du9jLE1rGUfoJ/Ucp+zxTD75oZAsEAlsE0cwQ52sEfeVfwkIpNukAL06VuXqYDPSrfqw25qf5BPTUp8Wfm0p+SI88ToKyBARZiaqDNgBr+tEpGz853NhoeF00jPn5vD+e8Uziebtt9huIvQK16IjZCgaMt+zXi276NbrRR3DwJ2sj2onAIn0dn2Lf2Y+sjxM0xO6cQ3iQEqjlGcgfaOETnNhBGe2EfvII0gsH2T5JjZaxmQA+K/n/YuMZvghW8HAShKZtaW/qgz+ct7ZgSwG+cMb/9Xz6v//n/3Tj2HPzU+SCCe8F2AMtQVUCtfgxfy7GM1rPQZ6ByHLvEeP2fOuSbTXz2eeuz6ADu/7y5V/M95s9c5HHiS84DIzGBZcNX/oibaFALc9Bvtz9+quv3LOQ9hCe4M84jwzGYR3CSffzTpP6AN6OWedAzWo+/qzomeHWPGMIFDVbCfAT9ulV8Y3Wkk/exXx67sfGe9nkgf/eMU1DeROoZZWk9TsjteHM3mUu2zvbr81OgoSsnmdVcLMSjxW15PGnVc93LFCLSOMjr/kneb7QYcUeKw9P2rv4X8032SoD2Rv2zn/anucf2jvSpxOzWDFKgJaAGYE49BEY5mfnBKK2tl5ZXmPb3bub5lsfWJ/8tfkq7zgjR7ex8e/mwz9Zf2ChAv3ihfknK3r3/jhMClkReffuKfPVt53e3V1+KXbD+sUjqycrfLdMx0c2ZjR7lL56hR38iqv5ST0BLyrd7JtqBuQegj9gQR6+0gRqGyJeTdiaAEyaLTJylTR0p08/sffhHy0A+5PhwqpZtkHZsHpdtnp/YGPmB9YWb7l2xV93d//ZxvlvDDfeF/EbAvhsodIEjn3tYM54Q6CWbQn+/OfrtjjiC+cD+Ay+QoCeldisvj1zhpXf/HpGAFC3Ey5Qyx+k4UTIPHv2kfnITZPz2spt9fn2UfsSjD8kuz4JdhIYx1eaVcbHzIb2Lz3k/8jmuHXrlI3Bn9sznV/KnDH/PGX1YCznuUqwmG3iTphf8Z8XL8yv+CPAe1aXZhXxzz+/sXp+YH8K/HdmH0HpE67NTp16amPvX62Of7T0heH9yvj4EzMWGVxplM/hk5Xr5849MdzYCoUgtq2Fvn3e+sav7BnDivhTrk34woEvPxQMJ8BN3+lzBK6bLcLx9WVu0TIJ1LaUD5I9sM2dNqFP3WTRujuNayGYyWafuUV+KntG9pToSRntMWRb9LXZ5xvSnklFD+rFIQWrpNpMbI4da1ZL8bLPiyOrUZjk8WcWu8/tq1Mmdokjxz+Pmw4mHVevXnWrBJnAMOn42SZbBM4ICmsylVC1kkVMhAhUsPqRevGSxISOABaTSSZITEyZoDIpA2eCc0zKFCTsqhjtwkQNfmQzsSRQpglpyN+8qDUr2sIy7sVHMIZgB6tssI+TdqCcQxMJdJOPvditVTxMXqmfVrZBx8Fkl8AOP3NlUkr9CaQwCVVwjkmhJqnIRSYBWtES2GX1NTI50YOdlEMH7hz+ZBc66oR+9HK44MVYt+qHbmi5h58UetXbMQ74Qf0IUBF8YoUVJ/XgoB4EmMjDf5jggwV9JeYfBJ3BXYG0efUb7EM/vop/X7t2zbUfNisA860FWQiCgR02pQ58ibq5AJPJJeUezNGl+5SMWjZfBGgL+gLBGvoFzwL6D6sf6Y/4Ave0Nav78EGCrwq607cpRw59zPmEXavt8Sd8nDGEPPjVf/nJOL5EMImxAn38uRjBPwK7Fulz/doFfhkPbBxk5T7jDGMvYyLjggsomx5kYC9BTGe3+RsrCNmL8ycbOxk/ex9WJ6tkw271oC6c4eE/G8OynHv1F/C6Yqs36YM6XJ8xrKkb4yq0rGplLAF/6k+/1QG2rOAkZeUk7RM7+tiMbsYsgpGMY/gB8vmZP2M2q1p5n6C98S/K8AXsdnujWttwSDdp7KBejDWs+mb/YVbp0o5Tz6wxI7Sc/DEX6dQxbivy4eV5QeDyB/M9gvvY6DjGfLQt96xYpd3xMYLOYMy4xbsMf5p346cb9pyyLzvNP8EEH8W/+XKK543jM5wIUlN/6OhHPAexA9zAUfsd07as3H3X/Jt6II8vHo4e+dr1M54d8MCLzcihz70yG3mHwy61M3QEmNleATqC/5SpHzOmI0PPzSm8VuFGzjGjLTR9EyRqAlCIawJCe2lfFY3sPW4/+LWXO301dkWzaTof1yMwurPDn1K9Mn/hZ/4je494ZP3seysjIEaAftPa8+Tk3LEA7WsLkL3yVgZTPwJX/k/RCYZpb1F0sVUBQVHy2btTh4JlTco4x0/xmz9OO33axn+zydzP+lCzbcLdu2/ZGNME25AB3717F+0d/64953etz/Cze77M37brRxO7jdJhgB3s3/nokf2KYrwKdHv7rtlHuxEQPmH9if7TrER89uyRle0FagniEZje2ODdQrXITIM2gGvPVxr7kCksSPscBEbZpuHCBVYmN89H9gW+efMdC9J+6PB79Oj8RDf13bbA6KtXrJbfcDysjCbAh32qJ/hwzf6x1v0Nw5OG/Vv2bHyHmji7Hz48b+170t5FmwAiq2oJFqqe1IkAK4FEfEZHs8IVGbQ38xH7QsACp82K6z1/AftcfGQ3bfv48SkL1jZ/zIbuly83nS7sbvoRYzXBcb5UYqsAAqHNthDU+/lzvow4bzI+MDqwaoLSjZ/s2lj4lVWFOrOHL9subNsYGn8Gqs6zpPRL/iDw2TNWhTN3Iti9bc/kn0w3C19OTvwbnKnzzs6WtR3vV3lfXM5iX8hLV+nnzaGk5n4SqFUjhwNcnC0vt6+h8NFnY/wAoCNWnlMmmr6ps2HcEikbSuX3leX4WphXCa+2Ni3FSfQtVVZxa5ryceGVkp0qa1VaUDAP/+prs+NLMK8EXmMjUu1aAL8jTVS5XZQZwOSVyTUTPyYkvOjzs0Fe9HmRx1TOlPxUGcqZzJy/YD91dFsenB1Pbp64ifaf//Qne5GI/zwR3lU/FFQgmMDECfwIdBCoJQjK5McPCoIzdJzgogn+vslkUHHagmAlEyomfwostvGRnyrDTiZsTFKxFxs5OcQn2zQRxnYmm5yUYRMyNEmEjoOUMibmpBz4GIEUUg5h4iaNhgPBCCaTwocgA6uPkIWtTPjhZQLMJBda5OuEBl1MiqEDJ3TQPmzBoHa6du2aw5F6E2CmnZChOjvjBv7AVgIY1IfVfqTUkwNb5Q8EscgnoMufdrGSNTz+8hdbUWV1JDBF/YR5SDfrPXaBGUE4AmEEzsijvfh5r35GC45gnzpoM3jBAZnUjzpTV3DHL8gnDxp0zKteKTuHLnPD/Hjw7BojS3X3kZficeO89TX6MuMBQR78i75OcId+Q2CNMYvgjsYhVhzSnrQvZaS0HW3ogmT29KD9KaPf0tacjGGcCiaxyvWOBRH54g5/Qzf+8J6NA/eszxDIJdDIn3m9sbEHv2OVPHbwJYhWoMOLz3JPoMv3K/7wjD8/++d/+qesQC14RTEz/TYATprMYTe5m77Yo5rOz7mjf4A/+P7CvrT6/e9/P2EDU073p1FWL8ZjVlG+b2MG9WZM4zmugwD4lo0vPO8JEPIsaTtKbcYO8GZs48/i6MOMxQSFaU+Cizyv9EzAx6gbYz57GnON/a6raGLXYhxBWvyTP+yijviZDSLN+O21CXkcBPZ17F01OfgpJ/aAB4FQVqSCj0lsXnyMtLHNcmzlJQd/YEcd8WfGLxc8Njt2nhEstSCv0cHDuMg2D8jHn+GhPd0+zpaPNH7BRD+gzSjDX9k6Aj5WUfMMAFdkUe8vbUUseNGOsgEc6Afoafrejns+gC/9hIP2uWZ76hIk5j2ML8ddna3eN+wZiH/wCyr/EF6l/uDLCK/7ynJ8LcyyE10tJBMzCCI1gRxWnzbUuE1zNsG4CfESL7CT4NiDB+YvbpsBfo01slWwfCH1T9bWm3aeMJ84Z/3ssjvZ3sDtDWqBKvj3wCDARpCL+jZoNdsDNIE3dRFommCYvxKyoUEYdKxs5GfdrLA8dYrtAPiPA8bjTbOBn52fs/5wwvp6855HQIpg3r17PN8fOP+07mPXTaAWmayU1GHd0eSx/z1/UkUQGlmsdG4CwmxPQTBaNkNLGTK1rQV5bOdQdDSusI+lwaPBBZ1D+AqrdNnSgJXF9rh0B8Fp2vHevbddGxKI5yBISX3ZX3Znp/nzN+v6VtdmlSmrTa1VHK0+GBKfPGELNltZbfgTNGwO9hA+Zfm8Oz81/cjgC/RGlnyj6SPTW0fQZxrMGWsbSrBRUFS6nd9NHK8FVBGbLzbt3ewPzU/+WTHbtKl8cM9n8UH6LJiwMpi9iwlcI4OtS/AV6osfvzE694WFrXre3iYAygpf6NnzmC89+DIt/d46MbPHBati2fv33Lmn9j7y0PrLhs1D+EXgf5o9Td9liwe2uGA/4J9/fs/yz1hdWKXdhVsPgxIsrqfQpqZ2KM0uUOsEjxVzPZTwRF06i1bBhk4jVwWsTkMrQSkCS21av0OWGr5A+lUw07dhqW1muNsjzx5WzSSalMkFL/pMqJh8dAVgupoOebzZHD9ugbgz7Dv6tpuwM9HYfrptP//7cfTV11/ZT22bf3jvkreK5QTXCA6wkonAgg5wZCLHBIxJEtdM1ghkEKiAllSTWspSBxNSP1BLG/U9aFf0MbFjksdEkQlnV7ASH8F+TmRgA3JIOcVPGW2PD6leBGqYiNL2HNATpEE/GHKCCScTTIJC4IpMsHSrr4wGvDRBZXLqB5WQqQAEgUwCBWCPbHgIeDDxJdAJH7qQjY3wkebgUIo7dUY/k3DsIZAEHhyU4Ruc4Apu4KSJe6iL4D+y1F/D8qHu0UFwmUk9QXNsBiOCtKxiYwUaGNPWnKmDurFSDHm0Ae0L7vgd9QUL2ghsoKGMs0tuSudKlS17oM8Eg6AWwRq2FWAFJP2BFanuSwbbZ5O2w+8IAEJD++HT+Kr8kf5Du7lArfETF9CYBy1jHv5Nv0c+/g8/+thzlT5M2yOHgBbjKn2WLwYm79hWRuD2heXhj25/VPMf6BgTNK4gS2MLYwljCH3efeljutinFV2lB3bgt5wan0iHPpAPPuBC/wELHdIvbLmnH1E/UlYjg68O2oqVreCvsUdls6YE6xVUvGzjBO0L9mBCYJ2xBOypA/XBP6DBFvxLPgFPqs8jT/5JUNX5kPH0OZAFPpysogUfTmdzR1u6MdvGanDEXmRgexOMxucbXyAfGr1L0UZsHcKWFciAjjK2Gnlu+NA//Ocg/YK+p+cgOLKdAZjRvmpLnuNuqyqzH5/ml1Bsj8CzQif9kxW1+Acy6SM8A3kWsioeWznoP1y7GnTg0Af3ZfMQ6CFIyepSP1BLc/Dz42b13rKtxDXYmor9SvkSjP1Yn9tzc2T96JWlBOUJuh2xdxzeY9hvl+02eHfny9RTlrItVPOuRW0I/vgBIIJszT0tPQ6+GY2Cb20IgA8rQgm08sdlBMrM5azvbLqgMX/O1KwKbN5vmpWFBKROm7285/MLK1alI+Op5e3tu93YSaCWP5Fq9lSFn3tckVNlCi6qzLqWyWUbCGxqVoi21aEkvwlwNz/jF36NriZo3cdfsA8MWVlsw4M7dnaOG362T7StpGU1qb/6GSx2dhhHNmwspZ6N7uYn87wnTZ6MThZDIn/GxYrOcCU1eLIqmT/qev2aP+hqAp/Uo6lL4yeNv+whpb6yNyQ0dF3+sidh/xWPXnzHhkCzh3cCfAR/mPbVkBM7aWv+eK7xP8ZyVp43K8wdvfnyK/vC7KX18yZYTX3Bjfkof1rHdgPlz/7Qlvg9QfIzthDkHeurj+3dmT8Ms+0+7IsW+urz55wb9j5NcP6h5T8x7MGh+VIDDBSoD+W7cTnMXMF759a4JdFfjmkXbfJyP8NKp2SJNkUT0ws9vCV8pfSh3tBWZ0OJAaHAcR3C7JTI0IaQt+3e2WqFKdk+b189KRnOBvvItcGXpWvZpXvSlDzRp2h8WbqGHt5cvr56pI90n76x8lwbfFm6ll2675Il+i46ySOFdp/tPkHkuo8eX0zI72wYG11iuy+Ta8lVfkqWaGM0KpMcnhg8NBxYY4YY34Q+uECe6JkcMFFhUnZ8s5nYkMfB5OKeBdL4+SILVZggreNB3Qgwcbp62qSHFZP/8A//4CZDTOAITPEP0UySCFoxSWOSRfCLyTcTJs7UQeBDdEzuZjmYiDHJpQ3cpMywL8GfCSf0CqiFk1vJUj4pPArmYLvqw0RRuIEhKzeZSDIphUd8TGIJGJKCIwcTayaiTC4VGCAln9V2yJU8ggT4IrzgT5twoosVS3+yld3s1wu/AkVOyQAf4EzQWJN22tFN1E029aTeBMFIoWHS/a1tK0AgNDwIMhGcot36BJlCebF7MAcvfPZXv/qV++k59lKHP/zhD/aHCH+ZBGnV1jE5yiPgwDYYn332mWtDySL4RqCJNqJdCLT97ne/c/LRAW7rfDAO6j21bz1KR0XRawzO1etstX7KuID/sRKP1YW0D76Jv9H38DnK8AV+dUEfYyzDZzgYm2g3+qDrk/akYiXnOzbOuf5r1/8/e2/6LsdtnftuDhopyZoHK06kODnJPRk+nfv/f8/zJD5JnMSx7Gs51jyQlERSnETe9QP67V6NRqGA6qru3nujyGpUAWt8sYDqWhtdxTwADxtxwTNASfzyUixoefkS44Ik2GuWwGKOJIElHfCRAKSdlbjcwaOLEr38EQFbiWHGNivqGVvEGHJIWJE4hJY9yAufdR/YQQzjBzagm7I0Fqb0Cy+Q4nmnzJE8Y5drh/qVFZfMFfgDXuBJ8o05g/5jjrm7Wk2JV/x6gFWTzJfymXrZxTGb5Mez3U/oUxoeoQS2bximJGyJGez667/+6/CMV/BhJ+FIf0CLL+BHP1HPS7x4fIBWgKIntQ18SariHytqQ5/vmriuSW1N7YZf18GwitbkpzrXwlYHalcsYlO4DloZNpV2Qo2e0azYgG/9LF1rR/9N84eXsIELcU9sErOMO+GEbI5ZEftzmy/57qAxwh/QwmOWrL+JmfjisfjrEq5r4MwYesuudWFVtcUN1z7GLnMzfcAvglj9/F9G/3tbtRt8spjedxNeyEnxT2WLdowu5YMe3hq+p0+vWdw8Y/OU/aHGkpVsNpQMW5I38VmvoXLBD6ZKnxjLqcI2frL+29/yx+eXbDx/ZX1+x2LkJ9tZ1Uqykz943LX+40Wvt+27zLcWO7yQ8d3wM/J79yyzO/sWXyxFspHENhshz/NxN8nhTU+Q8CNhzGMVSChCi/8k2jarQqMcmQpNTBQqYRf5Ynus27RH/TEClGzclie57aVsjyuElay04WO4x2cDx+Rmq+SIoQ3LgAX+0t/85N3/AUFSY7KY9uir4odEY4wjUcYSuqFnLgdsWW1quzbkRfxUc5gSW8Lzbu3Zy8RHHI++r0t20NexPeLHiXyyUofhQDET6SPuG/6SlqltrGznhWzMKWzfffe1zbUP7DvJI7tuk7CNf/B44QVejHbP5vrvbQ7+3K7Rv7B5+Jd2jXtzUDXRvXZvkGq4QaNDMij5nqrzYc7hFskUxervD/sJRdiW4NVJjbGQtjrUQi+7puhJ/fIyWmxATnGTkRVCvQ1Fma6xQqyjjodT9MApV1KBU2yQjC2ZOikIFIn4W8uC6C1R++pBmGRQSq/KLWUNJ5IZWFYnpbG4Rd+gB9IWW/fRk5qFLOlWmdLUnm/ZtTop4SW53oZYR01M0ulGItbHBJl9rm2WjFIpu6SHGwRu2rghePaZzUtowg1XSF7dDDfVL75oqymTG/GSnlNq42aJGypueLiR4gaeRC0JQN28c0MNHTfTYMLNGsfcbHGTShKEZON2H2x7SQKEm2/oSHLus6GPG0R2blZLelM9ukGlnps5eHP8qvdt8IpfiVp84sY03IQahiTtOAcfaIUXN5ZgpWQL+klMkHhABn7IHhIRJGpJcHz44YchQUifKFmDLPqJxCDJSJ77SnIJHvWZtxtd+2z4SmILHdgUVgeuvmWSTGLVKjtxQhxBw4u6PrZkLZu3hTYlan19IJzhQ32EXSTR/v7v/z4kXZRcJVH7u9/9LqyuBauaDZ9I2iCLPlQyGh8ZFyR16BswYK6gL1m1i5/nfdt3rt/yXxPsVmX+RHNwvjVfS/KT5CvPFmWVH/OEErWMT3bG2DpRa/MHP3VnrLLRBo8SYJR8YaB/37FEEMkgnknKmKbfkUfJOISPeuKMOnbqmFvvmA5krO/MTBexTzuPV0DPvR/jc9W/svmA+JKcf/zHfwy2IRsZIYFr8cgcwzZlLmWMkFxGJrrZWcnY0D1B99hHXB1pq5dtzJOoBXfFE88YBT+uIcyJJEBpZ24hIcucxsvZtJHMI8FJybzPlrO3FDeiT2nAAxt4tATzBjHD/tf2h5n3LeFIX7FjL7HCGAc7diVqb5mPJN3xQXpku0pksJJafoT4UmNSSkZqq8iQxTWVawjzMrFEXWlTq+ZISnh03Un5OdcODVvgNb9DLFs7fSF/SKbqewGJWvoWzMAJPo6ZJ3m8hRK1yOU7wVfW34zZsEqcMWH1rKr9jb1sjba//du/DTvXV5LCugYyTph3GQc8FgRZvOCNNbX8fDj1qYRP2ia8VD/UF2pXWUsnekqNC1+XOyYZ9PQpK/efsz6PKzXpDoPW9mV/Dr2xJyaJFAab+tWRARATtfTHqzb+X7dx+7L10+c2h960ufFHixOSPXyfOrNrKs8LJ1nLS774IzAvvuO5pkskagldkqwxUYt+ho1WusZHKmw8im2sdCQJCfYx9Eky8qKs+NP9bXp6M/x8nZ+w240NPNo4po1EI22bno9YIG9a8lQatsuYOOU5ozHRzDi8fp0kefz5fWr/Nnf+DPtIctvQW2/0Nz/5R1/0a90UzsGORPcTW9US44YYwlfmlQ1A4MNUwyMikJeT9WSF6QZX+JHHfLXRu/QRdtoUbHF61cr4h5PU3iEbiDt2tuhzGg+0xNhBZtypg4/7iuhzrJn/M74QLa5oJml769bn9gdVHt920+Ze/tjCL42u2PcQ/uD8wL4Dce1jbPNosTeNfjhRi7VYv3K/yfih7p0iS4q3ZK5O1olaEU0tMWytYGVljbFjNJI5Rjdm9xA/8kttXu4QnaeZfFwpfIys5E+LbUN6SvLVVy16amixZS176yTPXUGyZiz5syYaOGjRkxOx9skakTXXtmXXSnBJ/hZ9wQjZW5JVYA8+SkaObqwvPO9UG3J6t/xfCa6Rn9JwgSPZwg1P/AKiG9y4SopHFkzZpOfq1fjG8GeftZ/6XY/fSvjiz81FWPlhD8fnBunJ03gTM0XXMXh008TNKDeouvEER268uNnhhlhJP260oOVGixtZdhIR3Jhx4wQtN9ilDcwCbiQE9vw2pZvHVjnQ4xN2CANu9PDPb7qxpE3tIalCX/PtzDZujln9RaKVlXbwkJT54IMPAjbIBxfJIMmilWPcZCKHdlbPkcjQTbt8ox+QwTNoqSNRqiQvN7vsJAmQS3/QF9wcQ4e8KQkcj4E/xlatguYY37GNDT3YRTKTY2ylnZt3ki1s1GnDL9p9ndrmKOkDkgAksEmqEtvgQfKHlzeRPCURLryHdOIffrHTv8jCR/wHY/oNmSQmwD4k4kwY+jmHniQKuvC3b20IaA5u4SKmHj6y5NUKc8Y645K5io0YJpFGDOiPG/55y9AqfhmbJN4459EEIQYsDogHYoAXWrGKkpgnlqgjZpDBeOSchCs7MYINxKIJDNcOksphs/MwOuw0rIq0euYaVi1iP/YyHzNuOGc+wQbGP3HFH3lqNuziGbDMPTyzF3uQR4wyVolTkmRzbmAHDvojHefanjFc+Ak9dffMBkr1D/Ywr7LKUpt+3g/e2M1GjGwkhqri9zrRK7bAkusauLAaOvSPiUEHO7izs2EffQk92DEX0M/MwVwDWVHNC8LYpCecJB/Iwf6QGLfj3OZrZavo/DmywDesehVBoZRd8PAHAkphQKk5PYiw+LtmO8+SpQ3f2bA9fOcxXjZWPTOWmHNJmOpaxK8PmAt5gRkYIgedxC1tYEYcM3aYnz+z7w+MJ/VtwOmxxafFJXh8bMlXaJlz+WPJy7aH66Dp0HWQc8YpyXX6ArmSF4xt/BBeYvPYqy5XjtHhzxhNTi51MWTiT/xJLj54EPuBRC0/5eflQ/x8nsQZe40mkoYkInmmrJ6nys/7n38+PiLg++/5fi3dcTUlz9h89tnoBW1b2+qcpB2JLJKuX3zBozWetbnmZ3Z822TzYqSH1oc/2qKA+JKun/2MPzZ8Z/F023yo/dVV/OM59urlVFu2JCckvOTrw4c8PoLn1JI0fmC23LaY4fE4mxFIQpfHJPzsZzzTlscSMAaYI/gJ/os2Fnj5ZApAonTrVLQqtxoXOcE+EtCsUuVFXXYpCIly8OcRBjFe+Gn99vfgIWN4ritxwqMMSLyyIevll/kZPI+12H6RFwnt2N/MoTGOYnyic/U8YqeMGFec57EVdiotyjeHTlJ6GGMlJpm3n2ubUtacM0fFORh7MaDKiCAa/4kj4on9+nVvT5QTVxtTzyOWmKuJPf7Ayx8W4h8BynZGm5iqmds3j0wYv87rkRm8IOzWrdetnyyGbL75/nt+EXjf+pPVtT/avH/fxkbs11deeWIxcNfaeNEZjx6M/ZuzcQip0ty4GZU5idPrsGUte3UyLXMwYMOQsznyGtpgrCyuYcgoKrFJNGVKpzZEpm0ZNc1VWzK3TvKiKkhi55rhjNEa+pymEp8w6XhtkKvBK0cjLJGUa99omHbUKrOKfmX0EvElPMZi6xTwGsIqfJm3qx03eNxMcE7JjRQ3AdxUtWypnmvX7MVPtpKWG7hr1+LUvbk485fEmLANL+ngm0Xdt4UWkxah5aYdn0gugRPHXMi58eeGnUQGyShuyNiUgABPVo/BowQViYKxJK2cCDeV9q0BDPfZ4EeW+qJWFvTcuLETJ7oBxT922nWsNm5QqUMfN4rwQkfiBIz0U1xouFH88MMPAw02cYMKZuxg9sEHMYmrRI5P1BLD2pBPX4A/OsEYvJFDspyErH4STazTj6yAph476UMSDXNt+Ix92ENJckcbbSQtSCihE9spSbb4RIvoJQO6JTYSBn9lLy4iUQsmYIYtrOgjUcuxkl5j+kkAkHRlJSUl/YafJABI1JJEB3+SsiQlwIEYgJaEAf2vvhzTdVHbt+bUrZO8xxUkmy/VJsLTE1GPHrI61P6YYDFIbDLXaVUfcUn/MW6VqGWsQMP4ZaO/iA/GpuKZ8UV/sjOOkUti7hN7jAd6GHPakMOYZf6AD91K1PLirJCgszH0E/pWYwCd2P7U5AZZVmJNGMs21lhpqJiVPOKMeQE9bB6HUOE+kM1zWInP923+Jj55RqjmCvAgIeb9cOzhcEw+RCmN/OKFU4wFkq3aGJfxumrPIrR6aHnJWxhfNkZZTctKSm1gHl6UZX8c1UuxaEt1in6o9PQ8foG+IXnNc1PBlo25F3vBhZ0N+4gT8CYG6Gf4QqLWMOXn/zzWRRt6vC7VIwech5KrmhVzvJJBGbAlbla7HfjmwWPk6rEb8OIPflOGMbCKS+iCv3b94xqo62DoB+tPxQrPZmYsMTbAjX4lvoQVY4Hn8VJPDBK3/DqBWARHHh/FfPq5/QIBzEnmauOP4cQ9ccEfMfheQszwnFzGFn9k4TpIST/QH6yq5TqIb4xh7N1nG+sHL7uGNvSSfUz/Th9X2ZHoYcWhTT+GLatpef4nL098aOdcq0kgxhWg3sbcMXQ8C5TE48OHcZUuCTWSMTyHFXlx00panq/Jc0r5XhSTR7tyaUMWz6p9xeZEnmH6msm8bzYSJ/yE+pH98fqPZ//4j3+wuPjJrq/x2a8kRbfeaA9oBXAtrCx+43M/fZJ11ybGDfMzSVaSifFFXgz7GzdIGt+2+eCuxe4mZjjmZWivvXbHSq4nJD03iVpktW/DzjD82CdvmgZWMmICke+9MblKopa+ZTUkiXgS+yRSI11tojY+T5VELYlD7OWPBK+8wrsTXgu6iCdt9CVJbptqTdcVi03mQErwR2fO4RjnkjFXia3EC6uKw6MXEDwSXyXdTLtgF8sS5aYN+uh/XAnPc3afeSYmarGPuQtMWG2Mjdevc7/CHrHjtowVyhG7jdz0yNuGXHyOz4vefF9JeXSOfVeuxBffoYeELX9w+eyzX5xdZ+xee2S/MvrCXhr8/1nf80eMuEL+xg2SuDxzmvsP+75jc0C65XobGoVurjvUBt0QP21Tty2ZYDVV0GXiy3XUZfK/+7ofAj1+2vBL8WLS8hNjm7TDUT+1lawP7cacL/PcSJA0YRXtjRs838/eQmznugHfx6o8Ftxcr26UwtEyF5B97B7i5aYsrKyyRBY3TtyokUDzK5lIQFKnDRzBmBsuJcDg5Vg3rvELhji2S9r8vt067aykLyeRm0aSjCQDuNHjpi8kL2wlEDee3GhyY0cbe0hoWAzRBh83lMQaeknicK7EH/qEA/K56YQGbNnRRTKPGOUYOezIQDZ66Rfa2MGZHV0kR5FFH3ADrAQidvl+Ed8cMe/xwwbsQx+lTyrjD7ZRR5toqSMJlm60I2fODX/Bjp1ELSuXWd1FjLPRryS1iGcSM8QtdvgNm7zt+EJ/ffDBB+HGHx6wp795FiIru5Q4IEFDvHz44YdhPPCzdJIH6AUX+jjV53X345kQcHHKSj7FI/3GWKIv6D+SbySISPzRR9Y5IYmEFcQBcRsSixbDbMQ4L0FirghyrJ758feW/E9jnFjUPML8QQwx/nn2KXMlY512bAp/fLG2B3ZOwhebiVEiU9czdBLH0FKn8QNtWAHr4hjdyGUcMBcRhyRBWc3ItZCYZOePbchjjOLHx7ZaUXgEhyd+YPfWDY+dy15WJzP/skFz3a7T9A9zoOrjs0ntGcFGS73HVnLCqHU+B4ETP3gJFfiSZOSPMPQtfQMm/JGJRDGPotAGvuzqD/6AQ2ww5/B8W47HNvzQTtztuyGrVQ7jgCQmsci8RXxi/5//xZ/bSlS7xhGf5icrV6lnBxtiEz7mUmIW3TxqRMlW4onY4/pEyRhip595oRwrqMGIcRFi3+KZMYgdPDoCWYw/dHEtg55j7EM3f0yAlj7AbvUdPBrjutYyVqC7qBurVb//npd1XbM5hj+Wnhnujy2Wv7AxzmNGXrG+YmV/XLFIwvG55x4YnlrpdtXG//MW7/xCgJW5LwR6VoqyStJgN5n3bM76JtTfusULRFlFe9/670vDn8UR+uP2LsokmW7c+CHsJE/jT9+vm10vmzwes0VC+YGNHRYEMGf9FHTSZfERDuPfEWLCK64QtVCxOe9+SBa++irPwNcL1yhJWLO6D3uv2tzyol2TX7NY4vE0/BH8zMb0I/PrdviV1GuvfWNxGv+o9PrrX9s8etMwvmd06CLRy8uWXgy4sEo4Jjl3MWitWS5cr4S+vnXrJfPvjn3/eWp9eyX07/vv/8lwicl0fu4eMSJxyIpnrlN85wNDknYv2h5Xy3733St2Lb1t/Ru/47388kO7rnxmePKrRlaA0p/xjwbgd+NGfLYpsfXgAc9k55muMZE/bRpsG9sxVuJUaVOD9e8TGy937ZnZN20O4rEQxAfXJBKgHBMz46tWN9NvvT3YwsvH7tzhe6u9dPQFkuZPwlj4+c//GPqK8chY4w8l7777qcUnv2KLj1qwKdh4id2xhUjE6nXrM75PxKTwjRsPrN9vW0x/HfzEb/osPhpD/cGj7Yj3u2HMK475o8Qts+uazSVXWSX9At9veYFwXBXMH26UCI6P79i9vtWjJK3HKU86UQuIFkM7X7bmgkqdRPepC1WnUvWUqptL/9xysG9pvDwe2C9Mgu6VQ6JR26r65IqOV1uXLHfh3sSRYicdb2l8nWJs8QX9wYP79qXpjl3U4iqLZ2wFbHzZymt2obFvYHuAiPzHj+3mmZtie8Mom7782y3b6l/s01PEJ1q2+8lNFIknbtq5yQQ7boxZGcuLOMJNqt2ocnOkDb+5+VHyihslbsiQU3ODKjnHLLmRVKKGGzvs52b7H/7hH4If3KCTHOBnmeysysRPJXjAhxtP4iKsFNJNq8nlphV8SJCEVWGrJK4Sr6y65AYfrNDNzauSmZThZtbuNkiugDG2sWMPCUFuUHWDjwxkYZuSN/QVSQbswr65t5AQMKGUGgPoQBe7bKOOY9Vz7jdP5+v3OQZPcAYXkmGsqPJJdmRDQzKGDbzZsEUb+IMh44AYISGBDH6mS+KXvoCPVbT/+q//Gp5BS59QR+IWWdB88MEHIZZ4Pi4y6TuttPP6pLeX7QiU5trQo6v4A3/ikL5nIxHE40pYrck4ZiOBCB3XCehCQsj6dZ2MMhrmR34ez3gj9kkYsaKaZxQTJ34L7cavZG1IOBn/6zammW+ZG4ixF2+8ePbeu/a8TZs/sYkdWaxQVCwRrx9++OHZX1hMKZ6ZD5DxjSWaofUrELEDHzRPE7fME8xJ2E+Cll2JMuQQz//5H/8R/GHl4pRN/QH2ue8R5tAZM9IVNy9dXf8aZfMLC/wOK01Xcwp9p4029a3q9i3pGx4D8RfWLyTiuS4y9ll5/7Elr1kpmv4qgP5ljmY+57pAIpGE4Su2k4xs3XJ4CUdkCdtWuSV6Yoh4IyaJFXD4hWHwf/7P/xtWtuIzccQ1kMcI0MYYCHFnfOBC7LGRVGesELvgwQYt/GCJHsYdfyggDkmK648XjDm+WzFWePwF1y5W+75g4+wNm8fpE+KWeZV5lIQw+qABdx5JwvhBLn1HvCADecg9xfmW/pzjnpEE4bffvmm/FLlp16dvDIPHdn07s1+TfGb9+dC+y71r+/vWJ8/a/EYf3zfcvzUaS7JbkogVj99++5bF93v2HYPvGbzglF8T8EgUEllX7LshiZivre4F63sem/K9ybhp89inVj4Mc6F1YXYjwffWWySN/2DtPAbqZfsO87LpuRF2krQkoV54gdV3rFSNYhjyMVnoxGZ0kOyKyd+YJOKrPo9RIFGNDhKK7CSj2UkMkowiCYcdX3/91OL2j+bfVzYGzgwX5iHm/S9DO7z4QNL33Xe/MSz4+X405OFDEpsv2TXkNcNAz1l19h7zMIMV5vz44w2b43mZLY/U+s7mLJ4NfP/s7/7uI/ORX8W9Z5i8HWKF5B2rY+lrEurEy/37z4dY+eqrn5usF432LYsHkr58l3pqtI/t+zIvV+W58KyevRfihZh5//0v7JjrcEw0kqCMCW6t+B4wekYcFS/MCfwRwqYY+wPUd3Y9/CTYq3hhXBAvxAo7fOVtrH2XO8YgL+viWef3DWN7vNKNpzaOPzedv7Jx+UYYmzxK4u23v7Lvs5+Hscg4sqk08N2+zaPGNquWd7VYr5jt4AzeL73EM9YZIw8tnr+0OP994MdXxj9jAgyYKxhXxP17730S5g3igSQtf/jhjywk4VkNz5zy7LM8biWOQWxAJ0numIRvwwbqcI13pSSU2tA793bSiVqcFTBzO14rz3dILc8x6ZbGq4RHqe2YmJR0d7xK6By+zcfQ0E0DVqVth7d0VyM32Nz0smLt+efjTzm5SeCm6Y3X3zh7ya7GPAtPz4Mb/OJu3zbBISSg7JifVrJaN3zxt+QNzz0MN/MrE6DjRoTn1nKjw7NsjXnXwBOtwWZucPjZIDedYEbighswErUkLLnB8olaXOHmiAQUCSqSFtwgkUwgIc6NEtsgxqH1uB/cwLGaDj9J6pGkxn9eVEJCgxt0bjg//PDDsNPOTaxuUElqaIUQN4TEBFgoKQMGYEvcEJP6aTwywIobX7CGD35ubOENN6jhC+QzAU/owiot089NMPzcqMKHbBID7OBOHMLPOFDiEJolNvWtSnSEMWL6SVjii/AgdpayI/UNDOhPYpH+JPlOyTgFF+JWWIFbzi7spT/oX+SxkVQgFkjK0K+MCV4S9t///d/BT2SjQ/1JYow6dJEsRt4f/vCHcE4fqZ9T+/v5jAisEnr0MT+Xpl/pfzYSrN8wt9kcwDinnj5iVR8/y2YVIfQ8d5Nn0PKTffqdxwQw3zEOiXHmA5JZH1syj/HJptlf8UBMEJPEDmOf4p7tSQAAQABJREFUFyAx3xJf35tuklD/62/+JiROP7XV2WGFtiW2tPqa+ZkYJkmr1eEhns0HfkpO0orkVlhVGyzgEhRXluMXybA/t3jkZWmv2NxG3JOU5A8Z+IR9zCno5uV6JO+Izzm23HcF5gzNG2BF/2A7eDN3MG8wdjgGdz1DdQ57hmQwF79pcyxjFbyZv5W8BhP6mHhJN2Lnb6zvsJeYIJGoP8IhAz9zc0wqZ+gcfPwNq2JriL61Hqy5BuIzq2aJT+ZM4p+4DH+QsPHAHyo/sPjjWsScCDbw8UcKjtn4Q4fGDGMJ34kvjS2+S8TvZ3F+Jg7BnXbGJzHH6lxW8SpGwJT4DX9UsHglacu1FB6wJ3ZfsLGF/ezMt/Cin6Qw40K2tGJzCPo5+pMkEonajz++b/6zMvWW9duZzRUPLBY/D3UkGkmwsWKO56ySoHndklN37pB4vWGYXbH5y152eIekT0zSxEcCsGKZFbWM2Ts2Nr+y3ZLntvr1nXfY75iO3CjfoIfu11//xr4vfmyVV2yuedUS969ZLPDLlJ+M/3sbNz9Y+YPFA3piEs+6z2yJCdWNtN0jkkGs5rt3j6Q9L6pjhegj85HvrdfN3pfMr5iAIskck7cxcUXSMj6K4RWjY7Uov7SJz/D84YfbhtmfTDZ/bHhi3yl+MH/vWknyKa4GvXNHSatXbPwzB/AM+mm9it+H2EjEf/nlu8FWVme+8859w/7MxvgP1g8PrF6PzIgvTmMl9bvvfmW4PjIc+dn7yzbfvWgx986q5Ln8d+07rf0y5dF9k3Fm8+h9m0O/NJxYkfmj9f9Ni5nvTM4PFn/cG/AC3TOLhWetP1jJzfesabi1YkYC8v59HhXCqnKe0Wtz3ev3bLzwhw2uP9vxgq8x4bj6C0KrwgI9iU9i8quv7I97zzEWHtl3hSs23/GYkY/tO+YPwabXXrtlf+j4IsQfY9GmPZv/rhnfq4bh62HMFtQE+xnPt249Z3MyffzUdD0xebeM92PrgxdCP/AMWjbsiiXvIrlt2Hxi/XrPxhOPPoh/2GF1POOX1dKM3RdfJG4Cm8UBc3BcoQt2rEhu3YiGoSFRamvVM0Z/8onaMQfSdkBtHWqHBDy199jn++CVw1lY5tqO7eu++jVgW30rYVJq29feY/NPxUt253A+Zby4ofv2m2/PPv7Dx+HLPzeh/JyRhA1f7nmL82t2s8uNLTdV3FD4Dby4AWHnBoukLjcZ4WbRvvRzQ8CNCDcS3FBw88XNMPT8LI/HKyCf59dSf142fOXGkkQUN074zI0NN1S6CSMhkd5scs5NHnTczLFz0xUSEXbDxM0+fGy66TolTLjJIxmLv9hNIoS+5KYQTPAH+4kjVp1Bh0/cbLIqkueckuglLuQjMQV28HEjyc6xeNDDjSe6iCF4iS/kwgemwooYgp8ED/QkEEj0YAu4i5abavoO2dSTLCKpgE58TON8yT7AB1ZOkWgCS8YZOGHHoTb6jhikH0magAt9B55gT3+CMbgIw9Q22ugf7AZ7+hn8mUuoB19igESF7zt0gAH9AA2JWRIbjCuSCCTnkEUbO7L6tjwC/Iz+gfULfaP5neTSF9Z/YWWejVHqGYv0nQXI2VVL+CgGeLERjwxg7NGXxBGxgwwS9iRcdZ3Ymvnt5JYlQK+ZbOKIWHnHxjAySLiyEWPEIzJftXp0M/dgh57XSjxTh35KdGlOIQZ/MDuowya/MRbY+Lk6iVD8ZzUjutg5Jw6RwUpwdsUzNmnjaMsvNRRK6If40jaNR3zGhn/5538++8SScYwxEsi6jhTU7d3EPMEYfcfmU1ZuEg88R5f+DRhbH4NXumEbzw1m3uPXOyQ7ef4wcw/9TNIROQFNw3SDapTkcU5l6zzFS/VzlDxP9/eWiGaO5CVqJDrBgqQ+dfyhG/3EHjEMLsQ73w2Y3/7IHyjsOwAbvhCDzJ/Eo78O0rdf2K9QvrR4U6xzPVPfQ0u8M+bWL9czmTw7mO9xxD1/XGAlOvMw1z140Md1kuctM9cyB3MNxD50MU7QnY6NYPAF+SBRyzMjSZy89NId+87AT/fv2XWQ5OITm2tYvGB/hHoUf8bN4wR4+Q8rb9lI0mhj2MekFAkkfh7PM4t5fikrTZ/adfCWHT+y/iAJzIu/eEyTPQ/cEjNMP27akEjrE37S/aONr3tmB49msHnwHVtd/eNzpvv5YBv2vfba3WCzdauNuWuWpPpZWN3J6r7SxsrHr79+0xYW3LLrOy8kYw49s2TXdyaPlwHyPZ5VxyS13jCf3rZ5710bz8+tElI8u/4Nm3uIH1td/joJM5s33+DXUV8aDc8t54Vqj832+Gxau4ybnOfsO+S7Afu4anCTbAQHC8XMtqmERnilqzVjPY9nyIjYs4pE/M2b/JHuseF0z/rzc+tHjp+a7/yB5Uvzkz+CxGef3rjxo53za5O4cplErTZWVxJ733zDiuwvwh+vbfoL8cKL4ZDFYySIl5deemQ79028s+HM5vcbZx9//J7xvWNzxpR02AZL2cOVKmKZa4tUJEY/++wti41HFisPrZ9ZXfrYVrF+Zeff2bxC0v8Fi5fXbH/DYusd298zG1dZyI2yvY/wm3j8/e/5bkLcfm22MF6e2vd9Vql+Zed3Qhyzqp0+Ypzdvv3UxshLFrN/ZuV7NpYs4Asbyem46v49G6tfWR/ctXn4zPr7vsXBZzYWuO+7buPtTRvPPLbsio3/V6yOP6Qx3km287xo+0O2Qcsfae7c+ZPZzIvNGNN3rT3+Oo2/V9+5c9X6le88L1nc8Jim4f4omB2uPQyBHDd1Q20lma1tUyKzVcfB6DWfTAEu1wkyvNQmmvNYdrym9VqPr3HcFFvjlLsUY+NtrH1X4mFqeHEMSZCP7caBZAxf+LnpCIlauxKzqpYbjZBwtRsun8ASXnzJv2YrYvniD69+vogsvuhzo8bNgc65aWHnxgM9r78WE3DhZuMwbu+tBftJ1HLThA/4jp/ceHKDii9gld5Qggc3QNwUaSULN3jcUHGDCj28Qxvtqcwh2iXqSZCQqCUeiAtuAOlzfMF+8KCNviVZSgIDHm784CMBSSISGvnCMT4TI2zc6HIsHvABX3SBKRhyQ6vkCOfChH6BH90kHUnswAu97w/a2dFD0pw+UyKQOh/nS+DoZSpuwAFsGI8kOrTiytMudTyUqEUffcncQLyrz3J2YD+4YTc3/ySLSLLCR7zz2Av6H5wZA4qBXKKWOuJJiVr6Gt3ILI2PnF29bhoC9A+xydhhDDG2WCnLc0eJUZJpjCGSufQP444/vtE/JEFZUUuy9C2LHZKpxBEymQ+Ib/74F/6AZ/zpxjzKT7RJALLC75rJJh6e2HhGNquyiQeuNdS/aPMnL0Ei/jR2sYcdvcwhxB0vXPqDxSDjnUQh9jB/aAvXMsugMB74IyUJRGioR5/wYHXiv//7v4dfT7Bi9O49e9yCrRaTLF0bl/zehS58ZSz9jyVq+Y7B+MA3nlfqXzwm/+YuiYufkag17BnnxAhxoReZEQvqD6+bficOSMiTUCRBSz9RkuQEa2jsILKp9EJWdaXvVqU2L6r1mPjkMRfXzfa3LRFK7Ol7E3PWe5YAJWYYH2CEr0rUfkyi1vqLuZ4NX3kJHqvSlaiFFz7m0s8tecpL94jhH+yay4vEdM3jWoUccEaONvoBfh5twPjj2kmSVo8pCXFpOrCZnfl5fR20+Pnaxmd8XNVmbEj2RSlJhPzww6uGHyv9f7Qx/9jG+ueWeOIPjfyB8rEly74zrGPizyANiTT8v3fvgc1hHpuY6GJFHStnv/mGx6WQACXpy2rVx3ZNvGU6ePwVixvizkuhhjeSnLwRnpd08Ydt+pjFEryxPv5UGlkkfK2rzY8zS7S/bL9W+Su71r5v3214FMPwxk+2Sfb9/vc8I/UT00OSmlWJj+173J2gw8LSZH5v8+0ds5k/sr1scfKGYRKfxXn79usWy78wG3gx2rcheffGGyS+SdbGpKtwo7x9+7p9B3jXvgv+ucXcq4a3nmU6PFKHklWbxOI2bxwG23XDKNS3gNetW2+azTz/OT579i/+4mvr3/vmNz+N5xmz+B1fEPfMM/xUnkdW8IfF7Wuckt0k87788s2Q6Hz77XsmIz5vlQTt48cPQqzQt2z49cMPVw27d85+85v/Z2XLcDoM+ohF5C99CrMSPT/t//TTn5tPrAD9ynz+yeIyvkTup5+4NyQGr1isfG/3M3y/u259/EYYXyXdU9rog2+/fdtkv2gxezeMUzCz6db6g5XsD22lss3PBo9dVsJmU2nA78svXzcMP7Axyh+tyn/MID5Jzv/hDzwzmGfyPrSx8cjuLX6yPuMPXqyiZXWx/RLBHnnCqmKStPbEZsPoodn2o9GSsGfFOfd2zNW3gj2MB9lnU7Fhdd3wfdXi4W2bX/jewR+Mp8dxibPUFoyb4WM4MmcQfmgRAFaaqg9tz1L68PEQwbGU/eddbsd+vAcvy1j0SPBIAm6aWeXx/p+9H1Z5cMPEF/2XXrpx9q79hJxnTPLTT1ZahFUWdmXiOXhXr9hfzO3FANxAwMPOqpjr15+xL3efhxu2n+xmm4u/bii5keTmnZsDkpN/Zjfev7Q3zCtJ5leFeDtP7ZgbI1af/Od//mfwA99JHlDHzTw3Urpp97ZTB9789JsbI5IMyGIVlG64xIccbu5IbnEDS3KEVZckMEmMtG7c1HGD+E//9E/BRvoSvdyk1W70I7qxBbvoe/UnN4bcYLKFm0/reHRwswk2JBDgRYa/qcRv7PpnWxEGjsgkHqGHn5tXEi7Q/OpXvwoJAXiIJfAmkaINLJUUhAcMiTXsYpdeMOYYe5Q4Ql+a0JXcJUtsQS92YJOOKQ+1gSFYgCn9ClbEHPaw055LuHj78AM6Jb/xh/4gqUEcE7vsxL3wh1866CvGBo8OoX/hYyN2iHniCL6+HQYBkmjMU/QnCSfG00cffXTGakLq+Nk1JUmkf/mXfwlJoRdsbqe/2MO1gpiw/X+M5sb//b9hLNKXjDVeMkV80P/pRr0FZBjfv7bnv+olSPwkG1nwEl//9V//FVYU8pPz8OgFu25x7VqPdZMdntlqJXMWfywgyUqc82gAxR6rG39jvrISkY1ZDLvxEX42Yo8YZVziM394IiEZ/LTnxea2pb93YT823bx1M/jNGGElM0lOPy/mbJujjjmDa8i//du/rb8D/OY3vwmPxsAuP869PpL79MWvf/3rs08tVkjk8zgN6ogpzTWaT+g75LL9yXAnBqAnmd+6ETfEMd9VFFf0Jf1Yu5GkhfpLu/4wRkiych1kV/whi/7BB/oFvfyRgCTovR/tOvgorsyUTv6w8ZE9s5lN36eQje88z/a6+Yq8j2wlL3OzBXmYs4lnaPxG/xPjzLeMC5LnGiP6nqvYp4+wjzkaWdiHf8Q/NMfa0Lzk+CGhxso8VsKyMpTECud37/Lyq/hYClaEGszWp5oDeLnQNYvT121/165lr9v4W2WCzF5kksj8+ONfWN/wx2JeBhZjFCjjM2HzL1j64x/fNx7r19WGXay4/OgjFgPwUqL4Bvv402m9XIzVmzFJfP/+szYnvW9z63sWa6+aL+WVjLRj/6efMgcTS1/ZPM/iiigPezm+efNnFl+v2/eqV9e+xrDghWC8jO1dw4hnGyPvlh3z026ciJjFxCXJyytm39s2X/ALmbdsnPO4DZ5pziKH52yuf9fm89uB/09/+rn1yeuhjZc5ffbZe9ZGMv2ncEzCmOeLkqj79FMezcRzPh+FNla+0o9TfjYu7HMl/YGtPAKC1ZwkrrHh++95vjHPG47+0j/EjPDjpVWff/6W4fSOjbNXLAZictrSdEEW/cVjE27evG33QfxkP66+RB7YIYefzhN3X3/9qo3pPwsxxh8YsEkb58TQr37FH/t5JvWrRh8fsyAaSrDjebr0By8zI67APmI2POLAGr/pA2jxO9oX4wV5PHIDvayoRQ90uY2+/e1v3wvxwgrxH37gmb1vG305ZiULXcQM+r/44uc2Rlj8ctPi96HtET8ff2B39y6PYCNe3jfbXw19F5Ohkrpbgi9jkniNj+c4sz5ihSwr4pkf45j/4gsWJpCUftH6iUQtq5/pq/cszvkDJH8EeRDGhfoVH2yKtY156Kr5/5rtb4Y+iwnkiCsU53HL9/wBPYnDMSocDut6g6bKkB1T+est3I9SdlLua+tUftmAJ1Nl7IdCPfectk71dU4b6j2fRilbp/rqtU6VMacN3p65j2UncvGVL+QkR7ip+uUv/9IuNjfXL33hpoNnnP3v//139kXxlbBqiSQYq3Af2zOprl+zt5PazTs//SPpqtUj3CRzM8sXflZwcMF8/DjerLD6iJVKJOPg4SUb+qkqN73nJREDXtzcUZKgZAUWN2LcaHJjNnSDg38kpaGBH8xUB7+/ueWGlWQVN6iUJK+4mWJvuamkr9mQRxKMEv3oQhZ9XrthK3zEAbIo8YFdq3NI6HADj73a0aM40w2idOILsvAfXnb8VeKUpA03vyRvkctNLHXIBkvd1CMP2/CHdmwjiUCcYRv9pA05spFY5ZibXfjwcaj/xD9nqb6gRD944MchE7VgSB9hA3qJY8aothpMwAw6ZCGDnUQB8wgxR3+gg6RADl/4FCMk85QwVpIDfuzrWx0C6Vxfx7Wh+ubbb85+batGSYyxcpAxyIrU2zY2SbTR1/TrH+zXGIzFZyxeGGOslCV+QhxbPGt+Z0zzaBzq6VPO/djdaCahEedQfvZNEpixz9jgekUcsDNPkGhDP7HK6loeUcBchK2sCIQn/Ize7GQFLc+2xT74+aOgMCL5/G+rF9xx/eLaqHkqlKtz7CV5Cz/zDH6gI43nfb9HgMWYDNmF/u9u2/OAH/Az7fisaxKH/tm7yJt7AztWN5P0BA+ugTzqgus+1/LSWOV7wSeffhLmCJ5fTJ+xcpr5PGBq/Yx/4P3j/R/DtSD0jyUS0UUymrmEuMOOMay87/D/x3/82m6I7Q8FpgfMmPvxpXbDLhL4yGDjcSDh+ueug9gVnvdqfmEn44A/foTrjH2HYvz4jfHAH37546Oug6ym9Y8ZIfZ+Y3+c0GMTeHQV101w85uujYxP9H1s4yfYZ3Mx/cRGfDB+uPZBR3KX8YG+8II9shBH2qS5tW9bzMU9rQzlpVasACS5QuLnxg1erhufO8pLf0jMkGQlgcLPu7/77meBlsQbicHNRmLzTZPLT5jfMTm87IufyfM9kV8NWZzbMy9JSKXw3rz5lvWlPcZltWHbF1+8H2SxahAZ0aZoF3Li83B5Zv81+87wvCW+eIZtfPbmUJJM8kkoxURzfF7s55//3OIu/pqLBBgbJcknkoAk3khSxi0mEFlB+PSp/erBaLD/44/5Pvij7aw4JdFIkpFfSPHrpWgfz/S9d49EK4laklR8L7tiCbQ/Nx9IevOSstcNX56Fv1lxyyMlSI6SNEMGCUNWQbPSFb85VmISnSTC5t14hMG1oA9fiQUS/J988kPoY57TSh/xaAR2vUAsvjTtVbP5Vbv2vRxk4DcxwqrnL7/8eShffJGf6vMYi3sm70eTxTsYnrH56Vlr5wVdJDRfMZ1vhjiJMbRJ1JJQ/P3v/9ra4rNw6RPi2Sf/wQPs7JJu/fWG6bkbMCXO1A9pXApD/GUVq/z+n//ZLPBQvIA7sYJuYllJS8lQyXN6f/3rvw/jjAQ//U6/xv4XVamMcQOG4IcM+oG4I6EaywehXrGH3fF5s2+Gfkjxy2lDPr7Q7+zg+fzz9gufEHt8R4GLxx2w0tweEWj9E30gCf6G9cf/Mvuwi8eX8O6FaBs4gQ39ywpceBhLxAeysFWY5uwaqwtmrYjmHgVjutV+9EStDKEEkGMA4TvC29OPOwKXFYE+Ftt6Hrz4Qn7n7h27UDywL4Vf2pelT+1iYi8Vs5/LcfPEz9v/yla88hO6l20Vx227Ibz/ID7G4Jlnnl0/B43n0/ETxnWix1bU8jgEbY8ePwo3tqyKZKUGyTZuRvjJJEkpknKs/DgvGzdq3ABxk0NSgJt7/OA8vQHzPnHzqYSsbsao40aJXQkK3aQijxs3bi7RyU0leihbN3h0I4x87KQOvbUbPPByI8hNKr6QJGEnbkjKkaxRMgZb2ZW4y928045dyEqxxGewZUMfcrnRxA7asN3jTV1IEJlMbvhJ/GEXyVqfeKSNHd3wsGOj/KvFYw469TXYeJ+8X3PoKclAF31KPBBzxDZ90bLhBxuy8IUyJG9snOOXYoFj0Xr50KvviHf6i76HHrvgh6Zvh0Hgzg93zj756dMwNjUuiQ0STiSM6EP6Ja4q5aex10LMKIbC2LI4IClHHcmltD+5FuQ2+hn5JOPof1YuUkdyLMSRyeR6QaKJawerI7mmhGSUjXdWxpKEgzbYbHSM78BrddjjY5C4+5P9UYEk49b3eU4srENkm+5gg9mBHFZzkgz2cnK+LFq3somxi01PnvJLDkuQgN+iiqNw5l/wZzVomKdtvJLwA88SLvTpbVvN9eM9WyVn8wMJXr6L8LgGPw/rekgc0GdcA0If2jHnHLduxO9nn35mCcmb6/5EZ+t1kFgkuYsvJO21CpZrINcb8Ocaw+NCZDM62HPXQeKUlejMvWF1uGFJv4IlOsCXccf3AfBAPvEIDtD5DX1cT4lRaOkjHg+CXXzvIKyxARpsJLGPbGSBxXn5ZZP3uf04JhtJiJAYIdlDooREGAlREqwkV1hpSwKTRC6JSnaSjCSASLbEBFfUjiwSY48fPxsSYjGxukke8QIo+Gm38NnakEnSURsrQkmqkcR59lmeu0mClp93kwi1xL/JiT+15pEyJPRiwgsZSnBKVq4k8UQSCvnYTPKRlxyxaXUoxySV8BGb48+6qY3bo0esUrwW8GMVLzYq4UhSFTzgxW8SeOjCPrBkBwNsffQoJrawhw06sI3JqiiDvmGDn6Q0q3ixk74jKcg5iU9sjKtpt2bywLvPx8YW/tgYE828RO6ZZ+gXEnAxQR0T+zEpD674RKxgN1iQ/CNrhDz6jOQfdhNn7MTdjRvxZVjwkKCNpY5fCPjAH22KXkHz1VfvmbyfhXgAX7BIk6Xooo3+unbtkeHGIwtiXZSUxw05PEMVX8CbpHS8MsYVxPDiG7LxM46NfLqOhCZ0YBV5YgKcmKzZ8FvPAsZfMCL29McMEtAkvPGfMRLHd8QCnIgv4m5si33EH0KiT3fvvhIwI7bZteErNlBKLjECDvwRgX5l7MZE/N3Q79ig8YBNxIIwg++8b/meT7zSHOhDLq3TOayeLhG1cypa8VOqbod45grplNi59Equ5OkcPWmdzmXDWAm95KlslTGmY6hd+tQ+h14vU/JUp3P05epkR6lEhnhVerkl3n3bpE9y5tArmV5WbZ3sKJUpXl5PiW+ONvmBrLn0SqaXl9bpvFWvZIqfmym+sJP24yboo999hEh7a/RDe+7PW/al4Xl7vtkvbEWtPY/1nbftAn3HLup2AbTVOzyPkGTKS/bln0QtslgxgpwXX4g/AQzCkGdf/lkd9R/2M9afntgbh+1mmlW6/PQf/Ry3JoYk+xglN0jcDFGGG1QzgmNuqMY2aMAKf9nVB+DAMTsb8ti4sYOHc3bo1BYIKj/g8TfB6KGuxmavQnz4jy3IJCHHDSU3qxxTx45saNiH9GBDiqXohQX6oeEcvCnZU5mqo5Rt4MdNMHZp8/ZBKxw4PsYmvdjBsfZD2YI+8KLEBm7YFde1NsDLJtspleDjGPnsyM9tolFJf2MD9OyyL8d7XusUbem8jD9pnc5rfRU9OlI9NTIYWyTO+CNeWGNqfRGeW0mcrATQLw+snYQrP622Dgsr9cKKTquDDhr6FF71J/T0pzUMmgIPckisaeyTHGMlILySRRuJKlbr8kciJfihwQfa2TmmTrHkFZOkwlfiXpvw41xWKgGKHCWrsXPfzUvwemvkoh9czLnN2IPR6pDr5UnPWF2NXmTQF7o+BZnW/+ACPqUNm1kNSl/4OUJ95DGFhnr6mP4J2K/iBzrvS0mn2uBnlTV/PIbf/geb8aUWr6DTGJEl/7mmkATlOvjd97bazITpOgMdiWiwyenBNsnS3Et8B3/N19Bvpg8sSL5Cy4b9jCXw8RvxQB2J+xDbxoOdJGV5SR8bsrCPP7w/sUd3+LHlZQ0dB5us0eNfg9+QPF+PTMlX6fV42jmOSa7ExBc/byfBFZNjJFi0eo6EUkyuxOQsdOLzNpDUsenG5LDKldWQL4SEFCtqldCJfHBtvNKqPcmyLgz02IVekmqs1IwJPf5IERM9Sv4hExmUrCaFv7xxbeU7Eb+Ai8lQn6AVL36T+KRk91tctQp2JL4ibthFEnnzE++IA0nd6GN83AR+oRs7kU878rmMgOEmaRdpOEcmuMdjxXFMDsY2VirHR0uM++89aTkmSRjjBXtjgpwVwy+Gfla8KHG+Sb7FePF9jq0k2R88iI9ViElEVl1HWfRt3JUsV4I7Yuetxhb4wY7j2GcxHjwd7WAPjlevxsd2oCPG/yYePQ/HtNPHJNWJG/zKbeiOMRj7IUeDz/jIHwai3jjusLl+i/cB2A6mlA8esMqaxQY37F6V+4/4xwv6QjEl/+v0oAN/6eeYhL16Fb83yWnk0B5xj2OPOvB9+jQmYImJ+/f5gxqrnONKcdqxT2UNbsgtbemQH+7NkpTtNi9T8lSnczjSuqpErVTBjDAJUf0cpZcrPXPIrZXhQarlydG1YjPFV49VzoZD1M2FV8lWYeMxVV2JL207Bl7eZuyZG68cDqpLdad4jJ17vCRzjGffdm/z3Fhhm/zweva1WfzCK3zRty/93IB+/c3XZ7/76HfW71fCiiRuellR+7q9UOzVV1+zl1HwlkxbUXXXVifZN1G/goRnpnEjwM/5ubHmZvmqPb9WGzfKrNi9Yquu+KkjMqHhxRvcqLEKhRuT87KBmxIArTZzA5XeWOVkqG+4KeOGat9tH5tT3dzk4T8b/cZOP2rHZnZ0spc2yZK8lFb83LSylzZopRs67OIGX3aJVzSSrfpjlthyLHs8bmMYL4mR+uWYNizpn5ddHhWeMh7rerDbskyN+qIknbjhUTjsflv7ZnMAszrJoilbSPqteNcyTZCuFCT72OL4Zg6Kq3oZ91zTmFvYw8rdwjzkfc3pCUoO8CG/WlXha5oalR+UQ3JF06pP9GCrZCR1Q3pEr5K4IXHPXto0H/prpre5Vp/XQaL0AbuvtGMvl6b03NfRhm5kPWS3ayGrYIk7EqHEIxtxBUb4IV8kVzIC4YoW+qENemTwR2/20kY8PLb9zIbdwysR43vYZX+sxMawmSwf9yV5aZt88PWqS/2CJlfneXPHWCmZufY560iS2CxieMT0Akm/zaq5uHIzJmxIxEAbEzg5G0jisWM9cjaywDsmsZA1vsXkE8mcKEfPqI0lOpQQQ1adzI1W6J8+VSJv2gq+mGgEN5LKwYqQmNbK3GiXkrybP5RvrJDd/FFid/Wn6PB1aKqgz4baxD9n6XGjb9hYzat4UZ/H5J3+AEB/7/Y5skjU8bzaGC8szEAWf4hk3ojYUUa9uzKMMWzEwsOH7KrJl5v4zLcP1ca+ptV+/TDtcr4WHZOTTam8Ne/2AUnzmLz2443EaEwCE5v0wTh+23I3Z5GXZCx+148T2UU8yLYYI8zxMflLnxIn6Jh7G46U+TRpXvfztOqaelfGUkqYyvnM3ZYk+dJNq4zfpmw/kx9e9r7yJdNb4+vkj2+f81jyvU9z4SU7U9nU+zrR1ZTCZohf/tTIaqWRbK87V9cqF3r5pWPJmKsvvM2STSn7fd1cx5Ltdc/pj+R7e+eUj1zfLzl9XvfUY+TynLs//s8f7cJhK+pstcldeyTCe/YysZ//nJ8xxhUY8cbDLoL2Zf8ne07t/fvx56/8vI+fAX7yyZ/Ccylvf3fbLmqbmw5utKh7ais8XrPk7Isv8qwv3tb5ttXFxwGgt2/nDwHdgKr/0hvTY3qEbeyySbbIVp33siNwaAT8vC7dvm6puV66kO+vi9Tn6kTfUsqPVH6LjJQ2J1Py4xg3+5/GPw7BG+al1fi3k1Rc8/lc2NQq3lffEF7I3R+NWi82dPv6I0k5v2jbV77kpnokW/WDJbFmjf5ao+MpeO/rz9pOYt++r2nVNcdhs/pQtyasPxBWK0mBUXWcTPG3XvtGvtc/G17Yb8LiatGYlAUy6mJChQRnnbUkYthiMobvItMTMpukzia5I/m19tRZvQ8V2JBc3MjARtm5qb1oR/I7jgKSc+DQ5jsy+K6KDJLamz8IxNi7aJgt4Q8YMt42CfJNPyyhb1wm9oQ/HAe7rE+t5HcgcUzQ13GOGJdUT+Elmrqw+bp6SdE6ZAzxS34qsypRmxOquiHBqaIp50G2FKwU6pRSNkyRLZ5UxhzyU5nook6ypXvuMsiXkpUROqXM2dViw778Q7pSuTqX7UN8e9evFHD9l07JXAIv+bOP7NRO7FWd5MuHOcsge6VAeEkfpWzYR2cqYw75qUzsU53k72NzlteuJryNnZ/G8TNxXuDBy1c4J8nK82j56TirbNmvX7dVA5aIffjEVsVYUveRvcGYN77+6U+f2HNuPwlJXxK52pDBMwqRyZvBrxk/Kx2R/9xzz4fnqIUbazH08lwhQN9pl+Gn0p/cLK9XEa2MOxXbhFUvLycCmte999QtNs+vFEk+pWzI1Xm7Wo8lV3ySn9arvaYc5NX8Q0LKZwkQyp3SnpskUMoG1el8HxWpDMn2+qbIT+UigzrJnyKzhkfyU/37+iPdObm07Ss/latz+SP9uTJcUyzWfrIY3OKriD/J3+KbwZ+1navxgW1bW4VtW/TuJJEUWqiTL4501sMgX0pWRuiUMmdXuwFK+GxLi3Bt1w3LjnQxWRd/Kt3Gv5GsRCel78IqeQKn1uyN2klHJBqvXNmsnt0jxCbp35tpAl6xjy32fOeYIVX9s2Xwbty1y9gSuPzJBLyWMSpih+zNH1mm9MHc1m3sCnESEvBRR4RuvoE5n6RtDFK5OlfXb1PHs6pEbY6RupLgIZ6aehm+pt2pWLcsdnAElU2+YN8g/qdufIWng75V8FaTFEBcAsKCumqThwiXxivYvnJA2Czpz5Cfc9UvhZeweWyJ1ZhQ/e7s8+ufhZ8l3rlzNzxzlscc8KiC55+PL4x6/jl7sYAlZ/mJ8n1L6pJ05QVAvBSK/datm0GWfOcmBtnsvOBJb/+GlkTt559/Zit0NytwxdfL84XAqSZAT9Wu89W73drziEDumperk2+6Huj8PJTra6PLCkz14xSwKdlwqv0xFe85/BFeS9iwjq1aQy0Ga3hKtsqfWpXVdKvxIftKNlTL3IMQO2RLTkwRh8WN3yRYcra11c0hKzrsprg6E4og1oloo5rD1zaNs1JPxmsuv+eSMysqZWGLj8Wy+u3WU8XPjd+Twmsbvdqz0ryNjHWiVoQ5n9VWqzSl8/w5+aJP28J5UpmcijWUtXrElKMvyS/xqY3Sy/X1tceev2RP2hbOk8rkdMuEWj1iytGX5Jf4cm2q8yXyvV7fpmO1l2zJtYW6pCE5lYpQ1ujxDDn6knzx5vjSNp2nJfLFn7bpXO0lW3JtoS5pSE6lIpQ1esQgWs4lU6Vohkrx5ujVNsQ7Vu/5c/LFn7aFc/vg5RIkU1ntyhuGX/jtC2fPPf98eCYtbw3mxV88U/bB/fjCqDv28ow7d34IL9H4kdW4lrRl948+QKfs4g3RPNOQl449b3JZrRtetNETteqaXnYEOgIXAAHNebiSzrfU+XbOWzfx52R7Wbn2tC499/y1esSToy/JT/k4T+klU7RpCf0YjdpT2TlZvi5Hn6sTT62eEn1JfokvbdN5WiJfdqZtOld7yZZcW21dix7RUubsyun0PEN8opFMnftSsks0Y/IlT7J0TllbJx7ZkeMTjUrRci56laIZKsWbo1dbjhf6Ujs8Y+2Sm+oO50llcirWXgqBDpCQqCs7XnU4QdWxqsdqYbz8nKpuUVkyMscnet+mOl8iP0ezTtR64pZjGZ4T3iLnotCO4dDxau9pH7zCLycF7EvtOZ7aOt+vS+rx9rTqqfHd++F1zX18KD372C28lrSVF3zcYbdErTZW07Kq9kUlau2FYA8ePAxvIOYtx3ctUctLRfRMNvHlSl42RiKXyOeXQrwp+eWXXzl7+ZWX7Xz6M7xyunpdR6Aj0BE4RQTG5vCWuR5Zol/S10PpmeoDGIzhOlX2ReJTrJwCXhelvw7lx3nR0xJbh/LpIo3h7ktHoCPQETgFBPxcr+8W60StKnKGekbf7nlE4+tEW2oTzVipi09OvtokI0ejNl9OtavEpzavR8feLtH5Ok+HT7k20YyVwiQnQ22SkaNRmy+hm2JXiU9tXo+OvV3+WO0qJaNEI9qhUpjkZKhNvDkatfmyls7zcAzfEM5qy/GoTjQ5/aU28Y+VwiMnH161czxEQ5vf9rGrpENyvS6OPY9ofJ3oS22iGSuFh+TzWIKQiLXfXfG4g+8tuRpWwfKc2kcPQ11I0hYE79rFTwT5mcrqp4JDAVSQ2Zs6Ah2BjsCpIrA7520sVdumZnOkeZca0fk6Uebq1FZbpnO951MbdS26Wmi9PviGLgOS6W3K2SU6L1fHpTbRjJVD9sHnbWvR1ULr7Svx0ebtEV/Kk56LjrLU5ulKxxcJL2GawyVXV8Il16b+GpKldniHaFK50JX6IKXX+Zh8yRW9Ss/nj9Wu0vOX6ESfK4VHjp82ted4e11HoCPQEbhICGhOzc2HJT9LfGrL8Xs9/hjadaI2x+jrUgWpIGhzdZJRahNNTTl2kWzV00ovG0t8avMXNtWJnzJXp/ZSm2iGSq/3vODlbZ7i+xQe4ed1q06lb9tHh+TVliVdtI3ZNcZfa0eJDhtSPWN2leSlskq0LW2nhheJWvaHDx9urbRt9X+HXklai45c37Rg1mk7Ah2BjsCpIbAz5zkD1TZ2DRKdYz3o4SH1j+miXXiN0c4NkvTmrlVqQ+eh7Rry02N1DLuEyUXC6xB9OzdeS9m8b3zBP9U2xRZxncOL+r51BDoCHYHLhMDU+bTER5ufb0u0wvqqZ1BlTTmVr0b2GM2Q7hqHx2SPtQ/pXopvTG5N+5DNS+OF3iHdqd3elha+VM6+56lub9e+ssf4U90lem9XC19J5pS2VLfsUjlFZi0PuqdsU/mm6Ep5hnQfAq/Uln7eEegIdATOAwJD8+aY7VP5xuSOtR9L75hdpfZj2pzq1vVQZcnuQ7Z5e1KbD2lHqlt2qVzSllR3SZe3p4WvJHNKW6pbdqmcInMJHm9PavMS+oZkHlP3kE29viPQEegInCoCzJm182Y6z4/xXUXyGJGAQXiqQG0HLRObU7uWsiW8ITLRXdKV2lWLc0lmcxtKE5tTu5pl1jJkdJdYU7suE17B1xVeJYx8G3gdfcvYfAi7hFcoK0A4idjCTjPY25zaVeFKJ+kIdAQ6ApcHASbMZN4sOZ/OqX6+LfHN3bYyey02tWvdMPNBqndMvLerlXdMdkt72k/YdYit1ecUr0PYmNNxDLykU2XOrrTO92MLXypn3/NUt7drX9lD/OjUPkST1nu7UptT2kXOVwZ73T7mF9Epoa1gie+Y5TFtPqbuqZgf02Z0n7ftWDYfs5+m9tExbV7pru2udE4t8U1624y/kEzF81zynRPHt8zcOjmXqF8uoxv7q5F8GSxPwog6186RqXUOdaqOQEegI9AROEkEzuP15lA2H0rPSQbGOTVqap9N5TunMO2Y3ep/K/2OwsaKLX1bJ42COvnhETiP/XUebT58zx5X43nso/Noc0UvX2eJ7BTfUp6QDeZjorwxW72+pwvpqLFhim5vu3RcCrxyjguAQpljC6uZjYc328+9bYncOplb07C8oHai7pTtkLE1afIYhqG6BZ+njEUUHBOvqTZXA9MJOwIdgY7ARUKACdv2dN4eczFHf9Br45iBC7Xn/K5RleMLeBlzrq1G5hjNUnLH9Pr2qTbk+JbEK6fP+3Go46l25PguOl45n2v7KeVdEits8vqO9j3VG1EL1BDd0oBJ75w2S2ZtOadu8JpT3pAPh9BxCN0dryGU8/UXHK+puanccEjzXVdzRHmUT6f2mDbPplsXkQPAOpvNB7A1p8JD5Y9ztL3OIXDBwTqPcX0ebXYR1Q87Ah2BjsDBEZht3rzg18SDd0xX2BGYiEAfitOAOwRus82301zsXMdC4BDBdSzfut7jIdDjqhp7D5WOr1dzjxAysR/rr3By5lxdXFbGHsPm84aXYosQ7HiNDMQVRozFY2yKLXQfyYRmtxVfx7BXeB1DdzNQnaEj0BHoCJxnBFYT7THm2/M41x8DJ4UXeB1Tv+xoKY9p73nDC6yOafMxdbfElGiPiRdYPQ29JWvOQXnMwXgO4NkxseO1A0mxouNVhGersWO1BUfpBKiUvxFssyVqUSyhJSMWaeMqYtuxEsVRe9vnsbAKUHW8qjvL43W8AK82d014rPja+i53NCPWMFQfHM3UczgWq0HthB2BjkBH4IQQONo8f0IYnAdTVpfFoybyzgNOsvG84nWs8djxUuSMlwErPrSPs3QKBdixAvw89YCwwuaO13jPCa+O1ThWUJxDvNKunfQysTp0DkiVenVA1bWqFCu19EvRBaj4sH0p2ObwdQ4Zc2C4xmh9MC611fZW+nELjkghnFRWmHKh/K/wd4ukAactvn7SEegIdAQ6AkUELvW1pYjMaTf2y2Jb/wgvlW3cl49aOKm8fAjUexww4kN7PevlpuzBVdf/wkllHdflpeo4tfU9eC2I2RzfMcdkTFpR64Uu6H91ZwQbGgxptV/0DSq2bBc/5VQZWwL3PGm1QfbX8Il2H1/nkLEnRFvsLQ+JbrW9lX7LsNWJZNT0T45/zrpgQ4Mhsp2yhk302FxDn/q2L38qb9/zqXihd4r/+9rb+TsCHYGOwHlAQHN97bVlaZ9a52vZX8vXSp/6uy9/Km/f81q/0SPbOa7ha6VHbrpJRo2+lHeJ8xY7ZDt21PCJvoZ2yLc5ZAzJnlLf4kur7a30qf3ip77FzlTOXOfYcOUkLJnLo4XlnEKnLezirOI7Xm1wdrza8Gqg1txbA7FoKWvoc2bUyLgYK2pz3lfUTQW2QnQn6Qh0BDoCiyHQ567FoO2COwIdgY5AR+AcIdCvh+eos7qpiyCgG/5FhHehHYGOQEegI3AUBKpW1OoCoC9DKocsfrpKL3u6VMYQ7771NXq8XTX6WulTG0r8gZYPIxKd+LFNdTV2ttLU6mmxoYUWe3M2lGQEej6MSHSSofNWHGrpa/S02tBKn7OhJCPQ82FEosvJqMWgha5Gj2yqldtKn9owxn/R5q5aXDtdR6Aj0BE4zwi0zPWBVgwrp3U6do2YAyN0jekZa0/taKVPbRjjT+kPhVetnjH7PV4ttPDlbCjJyNHn6rxNcx3X6CnZnrOjlT5nQ0lGjj5Xl7Nt37oaPSXbc/pb6VMbxvhTep2rzNl0qesAZgzUSw1Q4nzHKwGkcNqxKoCTaTpxvFqmiRZakMB1beJVqXpfBnr7qErUirEG37UhdqCXe63rJGih8lB6SuZPtgHGUo+VlF6mtgLAh4LwUHpK3VptQ4JXclpSsVfbofTUGlmD19pmOzi3c5dlmp8+eXr25MmTs6ch61yLUKfrCHQEOgKnhQDzmE1ko0aNU+RFMEc+efokzpeOZMmvYt7WJfU4d3YOW23I0efqdhTNUHEoPSVTW21I6dPzkq592g6lp2SjtwG6sRj39KLN1ZV0Tm07lJ6Sfa025OipYy4Le0nZHm1Pn/509uSn+2ePH/+wh5QjsOYAO4IZ50KlxwqDNSDPhfFHMLLj1Qa6x+vIsfXTTz/ad7/HbfYfmnqFV1OiNoercFcbJUkOtq06dx4aKz9S+SW2oHuinpLcljbZMMST+hPoBdSKSTKS6iGRW/XIr+XbR8+W0j1OxmxI8ZJzOR9zdWOmteAlWVP0iHffsoTXDlYoWxkrm8U/xY6s/AFB++gZELlXtfz3QlJ/gs0rQtGHOmPSuecfO07ll+j30ePl8kX9/oP79pe7p2dXWh6u7IXkjs0Z/FnjsD7IEU+oW1r+BJMms6w6fjG8VvLX9s3dF2vBBzroeLUBneI1d/+fUHw9fvz47NGjR6P4AEFqtmdSm6AK9PaB/Ps/3j979DDqgE40nn/suJWvlX5M/5T2kg20sXksUvocTeQa/0xllTj20VOS29o2ZHPOvtq6Ghtyskp8rfQlWVPbSjbk2obqfPzV2pKTVeKFfoqekszWtpLNubaczXz3e/joYfhDfYv+nKwcPwna77//9dnjn+7lmntdR6Aj0BE4Nwg8uP/Z2cOH3xzUXq4zpfl2Z65fXZiu/NUv/1Jtkwy2a0PcTODcFzuJRsHcsldWH7QI/sipjtco9h6vOXNOUqyu4PxCxJccWiC2wEjiO14gUN6OidWVK1djknbOoPYO4fqcsstQns9WwwvI1jCtD86nO4tavYqtjlclyiu81tQXOba0Smz9RXPtdfVBgEuYGVYervDHLPty4euqBa8IJZrTfeS06l2K3uPVv3eNo7wOzSS2xjnrKBRfFyG28LjjVdfvohJeNWNRq2rFO1YqtqAbi68rV66dXbn6zNnVK8+MiT1qe8BrobGIY2A2htVRAWhQvp7rF8JL8XXR8KoZiw3dsCa9cHitBstS/b8Sv8av5eCpraZ98uSRXY9OY1Vt6PtVAKTx1bSiNgsCPbASnm3fo3JB0XtYNZ117Y8dcNy3SgQWBmth8ZVOzkCGIwuNRW9dx8ujkT8+UFdklT+1n/Lqy32WYGLlkl+AfdhehPgK/vBhzizhj/BaQvbE8NiLrePVBl/Hqx4vxkjAKzMWSWwwWYb2epFblJ73IozH4A8f4OWd2/J6+olErvtluqiT4NzCawGLPF4LiD+4yI5XG+Tr710KhDb22ah59MHTn+zxB2f3Z5M5t6AeW22Idrw6Xm0ItFGv5642tipqPx1ehO9da6czzgwmamtBCDIzgtdK9zxYUPSWZfJX+nTuidTm63Ts6Ut0aaZc/HOUJb1zyJeMnK++TnQlezz9EF2oH2qUkj3KBUVvWZXz1deJuGSP6Es0oa1EIEUTywVFb1mU81V1nnDIHk87RIOc0FYi8MomHC8oessa+St9OvdEavN1Ovb0Jbo+d0XEavAKOJbAFPgTywVFb1mU89XXibhkj+hLNKGtRCBFE8sFRW9ZlPNVdZ5wyB5PO0SDnNBWIvDKJhwvKHrLGvkrfTr3RGrzdTr29CW6PndFxGrwCjiWwBT4E8sFRW9ZlPPV14m4ZI/oSzShrUQgRRPLBUVvWZTzVXWecMgeTztEg5zQViLwyiYcLyh6yxr5K30690Rq83U69vQluj53RcRq8Ao4lsAU+BPLBUVvWZTz1deJuGSP6Es0oa1EIEUTywVFb1mU81V1nnDIHk87RIOc0FYi8MomHC8oessa+St9OvdEavN1Ovb0Jbo+d0XEavAKOA6AeVXAX+bSg3iZcei+nz4CFz1Wc/7l6k6/pw5jYcfmMDh3LfsjcNFjNedfrm5/JC+GhI7NxejHy+DFRY/VnH+5usvQ1zU+dmxqUOo0p4DARY/VnH+5ulPoi1OwoWNzCr3QZsNgotYndunYsc4VzRhdjXn7yBJvix7Rep/9Me3puXhU+vbwazo1DJQtdg6IWFdPldXKl9J7n/0xhqXna2NXB76949XxIiyIL20+PjgunYtHpadNY1Y0vhSN1+/bW473kSXeGn0prffZHyMrPU/l+/Y+FjtexEePr+35KB0z6Tl4afPjiePSuXhUetq0D0TjS9F4/b695XgfWeKt0ZfSep/9MbLS81S+b+9zV8eL+Ojx1eeudJ4onafx0kLr5x9/jIz0PJXr2/vc1fEiPtJY9DHij6FNz6nzm2+/yPEln72/HJfOxaPS06Z9IBpfioZy320fWeKtsSGl9T77Y2Sl56l8336RY8v3r/fZHx8Cr8FE7ZbyVQ97o9OOO4XzfexLgZf/1Ofacv5u0ZkxNfbU0OR05eqmyprCt+XryhhhlWvL2RvopFxljtDVVZI5ju3DffmRViMjpclhshde225tnaW6txobT6bKauXz9DmsMFt41biwloFg2738Gv5D0+xj39pXZ7SwyrU5svXhFl0lXvvYvFa8Opgqawrflq8r/ZPwknKVqVPJeSVZwrU53ZcfSTUyUprZ8dq4tHOU6t4haKiYKquVz9PnsMJkxVeN+WsZCLbdy6/hPzTNPvatfXVGC6tcmyNbH27RVeK1j81rxauDqbKm8G35utI/CS8pV5k6lZxXkiVcm9N9+ZFUIyOlmR2vjUs7R6nuHYKGiqmyWvk8fQ4rTFZ81Zi/loFg2738Gv5D0+xj39pXZ7SwyrU5svXhFl0lXvvYvFa8Opgqawrflq8r/ZPwknKVqVPJeSVZwrU53ZcfSTUyUprZ8dq4tHOU6t4haKiYKquVz9PnsMJkxVeN+WsZCLbdy6/hPzTNPvatfXVGC6tcmyNbH27RVeK1j81rxauDqbKm8G35utI/CS8pV5k6lZyLLJuoVWPCUwxeOaJyhzdTMaRHMlRmWLNVtfTo9bpr+XJKU1lbNNbo9Wy1rU5adM8pC/XSrTJnH3Wpj2P0Q3Ika6i95i8ztbqHsKrlH7KR+jEZqe4x+pKuVNaa1hpoy7VP0ZeTg64pslr4hnxAxpRtyA+AGmqTjypr9M4pC321utHrddfy5XxKZW3RWKPXs9W2OmnRPacs1Eu3ypx91KU+jtEPyZGsofY+d+0iM9jn1pD2i7in9M+QnimysKOWb8gH+dJaDvkBWENtslVljc45ZaGvVjd6ve5avpxPqawtGmv0erbaVictuueUhXrpVpmzj7rUxzH6ITmSNdTe565dZAb73BrSfhH3lP4Z0jNFFnbU8g35IF9ayyE/AGuoTbaqrNE5pyz01epGr9ddy5fzKZW1RWONXs9W2+qkRfecslAv3Spz9lGX+jhGPyRHsoba+9y1i8xgn1tD2i/intI/Q3qmyMKOWr4hH+RLaznkB2ANtclWlTU655SFvlrd6PW6a/lyPqWytmis0evZaludtOieUxbqpVtlzj7qUh/H6IfkSNZQe8vctZOoFTgqd5RYw1Bbi0OSoTLV0yLL88I3yovSleJRWi+8cDzkB3pybVV2On2SodI1BX+n+jHGF/TxsVI8Ru/tSo9lu8q0PZxbY669BS/xq0z1tMjyvDV8QScfttfQe/npsexXmbYHoAYaW3RLhMpUT4ssz1vFh9KV4ip6ryA5lv0qk+agZ6gN3bWbZKhM+Vpked4q/1G6UjxVj9fJ8ZAfNOTaqux0SiRDpWvaa4yM+R/08bFSPEbv7UqPZbvKtD2cW2OuvQUv8atM9bTI8rw1fEEnH7bX0Hv56bHsV5m2B6AGGlt0S4TKVE+LLM9bxYfSleIqeq8gOZb9KpPmoGeoDd21m2SoTPlaZHneKv9RulI8VY/XyfGQHzTk2qrsdEokQ6Vr2muMjPkf9PGxUjxG7+1Kj2W7yrQ9nFtjrr0FL/GrTPW0yPK8NXxBJx+219B7+emx7FeZtgegBhpbdEuEylRPiyzPW8WH0pXiKnqvIDmW/SqT5qBnqA3dtZtkqEz5WmR53ir/UbpSPFWP18nxkB805Nqq7HRKJEOla9prjIz5H/TxsVI8Ru/tSo9lu8q0PZxbY669BS/xq0z1tMjyvDV8QScfttfQe/npsexXmbYHoAYaW3RLhMpUT4ssz1vFh9KV4ip6ryA5lv0qk+agZ6gN3bWbZKhM+Vpked4q/1G6UjxVj9fJ8ZAfNOTaqux0SiRDpWvaaycjl+4AAEAASURBVIyM+R/08bFSPEbv7UqPZbvKtD2cW2OuPcVrJ1GbCguG7mNtKvAUzhfwZwGRWaQOpWdHuSneV3eWP61cSs+OQwtXpH7NpS6Vm57PpedQcha0P4heUP6hINrSs4A/C4jcMlknh9IjfevSFO+rO8ufVi6lZ+3IgQ5Sv+ZSm8pNz+fScyg5C9ofRC8o/1AQbelZwJ8FRG6ZrJND6ZG+dWmK99Wd5U8rl9KzduRAB6lfc6lN5abnc+k5lJwF7Q+iF5R/KIi29CzgzwIit0zWyaH0SN+6NMX76s7yZyozVWszag725a/RMUqzlBGp3PR81LATI1jQ/gVFHw/EBZxaQGQWn0Pp2VFuivfVneVPKyv1XPmrX/5lLqG7Y/dYhReS2jLGexnbO15tvS68emzV4dbxqsMJKmHFcY8vUChvHa8yPmmr8OqxlSKTP+945XHJ1Qor2np85RDarut4beMxdia8emyNIRXbO151OEElrDju8QUK5a3jVcYnbRVePbZSZPLnHa88LrlaYUVbj68cQtt1Ha9tPMbOhJdia3RF7ZjA3t4R6AicFgIa5KdlVbemI9AR6AiUEehzVxmf3toR6AicJgJ97jrNfulWdQQ6AmUE+txVxqe3dgSOicBsiVplflXiFIO/TwD57hVOKjteeZxU63FSXY8vIbFdCiuVtAas7KOPx22sOBNOKqnrsQUK+U04qYSq45XHilqPk6g6XkJiuxRWKmkNWNkHZd+2ERBOKmntsbWNkT8TTio7Xh6d3WOPk1p7fAmJ7VJYqaQ1YGUflH3bRkA4qaS1x9Y2Rv5MOKnseHl0do89Tmrt8SUktkthpZLWgJV9UPZtGwHhpJLWHlvbGPkz4aSy4+XR2T32ONE6W6IWYalwRW4f6KCzu3m8Akarkd7x2sWKmiG88tSXu9ZjFZBQUKm83PDseJ/Fy7DqcO1AFSo8XgEjPjpeebCsdgivQYZL3OCxCjBoEKq8xNjkXM/i1cdiDqpQ5/EKIcVHx6sZr0GGS9zgYyvAEALMjlReYmxyrmfx6mMxB1Wo83iFkOKj49WM1yDDJW7wsRVgCAFmRyovMTY517N49bGYgyrUebxCSPHR8arCa9ZEbQDfq6VnfO/4tiMc79h3BBu8Sm9PgGmF16lA5u3zdp/CscfrFOzBhlPCa8cWBZXKUwHtROzI4nVCWO3Yd2TcvD1+LJ4KZN6+I0O1o97jtdN4pIpTwmvHFgWVyiNhdKpqs3idEFY79h0ZSG+PH4unApm378hQ7aj3eO00HqnilPDasUVBpfJIGJ2q2ixeJ4TVjn1HBtLb48fiqUDm7TsyVDvqPV47jUeqOCW8dmxRUKk8EkanqjaL1wlhtWPfkYH09vixeCqQefuODNWO+tkStXJSJZroAO07mg9cIbtUHlj9jjrZoRKCU8EKW2SXSuqOuWFHakvHK98jwkklVAEr+6A8hS3Xn8eySzipxA7F1ingJbtUHgsn6ZUdKj1eojlmKbtUHtMWdGNHaovi69i2yT5fHtMm4aQSWwJW9nEKY1E4eftOEq8Vbse0TVj58hTt6WNxuFeI8zTWO155vISTSqgCVvZBeQpbrj+PZZdwUokdiq1TwEt2qTwWTtIrO1R6vERzzFJ2qTymLejGjtQWxdexbZN9vjymTcJJJbYErOzjFMaicPL2nSReK9yOaZuw8uUp2tPH4nCvEOc+1mdL1A6r7C0dgY7AIRE4lQvrkM9+AvLHQ/S9viPQEbgcCPS563L0c/eyI3DREOhz10Xr0e5PR+ByINDnrsvRz93L84nA9bnMPvWBnvMzJIn4MOMPbf+h9eX8b63reLUh9nSVhbxyhM4+gso2cBLqHlsJICOnHa8RgJLmjlcCyMhpn7tGAHLNPbYcGBWHHa8KkBxJx8uBUXHY564KkFYkPbbqsYKy49XxakOgjbrPXfV49bFYjxWUHa/zi9flXlEbIlcR3NaJl5JaeF1K59uc9lD54zYpF5PaJ5H9cfC2g1XX6cJJZR3X5aXqOFX3vYfKH1cLuMCEfr7yx8HlDlZdzwsnlXVcl5eq41Td9x4qf1wt4AIT+vnKHweXO1h1PS+cVNZxXV6qjlN133uo/HG1gAtM6Ocrfxxc7mDV9bxwUlnHdXmpTginS5Oo1eBWeXmjr85z4aSyjuvyUgknlZcXie753AgoplTOLf+iyRNOKi+af3P7I5xUzi2/y7u8CCimVF5eJOo8F04q67guL5VwUnl5keiez42AYkrl3PIvmjzhpPKi+Te3P8JJ5dzyu7zLi4BiSuXlRaLOc+Gkso7rcFSzPfrgcCZP13SqnTDdo2U5O15t+Ha86vHqWNVjBWXHq+PVhkAbdY+verw6VvVYQdnx6ni1IdBG3eOrHq+OVT1WUHa8Ol5tCLRR9/iqx6tjVY8VlB2vi4PXpVlRm+0yRbLKLFGvXCPQcVpDMXYQoOLD9g7bGFquvYPlwCgcCieVBdLeZAh0nKrDIEDFh+0dtmrYOli1UCmoVNbyXVa6jlN1zweo+LC9w1YNWwerFioFlcpavstK13Gq7vkAFR+2d9iqYetg1UKloFJZy3dZ6U4Ip0u1ojaNt9APJ9QZqX2ndt7xauuRHlr1ePXYqscKyo5Xx6sNgTbqPnfV49XHYj1WUHa8Ol5tCLRR97mrHq8+FuuxgrLj1fFqQ6CNus9d9Xj1sViPFZQdr/OL1+VeUdvWb526I9AR6Ah0BDoCHYGOQEegI9AR6Ah0BDoCHYGOQEegI9AR6AgsgkDVilq9/OwYf+15inJTXKv7mLaqh45lQ9DbgJfsxO5afOXjXOUxbZiK17GwAnPhdQwbWnW30s8VU17OMW3oc5fvifJx6Cc+LLBrYlv9itQa+rL2aa3HtGEqXsfCCoSF1zFsaNXdSj8tgspcx7Shz13lvvGtoZ/4sMCuiW31KzJq6L2uuY6PacNUvI6FFZgLr2PY0Kq7lX6umPJyjmlDn7t8T5SPQz/xYYFdE9vqV6TW0Je1T2s9pg1T8ToWViAsvI5hQ6vuVvppEVTmOqYNfe4q941vDf3EhwV2TWyrX5FRQ+91zXU81YamFbVeyVyGl+Ss9a0PStSbCalMtWxrpamXwIhlXZxF+sTOmsg2i8kScmgbgj4+bK/RXUMjXw5RHtqetb71QdnLSrKykD1bT8GGquDa088LwT6xsyayzQrZoW0I+viwvUZ3Dc2sgIwIO7Q9a33rg7KBlWRlIXu2noINVcG1p58Xgn1iZ01kmxWyQ9sQ9PFhe43uGppZARkRdmh71vrWB2UDK8nKQvZsPQUbqoJrTz8vBPvEzprINitkh7Yh6OPD9hrdNTSzAjIi7ND2rPWtD8oGVpKVhezZego2VAXXnn4em32dqAXwMdBzWegavqlOBn185BRnhIpMZYZkUlXOx1wdwsd0D/FNMixhCrr5GDNixScylYm4yaf46LeSz9Kt0vNxnMpK2/c6R6ntQ7qHZLfSD8lRferjKeIVfObD9hr/a2jkf2vZgpdk5+wp4Sy+qWXQx0dOcUaoyFRmSCZV5XzM1SF8TPcQ3yTDEqagm48xI1Z8IlOZiJt8io9+K/ks3So9H8eprLR9r3OU2j6ke0h2K/2QHNWnPp4iXsFnPmyv8b+GRv63li14SXbOnhLO4ptaBn185BRnhIpMZYZkUlXOx1wdwsd0D/FNMixhCrr5GDNixScylYm4yaf46LeSz9Kt0vNxnMpK2/c6R6ntQ7qHZLfSD8lRferjKeIVfObD9hr/a2jkf2vZgpdk5+wp4Sy+qWXQx0dOcUaoyFRmSCZV5XzM1SF8TPcQ3yTDEqagm48xI1Z8IlOZiJt8io9+K/ks3So9H8eprLR9r3OU2j6ke0h2K/2QHNWnPp4iXsFnPmyv8b+GRv63li14SXbOnhLO4ptaBn185BRnhIpMZYZkUlXOx1wdwsd0D/FNMixhCrr5GDNixScylYm4yaf46LeSz9Kt0vNxnMpSe0jUhsaV9BwhQocES1COT237lDW6vfwxOz3t1GOPV07GkM1LYeRtGNLtafzx3HjJR5VBFye2b9U5I4ZsEL1KxzLL4RSshmydapB8UxnkcGL7Vp1TMGSD6FU6llkOTxGv4Csftuf8rrE5xzcHYDW6vZ6hfvU0+x4HX/kYcHrI5gHyfc3Z4h/SvUXkTubGSz6qDKo4sX2rrsIG0at0LLMcTsGq41UPfSu+NZIVC1slJ7arzsupsSHH52VMPa7R7WXPHVteto6Dr3wMOD1k8wC5xM5SDukeEj43XvJRZdDLie1bdc6gIRtEr9KxzHI4BashW6caJN9UBjmc2L5V5xQM2SB6lY5llsNTxCv4yoftOb9rbM7xzQFYjW6vZ6hfPc2+x8FXPgacHrJ5gHxfc7b4h3RvEbmTufGSjyqDKk5s36qrsEH0Kh3LLIdTsOp41UPfim+NZMXCVsmJ7arzcmpsyPF5GVOPa3R72XPHlpet4+ArHwNOD9k8QC6xs5RDuoeEz42XfFQZ9HJi+1adM2jIBtGrdCxnIVG7ZrSD9bGnqjieylch+nRJGp1uJD9dvwuWZX3MVhaErJomso0LPnWKS+t4fccIIpVMXOvjejGBcipfo5rTIm90upH8tHyttCbrY7ZyXOBEtnHBp05xaR2v7xhBpLLPXfXYBco1cHV8jeR1Qk+MKutjtnLc8Ils44JPneLSOl7fMYJIZZ+76rELlGvg6vgayeuEnhhV1sds5bjhE9nGBZ86xaV1vL5jBJHKPnfVYxco18DV8TWS1wk9Maqsj9nKccNLbOuXiV0pURV0TGQrSDxck89cl/xI28J5Wllp9kS2SunLknW82vAVXqU+z7WFulzDiPoJLCMSD9csrNBY8iPX1ueu4X5K8QrnaeUw+1bLRLYtGcc6mRpflx2vUp/n2qbilZN1rFhp1Ts1ttDT565htNOYmBpbAedhNSffMjW+Ljteafz4js61TcUrJ8vrOuXjqbGFT33uGu7ZNCamxlbAeVjNybdMja/LjlcaP76jc21T8crJ8rpO+XhqbOFTn7uGezaNiamxFXAeVnPyLVPjawm81s+oPXnUuoEdgXOEgB/k/vgcudBN7Qh0BC4hAn6+8seXEIruckegI3COEPDzlT8+Ry50UzsCHYFLiICfr/zxJYSiu9wR6Ag4BPZO1DKhHGtSadXdSu9wmu3wmDa06m6lnw2klaCg3z4oD721+t5Kv4Q/wQb7oDz01up/K/0S/hzThlbdrfQdr+OMA+Ee+ss+KA+9tcZKK/0S/gQb7IPy0Fur/630S/hzTBtadbfSd7yOMw6Ee+gv+6A89NYaK630S/gTbLAPykNvrf630i/hzzFtaNXdSt/xOs44EO6hv+yD8tBba6y00i/hT7DBPigPvbX630q/hD/HtKFVdyt9x+s440C4h/6yD8p02ytRGwQG6XnhqbI5z3POlOS30pdkTW3reE1E7oid16q6lX4iInk2KVeZp1q0tka1p/HHixqWCA96+bD90Da06mulT1yd5TTYwIfth7anVV8r/SwADQk5ojGtqlvph1yeVC/lKicJ2Y+pRrWn8cf7aW7jDnr5sP3QNrTqa6VvQ6KOOtjAh+2HtqdVXyt9HQITqY5oTKvqVvqJiOTZpFxlnmrR2hrVnsYfL2pYIjzo5cP2Q9vQqq+VPnF1ltNgAx+2H9qeVn2t9LMANCTkiMa0qm6lH3J5Ur2Uq5wkZD+mGtWexh/vp7mNO+jlw/ZD29Cqr5W+DYk66mADH7Yf2p5Wfa30dQhMpMoYs1eidv0sBjsIxxPtKrFlbA7krfo8PTK9XN9WsmXftqCHD9uX0un98va26vP0x8Ir2I8h3hjv1AzHY3hNUZ3KnCJjkmtSpHKSkDJT6ltKXaM6pRmTmeqY4zzYwIftqT1zyEfGkF+t+jw9Mr1c3zaX3Tk5QQ8fti+l0/vlbWjV5+mPhVewH0O8Md6pGY7H8JqiOpU5RcYk16RI5SQhZabUt5S6RnVKMyYz1THHebCBD9tTe+aQj4whv1r1eXpkerm+bS67c3KCHj5sX0qn98vb0KrP0x8Lr2A/hnhjvFMzHI/hNUV1KnOKjEmuSZHKSULKTKlvKXWN6pRmTGaqY47zYAMftqf2zCEfGUN+terz9Mj0cn3bXHbn5AQ9fNi+lE7vl7ehVZ+nPxZewX4M8cZ4p2Y4HsNriupU5hQZk1yTIpWThJSZUt9S6hrVKc2YzFTHHOfBBj5sT+2ZQz4yhvxq1efpkenl+ra57M7JCXr4sH0pnd4vb0OrPk9/LLyC/RjijVk5tX6ZmHey5Tgjs4W9SKtOoMzpydWVBEIvmaJrlSG+qeWS+uTbRcFrSazovznxkq2SiXzVcXyILehbUKl8y8VXq1rRSyb4qO4QWC2tT37lsJqiG2wkU/h0vITEbnlsvJbuG8XCHPElWyUTNFW3i+wyNUHfgkrlWw6vVrWil8yj4bVMV6znmRxWU3wFL4/VFBn7uqo+21dOjl++XRS8lsQK/ObES7ZKJvJVx/EhtqBvQaXyLRdfrWpFL5ngo7pDYLW0PvmVw2qKbrCRTOHT8RISu+Wx8Vq6bxQLc8SXbJVM0FTdLrLL1AR9CyqVbzm8WtWKXjKPhtcyXbGeZ3JYTfEVvDxWU2Ts66r6bF85OX75dlHwKmG114raHHhz1pUMn6pnCZlTbTkPfHPhpUF1Hnyey8aL6vNcMTEXzqcoZwmMlpB5itjNZdNceF3UcVzC+aL6PFdMlLA7721LYLSEzPOOc8n+ufC6qOO4hN1F9XmumChhd97blsBoCZnnHeeS/XPhdVHHcQm7i+rzXDFRwu68ty2B0RIyzzvOJfvnwmvucbxeUft0JfnKXJYaGjI2J1JtgJZrF5ilNtHkSsnP8VOndpU5upxc6gIPH8bUwjckT/UlW0pt4t/HlpJ85KqdslVP4LWPp8bYyivfcqVsyskstUlWjk9tpVKyoUll6Fw0lKoryfRtgXfF2Mrr5fhj2UNdKrPU5mWkfL6tdFySL5nQiE51JZm+rc9dHo3yccCYDwO5FeeS5FLfldokcx9bSvKRq3bKVj2B1z763KWeKpfCa874CjJXatP+K7V5S1M+31Y6LsmXTGhEp7qSTN/W5y6PRvk4YMyHgdyKc0lyqe9KbZK5jy0l+chVO2WrnsBrH33uUk+VS+E1Z3wFmSu1af+V2rylKZ9vKx2X5EsmNKJTXUmmb+tzl0ejfBww5sNAbsW5JLnUd6U2ydzHlpJ85KqdslVP4LWPPnepp8ql8JozvoLMldq0/0pt3tKUz7eVjkvyJRMa0amuJNO39bnLo1E+DhjzYSC34lySXOq7Uptk7mNLST5y1U7Zqifw2secc1dYUSujAMAfcz7HtoTMkl1enz/2PK3ge9718ZDwNUH9gRflj1MJpbaUtva8RqbHq4a+VvdUupINpbap+lr5PF6tvIsMwmYjzgeD72t/PJf1S8gs2eb1+WPPs1dsSdCQcLU3lF6UP05FlNpS2trzGpkerxr6Wt1T6Uo2lNqm6mvl83i18va5qx4x39f+uF5CmXIJmSWNXp8/9jx7xZYEDQlXe0PpRfnjVESpLaWtPa+R6fGqoa/VPZWuZEOpbaq+Vj6PVytvn7vqEfN97Y/rJZQpl5BZ0uj1+WPPs1dsSdCQcLU3lF6UP05FlNpS2trzGpkerxr6Wt1T6Uo2lNqm6mvl83i18va5qx4x39f+uF5CmXIJmSWNXp8/9jx7xZYEDQlXe0PpRfnjVESpLaWtPa+R6fGqoa/VPZUuJGqDUXzY7g2cKrSGT3pUeh6A4S8eSwMk3Sq9DaXjQM9HK2NJ6EibVKn05AEvX7HQsXSrrFUT6O2jla9WfkonPSrT9kPhleqtPsdw24fsr5ZTSSg9KlO2Q+Al3SpTG4bOAz0ftrfyDskcq5celZ4+YGUflEtu0q2yVleg56OVsVZBhk6qVHqSQ8QW+qRbpbehdBzo7aOVrySz1CY9KlPaQ+GV6q0+x3Dbh+yvllNJKD0qU7ZD4CXdKlMbhs4DPR+2t/IOyRyrlx6Vnj5gZR+US27SrbJWV6Dno5WxVkGGTqpUepJDxBb6pFult6F0HOjto5WvJLPUJj0qU9pD4ZXqrT7HcNuH7K+WU0koPSpTtkPgJd0qUxuGzgM9H7a38g7JHKuXHpWePmBlH5RLbtKtslZXoOejlbFWQYZOqlR6kkPEFvqkW6W3oXQc6O2jla8ks9QmPSpT2kPhleqtPsdw24fsr5ZTSSg9KlO2Q+Al3SpTG4bOAz0ftrfyDskcq5celZ4+YGUflEtu0q2yVleg56OVsVZBhk6qVHqSQ8QW+qRbpbehdBzo7aOVryRz/eiDOYWWFPq2QZ2KWMpBIi9p+vFU8VP5pltagGKF15xLrYfsnOr3VL4hO8bqh/QFqA6E15ANU20f49unfchWj1cfixuEh/BaX20BbpBoI2efo6nip/ItYuuBxiK2T/V7Kt9UvIb0+bG49Fw/ZMOYT1P5xuSW2od0erwmd35JsWsbssGRZA+n8mWFVVYO6lyNxTCHDRJVKhkhmyp+Kt+IOcXmQZ197trBbQgrPxb73LWBrQavPneN49W/d20w8kdD8SW8lh6L2DJogzc0czyVLyOqqmpIX5+78vDV4DW58/Mqd2qHbNghTCqm8iVimk4HdfbvXVkcx/C6THPX+mVixIriJYvaHpWDgA/JFIPKhG7MTs/mjxMxe52O2dAq3Nvpj6vkwGD7EN+YrUN8VboricZsqBSzJptqc+Djw/a9ZKwtmf8ArE4Fr7V3A2C12DkgYq1i6sESeMmWZpvFoFKCVuUYXp7NHydi9jods6FVuLfTH1fJgcH2Ib4xW4f4qnRXEo3ZUClmTTbV5sDHh+17yVhbMv8BWJ0KXmvvBsBqsXNAxFrF1IMl8JItzTaLQaUErcoxvDybP07E7HU6ZkOrcG+nP66SA4PtQ3xjtg7xVemuJBqzoVLMmmyqzYGPD9v3krG2ZP4DsDoVvNbeDYDVYueAiLWKqQdL4CVbmm0Wg0oJWpVjeHk2f5yI2et0zIZW4d5Of1wlBwbbh/jGbB3iq9JdSTRmQ6WYNdlUmwMfH7bvJWNtyfwHYHUqeK29GwCrxc4BEWsVUw+WwEu2NNssBpUStCrH8PJs/jgRs9fpmA2twr2d/rhKDgy2D/GN2TrEV6W7kmjMhkoxa7KwojYIXUmeM0s9FZDAN8AsACgHSIJzpba19xMPhFewYUZFU0WV+E4KLzO0ZGtrd0yVVeITXiUa7Bxrb/Vli35lxJxjcarNwc8BZ4UV5QBJcKvUtuX3hJNgwwJ4TbU58A0wnxJeoc8G7JzQDcX+L8krmXBSeJmhJVtLPubapsoq8QmvEg22jLXn7K2uWxnR565xxAJUC+A1tX8D3wCzYotygCQ4XGobR6RMIbyCDTMqmiqqxHdSeJmhJVvLqO+2TpVV4hNeJRosGWvftbahZmVEn7vGMQtQLYDX1P4NfAPMii3KAZLgcKltHJEyhfAKNsyoaKqoEt9J4WWGlmwto77bOlVWiU94lWiwZKx919qGmpURfe4axyxAtQBeU/s38A0wK7YoB0iCw6W2cUTKFMIr2DCjoqmiSnwnhZcZWrK1jPp263pFrarnEix5F7rsYF3o7j2ac+ckrk7NzFOz52jxU6O4g1WDUqdpReCcxNWpmXlq9rR2+0HpO1gHhfvSKDsncXVqZp6aPScdrx2sk+6ec2vcOYmrUzPz1Ow56fjrYB2te8KK2oD/np2gTHbwJKTey9lkT9+iuoUWW6bq8T0iGdJNue9friQz6OHEhEq+161j0ZdoROvLVvqperzOVAY2dLw8QptjYUWN+urQeOVs2FhYPpLNZapNq3S18klCyh/kTBW2EiqZ4ZQTk1cS6elLdLJZZQstPFP1SJ+XId2UfSx6hLaPhXnHaxuX3Jmwou1YeOVsyNmaq5PNubZcnXS18klWyh/kTBW2EiqZ4ZQTk1cS6elLdLJZZQstPFP1SJ+XId2Ufe7yCG0fC/OO1zYuuTNhRdux8MrZkLM1Vyebc225Oulq5ZOslD/ImSpsJVQywyknJq8k0tOX6GSzyhZaeKbqkT4vQ7op+9zlEdo+FuYdr21ccmfCirZj4ZWzIWdrrk4259pyddLVyidZKX+QM1XYSqhkhtP/n733bJPjRtK1k03vRCdRjpIoyoyk2Z2d2dk51/WeT2vOrz8zZ8fuyIwMvSQaid539xs3sqI6CgUgka5ME0lmAQkEIgIPkFlZT0ciORB9KZVWPiWnPmvaRpY2Xe2oPatDbZOWa5dFaDavmI+J11xE7awLPY7Ee+1ADy1Lbxrrgw7KYA7GDHkGMsW8Vu0Pu9qJtRsMr5gB08UMESPdPTumnT54zfg1c9C9r0O0HNKVIXXN9U2Uj6p/zuA4BbE+9JlbQU9jhjzhTDGvVfvDrnZi7QbDK2bAdDFDxEh3z45ppw9eM37NHHTv6xAth3RlSF1zfRPlo+qfMzhOQawPfeZW0NOYIU84U8xr1f6wq51Yu8HwihkwXcwQMdLds2Pa6YPXjF8zB937OkTLIV0ZUtdc30T5qPrnDI5TEOtDn7kV9DRmyBPOFPNatT/saifWbjC8YgZMFzNEjHT37Jh2+uA149fMQfe+DtFySFeG1DXXN1E+qv45g+MUxPrQZ24FPY0Z8oQzxbxW7Q+72om1GwyviYHBiNoZxziQfabMw07rNPWqp4f4GQNjKpTIqH5NfdGU7lSdr6ft8Yw/HMwUxLU1ifXFSy2H7DTptniF2qvuXimKZU/pT9VZ2039sbKhfJOdlH6/rklXyH6sbEYXB7LPlHkNtU5Tr3p66Ps8rcjMqH5N/WYp/X5dTIevM+d4RhcHss+UeUq0TlOvenro+zytyMyofk39ZuiPbam6WJvc8hl/OJgpiGtpEuuLl1oO2WnSbfEKtVfdvVIUy57Sn6qztpv6Y2VD+SY7Kf1+XZOukP1Y2YwuDmSfKfMaap2mXvX00Pd5WpGZUf2a+s1S+v26mA5fZ87xjC4OZJ8p85RonaZe9fTQ93lakZlR/Zr6zdAf21J1sTa55TP+cDBTENfSJNYXL7UcstOk2+IVaq+6e6Uolj2lP1VnbTf1x8qG8k12Uvr9uiZdIfuxshldHMg+U+Y11DpNverpoe/ztCIzo/o19Zul9Pt1MR2+zpzjGV0cyD5T5inROk296umh7/O0IjOj+jX1m6E/tqXqYm1yy2f84WCmIK6lSawvXmo5ZKdJt8Ur1F5190pRLHtKf6rO2m7qj5UN5ZvspPT7dU26QvZjZTO6OJB9psxrqHWaetXTQ9/naUVmRvVr6jdL6ffrYjp8nTnHM7o4kH2mzFOidZp61dND3+dpRWZG9WvqN0N/bEvVxdrkls/4w8FMQVxLk1hfvNRyyE6TbotXqL3q7pWiWHa39EEvRaZxW2eb5B0QikaTsPHDz8aaqmpSX0br0OXX+fq7HrfRmyPrfFbHcxoEHM9ptgy8cvyy3cmSn2DVJ6w/x04Ir9a+2gYZ+Ry/rJomeQfViHhNVFuXpnlb1+TntFHLTFu9TfIWrz4XkJgdxYTUl9E6IPDrWsISFW+jN0d2CLxy7fhyY+Pl24uCOqnIkp84Xa5dzXPczq0x8LLzxx9bW5c1rr6CjOO2epvkLV59LiAxO4oJqS+jdXTbr8uAIkukjd4c2SHwyrXjy42Nl2+vCeAs+YnTY5yL1j/MpPxJ1Vk9bfJtdTbJ27k1Bl52/vj9tHVNfvptc4/b6m2St3glB7/BwZgdxYTUl9E6VPt1Deayq9vozZEdAq9cO77c2Hj59ppAzpKfOD3GuWj9w0zKn1Sd1dMm31Znk7ydW2PgZeeP309b1+Sn3zb3uK3eJnmLV3LwGxyM2VFMSH0ZrUO1X9dgLru6jd4c2SHwyrXjy42Nl29vUKI2e8QyBXHWAeJ7ndm+jRh2rJmp7YkPtq6N3qXILsBZHy/bz1SdlVt63g7yEp1ZB7wcVJN5Ncb02ruxUe3Z2FvtGUP5MsaWQdVtt/RJ+zNGWvBqh2rBKx8vixWt1vx83N7arra2tqrt7a18DFpIAo+DbAE4Yceamdqe+GDrWnRhOaILcNbHy3Y0VWfllp63g7xEZ9YBLwfVZF6NMb3sUPh4pOqWOGxJ01OfxwDLs7wb8Jp2aQl4TW1LxsfS1q1UfjrBluvVOuDloJrMqzGmlx0KH49U3XJHLm596vMYYHlmdwNe0y4tAa+pbcn4WNq6ofIrTdTSyTGJGx1fgGbzAZ+eOIE612DFPlx/tFMj+KaqQ3il6kZwZRCVi8RLMVOcNNVyf+4N0sGBlajPA6sVdXuqjb17q3379sv5Pp6V4f0uGgsCBYGCwGIR2NzcrKoXzyuSsbYxL8N6hY9991Efqxurv330uv5op/ooirRV1SFMUnURdUsvXiReipnipKmWk2rZ0oGJODC2f+iP4eHX4eLY/kRgyC4u165sqOqxHHFAVXVofqXq8nuwWEnnszo+gmlVDV6KmZZpquWkWjaCK4OoHNs/9Mfw8Ovo0Nj+9AWtXLvyEXRjOeKAqurQ/ErV5fcgX3Llidr8rnSXBHQdDF9Lqs6XLccFgYJABwTkJNvYs1HtFbK2ELUd8CtNCgIFgZcGge3t7WpzzDv6BSGZurdK1S3IvWKmIPDSIJA631J1Lw1AXkdTmKTqPDXlsCBQEOiJQOp8S9X1NLu2zVOYpOrWtsO7wPFdR9Qq4cqEa7Ol5FN1bWysmmwfrGgbwiVUtmr97urPWHjFsOzq56q064rXqvhf/CgIFAQKAgWBZgS6XutT9wupumaPVleiD1axe4XdihWjOBZeMSxXd+bkedYHr5iFMr/mkUlhkqqb17Q+JX3mVux8261YMapj4RXDcn1mUtjTPniFNYZ5ipjsupUXvPJHrA9WsfNtUdeujfxurr6kDsTqe7paHnbBbVETdLWQqr0ZGq/diGUXjFZxrItPBYGCQEGgIBBHoFzr49ikarrgthvvFVIY2bqh8dqNWHbByGL8suULXt1GvAtuu/F8y0VvaLx2I5ZdMMrFfzfKFby6jWoX3JZ9vq0EUdsFuNAQ9QETH4byI+TbkGVD+al4adrGx6F8aGOzq+zQvu5mvMBqCLy6YNR1fEu7gkBBoCBQEGiHwBDXeSz2udYP9X3TrufdpIfGqwtuQ/nQDYF2rYb2dTfjNdR50AUjHdWhfFB9Y6ZDza2CV7tRUrw0bdN6qDFrY7Or7NC+7ma8hrpudMFIx3coH1TfmOlQc6vg1W6UFC9N27Qeasza2LSySydqFQBNrXNd8gxC24EYynYXf9u2UV81bdvel2+LFe3Vtqa+zlU6Vh817eNbl7mFPbWtaR8f1qltV7zWqY/F14JAQaAgsG4I6HeRpn3973KtH8p2X99z2quvmua0ScmU+64UOrN1XeYWGnSsNJ3VunuPuuKliKw6Xuqfpup317QLXkPZ7upzm3bqq6Zt2oZky7UrhEq4rMvcQpOOlaZh7buvtCteisSq46X+aap+d0274DWU7a4+t2mnvmrapm1Idl2vXUsnai1wQw1GaIB2Y9ky8FqGzXUeu3XFa139Xue5UnwvCBQECgKLQKDcd3VHeRnfjcuw2R2h5bdcV7yW5be1a68Nyx/JeQ+sf9bveclS4iOwDLyWYdPv9zodrytey/Lb2rXXhlUcc+uf9XsVfV01n5aB1zJshnDPepmYOhuaZFqmMhjRspDBUBny2p60bfuQzpwytYnskDZVr+rUY2snVJbjs68TPVqW076PTFefUzZDOlNlbfuq8uhUvVqW8muIOrWHrqFshnRqmbURKsvpEzq0raZWb46OIlMQKAgUBAoC4yOg12gstb1O+9f6tu279q6Pzymbqlf7occWm1BZSqfW+TrRo2UqM1ba1eeUPyGdqbK2fVV5dKpeLUv5NUSd2kPXUDZDOrXM2giV5fQJHdpWU6s3R0cXGbWlbYeyqXqtPr9Mj7Ft5dSXVIq8tidt2z6lO1WnNpEZ0qbqVZ16bO2EylK+ap2vEz1apjJjpV19TvkT0pkqa9tXlUen6tWylF9D1Kk9dA1lM6RTy6yNUFlOn9ChbTW1enN0dJFRW9p2KJuq1+rzy/QY21ZOfUmlyGt70rbtU7pTdWoTmSFtql7VqcfWTqgs5avW+TrRo2UqM1ba1eeUPyGdqTLta6eIWqvY5lMONtWpQ8gNpbPJ5hj1Ob7nyIzh27rqtHjZ/Lr0x87tMX1WbDTtamtR/nb1r7QrCBQECgIFgf4I2Gt93++N/t5015Dje45Mdw92X0uLl82vS0/t3B7TZ8VG0662FuVvzL8x7VtsbD7mS0659XconTl2h5bJ8T1HZmi/1lmfxcvm16VPdm6P6bNio2lXW4vyN+bfmPYtNjYf8yWn3Po7lM4cu0PL5PieIzO0X+usz+Kl+SyilkllJ5bNA4gqGwMcdPv6Q2VdbGs/NEVHX92qS1N02rzfF+qH2pzv8mFtuLKBDGg/NEVtX/2qS1N02rztC3VDbs53+bA2XNlARuiH7Qtq++pXfZqi0+ZtX6gbcgv5Hiob0mbRVRAoCBQECgLzCKzrtV6/rzSlZ32/R1SXpui0+dGxEgPWRt/+4L9u2g9NKe+rX3Vpik6bt32hbsjN+S4f1oYrG8gI/bB9QW1f/apPU3TavO0LdUNuId9DZV1sah80VR19+4M+q9PmsdFXv/oZSkPYhMpCbZvKtB+aIt9Xt+rSFJ02PzpWYsDa6Nsf/NdN+6Ep5X31qy5N0Wnzti/UDbk53+XD2nBlAxmhH7YvqO2rX/Vpik6bt32hbsgt5HuorItN7YOmqqNvf9Bnddo8NvrqVz9DaQibUFmobVOZ9kNT5PvqVl2aotPmR8dKDFgbffuD/7ppPzSlvK9+1aUpOm3e9oU63bKIWhW2KcqtAVs3VN45PUFGO6DpUDZifehjJ6QzVDZUH6Z61GlNpxWzk9kUt87aflgzNt9WqdWpbUNlWjdYmnA6UdXZ/FA6Q9iEyjo7GmjofOdDdu2HpgHxUlQQKAgUBAoCa4iAu67zIbte4zUdqjux76s+dkI6Q2VD9WGqR53WdFqxg58p6pS1/bBmbL6tYqtT24bKtG6wNOF0oqqz+aF0hrAJlXV2NNDQ+c6H7NoPTQPinYr8Pqh+TTspDTTCjm8rINaryPnMh+zqv6a9FJvGsT70sRPSGSozbgyTVac1NVoDRaY2P2v7YXXafL62WtLq1LahMq0bLE04najqbH4onSFsQmWdHQ00dL7zIbv2Q9OAeKcivw+qX9NOSgONsOPbCoj1KnI+8yG7+q9pL8WmcawPfeyEdIbKjBvDZNVpTY3WQJGpzc/aflidNp+vrZa0OrVtqEzrSKdEbZNh6kO7VZbKN+m3bdVpl/Ih+0yZFfbybezQNCav9jz108NYO9VJvb9PG2dkUvppHvRPCzU1dgJFrrbJjlExJ2912rzfhuOUHR8nPQ7piZWl9NMm6F+wsLYQq2qyE/Mv6kOkQcqO4uOnEVVzxSndvrDi4FI+ZJ8p8xuY4zZ2TLOSLQgUBAoCBYEBEGhzDZ65ro98rY/5pT7Euh5rhzx1oT2mK1Se0o980D8t1NQoDhS52iY7RsWcvNVp834bjlN2Qlil5NvqRz7oX7Cw1h6rauuX9TWm08poPmWnL14p3WpfU/XZpXzIPlOmgoG0jR2a+/JD2XlZ8NIhUNz02E99nG19X6zQldJPfdA/LdQUwckWKHI1TXa0vaZW3uq0eZW1qW1ny8lTF9p9udRxSj/tgv4FC2srsaomOykfYzpDbVJ2Qlil5H39bWTVZ5fyIftMma/cHLexQzNffig76A3txtVk1vcrJTzjMweyz5QlGrexg5qYvNqLmYq1U53U+3tMV6g8pR/5oH9aqKlRHChytU12jIo5eavT5v02HKfs+DjpcUiPlk2J2pTylFHa5Tqdo8fXxXFOmfW/yQ6ybCqnKWUhe5TbTeU1DdXZMpv3+2LrNK96NdVyP/V9dcfyYW34MlaH6tfU1oXyKqcpMin9qkPlNdVy0lCZrbd9seU2rzo0tXU27/vqjuXD2vBlbHvVr6mtC+WR82VT+lWHttFUy0lDZbbe9sWWa17ba6rlfhryM7fM6mqyY2VLviBQECgIFATyEFiVa71e4zVt8l7lNEU+9N3i61F5TW19qMzWN2GFrOrQ1La3ed9Xdywf1oYvY9urfk1tXSivcpoik9KvOlReUy0nDZXZetsXW27zqkNTW2fzvq/uWD6sDV/Gtlf9mtq6UB45XzalX3VoG021nDRUZuttX2y55rW9plrupyE/c8usriY7Kqtymmp5U39Uzm/XVK71TfpVr6bazk9zsQnJoUv1a+rr949VTlPqY7ptW5XXNFRny2y+CStkVa+mtr3N+766Y/mwNnwZ2171a2rrQnmV0xSZlH7VofKaajlpqMzW277YcptXHZraOpv3fXXH8mFt+DK2verX1NaF8sj5sin9qkPbaKrlpKEyW2/7Yss1r+011XI/DfmZW2Z1NdlRWZXTVMub+qNyfrumcq1v0q96NdV2fpqLTUgOXapfU1+/f6xymlIf023bqrymoTpbZvNNWCGrejW17W3e99Udy4e14cvY9qpfU1sXyqucpsik9KsOlddUy0lDZbbe9sWWzxC1tiI3H1Oc2363yeXgkSMzNi5NE2Zs+230W7xs3teRqvNl2x5bvMa0Y/1qa0flNbW6NJ+qU5khUovXEPqKjoJAQaAgUBAoCIQQyPley5EJ6R6ybJ2+Fy1eNu/jkarzZdseW7zGtGP9amtH5TW1ujSfqlOZIVKLV46+RfllfVmGTWt/1fI5eOTIjN2vtnNrbH9S+i1eNu+3SdX5sm2PLV5j2rF+tbWj8ppaXZpP1anMEKnFK0ffovyyvizDprW/avkcPHJkxu5X27k1tj8p/RYvze/TBlqgxzalLtRR28bmbVvyqTpfNnas9kO6tK6trZCumH1b3tSOeutTyK+UjlSd9SOVV/shXVoX8iulM6QrJa91qXZaZ30K+aVyqtOmqTorl8qr/ZAuraN9qD6mt42s1ZFqR531R9v5bfxjlSNN1Vm5WN7a93XZuiFsxXwo5QWBgkBB4GVHwL/+WjxSdVYuldfreUiX1tE+VB/T20bW6mhqR731ibZ+G/+4jX4rG8ur/ZAdraNtqD6ms42s1ZFqp3XWp5BfKmf1aj5VpzJNqdoP6dI6dITqY7rbyFodqXbUWX+0nd/GP1Y50lSdlYvlrX1fl61ra8vXFbPvl6faUef75PvV1N631/ZY7YfsaJ3vU5ONkK6mNjk2Qnj5tvxjazdVZ+VSecUkpEvrcvpibYR02fpYPtVO66xPIb9ULmQjVReSD5Wp/ZAurQv5FdKlZSFdWpdKU+2os/6oHr+Nf6xypKk6KxfLW/u+LlvX1pavK2bfL0+1o873yferqb1vr+2x2g/Z0TrfpyYbIV1NbXJshPDybfnH1m6qzsql8opJSJfW5fTF2gjpsvWxfKqd1lmfQn6pnNrIjqj1G/rHqnDs1O/g2Pa66l8WPvhrMbJ5vy/L9NH3ZZnHKYxs3arg5fvhHy8TS2t7Vf2yPpb87kRge3u7Ym+7tWmjNkJpW7tFviCwygi0P5OW05tlfudYjGzeR2KZPvq+LPM4hZGtWxW8fD/842ViaW2vil++H/6x9XnMvJ1LY9rpq3tZ+OC3xcjm/T4t00ffl2UepzCydauCl++Hf7xMLK3tVfHL98M/tj6PmbdzaUw7fXUvCx/8thjZvN+nZfro+9L2eJ92LKcTyKi8pjnt2jrVJO/bVr/G9sW32+Sn+oUcbcf2L+bPsmy3wctitUy8fJ/Vr0WMnW87Np6Uq1+KlZaRLnLzfVa/FoHXIvtZbK0HApY03bNnz5SsJc8e2pSc1bYq56e0VRnNh/RR5rfV45h8KS8IrDoCy7rW+3abcNLvIORoGz7rm7T0r1+W7TZ4Wazo8ar4rH4tYuy64tWmXf/ZNKvBt70ovNQu3uSMjfqFvLbNaYf8kJtvW/0a2xffblOf1C/kaDu2fzF/lmW7DV4Wq2Xi5fusfi1i7HzbsfGkXP1SrLSMdJGb77P6NTZeape+5thSv5DXtjntkB9y822rX2P74ttt6pP6hRxtx/Yv5s+ybLfBy2KVg9e+tjPQNxADa9TyACILmRQTu9tiLNeexWspEyjgc67vfcbQmQ3YTulUvybNlnOyB3xWv1K+963ripdihX3yi/B1pq9LwmvGh3JQEBAELOG6tbU1R5YCUowwVQJW26mcprRVGT+lTjeVJ7V52uixypa0ILBWCOiXjfmSMdnxuhL4jmkyhl/qLulC/LROBXxehA/ObMC2dc3Pq1+TZi/VfURXvBQrsCSvGPrYjnY8ccD+FlmYD9r5TIOIaZPR8GhSrA4Yn022qXX3+sA4NSmzeNF8IX5apwI+L8IHZzZg27rm59WvSbOX6lzsipdiBZbkFUMf29GOJw6Ua1cmwjpgZqBMNlNJB7HAODVpwS91l3QhflqnAj4vwgdnNmDbuubn1a9Js+S5WK9Rqy18TZFjxFW5FaGspSrbvF1+YYaMW7GOG5FQNtZsLLxm7M0chLwbp8yZ5UO2SVIftPi07XS+2bIWqpKi6FT96uwYdlJOOB8mRtvYdu0mim27sebWXB86+DynoxQUBHoiABEKyXrkyFb17rvb1Xvv7XUaWf3gp5+2qsuXq+rGjQ1Hlm5s7Kz4s3fvVnXo0GZ1+PBWdfbsHtlpt109fbpV3bu37drcuLF3StK++upW9c47VfXaa7WuUJBuXVafGOKS+LVdPX68Xf3885bs29WjRxvVw4d7q81NuTaGFPTEojR/uRBY2LUeWO2XzKJgxub0CzrfaKzZWHjN2Js5yPe5r6Qzy4dsk6Q+aPFp2ynstqyFqqQoOlW/OjuGnZQTzoeJ0Ta2XbuJYtturLk114cOPs/p6FNgO52hx+JlxReGF0Zb+mz97JyPdbxBYazZWHjN2Js5aHB0wGpnlg/ZJkl90OLTttNriy1roWpOdP/+/dXhI0eqo7IfP/6K7MflPu6h3NP9VN1/8KB6/uxZ9fz587l2YxXQL8hOtjZ9dO3qZjPtxppbE1M7SQefdxoPkGsDlpizeFnrC8MLoy19tn52zsc63qAw1mwsvGbszRw0ODpgtTPLh2yTpD5o8Wnb+deufV1/J1ql+OIUy4f9K0kLHxtFZ+zNHDQ2HUzAme1o22+myyfuerw6oD+HFTomM3cheHXweYgmfr9zdfrtpueiKOh6fqds+/ZSsqWuILAIBJSohXT9538+WP3nf552Zjc3t6svv3wgxOvD6ocfqsqStLTZJ4v/HD++Wb366nb1618flv0VIWWr6s6d50LuPqn+9Kdn1Y8/1iQw8sj97neHxcbxau/ePdI+fDbo9f358y25ed+qbt16Vn399aPqm2+eCfkLcbtHiNodwngRGBUbuw+B6bVepmF4Jvbr84zOmYN+etu0dmY72vab6Xm5kPsI33ibTveQ7WrWb6dzC1cWglePPvdp6vc7V5ffTvEi3a33Xa7PfsczAfObTfGSCr8uU2VSbEbnzEGy2aCVzmxH236zcu2KD80cVoi6CTbctWv/gQPVqZMn5Y/0Z6u3z52rzp17W+4Nf5T7uq+r6vr16gFk7QKJWrro95uynM1vNz0XpXG5ds0jGMVLKvy6+dbtS2Z0zhy019W1hTPb0bbfrFy74qMwhxWi3rWrjqiN6yg1YyHA6EwGYywTu0VvgWq3jGTpR0FgHASUqN2/n8jY/dWnnx53hCtE7aNHm9WxY49cVKxvfe/e7ergQcjaqnrrrYPVxx/TbluI1adCpG7JTfizaTvKJZiievvtg9UnnxwTknbDEbUvXmxX7ETOcpNLlCwkLvuLF1vVs2db1e3bz6r9+/e4fd++ZxKJsSk39tuOrN3eLoStPy7luCAwCgLlZiIb1pcJqmPHjlWnT592kXJ7NuplazblkYfNFy/k++OR/OHuTnX//v057A4dOlSdPnNGCJxT7rrPF8C2PEbxYvNF9fTJE9eOtmVbPAJ8Dx8Qco3xOSN716dX7t+7L0/l3HZEHPcA7EvZXqYTsifAY0B1YP+B6qSc52+//Xb1wYUL1QcfflgdO3rMXRce3K9JWiJsy1YQKAh4CIxxQnomdsthCKrBiFqnXD5IF73pX4Mwvgz7XfqLn2NFKTT5o3hBKqzLtixfFasyt/JmyjrildezIrUOCHCdgBA9dIjlCipHth44AGka9542kKp1uw3X7uDBvXK84cppqT/OWDXhwIENIXepJ6KWZQzkR/nTTUfKKkl75Mg+kdlwsocOEblbE7enTu0XXXflh9+TyZIIe4TILevXxken1KQQWIX7iPLdmBqhnTr9blzWvcyOJ/m5ZfmqWC1qbp09e7b67W//rfro44/lWr232idfGI8fP6kePX5UXZF1c/76178GidoTEmH3m9/8Rp7E+HW1d2OvfF/slev5M2n3WJ6c+LH661/+Wt29e3f6/ZGPfDvJRePVzruw9JjXLr6HeXqGx9N//S//Uv3uf/0vGdfJz10HlvEJRxLbV199Vf3h97+Xp2G+qTaFhN9mzaIlbGPi1dQdnV/Luh40+ReqH9pXSP9Tp2ui9h1Z/+q9d9+Ve77n1bVr16pbN2/KfeAD54ZitahrV6jvbctWYW4VvPJGrcyvPJxUSvEa+nqg+sdIfV8HI2pxtuH7boz+1DrdSIynfizNy8BLJy19Ir8MH8bCc1S9awbW0se1JV5uXo46gEX5y4HAtiNXIUkhal+8gIDdkB9tnBHzs4wvRMhXiFzkIGFpR1q3m0Vtz56adNV6yNq7d7fdUgmPH29O9RDJq6RuTewekKje/RLte9Atg8CyCjW5uyE/7EtE7SzK5agNAku71s+fTm3cXprsMvByUE3wIlmGD0sDvI/hBYFFNO2vfvWr6v/73/9brv375dq/30VQ3rt7z5G0P8i6Of/4hzziPPkOgQjcIxf4kydOVJ999ln1X//1X44I3LdvvxC8jx05++233wqBc0va/6UPAu3aLgivdk7Fpcc6D9z4yBgdOXK0+sUnn1T/5//8HxnXA+67nTHclqdf9I+vTSfjkcOHq4sXL1bfyU4bWXZ+adtYeKU65C5b7qOe/cvwIeXfouq4Jpx45UR19vWz1etvvFG9+dZb7o83kLdHJSJ/v0TczmzlXJyBo/Gg4NUIkROYnIt5wqsjtYzrhoNqgteaTa+ZgetM1OpcWQb4Mz3gYOJEri9tfW8rP+efFKzKJAEjInnZxsQrV3ftyfznKuI172W4pK3vbeV9q7Rn64t5raXfJz7o/OqnqbQuCKwHAtevP67++7/vVDdvPhOitl4O4fDhDXlB2V558dih6vz5o/Lo5QFHIBPp+8Ybh2TpBFlDoYKs3XZLINBTflyWrSCwNghMpmvurG37PdVWPoRb3+/WkM4uZfZ7cUy8cnXH+rCKeMV89cvb+m7liYQ9ePCgEHtHHEkLKbOxR/5YJ8TrqVOnqkNC1nFt3xKijqUNIP0OHz7i6k4IWXvsGGuWE1Fb/9Ht+fNn1WFZFmEaxek7O/CxnV+5qm3/m9ogy9Znfg2ho/Yi81O+T/kDLWN56NBhN2b8Enshy1k8efJU1hN9lqXouchvSRQtJC1/xM3ZVKwvXn3a5/iZI2PnVq4/bfuPfK7umM9D6IjpppzbM5ZFqc/zOnp+Q855Irc3pFJv3yxeKX22rq3vbeWtLfK0Z+uLea2l3+fYeA3R1yF09EPJtJ4MWu7YtfW9rbzxbJpFR65/00YjZOzcyvWnbf+H6GuTjk5ErXZkBFw7qcwdAF95EzjID9HRUTjIAABAAElEQVRX1ZFjz/dxjOM2eKnvuX6ofJ++DqEj198cuS545fZ/yL7m2szpcx+Ztni1ke/jV2lbEBgDge+/f1L9/vf3JOqGiFp5bFaWQ2DtW15U9q//elh+KG4IAbBXfszvc+RtTdRuytqHW/IOip01cAtRO8boFJ1jIdD1up3zPaXfi318Vx059vrYyW3bBi/1PVe3yvfp6xA6cv3NkeuCV27//b5CuBw8tEPUQrBCxh45erQ6KUTtYSFq3YsohaTdlJ+gB4TUfeWV41J3uoKo5RF7jeKEzOOlQocOC1G7n59Y9EQt5vS8m8yYeKlHufiqvKbj914t7aTgsQeyXYhaxq+OqN0WkvaJEK5P5EmW5zvC0VxN7LolDxxL29yTZomosWmF6iBtM65TBQNn2vigvue6oPJ9+jqEjkZ/HfEv93ZuiRPu8SZkrRwzz+z9Wxe8cvs/ZF9zbTZi01NgTLzUta59VbxVz7LTNlhZX3P6P0RfVUeOPevfWPk2eKnvub6ofJ++5ujoRNTScVUe6lAfp0P6xirLGcCmvg7h2yrj1bb/beVT+MXGZzfhlep/27p1xKttH4t8QWDVEHjyZFOWPtiWF4bV69BC1G5sbMnOy4CfV5cvP66OHt0nLys7JD8Y9znC9rXXDsqLKSADaqLW3uSvWv+KP+uBwCp/L1oEY99Tvgz9GXNbZbza3ke1lU/hGhuf3YSX33+Jh3NkCxGxSrhCxEDOHhWy9tVXX63efPPN6p68WOre/XvuJUJvyUuF3nnnnHscGjlt5yLs3LGUrQTN5ve2+3FsbjRpbJqfo80tMazjgo9bQrSzZjDrzV69erXB7foK9NWXX1V3fv7ZRVJPl0tItGzqa6JpdtVoeGV7EBds2/+28nHLcVJ7ULxw2JzX3mHKvWDdkP0PGkgUOt8D9YPiFdC/jKJYX5t8aRqfdcEqp/9NfW3CKqd+lfFq2/+28il8YuMDXllELYJsVpHN17X1p5OVD1J9FEDbIxFrV7fu95lrp60PbeXVD22naah3TlY+7IvFtD3yqbYhfW3Kcu209aGNfMiHVHsnLx8hvFLt2uASk1Vfm+w01Vv9bWRppz6Q17aaUuZv+qjWquKV8t3vSzkuCKwiArxb5OnTStYmZNmDOsqijrDYlvVot6pLl57Ij/06ova11yp5DFPWNjy53xG2vN8k58ffKva7+LQ6CEy/F8Wlct9Vj0vqu2WKlwipXOi7dYwRzrWjfuX60EY+5EOqfQqvVLtc31Ny6muTnaZ6ayMk65cpwcdyCGfPvl69+957jtzjpUHHJZq2fqHQey6iFtmmLbcfTXqa6nPsNHs7a6WtfMiHmA4nKx+kCqO2x4tYu1kPm48gaVn24Pbt2/KSt79Uf/zjH2fup8O2+APsbfkev+VI3tzv6rY+a3+1naahXjlZ+bD39LPAqbZQ635lVnPKx1Ad50jtu9VS+xOSj3lqW2s7TWfaMJlqgy61eKmOYLupkno5g1qFtphWZmW0VdpOuznepMt3TH2gXNtq6styvNt+M6b6Guz/pNC2s3nbpp4b9TQb89plbWo+NK5aZ9OY71bG5tvKqx/aTlOrU/NTvERI5bQ9Mlqm8kOmuXba+tBGPuRDqr3ilUXUDgnWbtdlB2K393XV+gf2qUk/lL+LsjOUv+ugZxHjtg44FB/XD4EteTGJ/P6TnfUJeRkZaf1N8PAhLxp7IZFYz93Lw7iZI+L24MG9Ek1L5O369bd4XBBYNQTKfdfyRmRR90Oj2uEGZHoTYl40JcWsXXv27NnqPSFqHz58WP3w/fcSUXu0euvNt+Qpibfc+rVP5S91LJdAFG7ORtQtBDCP5PMSov2yRALLL9Qu8Ck+yCdro76Q/Znof/TokdvdXFc2RWT2yaP9r8jSC8ePv+JaQUg+lcf7Hzx4KH88fBR1B+KMl20dOXqkOiA69u7d58jIBw8eSNv70/V4lZxEnj6ys2YvL9liWQH/sW/kt7aFFH3+onok9nm52qZ8QUKSqq6oUyNWgMumYEnfrly5Uv3973+ffEvvGJ1OAVfkkJbv7WfV4yePne++//VaxYfdGriMYY2HapmMo+DBGILB48dPZAwfyrILO0se1VZ2fLA5ormP8aIqWYbDEZ2ii6Ubnoie2vah2uYkgtvdd4gM6+o6G9JnN7/kBXk6BrRnLjFn22zYO/7KK84fcNza3BJfHrtzAnuH5DzhXEHuwIGD7lxgTVf8rhGBqJXein8sJbH5Qub2i+fVQ+a1nFeUUZfapnNd/MD+i816/WDGlpbMY7CaRrhLGetKI8s8ZBzBhaVJ6ANt8I35fFjWMT54UM5Fab+fv6A7v8Vnmcvo4BrAMieMMec5/crd1E6ufJErCKwDAumzdR16sB4+ZhG1qcuRDpTKkPKXK7u5Minwiq1INO/rjwpO9C/7gtjUR78/Dhv5sO1c2aQ/qf6G6nz9IRkt62NHdfRNUz64vkwGVPFx8vKhx9i3+Tb+tMGqj502PjXJuv6LUKjPQbxEcALhVHWo7bQykVlHvBLdKVUFgcEQsDft9Q8qVG87Inbv3npJBJXhtwjkbv2jr+vZOJjrRdE6IiBzyF7XmUXlvis+kP53l+Jlzz5XJipsWVzjbI2vf7Z29qiPnVlN3Y9SPri+TCaXYuHk5UOPsWzzbTxpg1UfO218srJcmytZiZbrMzvE5GvyKMT58+cdSQuhyovEKDtz5owjbHicHuKVPbZZvCCDeGv8u+++O30hGS+8ql9KBDlU24Zcghy+KRGdF7/7trp48aKrcy7KFYDvlCPiyy8++aT65S9/6cin57L26vc/fF/946uvZNmdyzF3HJn15ltvVu+ff9/5cPTYUUfe8aj/V1996QgtSyhCfilxeO7cO873kydPunV49wnJqxukJKTs3bt3qsuXLleXr1wWchTy94EjC/3xB5ehr11qQ32y6QshCJ88hch+YIuj+U0hAyE56+/rWbFjQpAzhm+/9bYj8U6cPOFIPMaRTUnCBzKGjOPVq1eq7779rrp1+xY3AU6nnRez2iu33MbHH39cnTp92umFuP9e/lDAfvr0GfeHgnoM9rt5Kgqdzrv37rpIYAhJXobH7sbg/n3Xlnn0448/OnOKVcoPmWiOpGWO/eIXnzjS84nMzWvXrlXffPtNdU/m/2tCZL7x+uvVGVkm5NUzr7pzYe/kCSOuFuh3eEi/nz17Kng8kj9g36u+Y15/953TiS8hnHHUzXU5vz755NPql//0T44kpk+Q1sxT/jhwWnBih5x2ZCo2xR44cC4wF4mQ5nx9LASxbq/Kefz2uXPVWTmnwZo/fOyR+c4LBSGDmc+HDh6qTp857f64cUCIb72fUx2hNIlpqMEIZfgAriFf3NhPKrWeqevLa11b95z+iO2Qrq52Qrq6lqV88PuD7NDXLvxO+aD9crYzZbXN0GmTnzG8bLs+/fD1p/rXx05Kb5u6lA+uL3yIEHJsTl4+dr5d6/JWn1PF0orJapX7irTOL08d6yCkZPy6LnZ8HWMdF7zCyDaO2WTyautGeRXMTD31ma2WJxbtf+SEicp37MK64dWxm6VZQSALgclvMn7LTHZ+QNf5ffvkxTMHePM0L5+oz8Q6ApcoXH5UITf0GZrldhFadwRk7pT7ruZBdF+L7qPgZdFqvOqAmREyWaumc95T31nPkA25HsssceQOEXfsEJQQss+ena++/OLLClISQvbV1151pA4Rinfu3HHX8UOHDiXd4VqPPqL3zskat7/6519Vb0v6xhtvVJB+lqiF1ILI+lnWR4VYeyrkIgQd0YvbQjzJt4yzdfjI4eqjjz6q/v3f/8MRSkQ5fvnFF64dkaPaJ98xiKw3xe6v/uVX4ss51xeIr5rUuuQIs+cSFVvtqS0RzchL0yDkfvHJL6p/+ZdfOyKRKEqiDHWD1II4++GHHxyh/UQiN+k3OBFFCb7uv7ivc0pT1UEaKrP1obwbvkmFzassJKAj7oTMBs/YVk8D+X5GQNr45KGL2JRxPHniZHXhwoXql5/90o3hG7KO8T6iLaUO/xlD8GAMf/rpJzdvIAnvCZFKOXtqe13G59e//o1bZmO/kIPIfyFjS9TqO++8W33y6afTMaAMP4kAhYSFmATzt98+5+aYLuHw+ed/r36W+YpMCCPfH8aO/YREsX726WfVv//Hf7j5Tj8O/+1vsizETUeyQnJ+JKTye++dr85L9PkJIfGZF/yhQzfFn4heMLlx44Zb+/fmjZuub25uyzk3t4l9ZgRR3Nj4z//8z+q+kM4/CenKOULkNuPKHxDOCeHKeYhd/OYcJsL8T3/6k+ioo2shmfkjiJ5vr4rvv/j4F9WFDy649vwRpu63ELVyrj2TnRT/2IgYpn5dtqinkQkQle/YYcwMrbOjK52b1deCunm572qGseAVxqjxPPBOFuR3rqABnZ78nAQK9K8JjcbnWjcXOP3NYoNIhPrqJprR3tTHkA7T3F2oFoFXk5/Wp675UF8tXjk+hHRYf9z45yiyjTrkF2DC3RD5dtrgpbK+jpnuJitnJHsdLMhMLx9L44LAohDYkMf79u/fkpt3HjPkJn5LftBuyyOCVfXBB/tklx/l5w5LGY+WbssPtqfyw/uRvGiMx1nrqKhF+Vrs7CIE5EI8xrUYnfp9MzZaoXsA33ZTH0M6rN+uPxMlTbpsu9y80y/CY+j2fQj11eKV40NIh7Xj+pOjyDbqkF+AiQ73XTWawne5x8MhgyAuIZzOEK0nEXWnT5+qXhHSimUD2CCcbt686UgyiMzURv3rEnV47p13HLmn0ZLogziFPITkPCDk52Eh3iCbWB6B9PnzZ9VBKYN8ZecxeiYdhNEBiSA8KksYbMgb6Le3T8jLr+7IOugnHVH6XB4vh2TaIRtr4g17J0+eqt4Vwo/oXqJl2XirPY/FO9JMSD8eJ4eYJioTkgxS+P3335d271SvyKPgNTmouG07EhFdtc/PnV+ff/65W8YBrJ4JSUqU4hjjj87ak/nzEZwgWCH7eIz9/PnzdDe40ScweCpjAckH4ck80A0ij3H84IMPHXl54YMP3JxgHMEachpPIPR0/FjCoB6HLTc2jCEvNEvhQNvT8keCs2KLKM5tuX/AN3SdPnVaSNo3HHlej20d/b1v316J7j0p/skYii9nz77mokwZjyNC6v/0022HAX1RvFI+MBfBzEXKyh8neLEe9tw8lbkBpu78kPILFz5wxDF/xDgoEagajayRtMjp8giQqfQDnCGhiaqFXIbQ9jf8k+GTc0Rexipziz+c0JY8hOszOTcgal955YQrxyfwJyKWc+aw2OLcfe21s46kvi0RzRDbYEj5JxIlzB8fIHlPSRnnEmPOzvnA/IfUpR/oZn7XNnxPhztmHvvjonMbK36db1llk3LJSl9j9+NFmPHx0v6r100++O21naa0XwR/o/bGTEN9XVe8msZ1CByb8MrxIaTD+mbnly0nHyVqddBylPtKhzzOAaCvvVBftSxXt8oXvGrEmnBYBbwWMbdAI9RXLdP51YSXyqXSsfsztv5U30pdQWBVEeA3wf79/CiDrN2WH2Yb8oNgQyJs9soPuYPy4+WIRLRA1O6XHxOV/BB5Vn377UN5bBCitu7VOkVnrOo4vFR+ycV4zOvxmLp1nPQ70H73aZnKNKUqb3WE2ozdn7H106dQX7VM+9yEg8o3yY3ZnzF1Kw598BIuRrZtR9TyEimuza8J8QRhxmPVEJavnHjFkTnU/SzEEiQTJCzRsRCgsQ0ZSD0eIYfw/Oijj130HwQWj4PX5OBTVwY5pLpOiD2IJfeY+//9v44YhqDiKoAP1EEcQ8Tx2PfPP/3sZDlGjPVidQaJuJBMshyPEHcnT52s3pFH9yEdIfIgpjb2bjg/WMIAYoplGiBkIXM/lQjO3/3ud0LWySPiggP+0Qa/Ie/YIeLwnfU8IbTeeON1F9V4QyI4kYVQg8Aba2N+heYYOEGuHRbfmoha+g1Jz85j/URl+kTtZzKGEHwfffxR9Y5EchJxDIZEeD6UdWg5YfcfFWIRQlF2NjdOQgJyDNEJUZs6FyFq+QMB40Nb+nBU2r7xxpuTMYec33C4og/7EKDC0Ttic1PWZoXUZKzQdVKWZvj++nWHgXNIPkJYaR0pRCdjyXIGkLTs9dIFDxzBin3mL+UfyNzmHGGeAsCD+w9kfeVndfSwYIgc/jFH2GjD2r788QP/7gp2IaLWCUvfWUqBJTpoxzyiX4wLeXbwYWd+EQ3OXCbinHPijCwVAcF+48aPDjv+uPH662edz5C0n8jyIRC56ht6mdecV0dlzhwUv+krc54+YGeszV2CRLmdG1qmNm2dlrVNx+tB7cnY+rW/io1iosdaT6p1tkzzKp+SQXbs/oytnz6E+qpl1OdsKl/wqtFqwqEvXlGilgmTqzxnYF8mmaZBW2csdE4M2YeCVz6auxmrfBSKZEFgdRA4c+aA3OQfkh/qz+QHQf2isLNn98mPwQOyft1h+TFA5Ej9Vfvw4Qv5ofC0unTpiTx6yAsu2r2UYnV6XTwpCKwWArv5u7Hcd7Wba0PgdV9Io6tXr8iLheRlXRIp+dprJ9wLxD755FP3KDpkGxGSkLnfCVELScuj6UquWo+VQKINywxA0r4l65pCaEHsXRfyDML3jqzryvIDELq8HAyC+OzZ112kIC8ug9QiEpN6XsLE2qmsWwoxSKTk3r2vOWIJYu2N199wPvF4+ZMnT4W8kr8SyrZP+nNMyC4INUg8JYEhpVhHlZR+QHyxHTt6zPX3F7+QR8PlMX8epYeQJToWeR6BfyCEphK1vHDqtBBoEIq8nIkoxfPyODzLNrBdk75iY9EbY8DYHD9+rHr3vXddH2M+0Hf6x379+jVHqvK4vo4j65heeP9C9f6F99348DIq5gGRmkQzM47gwTidkChPImJflyjeMxK9yQZh/d233zlyEqxja+CyzAYRrRCDELUQhZDG/Dq/d+++s+nGDLJciNpDhw4K5odc37BBG3bmGSQp88eNC7oEi23pJ36iH6KUiGxITnzicf/n6JRy5slrEpnLeYA+fIDExnbtf33McgqcNz+KPqKmmcuPHz12eZa9OCLEPZiAA+Qz0auvyzxFJ0tlQIiCsTt/xS9/q8dQMBF58vRJ13FmfDiX2CGS8Qu8+KMBkc2XL12qbss5xtq41B2QuYkPnM/vvvuekL+vuahZ/qDwk4w755MuV4HPrAnMEiWQxBDi2B9jm+91PyvoG8fTfn4N1dripf20/JXa0To9tqmV3+142X4Pkd/NeNm5NQRW6OiCV5SoReF08opm57AUxCa77VBMBp05W1ddbdtZefyyftt8js8q73TKh13DJNTe2ta2IbmcMtXVVo+2w0ZO25R8TnvbF5V3OuUjFy9tZ3W1zWs/2upq207l8c+35R839QF51efuX6QgpUNlUzJNNqlXPeTb6tK2bdthq2wFgXVB4K23DkuU0Un58f1cfgjyZuwN+UGzT/b9cnO/X36M8GOJKKUt+eHyXIjaZ/KIH+keKasjQNalr8XP1UJAr7F41fc621VX23ZW3ve7bR9U3umUj9z7CN8ux2037Yf6kNte2yGf0zYln9Pe+qXyTqd85OKl7ayutnntR1tdbdupPP75tvzjVB/uCAF5UdaG5W32vGjoHXnUH9LxN7/5jSN4jh077gjKm7duOqKWaFMIII3Is7ohdSCNXISprGN6/vz7jvRClmUT/vjHP1ZXLl+qeOkUxBOkGS8XQ+e//qvYFxKY6EGIT6ICiXB1L0QSWZYogFC8fPmKI2F57B0yzr0oTIhVXp7F+qSO3xOnILmIDiYKFAIOWxCTEFzIQb5tQtJyoyn78VckCvjCB9WvfvUrR2hB+kEsg811eZnUjZs36ihIJ77tiCyib/H5nXfOuehPt9SD6IfguycEH6R0apwsdjn5HF2MAUQtj8e/LyQrpGNsA49bN285IpSoTAg+dveCKRlHlowgEvntt885PchfunSx+uN//9GRtA8fPKwJ0MOHHFH7r7/9rRs/XkJ39uxeN28gKyHuITIfC4m+tb05N18pYN6w4zt9kP8yXttCbH5fff75F/IH3x+EmJTlJGQe7BcCEfJSFTFWtIOUr8lYolkPuShpSGB57Zsbk6NCxkPEsswFBC9z0EUTi07mB2u4EoWMHD48ErITfO7IvIN0fyrE6PVr16u//uUvDlKJrZ4uAUFELfiwQ44yr98Tovy3v/03F8HKODCv1Uf6SkQzBHJoo//4AFmKLAQta0QzJ6/Iy8L4Q8ZT/jCxJXiK3EEhafcJQX3v7j2J2L0rL+a76fpIvyCJP/n0E9c3xuKW1H3x5RfyMr2v3PnFOcb5guz58+erf/u3f3NkLXbR3bRpD5ola00qz5Hfxj9uso286nNQSkFKh8qmZJpsUq96yLfVpW1z26l8yFauDtqyIe/0yYdLpSCmI2XXKWvx0VVX23ZWHvds32w+x3WVdzrlI/c+wrebY8uX0X6oD3597FjbUZ/TNiWf0976ofJOp3zk4qXtkkStNbTb8wrIYP3MGIzBbE0UMQkG78fQTvr63MyVwiXg5buSe5yDs3YLnUONCXqm9y4JJ6zt3D4tVU4cXjuflwpYMb5KCJw4sV9+ePADrP5hwGOlBw9uOHIWgvb58y35YSA/UO89lx/Cz+QHxVP5cVXJDwGiY1hLTa4RGTf9q9Tn4ktBYAgEhvpunPrCd4koHVzv1MB8hu+uRdqb96BDiX7hLgGvDt66Jjk4a7do0HdMHjy478gfXvwFeQkxBEkKSUNkII+E3xRSi2UGIM3u3YeIDD/SD1kGgQaB+uqrsuaokF6UsRGF+eUXnws59A9Z21TWQhXSDWIJeYgzCCIi+Q4L6cdSBvpoOS9Sgpwjqven27L8ghCnRNJCJhOZyOPx58+/7wg1fNbNkb0SPfievPDpjDzODnH3SCJyIanoBwQdkZa6HZVHvyFdWY8VYpcIRSJAIVu/F3miKG/fuu3EwZ81cYnWxAeigJEncpG1XolS/Oabb1T1QlP9jgVXIiRTW00sbjsSk4hiCFDaMwdoTxQyj80zFozjXYmgvXb1WvXnP//JPb5PX92yEcgKEcl4E5GMfB1RynIEskSAjBc39ZCdkNj+tUtoWWdXiUF8YIkD5uY1IUY///zvEil62bWFmNwr4wz2vNCMpS3AnUhR/siADv5QQNQtxCPjwtquRM2ekiUwiCplLVqis+9LtO7176+7eY8s487cZ+1WNs4HlhAg4hTf0UHkNjZ4mZnDjx8rsk/PScmAH3MbHyBYkUc/O4QtZLI7LwQL/5VinM/1OV1/KiacA0Qzf/vttzK3vq6++fob8anGH7zQx05ELxg/fCjLMYi/2GM8XL8FC/5o8kAIdqLj/ywvHuOPJkQE65jT5sKFD6RL0x45LHI+aFF7HZe2Wptk41pma9AzdTfhhLU9q2F1j6zPQ+G1ur0d1rPB8ZLB8K9dw3o8ry0xneeFV6VEJ21LvOaIWtUTHEiU02Gp9Os5ps4vRzy0pey01aX6c9upbdtO821T1RXst1TGJm+ur+pPyk5bXaozt53atu003zZVXV3xyrWXtCNKgvYblOfg5ezyMTHQxY51I9UP9wUsBnwbHBsXrLpoPmaniy5rxPfN1pFv66ffvhwXBJaNwIsX2xKBwg8AiFo5H2WX37ruBvnFiy35Mc16h1vyY+65RD69kB/UL+SYRwx58Uv9Q2zZfSj21xOBttfn2HWe3rfVpYjltlPbtp3m26aqC9tzm1SW+65ZVPriNastfpS0I82C4xVX52py5pezy8fEQBc7vhssF8Bj7E8OP3FEJoQQ61QSjeoIMyFI3ePfQmzxYi/WtIyROETluce+JQqXqErIPogfCC+I3ptCNBHphw1IUMg2SDfKbkrE6s8/v+lIWKL+2CHOiH4l8pEISKJy/yFRgBC6EGcQchBrEHT/+MdXjhDT/kHMnmVtzg8/lHVHzzgi6r6sJcqLnL795lsXnVsDD01YR+AqqQWhRt/BgWhNRyALkY0/bpMxINoXAowUMht5SFv8OSnkJBGObDnj6gQnH6m5laOLsYFABDPIZSJRYxsRqxDoENCQgMwFXkwFkQi2RJYSGQpZCP5379yViNvbjqyE3GMcscc4Ms43ZHwgMll6gIhnljNgnWMwIeIZ/Jk/3BDHrl34CtH4k8yX77676KJHf5TlAm6Jn/VLxnSNVqJva8IW/yBUa9sQzCfkD8gHXUQwLxmDLH0keLwlRPwvP/tMxueUKyNCm+2m+ExEOePJGDP+9Iuo6OvXv3fzlv6znvF9+UMFW43P0eoVWV7DEcPyBwaid5UwJUIZ4p85xaaEK0uM4BvYPJsQ19Traa3jT5nd+CMDa/1+IS+s+17I5VtyzrhzUYSYFy4KWuYgfqMDUhkcIbIZT4hz5ihtHjy4L2N+yy3DwHnES+HwD98hpTnf6S/nM+VNW9a8RIl2UrK06bMpTiE9AoEz4Nfl+On7FLPTRZfV7ftm68g7u5N+cNwkj0xsi/XByUulqxcDvg2OjQsx9dPylJ22ulRpbju1bdtpvm2qunw8nB6pjF27cn1Vf1J22upSnbnt1LZtp/m2qerqipfamyNqtQIDQeUIRCqj8qo0kEZUxW0HdNiiJh8ccO5DWolwk7zVncrH+gFWqcmb0hmqi9np2o+mdg4q9yHe9MRL1YT6NS0Tob54Ndlp6vPUl0Amu604Id/9vbamfjjlCAXsBIqivjTZaaPLGslqJ8YZ77IVBFYLgaazYsdbyFgiZh89kjdZy1zmZhji9skTHid9IQQt+6Y8nse6frxMTB4dFKJ2a4vH53b0lFxBoAsCXaYQszvULlSW41NTO3c26Sklwk3yOTaRifWj3HftIKiw75QEciJU7rtmcYGQuXPn5+rgk0NCqMp6sELuKFEH2Qch54haIVufPJF1OJ8LOScEX2jjZUZEZkKyQnZB1EKS0Z71MG8JkcfuyCTHptRaIGBv3LjpSCJsQ45CErJOJuSbkkcsP4C/H3/8sYtchViDBIQkpA1rj+p2UKIZX5d1b3nx05nJepv4AVH7zbffTIlazlEILEgpSDV9eRhlkHfoJWr0lCwDwKPvuuGnRkhCurFBUr8mxFa9fENdRnmX60DsnG/SBbYQteAOeUnkZGxDzq1RK6RoTdTKS9bE/0NCcrN0wjHpD/0ECwg9lskgqpkxgfjkJgB7bE/kuB7HG44UZO1hojchTV+TSFtIWojA6SbNYuciEduM+cWL38lSGVcm0cy3pk0148hP8Rf/mD8QrkT2MoexfUrGjihflrvYJzvE6We//MxFYYMPfeYPBP/zP39z/fSJWuYLaw6z/AHzjj8uoIs/PLwufyxgnkOAsjYvL0NjDjlyEwJZCO9T8vKwV2RJDTZ8pP+8jI1ob8h99LHVCNZpbHxZhuHa1SvVFxKVzlIF7PRzZhMbG+yQq5KiC/KYPzjgK2PIzsvPbgk5z3q56GAJELWr5xr9RQ/9ydm0faOsdFZc67UpXkklCAXsBIqiaprstNFljWS1M8az5K2BSD4CSS0dqexiO6IqNBwRT2eLm3xwULkPaSfCTfKz2uNHsX6U+64dzBT2nZJAToRi13o7VlGiVoVIHZFirWqlZzc6eJ6cPYyosiKD5qf9Ea1D2lZdU/2KlxRond+Rlw0vh40Pgl+YwMtvGjv2VcbkRi3HiZ5bsB9+YcROm7nlq+zpdrvmYjzShXZ6inRBQBDgpt9uHHpFttrlfZn6B129Dtzkt9ZcG1vw00/PJGrpofyweSY38Njn8cQtufGvI2kfPNiWHzDse9z+6BHRHeqnplZjyRcE8hFoc61XrYueddjTKT+kbdU11V/uu3SIp6nDZno0yfiFckxRn81X2UdX57Z9O2EM8/g/kYLbQrRB2kHCQViyQ2axTAAvmoK0cgTrlFYySiZZCCiIK95YD0mLPCQqeogedHYcuTfblmUNHk0ewSbij+83iDbIPqIVeSSf6E9Ipvt77jtfiHY8Lcc8/o7N4xLFCym2JY+kQ4BBMBLNyRqpPIIO+aeRvZBRj8UnNvfIt5BRyOOzI7mkHN/3S/kx0c3GGrl2yQdeVoY8j9bjL8SWEmFEmuKHbou8dtXf61uur6yn+tWXX6obcymyPAYPGc/Y4z+RoIdl6QmWK4CIhlyE0KUO4p5lBDgWgBxGqhRdPIrPC9ceP65fZEVbIqsha1nSQrF1bRLnItG3+HNJXoyl5LzasSk2xRk3t1huAhKeiFjwZ8xPy9hDzmKfPr4p6yZDxkK+67i9InPMvchM+urmrvyBAL+Zh/SHuUvKS+qQ42VpkL9vvvmWrI/8lvtjAsQ8bWnHLuAAj5CjEN11dLbes4EBZC1zp5atr0mxOQKRSn8eyx9JGCvmPRGw/PFgbpMyShkf5jUkq/7BBPuUcz4yhuhEt9MzacdNJOcO5waENL7SftBtgGtX8BrsF0bsxHAO9dFXGZIZrWwE4wqJU+3r10qvQ23w0qYRVVo9eDrtj2ge0rbqmurXU04KtM7vzMuGl8PGB8EvTOBlm84RtSGQXVmowmjSccodjAZ1RvPw2SFth3S5slCF6UrBqwYjByskFa8GWKcI58pNGwyUye1Prjm/Hzn6FavccxFffDu5/vWVW5bdvn6X9quLgNxTTzebnxZ6GWR0p4r7/PpHXf2jwhOfO6yJ2kfyKGL9lmFu4uW3jNzwV/JDhjc8k27IDwEIXHlRxhY/DLBpHJ3TWgoKAs0ItL3WL3PGDWk7pMuVhSoMjAWvGowcrJBUvBpgnSKcKzdtMFAmtz9tzEHUQNjwMiQlaiGQlKglovCavEwLolY3xUuPNeWRbl7KRfQe687y/QLhBcFHNOoWhDBfPN72XKJ0WTNU19WkGqIW4hWiFmKLNUEd2StfOPhyX4gk1kg9JESSRjbiM7og1hxRK8cQd3skuhHyD6L2p59/ctGatGVDN2TUISESeWRfyUT8hOiCgFPS2frO95oj3YQQY6uJ2ify3SeE9IvnjhSjXHtLmjNvcmTQG9vwEUKOvl4Tgv1LWSoiuonsU4g7GXvnv/jOo/ms4XryZE3U0kfmhxK1jCc2LBbo55jxuS+P1T+SF4dBau+VaE7WG2YZBMYJErjpdgA92PtZxumSrEdMlC62Q5vzQyroA+Q7L9g6f/68m3MsfXHm9Bkhas85shXCFaKWNXMhViEq+YMzc4zoVtZoZqyZS/j9XMhMXtbl5q7YJ+r0yAHWI5aoXFk+AQKYHV1EUjPfBAQ33o4AFXklSq3v4AnG/BHARoDruGuqbdCl55BGt1Om+Ov80naKCbo5hyDdmb/MV9WlL2VjnojLO5sccJ6AFecX54Vdx3lHsH3O+adOtm8+18JXlaNfu5p7LmLUtzPnyEgFOf3JNR3qQ47+tniF7OT62FduSNshXQWv+Aj5eOVghTadX9p+jqiNmyw1BYGCwDogwMmtJ/o6+Ms3vl6Q1sLf4uRKIqDEJzfYcp/tfvjw44dy0tBZsbGxLREW9cu/9u6t14vlhp51ZdmJVmqanY8ebUq01aZEV23LDxl+pNZErPxmEB2sfVanm5v8IKhtrCSAxamCQEGgIFAQqBGQ7wGWMngkUZCsfcmb4FmHk4i6a9euupdi+URtDDq+E1xUoZBEe9xTF/q9xGPYibuf6fcX3xu1dggtCDP08Tg331cQTUQ28kIzHutnSQOiG91j7kKY8VIv8g+FaIKkOyGP7xPRyPqe9+49cks81BGfjx1pjCXM1d+dO99ZEFhb8tIqCGHWeYVAjm2QwET11uu0PnWk5/eyrilk1zI2cNLIScg2Hu+PblNMJWoTbIW8hGB32AsBXROr9YAoRiAWve929yCKY52ii+jOvcyJ1BwQJ/GdjXEGP5bL4DF9SNXoJm2IyL5395576dtd6TPykKREzup6xkShQqoyn7BTR0MfrU6IzKuyfAbLFByTqGzaYR+C1r30TghbvEKeP0K89fZb1SeffOKWc2DZDfQhC4lKO+YNc5Q8LyWjnuhdcGADR3B1L0SbnCOuIvKBHqJgnwqZzh8BWHvWbROsgs0mdc7WZEwmjdzcgHzlDx+Kt9Wh86fui8jYyjXPM5N3U3/WfDiK+wWBGQQGI2on9xAzyt2Jz4dUhupnhF+ygxAe+v0i3x9l8xDwISlzywPIOyx4eYCUw12NADfe9cYPV37Q1KSpuyGX3wH8FmDfs8ddOaZY8ANafn9IhARrjtVRLbRl6QJ2+S3QuD17xmOS27I2Gj+86hdP4AM7hHG9137t+NmotggUBBoR0FlvBd0M50MqQ/VW9mXLh/Ao913xWeDj9TLOLSIweXQcouby5VPVaYk85EVekLVE1UL6xTaHl1TyBz+iZok+hPzlewCSzi0rcECi+iZkla+HdTSRIYKPJQXYIJIgveqov9qCI5ZksPDl6tVr7qVdrKPKi8/OvHqmev/CBfeY+30hzd54400XFQxRxtq7EK68NAsCEEJSSSoXUSzHEFO69i7RoEQx/iD9/ttf/+qiOn2f9Zg+QkqTsn7vc4mmZV1V1hBl8+cWZYuYX/SHSFNIxNRWk3b1H2vBBN8Yx02JrFTswRACkzV79+2DcJ3f6D8k7xFZ6gA5XvSFPjcnGEe3FITOlPn2WlK32RJCUiKxZawgJyE+uX6JieAGycwLsnAMIh6ilqUWeNHbCxlLjtkhYiE9mev1XNvn1h5+9513q9dff0OWzzjmCFXmyL17d2XdXVnyQOYyRPxhIVtPC9FLFO0HH37gdEHAEvn73XffyXy8IjYgaWXZC/EX7FibFyKf5RbqPzwIdswXKWMPz47ZLnIO4DMRvg4HqgFjsvmQuBr5AEfkX4AdN2duq+cpPsRsU8d4c97icy07ab4LkhhezB2/bhd0t1cXQnjo/Cp4zUMbxGtyqsauXfNaXp4SH6/BiNoghJOBCNaVwhkELFTk/YGaES4HOwgUsHawKLmCQEFAfhRAtG464hXidP9+1hPbI4/v1Y8l8kNXtyNHtuVH64ZEmPCDWKJ/5DcCLwfjZWAPH/Jonb0ya6vZ9Plz5CuR3+Ns8UOsbAWBpSHQPGWX5tqqGbZQlVuJFqPzEoEFoXf9+nVHYh0VAoolBx4IoXVHohqJLG2KEAWqOvrvuYtwhKiC5CESEVIMok+jCv0RgBSC4DtypF7blnpIJveItpCf6JpuQkAR7Xv16lW3rAFRtLzM6bRE0L7//vvuMXuIXMix47L0AT4Q7fi99I3H6OmH1UceEs8Sk3XZZnXr9i1Zl/0r90i9kphTP/yMAKDRlJC0dqkIX3TssD4lOyGOWY6g1Sb4ggfkIMQjuhg3R9TKOPLYvoA6r1LKkGF9YpaRIBpaCVKiQS05Pt94p8ThLPcuEN4secBSFjV9XBPcAcvujwOMq1tCQ+YsJDtkI8sY1E/+cE9UzyHktE/MTaJu333vPRd5e1TkmS8sA3Hnzh0XZc4fHpifnA8nhajlBXXvvPPOZC7vkXPmsayle7H661/+6khhN4+wJfPhvfPnq3NC7DKfsKkbfcBOCEaV0dSRrYIFY8n8EkValUyxyfnIGJBnwyb3bS5SOhLNyx8d6C9LM5CWrSAwg0De9Jtp8rIeWKjIh65dLys2oX4PerWZA3yC/qoMgk6OVfDH9wWfxnjZRmjQc8vmxjO34QhyKbxGMNdape9fawUDN/D90fm1CnOfrvr+Ddz9ou4lRICbbdZ/ZSmC27efCQErj+QdZ621fdWHHx6SH4iPXOTrgwd1mOzevdvywos91YULB+WH7GH5cXvA3axD0v7441OJlnrm5OsfDvUjpi8hrKXLK44A19KZ6/rkYKZsiX1YpWu97wsYlfuu+ORI4RVvtbga378xLEPoEGkI0URUIkQNZN0TIXAhzKiH/IptzDHkISghRiHL+E6BvIMwY81QHn8PbQck2pb1QU/Iy79YuoA7J2xCuD6QZQd4kZfd7t2774haHj3/hdjDDi+MgkCrXxz10NlkzVpIqp8kMvibb75xa+36hDNEHL6yE5lZk1qQVfULpSBdIXhdndSnNqJHIQQh+ixByvjNXKcmBzNlKcUj19n5BTEIaQ9RSQoejDsRz5CVjGfIb5anYB1aiM9j8kIuSD7GkBeL3TW6crriuEh1SuYC9rh+heyiDxKU8ZEZ6GyCP/1gLtVzlnGp3BrMt4V8h6ClgGUPmC8ffvihW0KDP1BAbvKHgB9/+NHNZY6Rp0+8YA0imrmMDSJ+b0mUNn/gIBrdEfWC14ZEy0KGstSCksbg022bRCXLvHK4eEoUJtVOClaMG1G4bs1konwn4wgmB2UtaaKE66hesFEt1XSsOWfdWHf2u3ZUNat/nvsLP/T9UbxW1b+FA+QZBK8ZbCYHM2Vem0Ue+uO5SNu+Ld8XMCr3XT5KO8c+XoMRtaqYVCeqpjvml5dT/5bnQdjyquNl/Qv3YLGl1p9Vml+KgvVPyxad4kNoK3iFUClluwEBJVMhaomEvXXrqdxY75FIJF7+sr/64IOj7mb+xo3nQsK+kBtx1lbbIz9C9gtRe1iIWnlM9DSREjXRe+PGU3mr93MXJYvushUEVhEBvdbb751Vmq3q36pht+p4Wf9WATvrzyrNL8XG+qdlQ6WOqBWC9ZGQtfa7ABLH7WIoRtQqVpBCjqidRDUSiQkxhL5Dhw468irkL4QQ63++ImvKIg9vBMkHYfZQ3nQP2WU31tC9dm1bHld/3ZHC2IFwwz+IWAhGyDXIXwiq2/KiqW++FaJWXq7F+rV2c8s0QNRK1CJRn8jjLxGhRPTelbVPIWohoX0/rB6bV8woY8zY7NgpXnXNcj/VP/UCshH8IKhJISohXYmKhqjdL6S6u7HQBpMUzA4LmQtRS2QqbWjLi8Vq0veJw9ZrFj3EL+tbCjPwdmMn5CwvrYNEZRyZS7zMTH+ts5QHY1nPR1lqQ4hZlkf4UOSYK7wUjD47olaWymAu04f6jw2ynq28FA0M0Ms84w8St2/ddNHaumwIvvBSOv7Qwfq4zBm3hjGPMXXYOBfoi/sjwAwis8rASjEipc0zsa0v4MMvzg9I5gMH5Y/1Mj5Ez+pyH6qNP6YQEV3/caU+d7WuT2r966OnT1s7n6wexc2WLTu/SnhZX1YJq9h4rtLYrSJedjyXjRX21Z/BiNpV6FQXHxSILm2HaLNKkzWnPwWvHJRqGbBiW/QYY09tOwdW7GOVfVsxqIo7LRDgR8bz53scEfv3v9+XH7SyhpoQrzzi99prEu0iJ8apU8+EkH3m8hC1p07tlxetHJL0gERGbUsU7WOJSHrsomlv3dqSHx31VyS6y1YQKAgMg0C5j2iHY8ErHy+9vxjsii1EDjohdLpuPHrOS8l4+RaEKKQX3ymQpmfOvFp9cOGDeu1RKYdQg/BiP3fuHRd9SNQmpCvkFmuOQqzdvXvHkaTWJwgoSDIItbuylqguM6ARn5CK6GF3xJuQjrdu3nLkI4TrzCb95cFw5Fjq4IcfvheS6rgjql6Vl5V99PFHTg/RxryUDAKZnfV2ISPpG2uyHpCdFz2h/4GQy6xxis512yD4GBvwfSg7hCRkH+MIrm+++aZ7mZZGyTJdGEP34i6pg/AkQpq7c0e2E5EsZCb6ID1T2+zcE8Wtp+K2I2nxDXtEVDOndCMCliUwIOUhX9npEyQ/680ynsy9n4XYv3L1iiz7ccdFkm8IeflY1qt9KOOvZD0vA2PsWa6DZTb4owHr09LH48dfETxOyB/HL7iXlPGiOeZL7/urBB7z1wE5n2UsiUZnjeafZQkT/GWHcD7/3vnqs08/lbqHrp4xg8Q9f/689OeMG1OI3d4+K/gm1W7M+2yERshiT22PoL63yphvlC8aq96dWaKCZeO1bmO1KngNRtSu2wBwrriTXz5Sj46MdU6tJV4OsIJXzpzQueXmmQz2osd70fZyMCkyBYExEeDGGaL2+nUiXR7Kj0ge+9wvyxsckB/DB12e5Q3OnuXRU6Kg9siPzn1uyYPjx/dLRMkT2Z/KunusSfhCfgzzY5b10srZNOa4Fd3dEVjHmanfjeW+K2/clR8seDXjpXMLyWXgFfMQAqySgFVH/ghRBjF2UIgyyDJIz48//tiRnhCwkKwQZK/Icges5Qk5RNQtG49sP7gv0YpCnN65c3dmGQHqXwiZxpIFkLlEft6TnShOiFpsQb5BOBKaiw/Y+knIt/uyZIISbehhU3LwsUR+3rhxwy2P8NZbbzuSD/Ltn//pnx0JSVQoe23vnotOxBaPwkNSQgq6aGLxm5evQdo5oro2szafvFztmawpywuxdBwhXBlHcH377XMOE7BiHHlJ2AmJhGYZCtYLhqiFDCQC9MmTOjKXKNYcorYvSJwXRNMyTizfwXyAfNWNPx4QVc1YsyYy9fiM74wlshDtt3+67dYlvnPnZ7ekwh79w4BEVz958tTNGSJSwYSIXF5E9u6770oEq0RdS3vWTH5b5tBHH30k8/41N1fUh6HT2Hcj8xo8WNsWwp2x4nyDnGZJhg8++MBhxTgyPkTQshQE5ZyryMUi6Pv0YdnXrhheffo0ZlvFi3TRt+jrhhXjMMVLnF+0/4u2N8S8W6X7rp0r9RA9WzcdbuZOZvA6zqR1w7v4WxAQBDjV9NQrp12ZEkMgoGTqixcb8sOTx+FeyM33Y/mhuN9F1rIEwoED9SN2hw7VKTd33LQ/fPhCbsw3XSTtlSuP5IfIU1k6YVt+QO0VPTuP5WHj6dNtubF/Jj9aH8uPF9br2yMRGbwJm5vFMpuHGMuiY5cjoBd/0nLK7PLBLt0DAbfeq3zXQJI50lNIsTNnXp1E8Z2o3pcIQ0g86iDTIIzYWVu2XqaA7yMiZesozJ8lopEoVpZlsFv9KDhE4iN59Py2RMH+UL0phBtEFFG0kExPhbCDOK2jcu+6F6NBOOpLpaw+KXR2WGv022+/FR17nT+Qd++df88ty4AvvFiNyER2SD3WZMVvIiqJoITwunnjpnzPPpYnXn6cMbEuB9wrgDcY/yxjBCbHpI+vnjnjHuc/K6TmpxKJSZ8ZR+QYw1elnBdtEZVZRxU/cOMC2Q6RDvaOPB8ZCLdurNh8/Q4vmDvt5oPOF+YS8wWynaU2WOoAgp2xZF6yQeTfE0L2BksfyFwkQpbLN9G0RG87ol5Sgcm1OSXk5jmZv0SuEnnM8h8seUCU+Llz52Rt26NOJ6Qnc9Nu+hVhywbNi5OQx7eEpP3uu++cP/qHDHxmrE8JRpw3vHjvjOQpPyF5fxvdV9/gS3jMPFOcyy1DxwmgAJIWEDuCuJxmLw1RW+ZluwmmF8aCWx5uBac8nFSq4KVIlHQoBCBK6zVqN9wyBhcvvpAfGg/ci8GOHNmQyBAeV6vkRwEEbU3SToKLnPyPPz4TWUhYXpqxIT9ENkSunqnoZpcAJHnbdf3YJhG58htDbvTl5Rkl8naoYSx6dhEC5TrfbjDBq/yOysdsXeYXxA+kGBGs3138zkXLfvjhR+6xch4th5Alcu/s2bOORIUkYz8jEXxEaxKBeu3a1erixUsuovGerEULwRd7ZP6xEKKQtJBQkKYQZEqG0Qai8dq1a44UhoAj+nPKhHjwP5BHwK9cueJIXnRAaOEzRDOPir/66n3nM31jh3gjAphH33kJ2lF52RRlTyXikkjLMaIRPZcbDjnD2NPb3NySMWQxiM3NbSGeb1RffPlFjamUE2EMsfeh4HNaiFuOGXPGkGhMIjHB7vbtn9zLtb766qvqByE8GVfGA9lRN1EP0c+LwPDtrbffcjYhntlZxkHJ+6tXr8pYH3RLOTBn8Y2daG4iiflDwuPJWrcvpBwCmCUVwOTq1WtuzFkiAxwuvP++m9cQ1LQ/feq0i9IFEyJvWfeZOcESEbo5LEaGA1ucP9flDyZ/+ctf3Bhw/nGuvS7nIHOc8eR8JLoYwhbSnbV7accfPNjrrXa2rctz82uirSRhBApeYVxCpQWrECrxMvDi/F1V3F4aojY+RKUmhsCqTtqYv6W8IFAQeLkRgKh9/JgXp+yRH5eb8iPkmTxu+Vx+NFZyE74hN90bkidSlugYiap4Jj80HhOBtC3RQJsSjbvtSFqiaYnOrQnaGlPyEogkkUWstVe/kIzlFS5dIiK3JnKRKVtBoCBQEOiKQLmCdEWuezseZ+fRbB7f1o3lCoJRpipgUng2CC8iB58+feLIHIgpJVKV7IIMu3TpkiN5IIN4tBySighHiKKTQghBmhHRCBmqBBbRilcuX6n+/vf/ETLsqovM9ZcqMO5UT4QA/OHHmqglovP8+fOObEMG/US4Qr4SAYseXpwU++qCTIPUpS+HDh0WP4+7CEQejacPRM5COKIXWQhJXhiF79oH7LBWLSQtL2pa1Ea/WB8Yco2NlBehbcp4d9m4b+An/a1btyrIVqJNjx0/5qIu6S/r1LpIYiH1GHPGEfIPUg+y8ubNW9U333wjf+z9h4u6Vb9ivoA57ZAj79IXrGfblhaUiGwZmx9v/Ojs3pOlLlgKAX2kzMv7D+7XEdHywi8iaVmegHFlPCFsidJGBjLevWhOyojn3hSZu1JGFPGVK5fFz7dk7OvlIF6XPxAQdcy5wTyD9AQf9LNMx89im6U5WDOWfr6YkNb14gTzqLD8xAs5L/FZ/Xd/aJD2bTfOVZbiYDt27KgjsPmDBv66XfyCnGWO4zdjXd8D3ndl9dg8dX0j7wjmtk4U+YJAQWAlEFjct1L77r7cRO0qj0z7sRy/xQSvAlsz1GA0CcZb2b/SNPeiSBQE1g2B+uq0Z8+G/HDclh8PEK9b8kNpW348bMqPJl78IW/0dTf8PM7HenG8MAWCl3SvHNfRtDVJq/rqlLobN/jRwhuwwWZbIkxYG7d+Qcu6oVX8LQgsHIH6VFq42bU1OMGrwNY8gmDU5b6LJQW+FgLtsESBKs6XJHoV8jFnIyKVCNY//+XPjnCl3bVr1yWC8hYeTVVALt0UQmvfXlnHU4g9iESi9A5AAjlCbNORYhCzHCvBy9ICEINff/21e/lXiqTFGATcbSETLx266Pzhu+ygvNGejcfXIYsvXrroCMdN1s/VTjuJ2Q/30iWJxoScvHTxopCtEhkq+R+E5DpyVP4CKt2jhyzv4Ag8WGt2sYld+oC9y2KPvkMij71hE1KPpRauXL5c/eEPf3Amwe1rIUl/ljVWO20TnFjCgqUPDkrk6b59+4XofODGEDIPu1tbQqYCgaz/W2Mgkaky1pfEl6+++lKwuOSWPWjygZe4ff7530V/HanMy9iuf3/dEZpNbf16omFZduI7WcIC8pjIWJYjeCrr7hKp/UiIWP64cH9Cun799T/kDwgQlfW6xuB448cbU5JWuilbPc7MN15G9re//s0tcQEBSjs3fyFhBXewh/SFrKecP4xAcELmM4++/PILF5XLmG0KsetvtGHZjsvix//7f39wfhMlTH84X9pukMeQzmycV/jLC/MOS8o4vpC1lJHBLhskvRKynLvsFyU6/pr84YSIYnzrs3W9dvWxuc5tLV7r3I+F+Z64xi/Mh3UyNMFrFWB7qYnaVRiANZy36+TyUn0t82up8BfjLykC/DDilye/sR8/3pYfB3tk35IfCNtyM17v3HzLbwT58cC6s3vkBwtrpPHDuF7ugHvzWs8OiBxD1LLE3p493LzzSCA/RIk40ejbctbvIFZyBYF5BMoZMo9JqqTglUJnvq4LXhA2kDVE9bGh45IQi7lELRGBEJd//vOf5TvmkCNKeUkXa2DazRG1Es3Ko+NE6/LyJn3k+vCRw44kOiCEah3pKCSayNEGXfgD4UmUYxNR+0SIM4hViCa+tx49fiTk0wHnysOHskaq+AqxPJWxTnp5Ih8fyJclhO1ezDQVVwAAQABJREFUIdrA5Edpy+P8x4+/4voLaUUU7YEDQnCJHOQfEYv4jr8QhERzsk4tx4vYGBPsX758SYja3zuTmxKNSr8hvrtsOreIQGWM6CuR1z/JOEO4HxEClKUmDh8+JOq5t6ijVh8/llR84YVdkN1En+bMrVsyVz7/++cOP0hOlo+AEKUfbTdenMX6sowhhDo4EF0MYXpJCEfWqWVe0TciaL/+x9eOVCUamIhzSGPGELJSJu/UvBKoENe0+16IZJbF4GV4R48ec4QmNlgTFszoA+cZO7oOCVaQpPSL/jJm4Go3tca8hqj9/e//IDJE1j51/ehM1ArBCy6cs/jCC86OSyQtEbSch8zrR3KOQnLzB4anQmzzEjK39IHUE5nOcg+Q3vjdd9P51VfPy9K+4JU/0gWrfKyQXCW8Vp6o5QK9SoC1G+rFSxe82mFe8GqHV5EuCKwLAiyDUBOukLCQtZCzLHdQ90B+U8hxTda+eEH0T5xs5ccuP0ggZWnDppEW1Nm9ri2fBYH1RaB8L7Ybu4LXeuPFY+FXZSkACBn9vQG5CDGUs0FQQcr+Q6Je9xGNJ0QTEYpE2hlOy5FBT/kCkgjM74UoeyGEG9GNEEWkRyWykDU7IYUgc58IwQcBBHkGqUoEIYQp9lIbEYlKiLJUAv3QtWEhy/ALcov+Nuly33vypQexRhvkIXt5GRmEFiQbZJtGGepSA/jt+iF9IWKZx+OJRCW6csyNc9GF+EoC1hCSRCezQThCyt8TP/psjC+RsxC+VyU6GhwPyeP+jKNGiHJPwBjUONTj+PPPNXmPvE9GhvyBACRqk/Vf0Qe2N2UeuIjdUINEGePH/IEkhqiFZITwxQ/ykJ6MLfPrkfj9vUSXsgQByxQQDUzbO/LiuJkJPbHHkgXgylwhuphzAcKTZTIgriFqIYGfCHHNnMYXIlYZj/1C7h+QPyLcvXtHll6QyFSZn+ib2SYnEeQ/fyRwyzFIW0hyIsQfyHxsu+ErfYegZS6jkyU63PgdPuLmNOcky3nw8jTG8rkQ27TZN1kegvmMz9TTp7IVBPogUO4j2qH3suC158MPLrjvtRQ8KqA3MCnZIeuc3Ylx+Y5q3NRPBDPEG/V1FVA/Fu3DFC8xnGNb/VwmXsv0oSteOdh2nTtN7ZaKlxpvOb8a8ZKTmxs1IjK4GS1bQWAoBHbIVDQSXVu/TMwdyXzm/p/fvPalYU22VacvV+auj0g5HgMBfii69S8lHWNzl/nJtT7ncjwRda4s8+qtfizahyleYjjHtvoJYDnyo43xRPGifeiK15h+EiFHRORBSXWDKOVFSZxvTWPGtV8jKh2JNCGBaqLVRJCKHP2ANGUdT166xWPW7BwfkahaCE9H7gkpBWn1TKJTieRz0YhyTKQoJGGIMMN3fN0QOxsbe+WFTfJiL9EHgajfT6zPSnQj5Bl9c/1DX8NGe/WVFEIavCCWscELqIhCRB8Rtc5fwZCoUkg63al3UZkN9rpUu17wISCDNP0nyvWwEG9sEI/0G9IN/2yv28wvh+UED/ruIoon4wi5x1xAH+Sni6oVmxB5RJMqHowhY1n75RLXps7Vn3V07mFHlqKPx+8fS3Q0UZ656yervg2Zc0TTMtfxl/GDgIWcBQuWHOAPB9KtClmWACAy2JHc4isELrixs1m8mPPo2y/LQOyHxJQ8cw4iH1tEoTL+bqkFwYE/JNAX/tGWnXFh3hPlS99Cf0DYK6Q4kedHZDy5D2PJEcjTul3eH1UUjzrlj+yV+Fifi/jKWsqkNfEuEbXS34ey5ATnIMQ2fvGUFrgQbc640rfQvNb5ZbGatT/+kfqApUX7Mb2siOEc2+prjuxYyC3LB2d3Ypw52bSpn8hliDep61yvfizahyleYjjHtvq5TLy6+lCI2s7TM9yw60CEtbUrfZkmbjtkwtIFrzAusdLRvnTlW6kQtTHUS3lBoCBQENhBgB+EhajdwYNcue+axaPpqODVhNBs/Zh4OUJV1n11ZK2QW6xXC/lTE0A1keqIzZY/SHN+vM72sv0RhLN7DFzIPyVvIbPqNUkhgyFoFxdpOL2nl64skuyAuFUiFJKPnTIdR67Z7KE/8o45t5pGdIpXy7mF3qb5xXwg2pqU6FnI2fq763mQhG3yVevHxItzcZ+Q+xDNOq9ZsoI/2kDKOnKZH0Ij4KX9GzodE68mX0f7zdhkuEe94tU0v3uYCDZ1difGF3ntCjqTWahYIb40vF6Cc3G69IECHgI7VKbjmGqnMl1T7OqLAXJ0OHkRTPmbo8eX8fvojvkQQ76tJh98Xb6tPsfOdsCnmM4mX2Ptmsr9Pha84oj5WCEZKlMNqTFLtdP2vVKMyzZJ6oPEZ65cQkWpKggUBAoCBYEAAlzvx7jGorPcdwUAjxQpXrlj4eRHGDv/+98dTyaJ71uTD76uSNc7FTvb8uH7FFPW5GusXao81L9QmepI+ZBqp+1TKdGDEuTKGjwuUpbHuyFmeTydF3S5yMmWeKXsdakL9ZEyiCsexyfKEHKWiE3KNuVlWjzWTupvIV2+TNdjN058ZG6pcc1U4cQgYImO3ZSU6FQe3Uf3zjjKy8SQkTLfvSYfFoGX71Os702+2nZEbjssZHkC5gfzgiUbUmS1+uH6PAFLy1R3kw998HLnokxZfOTcq6PO5Vy0JLs44Pukvvlpk6++fM5xqH+hMtWV8iHVTtv3SidAtcGrl71A41AfQ2XaNOVrqp2275q6cUoZ9xQ7eSlr0cTTED70++iO+RBDvq0mH3xdYYvdSp3tgE8xbU2+xto1lft9HAMvR9ROFYtH3KDTobYbOrq0a7LTVmdb+Sb7OgjIzfVxrqDWFvPB6mqy27U+Zjumr618TI+WB/uohQUvhWkunYFmglfsXGwasxldc5a6FzTZ7a65tCwIFAQKAgWBtgisyrV+6O+GyVegg2Ouj3MFNWoxH6yutvjmysdsx9q3lY/p0fJgH7Ww4KUwzaUz0EzwWvR9lyPwhBRyxJCQnaFt6PkSspFTpng5qOSDR8/Zhcdqvamu1g0bGrTFqq18zLw+qu/WV5WIaN3Qr3i5soDBQJETde1U0UhpzHbMXK48pOyzZ/NEva832EctJA0YDBQ5tdrMt5F7zLnoyHVI2oHOxZivuT7F5GagmXR80deumG9aPlbfVX+bVPFyUDXg1aRXdTXJta1vi1db+SZ/JrA4sbk+zhXU2mI+WF1NdrvWx2zH9LWVj+nR8mAftXBAvNwK6855PmTv2pGu7bTDy0oV05h92y/Nu5QPLYg19spbinutV+OwDV5Tj7Xjmk4r0pmW4mllS6gFq1y8ZvrKgewzZRn+q7ymGU2KSEGgIFAQKAisKQLreq3P/V5kWLSPLuVDCzLHrKV4ptbFirXBa+qZdlzTaUU601I8rWwJteW+qx3oTXPLatO54VI+ZNcyK5eT79ouR/eYMk142X5p3qV8aEGmgy3FM7UuVqwNXlPPtOOaTivSmZbiaWVLqC3XrnagN80tq03nhkv5kF3LrFxOvmu7HN1jyjThZfuleZfyoQWZDrYUz9S6WLE2eE09045rOq1IZ1Li06UPUkIp9V3bpXQuqk4HgTTVj1BdqCzH767tcnSPLdMVL9fnjh3v2GxsKAbV7/fRP25jrE/bNnaKbEGgIFAQKAgsD4F1vdZ3vY8A6a597tpueaO7Y7krXq7PHTvesdmO02uQ8/voH7fpQp+2bewMLdt1buFH1z53bTd037voK3i1Q60rXm6OdJwoHZu169iSpf0++sdt3OvTto2doWW7zi386Nrnru2G7nsXfQWvdqh1xcvNkY4TJdbMRdS2c79IFwQKAk0I6EmOnM03tSv1BYGCQEGgIFAQSCJQvlSS8JTKlxMBe1rY/MuJRul1QaAgsC4I2OuVza+L/8XPgkBBYBwEphG1XdW7CwofQgXH2OCuupva6cUs125b+Sb7beunWEnDnLf6tdWfkte+I5ODV1v5lO2udVO8lji3Cl55o6fzJWduobGtfJ4XRaogUBAoCLwcCMhyeuW+K2Oop/cRwJX7BZWhN0dEv+eQzTHdVj7Hh7YyU7zKfVcWdKuAV87cojM6v3LlswBoKVTwygdsipU0KdeuZtymeJVrVzNYIrEKeOVei5yvnAdZPRtHqOCVj+sUK8ZswYOmcwVvc0y3lc9HIV9yipc47PvcP6LW9jDfp4VLrpqbq+bPwgekjcE1B8s/6dp0vZXsCuDU1gWV17RVf4twQaAgUBAoCKwsAqt2XV81f1Z24HBszcEq913x2bXUoV2q8Tgmfs2qublq/vh4rdTxmoNVrl3x2bTUoV2q8Tgmfs2qublq/vh4rdRxAKz+RC1XFNnHurDgc8DvKa65dq2cr9PWTRWPkHF2+JB9LJsxrNSepk3ds3KrgFeTv13q/X5ZHdp/TW1dKG/lYmMQajdkmfurlThifRlS/5B4DelX0VUQKAgUBF46BJZ0rQfn3O8YK+d/f9i6McfO2eFD9rFsxr7z1Z6mTf20cquAV5O/Xer9flkd2n9NbV0ob+ViYxBqN2TZut53WbwsjkNiE9SFMdnHspmaX/iTa9fK+TptXbCPAxU6O3zIPpZNOw+s22pPU1sXylu5VcAr5GPfMr9fVp/2X1NbF8pbudgYhNoNWVauXS3RZNBkt2PXUkNSPDW/aJhr18r5Om1d0pmelc4OH7KPZTN23qg9TZu6YuVWAS/f395LH9gO+sr7HscGQfW2ta3yVq+Wqc6x0zHtab9IQ3ZCZan+Iq86kWvbPqU7t24RNgteuaNRyw2Bl46rnV/tvCjSBYGCQEHgJUVALqB6DR0agaZrclu7Km/1atnQvsf0jWlP+0UashMqi/lJOfKqU49JF7m19bmLbwWvdqgNgZeO6zLnl/rQrvd50rZfoRZtbau81atlIf1jlI1pT/tFGrITKkv1EXnViVzb9induXWLsFnwyh2NWm4IvHRclzm/1Id2vc+Ttv0KtWhrW+WtXi0L6R+jbEx72i/SkJ1QWaqPyKtO5Nq2T+nOrYvZnEbU4qB1Mldxk1xKZ6oOvTGnm2y2qW/yIaara7uYviHK++AV64/ViUxMrsn/ru1SeofSafuYsmfrYratrpiM1RPK065r25A+LUvpTNVpe01tH7WsKW2jv0lXqS8IFAQKAgWBOAKp622qDo1dru9xT8I1TT6EW43zvRizlVveB68YDlYnMjG5Jh+7tkvpHUqn7WPKnq2L2ba6YjJWTyhPu65tQ/q0LKUzVaftNbV91LKmNEd/jkzIDu26tg3p07KUzlQd7btgpHZz0yYfYnq6tovpG6K8D16x/lidyMTkmvzv2i6ldyidto8pe7YuZtvqislYPaE87bq2DenTspTOVJ2219T2Ucua0hz9OTIhO7Tr2jakT8tSOlN1tO+CkdrNTZt8iOnp2i6mb4jyPnjF+mN1IhOTa/K/a7uYXkfUOqUTr4Y0oLo0tU5omaa2zuYBzoJn61J59MZ0+zpjcjH9Tl4+3Ms8YkIdytEb80XrYvVqzu+blqdS1ampL+vrjMn57fTYyctH23baPpSqLk2tDGW623I/7/fLr48dq01NfTn06haT0fpgOnG+U9ugwh3sQzq1TNOICnce2r7F5Pxy1aupre+iz7Yv+YJAQaAgUBDYQUCvs5ru1KS/B6xcn+/GkF10+zpjctYPm3fy8lHuuywq8fwUr7hI6xodM02tAsp0t+V+3p8Hfn3sWG1q6svZe4mYjN9m5njifKe2M4p2DlSXpjs1izkXsRey7Y9BSMb66uedPB+yt23r67LHqkvT3Dor5/fN1qXy2AzZpY2vMyYX0+/k5aNcu2IIzZZP8Zot7nWkY6apVUaZ7rbcz/vzwK+PHatNTX059OoWk9H6YDpxvlPboMKdcyGkU8s0jaiYO29icn656tXU1vtjEJKx8n7eyfMhe9u2vi57rLo0za2zcn7fbF0qj82QXdr4OmNyMf1OXj7KtSuG0Gz5FK/Z4l5H04ha1WIvGFq2bqmdiDY/eD8GBMv6afO+zwOa9FXvmuNVwKiXD70ar+cwvoRdXs+BKl4XBAoCBYEAAva+xeYDov2KBvyysH7avO/ggCZ91bvmeBUw6uVDr8a7Zhhbd2Q3wGbPfZtvDUZTgwHBsn7avO/CgCZ91bvmeBUw6uVDr8a7Zhhbd2Q3wGbPfZtvDUZTgwHBsn7avO/CgCZ91Wt17NaodWAsGJGUOTdwfIhQSq4v0l110257ZN/8vqV8LXj5aKXnjfvL0ALGLzVm8x7vlNBukfMr5eei5tZO70uuIFAQKAgUBMZAYBWu9SkfUn1e9PcivqR8XdR3Y8qHtcJrAff0TWO2SnilxnUd5lby5EgB3bFu3fFa5D1903mwDvNrpfAq166Zs3bdz8Vy7ZoZzuQBY71S5yLeLuB8TM3xFGBj4DUXUZtyYGF17luku7WuALexOLQNq8/ms3zqiVeWjZ5CrfvU016s+RQqyUzzMeEllq8KXlMIVhmsqZMlUxAoCBQECgKdEOh5jV/Ed9bQNqw+m8/CrydeWTZ6CrXuU097seZTqCQzzceEl1i+KnhNIVhlsKZOrkCmJ06LGPehbVh9Np81Gj3xyrLRU6h1n3raizWfQiWZaT4mvMTyVcFrCsEqgzV1cgUyPXFaxLgPbcPqs/ms0eiJV5aNnkKt+9Rgb0rU0veh+6/Oatrgy041DWSPtWvjZ0zHjrFuuTHw6uZJjVUfvBQjTTv7EWmoWLUZt4iqabH6qum0oiHj5PmQPdRWfU2p0XaapmS71OX40Fav+qppbnsnz0ekYY6v2lTTXNtFriBQECgIFATaIaDXWU2zW9NA9li7Nt/fMR3ZvkQEc75vIk2HL+6Jl2Kk6dAOKlZtxq3JB/VV0yZ5rXfyfMgeaqu+qnwo1XaahmT6lOX40Fa/+qppbnsnz0ekYY6v2lTTXNu5cjk+5OpSOfVVUy1vTGkge6wdvuZuMR257WNyY+AVs9VY3hMvxUjTRnstBRSrNuPWZEJ91bRJXuudPB+yh9qqryofSrWdpiGZPmU5PrTVr75qmtveyfMRaZjjqzbVNNd2rlyOD7m6VE591VTLG1MayB5rh6+5W0xHbvuY3Bh4xWw1lvfESzHStNFeSwHFqs24NZlwSx84hROtQ4c4dwEj1UY7T5qSS9U1gdJUb/FKOtGkyKvv6nOq3SrgNf0LQMpRD4ucw67qctotc34pXqtwLjIOMbx0bo05Vjm6i0xBoCBQECgI7CAQu2bvSMznUm30Wr/M70XngzqScna+a8mSrqpS7dTNZeKl9xHRL/AkKvHKVL/jreL3EbbNKuBV7rvsiITzbn5PJvkq4JWakxM33emQkkvVhVHIL7V4DXk+dvU51W4V8CrXrvy55SRX6FzEn9j80rmV07uYjpy2KRl7LpZrVwqpus7iFR3YZjVzEl3HN9VO5xdpSi5VN+do2wJ1YkAj0zVqmbBsfXSrf331OEcG/GgatM6m+oAlRheJV09XO0PkGmLcdrajNqti7P6Mrd9CMDc/1wSvgdyUubFdbW1tVi+eP6/27EkjP8YcsDrtuMQ8sfIxGauna34IO6pjSD9Vp+1XSr/Kp2Ssrq75vna0PfaH9NXq1b6l9Kt8Skb19En72tH2+DCUr1an7VtMv5WPyVg9XfND2BlCB/5vyrVye2tH205uuHHoipNth1+jjElPpYvEq6erFs72eYzbzrbX4FpYFWP3Z2z9FoK5+bkmeA3kpoWidd75MBmsSdJaBw0WObfaODg3N9o0Tsn2AWvBePV0NYVCcx3G7eRobhGUsCrG7s/Y+m0H5+bnmuA1kJsWiv+fvTP7jhtH0j21et/38lKyXeXap3t6Tk/PvMw59+X+3ffpnnNfeqbXcneVl/JS3qpsy5K1WNuNXyAjBUEgSDCZypRF2imSQCAi8AFkkl8Gg9nb6kNvsHqrbB002Mu5lePgrrmR0zglOwhYe4zXgK6mUKiuw7g/OapbRCV8FUrUIjVox3ylOMl+inPx5XNs58jSL7Oj/lDQYDEdZlvXttNAH01MpzaXnapfdkw+12yufFM7BoO1Z99s69p2TDBz7evV+SX6UipNPiUTcyFXvqkds23tWZttXduOCWasTac26e2k5pcvn2s2Rz5lZ2Njs9jcEqI20U+/vYml5E0mtd6l0wpEcUy3Vfs6Y3J+fZPtNuyEOtrwc4dOf6cmXm34EMPTd4X6XDth+yY6Kv3yjXR4xeDa9b2oQr3BDMfUh9OUhTJWPsi6DTtt6LA+bMkPW3xYduiVHfa76y6FJvpnF14lx6E1NvnceZUr39RO6Cf7ZlvXtmOCmWvzS5vJTuo6AhmTzzWbK9/UjnXf2rM227q2HRPMWJtObdLbSeHly+eazZEfxI51P6YjxwfT4699nUwc9rtzl4/Qzu1deMkApMbA5FMyOy24vVz5pnbMtrVn32zr2nZMMHPt69X5JfpSKk0+JRNzIVe+qR2zbe1Zm21d244JZqxNpzbp7XTnrnIAQ7x0LBL4+/IJsV0Gc2RpbHbUn13a6hWYDrOta9upp2KXlOnUCtlJzS1kTD7XbK58UzvWQWvPvtnWte2YYOba1wsYfaI2U8+BEd8B2IHpde+i6QD1t+vqaBHY2tostjbSPoTH4oDnwr6xHXp7O8O4YegbrLnh+9Wkr4O2L3PT16vfqOJcyj+TT8mU2copNzu0aWJr0PZlvvp6xxGvJljRV79fTXWEmPk6+wZEeZl+X75MJrTRZH9QO3577A/T1yb9G7c2IV7j5t+w/KHf3dwYFrqd3iYIHNRjsQlWtDmoeHXnrqYzpms3LAQO6rHYFM+Dite4n7taI2q5uOwPsuxUXWyafJWcBo7U0Fc2MVN2+v5K45gfVfVlNuuUm18qW6N/Mf9CO+ovf2roC9vafsqO4RGTsbo6ekwmZ43Nvo0a/Yv5GNpTffypoS9sa/spO+ZvTMbq6ugxmbprs6c2ejtWFtNBXQ+GWHW/zHxO6eoLRzaq7KT0Wx1qm9qPuKRF5pftVOk3+Sq57tzlEK/CCSkdX/6IcB15p3nn31Q7mz8xGaszbTEZq2uyRl/fhuxU6a+qxwfVx58a+pCPLSk75m9MxupMZ0zG6nLXpktt9HasLKaLuh4Msep+mfmc0tUXjmxU2UnptzrUNrUfcUmLzC/bqdJv8lVy3bnLIV6FE1I6vvwR4TryTvPOv6l2Nn9iMlZn2mIyVtdkjb6+Ddmp0l9Vjw+qjz819CEfW1J2zN+YjNWZzpiM1eWuTZfa6O1YWUwXdT0YYtX9MvM5pasvHNmospPSb3WobWo/4pIWmV+2U6Xf5KvkunOXQ7wKJ6R0fPkjwnXkneadf1PtbP7EZKzOtMVkrK7JGn19G7JTpb+qHh9UH39q6EM+tqTsmL8xGasznTEZq8tdmy610duxspgu6nowxKr7ZeZzSldfOLJRZSel3+pQ29R+xCUtMr9sp0q/yVfJdecuh3gVTkjp+PJHhOvIO807/6ba2fyJyVidaYvJWF2TNfr6NmSnNaIWZ3KdrZLvOyobVaHSKTCq7MTa9m036FdMX6ysiV8xPbvKcH5oyqtP0MMy3bpef5B3gThYga+6ajha71fP9Ry9VbLan16nhnEs+niFyPt1VX6Gbevu5+qtku/7LBvDwCvVr75tEaryM6UnVTcsvbWu/lKOVdSBTcr3VF2F6mR163r9QU5azq/0Ve8HvKqw1f70OjWMY9HHK0Tbr6vyM2xbdz9Xb5V832fZGAZeqX71bYtQlZ8pPam6Yentzl0p1L06f5C94jY2fdVsp8Y6VTeILzl6q2S1P71ODeNY9PEK++zXVfkZtq27n6u3Sr7vs2wMA69Uv/q2RajKz5SeVN2w9HbnrhTqXp0/yF5xG5u+arZTY52qG8SXHL1VstqfXqeGcSz6eIV99uuq/Azb1t3P1Vsl3/dZNoaBV6pffdsiVOVnSk+qblh6D8K5azIF7KjrdGD5I59hDLKvk4laNlnDulHjkrTfwysp00KljxXqQixbMDF8FT2sfN/bMhrqDPHy7aTqfLlRbmt/9giv8HjzsQzrRolJynaHVwqdkrre/Cqpba04PN7C+dWaoWEq6mHl+96WuVBniJdvJ1Xny41yW/uzR3iF5ycfy7BulJikbHd4pdApqevNr5La1orD4y2cX60ZGqaiHla+722ZC3WGePl2UnW+3Ci3tT97hFd4fvKxDOtGiUnKdodXCp2Sut78KqltrTg83sL51ZqhYSrqYeX73pa5UGeIl28nVefLjXJb+7NHeIXnJx/LsG6UmKRsd3il0Cmp682vktrWisPjLZxfrRkqUTTWRC0+D3scfMBDjFJ1oew47BtWw/Lb9FtfRz15zY+m67A/TfWUtQv1+3il6sr0jbo89Lltf9DvLx1ePhq7t0O8fIlUnS83Lts2t4blt+m3/vpzizLfblhnbcZpHfanbd9C/T4mqbq2/WhLX+hzW3pND/r9pcPLR2P3doiXL5Gq8+XGZdvm1rD8Nv3WX39uUebbDeuszTitw/607Vuo38ckVde2H23pC31uS6/pQb+/dHj5aOzeDvHyJVJ1vty4bNvcGpbfpt/6688tyny7YZ21Gad12J+2fQv1+5ik6tr2oy19oc9t6TU96PeXDi8fjd3bIV6+RKrOlxuXbZtbw/Lb9Ft//blFmW83rLM2ba3Hnqhtq6MpPT7goVyqLpTt9ndO3g6PDoFcBPzjzd8O9aTqQtmPeT+FQ6ruY8akad86vJoi17UDAX/++NshOqm6UPZj3k/hkKr7mDFp2rcOr6bIde1AwJ8//naITqoulP2Y91M4pOo+Zkya9q3DqylyXTsQ8OePvx2ik6oLZT/m/RQOqbqPGZOmfdsrvFrNUdu0s22181ntXABT8qm6tnwfhZ6meFXhUVU/ir62YdPwyu1fSj5V14bPo9TR4VUffcOKFrlzIiWfqqvv3fhJNsWrCo+q+vFDop5Hhldu/1Lyqbp6Xo2vVIdX/bExrGiROydS8qm6+t6Nn2RTvKrwqKofPyTqeWR45fYvJZ+qq+fV+Ep1eNUfG8OKFrlzIiWfqqvv3fhJNsWrCo+q+vFDop5Hhldu/1Lyqbp6Xo2vVIdX/bExrGiROydS8qm6+t6Nn2RTvKrwqKpvA4kuorYNFDsdBwoB/4A/UB3vOtsh0CGwrxHozl37evg65zsEDiwC3bnrwA591/EOgX2NQHfu2tfD1znfITBSBMaCqOUk1saJzJhtW+cg25YPOTabyraBFbYNJ1vn+LNf8GrTT8PJ1nXxatOHujabyrXpKzjlYoXfbfrQFIe67dry1XCydV37yLXlQ47NprL42sZiONk6R+d+watNPw0nW9fFq00f6tpsKtemr+CUixV+t+lDUxzqtmvLV8PJ1nXtI9eWDzk2m8riaxuL4WTrHJ37Ba82/TScbF0XrzZ9qGuzqVybvoJTLlb43aYPTXGo264tXw0nW9e1j1xbPuTYbCqLr20shpOtc3TuF7za9NNwsnVdvNr0oa7NpnJt+gpOuVjhd5s+NMWhbru2fDWcbF3XPnJt+ZBjs6ksvraxGE62ztE5arxGTtS2NQgGetNBsPbjvja8bD2ovx87XobPKPFq2wfT1/bax8jfbttOpy+OQJNjMa5pPEttTtl6UC+b4NWW7UF9H0X7JniZnwcZN8PgY1q3PZ5N5lbbPgxzfMxXWw9q62PHy/AZJV5t+2D62l77GPnbbdupq28cfEj52rZ/H/uxaHjZOoVtnbqPHS/DYJR4te2D6Wt77WPkb7dtp66+cfAh5Wvb/n3sx6LhZesUtnXq9itetXPUApTfyXAfkGJlVeCh0wbB1r6dqvaD1pvNQfX47WM41C3z9cS2Q7z2Eiv82W94+RjGxsCvH8a2j1dbYxXrR1gW7tfpmz+3kG+io46dmMzk1FQxOTlZTEy0hVLMSlfWIdAh0CGwvxHY2twsNuTDmqXJedo/19OeZS/PvGbTWW7nbwyHumVVHoR47SVW+Lbf8PLxjI2BXz+MbR+vtsYq1o+wLNyv0zd/biHfREcdO2Uy2POXYeEV61eszPcltu3jZb635XPMXlhmNsPyQfZjONQtq7Ib4rWXWOHbfsPLxzM2Bn79MLZ9vNoaq1g/wrJwv07f/LmFfBMddeyUyWDPX4aFV6xfsTLfl9i2j5f53pbPMXthmdkMywfZj+FQt6zKbojXXmKFb+OCVy2iNnTW9v3BiJVVDYLV+4Nh4OzFgJjP2GzLnumswiYmZ3hUrX28fDtV7QatN5/RMyq8cvtgfprvHzNehs0gfR0JXkLOTk1OFdMzMx1Ra4PYrTsEOgQ6BCIIbGysF1tra8WG1A16rrf2mNmr70bfpn3fRLqZVWQ6/T7ULatrCF9jOuu2bypnNmk/KrxyfTc/zXfWVparK1febNKuLZum0++HlZl/tu/LWF3V2vwcREeVjVi92aPOfIjJ5Zb5emlr+6zNTqysrh10WHva+Hrr6mgi59u0fjTR47cxnX4f6pb5elLbPl6+nVSbNuqsH+gaFV65/TA/zfePGS/DZpC+jgov87nNuYUuX6+/788Dk/HLkK2z+Mci8k101LETypjPlNuYhTK5+6bT70Pdsrq2fLx8O3XbN5WzftB+VHiZ77WIWhO2dQiclQ+y9nUOomfUbav64Q/+qH3dL/Z9zPbyQG0Ln7YO8ip/9iM21iciabuIWkOjW3cIdAh0CMQR2NyUjFVyvvS/F+OS1aVV1yvVGsZDoqofbWA1Hj3dOy98zPbjtUV33VU9V6qOm2oN9SR8O/68qtc6LuXrjEvsj9KqfrSF1/5Aox0vfcy6c1c5pvsRG+tN1XFjcoOufTv+vBpEr69zED2jblvVj7bwGnU/99K+j5kdn7WIWgYjXKoGKJRvsq8O9zw1H/xOWFkT3bSJtTf9sbq6dsK2tm+66+rJlVP9/BGDMZtWlqvX5GPtrU+xOmuXWsfaWRm6TX9KR9M61c0fMejbRJ/tN9VdpsP601R/rB1lptfWg/hd1lZ1yx8/O4HZi/lVpqcr7xDoEOgQ6BAYTwTsPB/7XsTjQc/1sfZtfI+Eem3fdA8L7f2Il2HjY2Jl9GeYmKXwMh98v3K3YzqsP7G6Ovpj7SgzvbauoytXZq/x8vsS63cd/2PtfLzq6Ggik8IKfTG/cuzE2htesbq6usO2tm+66+rJlduPeBk2fl+tjP4ME7MUXuaD71fudkyH9SdWV0d/rB1lptfWdXTlyhhew7pnDPvm9yWsq+t7rJ2PV109uXKGVXfdVQ+5/YhX2dyix/THn78+CiN/mZjvTOl2mfelDQavGIHJwZ02DfvaeevEHqwTOCWqGjs2DJ3mTOwEYHVtrNX3XgesH7ZuQ3+no0OgQ6BDoENgjBAYwQl+BCbbA3xfO98eDJWaEjglqirVlgkMQ6fZ2svrLrM5zP6YjX2/HgFIIzDZ3jDta+fbg6FSUwKnRFWl2jKBYeg0W3t57rJ+2Np86NYRBEYA0ghMRjresGhfO1+vz/2IWutr7OC1unoq41KmI6bfWlCHnMnovu30hEIZa2vrOnZMlrVvj/0q/ciwpOxYnZNs9jf0K9QS81PL+OMtMTmvelf//bpw2/oVmAjFovup/pjeaMMahdY+5VcUh16DWLtYWR07vruhfNQHv0FvO2zni1idX5a7bTpifTRdoa+632tg7UIZa2vrOnZMtlt3CHQIdAh0CLSLQJ1zcHge1307yffcCWVCL+vY8dsg75uo0m9tU3aszmSbrEO/Qh0xP7XM74w0isn5uqrshLLsByZ8kdLtlJ1B8bL2Kb+iOPQaxNrFyurY8QEI5aM++A1622E7X8Tq/LLcbdMR66PpCn3V/V4DaxfKWFtb17FjsqxD+Sr91jZsZ+W+Tr8sdzul33SFvuo+f7wllPGqdLOOHb8N8r6JKv3WNmXH6ky2yTr0K9QR81PL/M5Io5icr6vKTijLfmDCFyndTtkZFC9rn/IrikOvQaxdrKyOHR+AUD7qg9+gtx2280Wszi/L3TYdsT6artBX3e81sHahjLW1dR07Jss6lK/Sb23Ddlbu6/TLcrdT+k1X6Kvu88dbQhmvSjfr2PHbIO+bqNJvbVN2rM5km6xDv0IdMT+1zO+MNIrJ+bqq7ISy7AcmfJHS7ZSdJnhpRG2ThuYhnajqSI7+UFdMfyhjvuTYoY3J29r0lOm3+lDeylmn6qiP9YdyfzEdtvbr/O2YnzH9MTn0mH5b+7pT2758zF7Y1uRt7dfHyvz6Mt99GdvO1RXzPVZm+m1dZQc5X8bfbrM/5o+/rtLv++K3i22HumLYhDKmJ8eOtenWHQIdAh0CHQL1ECg791rrnHNwqGuY53rzy9bmb+iDlds6lLdy1qk66mP9odxfTIet/Tp/O+ZnTH9MDj2m39a+7tS2Lx+zF7Y1eVv79bEyv77Md1/GtnN1xXyPlZl+W1fZQc6X8bfb7I/546+r9Pu++O1i26GuGDahjOnJsUObMvky/U3tWDvWsf749WyX+RXKsR/6GtMfypieHDu0MXlbm54y/VYfyls561Qd9bH+UO4vpsPWfp2/HfMzpj8mhx7Tb2tfd2rbl4/ZC9uavK39+liZX1/muy9j27m6Yr7Hyky/ravsIOfL+Ntt9sf88ddV+n1f/Hax7VBXDJtQxvTk2KFNmXyZ/qZ2rB3rWH/8erbL/Arl2A99jekPZUxPjh3amLytTU+ZfqsP5a2cdaqO+lh/KPcX02Frv87fjvkZ0x+TQ4/pt7WvO7Xty8fshW1N3tZ+fazMry/zXYnaskpfwSDbw9aPb1UADOJ/2DbVn1RdqIf9lHyqLqYrp8zHK9dOrnzKr5Quq7M1evztUG+qLpQN9308wjr2/fo6dnwZfzumu6wst53J2zqmN1UXky8r8/EIZVJ1oWy33yHQIdAh0CHQPgJtnetTnu3luT7Vn1RdzP+UfKoupiunzMcr106ufMqvlC6rszV6/O1Qb6oulA33fTzCOvb9+jp2fBl/O6a7rCy3ncnbOqY3VReTLyvz8QhlUnWhrO039atpO7NbtR62fuw3wavK77L6VH9SdTF9KflUXUxXTpmPV66dXPmUXyldVmdr9Pjbod5UXSgb7vt4hHXs+/V17Pgy/nZMd1lZbjuTt3VMb6ouJl9W5uMRyqTqQlnbb+pX03Zmt2o9bP3Yb4JXld9l9an+pOpi+lLyqbqYrpwyH69cO7nyKb9SuqzO1uix7X7qAyuIGbG6VGdNJtbeN1hWX1Wesp2qS+mt8rlpW/T6PqEntBXu+7ZSdb5catvsx3RZHe1j9WV6c2R9HVXtqPd9om3YJtzP0e/LxrbNNuvQjtVZu7DeymPrHFm/faqd1VX5ZXK+XttO1ZlMam22q/Aa1E7Kh66uQ6BDoEPgoCNQdY6tqq/Cz871yIW6UnUpvaGelGxYl2pLne8TbUP5cN/Xn6rz5VLbZj+my+poH6sv05sj6+uoake97xNtwzbhfo5+Xza2bbZZh3asztqF9VYeW+fI+u1T7ayuyi+T8/XadqrOZFJrs12FV66dXHnzMdXO6sxn2lhZnfYxeWtXd52ynapL6Q/7kJIN61JtqfN9om0oH+77+lN1vlxq2+zHdFkd7WP1ZXpzZH0dVe2o932ibdgm3M/R78vGts0269CO1Vm7sN7KY+scWb99qp3VVfllcr5e207VmUxqbbar8Mq1kytvPqbaWZ35TBsrq9M+Jm/t6q5TtlN1Kf1hH1KyYV2qLXW+T7QN5cN9X3+qzpdLbZv9mC6ro32svkxvjqyvo6od9b5PtA3bhPv742ViPgr7ZDsEei/d9ieBvx36MEofx9WXEC8fI3879L/b7xDoEOgQ6BDoEOgQGB0Co/yO9q8d/O0QjVH6OK6+hHj5GPnbof/dfofAx4LAKOe5f/z52yG2o/RxXH0J8fIx8rdD/7v9DoGPBYFRznP/+PO3Q2xH6eOgvkxuSc9SnfMN+B2lTd12vo42tkOf8cs+begv06F9lj91+z3ueJX1s61yw6uuvhCvuu3almN++cu4zq1xwGtUx6I/Pt12h0CHQIdAh8BwERjVud6uI4Kv5dLOht+LdduVKmxYUYZXQ3W1mxledRuEeNVt17Zcd91VH9GyueWPZX1t9SVtbtU9pnx/tG19U61KdnjlwVmGV56WfGmbX3VbhvOrbru25bpzV31Ey+aWP5b1tdWXtLnVnbvqYfax4VWv182lDK+6Gvz5XjUnXURtlZRn2VfuFe/9ZobPrTnXwObI8Wrgcxt4qdme7RwXfLxy2rXhs+po4HNrtlGU2emR49XA51bx6pR1CHQIdAh0COwNApnfT6041cCm/73Yig+5Shr4nGsiJq9me7ZzXPDxymkX86FRWQOfG9kpa5TZ6ZHjRT8yfS7reqPyDNs+Vo1stdUow+e2TDYZo5HjNQqcBHA127Od44KPV067tsd4JLbpRKbhkePVwOfWxirTto9Vqz7kKssc41z1UfkGNkeOVwOfo33PLFSzPds5Lvh4pdpNNglF9ZX7/cFQypgvO9A2DpQ5MZDiisY9u7mmTd7WWBkmVr4dG98dZRXdbKNa7fFHPrm2Td7W+HOQ8GqK/yjxaupz165DoEOgQ6BDoDkCw/xu3OEVXzD+l8yOyiHu9OzmmjZ5W+PhMLHy7XTXXdXzYdzwqvY4LuH3Y6/nV9yj4ZVqX/njd7qGuTLxYeK1w60GPu9o33SnZ7es/2VqTd7WyA0TK99Od+4qG5Xt8nHDa9uzvC2/H3s9v/I8HVxa+8ofv9M11JaJDxOvHW418HlH+6Y7Pbtl/S9Ta/K2Rm6YWPl2PtZz1/SOTpYhHykP2zEQOhqsw0rKBlyGoDLbo0F82NVWARPIpGJXXbZnuxsMQ+duK+mSQXzw2/pzq8NrN+Y+VtT6eA1lcomN0OZur7qSDoEOgQ6BDoFhIjDsc/04nOcH8WFX2+66Kzkdfbz8udVdd+2GzceKWh+vYV0ghTZ3ezX8kqY+hO2GjVdob/jI7LYwiA+72nbnrt0AeyU+Xv7c6s5dHki9TR8riny8unPX6PEKx2e3R8MvGcSHXW27c1dywHy8/GPRzl3tv0zMt5h0rd3K3jxoV+kwtY0Ip2F2aVi6FSr+yGcUsO27uWUDMQqwxPa+xctw69YdAh0CHQL7CYHuXF9vtEaEUz3nxktKoeKPfEYB2769jhgFWDJMHV55x8++w2tE8yoP1fGQVqj4I59RwLbv5pYN2yjAEtsdXjYA9db7Dq8Rzat6aI6XlELFH/kYbNNtudhX3pbCDD06aeWPsc8ZTUcmOlK87Cj3JsLIgKhp2CZsTfHWxPpzSzROjMqJzN6MdG7h6z47FjPh7cQ7BDoEOgTGAoHuXJ83DCPFq7vuqj1Y3XVXbahUsI+XTHCd43nNRyI90mORHu+z69SR4tWdu2ofI/1jUVp094zVsPXx6s5d1WCJRIdXLZj6Qv0X/e23+dXvQVG0RtR6Ovd+075E9t5yZ7FDoEOgBQS6Q7gFEPeRiq3+t+dupyeGcHWLSj5TU1vFtHzrbW4Wxfo6aymUpcydmJ+D+BfqG0TXbuS6kg6BPUSgO2nvIdidqQ6BDoHWEOjOXa1B2SnqEOgQ2EMEunPXHoI9HqYaE7U2V9xt7mg7ww04/tT1Jdf3XPkYGm3oiOltVNYDalzxGieswCg3UjvHf5NlHOuORzjmpqNp+1DfIPu5eOH7OPg9SJ+7tvURgKi0j7Vi3wjLcG0yg6yNpJ2e3iqOHdssjh8vipWVolhamig+fCiKjQ2I2t2z0PxkbYv5x76/bfWpdajP2ts61bar6xAYNwS6667MEemdYnafaeJ67KwzLPnQaq69sH2b+/S5u+6qj2guXrljnSsf87wNHTG9Tcq6c1cmar2T0LDORYPOjUHbZ6KRFM89FlGW47/J0q7ueCDrL6ajaXtf16DbuXjl+p4rH+tPGzpiepuUdeeuTNR6k7zuXM8d61z50Ps67RsRtaY4NDjK/bqD4PtIP6ra+X2tI+/rt21fh5WNcl3VZ9+3XN9z5X1b4XZTvEM9g+4PE69BffPb70e8fP+77Y8bASM8JychZiWktX956vrtCNXJYnJyUqNfKYUj5UMELGSqx5m6Rom/okZ0bUkULZG0RXHo0FZx5sxWcfZsUSwuuuhayNq1tYl+dK2zgy2Opi1pv6m+bpOpE+LLZM+XbYI54UavaluXyaJzcnKiR/iydn3d7jO2THrn2mGFTvq4XYc8UcJl7bYlu60OgcERyPluNGt1vqeQsaWOvMn6a1+HXz6q7Ryscn3PlU9h0BTvlM4mdcPEq4k/ZW32I17Wl1zfc+V9O7Y9Luuc+WU+1+k/MrbUkTdZf+3r8MsH2paLBvrsrjvkokH29cdjuVhwPyKjPW45B6u4hnLPc+XLNTnvc3xN6RqkLscH6z/XvXrt2zNM+ZaMzeYQL+awkePrIJik2jbxIdf3XHnzl3bjtgwLL7+vHwteOVj5/a8z5rnyKZ0pvGsRteaMdZi1lcUMW53JI5NyIqajaVmOHd+/Mnt+X+vIoyf0wXSUtR9nvMz3MnzC8lz5GF6mM4ZXDKuUDtPV1joc21Bvbv9NPtbXULftl/kQ0xHDq6y96W9rHbMd6o75HMp0+x8DAswGbgg2i9u3t4rPPpsqTpwQ9lSXcEY6onF9fatYXd0qXr3akM+mkKuTxfv3k0KsesxkT8POlZt5V65sFFevTgg5OymRtJPF0aPba/QuL2/qZ2UF3VvF48frxaNHE1LmbmBOnNgsbt0qips3p5VQhVR98WK9+OGH9eLnn41QTs9gdwO0VZw6Rb+LYm5uWglZbpbkv3zcmstl9vFlZYU+b4o/hawhrXfamJnZlP5sCH5bxSefTMpnRnAtBKvN4s0b2m0VT544bMO2O3Hq9j4mBNys33njFR5Zw+pvjp2dsznuETKx/sSlXWnog+kosxfTH+pI2RukrsqO+V7XRq48est8iOEVwyqlo67fdeXKfLX2uf03+VhfTWe4LvMhpiOGV1n70M6g+zHboc4m/UdHrK+hbvZDH8xeTDYmb2V17ZXprVOeMy51/PH7Wkc+1lfTUdY+xDemI+z7oUOHisPyOXXqdHH+/Dm5HjpazM+/K+bfzReLCwvFgvx6vcYjRhVLFV7me4WafnWuPA3LfIjhFcMqpaPvWEsbZb6aeuv/uXPniitXrhTHZFzW1zfkaa8PxS+/vJJrwFdyzbtm4noMVunsC/c2yuTr4lXWPrQz6D52WGJ+uRpX18SflE7TzTr0wcbHl/G3Q3nTUdeeryt3OweHOv74fa0jH+ur6ShrP854me91xyFXPoaX2YrhZVjVImpNkT8pYkrNCZvp9uiSGfPbm84213XtlPle5kuOfJkPZTpU3hr1hGyXdVm7Ml9zyuvayfUhRz7mQ7J9r4HNLfob05GDQ13ZunaS/keM5cjHfEi2D/CKtY+4NHCR2RlYUafgo0DARYlC1K4L+TlT/O//fUYuSg/v6hvBA5ubW3JhCmG5WSwsrBd37y4W33+/Ujx/zsVrIR9IzeSs1wiRy5eL4ne/O1TMzR2RKNrZ4uTJaYmsnZQctRDBW3IxvCU2NoT8XS9ev14r/u//XShevlyXMkfUkibh228PF//rf53VNjMzk8Wf/jSvNzdPnhBpm/aBzkHUEhFx4sRG8ZvfHCn+67/Oig9E0sq5vdfe1LA/P79WvHu3Jv19L6kZPog/7kgyWfRB1J46tSH4FcW//utR6eMpJWoXFtaKBw+WBbtlIZw3NTpjF8BdwUeJgM6S3knXvhvtHMy6eqY2h6WunVwfcuTLfCjTofLWqCdku6zL2jVHabtlXTu5PuTIx3xItu81sLlFb2I6tnvZ3lZdO0n/I+7kyMd8SLYP8Iq1j7g0cJHZqaMo6X+gIEfWb4o/1tbWfj3b6nPPcZtf1g+/fdiujf26dsp8L/MhR77MhzIdKm+NekK2y7qsHUTtiZMni2vXrxV3Pr9TQAw+efJEPo+LZ8+fyw+9q5VEbR07YFLmw7DwStrrOW1zCx/q9qPM37rlde3g//nz54uvv/5a14zF+8X3xd1/3C3evn27g6jFdrK/gXMxH5LtA7xi7QMTreyanTrKkv4HCnJk/ab4Y21t7dezrT73HLf5Zf3w24ft2tiva6fM9zIfcuTLfCjTofLWqCdku6zL2pX5mlNe106uDznyMR+S7XsNsojapMIQMRHOkg/b79N9+myDkdWFgwhWDYDAcgc0CYB3yNXQ3VRkr+w08a8KrwR8TcyVtsm1M86Ylnayq8hAgJnJhxyxk8Xly4eL69ePKsEI+bi2BnEK+SnHu/xxZC1Rr/LGL2k3OzshZOua3FRsSoTBRj+6NnTAkZgQmZsStTsrn6PFtWtHhCidKQ4fnlRiFnIW0vX4cb7+ZjQS9dSpNYle+CAk6YaQnBsSOetSI5w4MVlcvHhI0iZMSvup4tmzZYlmpQ5fqyJ7nXeOXCXlwnRx48bRXh/pp+urvz59ekb6Blm7Xpw+/UHs8ujbpOTR3T5CIHlnZwuJiJmQm60ZiRo+ojjOz08psX306LIaxq4RvCFO3f4+R4BDKbYwp2LlH3kZfS6DJNn1gwhWEhBXCZY7oEkAvEOuhu6mIsO0c+r0aflOulycPXO2mJAnJ3gEeX1tXb6TOBe/06i212/e7HL9mHwZ0O7ixYvSTp6ykJP5xsamEitLS0va7tWrl4plo/m5y2K6IDFM6YZDqs0aMxHOkk/4fPzEieK8EJFEj84emi0O8YXJF224yKBI1nwZs41iQ94uShTj0vJysSxjtygRpgsLi1LHNcjwFrxqNDci3Ul56aJpTxWXLl0q5ubmisvyS+/0DNdA8oO1EIOvf/011Xz/1iUAzoSwMQZ17JwSEv3TTz+V6+Lrcp26WizIeedXGZN70z82tlunYdW5PgFfHfW1ZfbKTl2H6oxZX5cIZ8n3G+7vjcZjdhDBajLUPYBrEbUpTPULpnekI6eyQYNgN8td+wKro6OOTJbxhsJlfvSxAqeekK6CBsFubS8MKxrU0VFHprbxhoIpHwwv+6Wq36+gUbBb25MOr9pQqaDhVRfvunJ5XnTS+x2BafnWgfjkI1yi3AhB1HKTtKmRq7Ozk0JEThZHjhRCpk5J2WRx4cIhucFYEvJyuXj4cE3J1MXFnZG1EJOzs1tyobtVfP75TPHll0dlm2jaQ/0oWqJVX71aUeL23LlDQnZOqw1I3C++OK5yR4++F4J4TQhSuYXpTXqicJ3PU0oaQwhjz+rLxsTJuFyy9OnYsSntL7ohXImu5cMCqUoZvpw/Pys3mRPi37oQyUQZO6ycnNOHTxDYyLOsrk6pj+Tj7UhaheSj/qNzT6YOs0dnkJtG/T4Hu/3yOhs55/pB7NTxpa5MmR/al16Huusuh2YZVtQaXgfpugui9Q///geNaJuSL6iZ6Sl5omFZnrZ4Xzx4+KD44x//KGlldhO1p06dKn77238tfv/73xdT0mZa2mo03Psl+VHvWfHf0o7Hl/V8XHciB3I5xyJNU2MbqB7absoHm184ipzKBg2C3Sw/0X/mzBl5GuY7uQ74TMlaxgkCfscigpC0nEdXV1eEnF3WNAAvX76UJ1leFo8fPRLCbGXoRC0+BZ713exjhUxPSFdBg2C3397fOHT4cHFacLh44aL8uHtVI2shp3ms/vXr18WjGSGzK5Y6dipUDFyd8qGPlwiZnK5tp2c92K3tk+rP0JFjhx8Xrl27JimyPtNzyPz8vKTZ+kHPKbUdjAimfDC8hn2uT/ngu1xXzm/T9nbKB8OLyYWcygYNgt0s92x+1dFRRybLeEPhMj/6WIFTT0hXQYNgt7YXhhUN6uioI1PbeEPBlPZKy8EAAEAASURBVA99vETI5HQtf2oRtUmffLSSgvmVQ1Sd70zLLeibDUbLqj8+dR1YH9+Ydj06gAi4Mzq5Xolo5eNSEGxqBOmLFytaBvFI9OqRI454JMr03LlZLZuZgZxdEvk1yRNr3xC9l2LIHRcE6uXLk8U33xyT6ISjSvBihxQK8/MfJCJ3WT5LciM3Kzdhm1p/+jRpEWaU1D1yZFJ1//jjB7lJJ22Bi/QVSlUumB25fPgw5ChRUxDM6WHkAmViAmIV3yB7p5SQhpSGmEUnhKtdyExNTYsM0bcz4tuUfNY07yw5dX1SGHn3kjSHJV5ABNNXyN5u6RBoioAdVU3bj3O77lIiY3QOEFgQeXe+uFP8+x/+IOfQGTmX8mQDEZULcq4/XPz08Cc9X7tzMOfzSTn/TskPh6eFDPy8+I//+A8lVIhQXJaITHJ/3r9/T/KFP8oAPC360QzHEE8wpvr48ePFjU9vFN999y/yHXqhuHDxgoJLGiL78dT9mOlywEPIEgH95s1rua74Wa4Rnqo8c4BHz4m0XRdSc5TLoOM/K/P6qESAnzx1sjh77qz8GHxB5+nb+bfFMcFrWn5o+GiWQcEaARBHDhNUcE4j9Pmxh/POCSFvJ7nQ65bxQMBOMEPwZoiqh+Btnsp9eDjmdbBN6QhYSaLWJk6SUOxVJmUadgKdEZ8baks3i/XVyqxlVR+rfNX+9JRU6TKbOWvVLw2GoTv0w7AxW7bvy1mdX2bbJp+Soc7/pc/atrVW/aIs5UMbtmJ9tTLTX+WDyafktD/yJyVj9pqsVX+Thl2bDoEIApYndnFxvfjnPxckaumdSkFo8qIxHus/f/6QvCzriH7IM7uxcUyiDbYkonZNbpw3RJ5IUz4uFywpCSB2IWmJmIUYffPmg+R8fVf8+ON7iW4ixcG6RKquSKTNe0lFcERu5k4Wd+6ckGhX93V45gxpEgq5cdtSUhX/II7xF1KVF5PJ9bPcyBdK1qaOOEjaqSk+RNC6I5MUD6urG6oLfX57CFjkII5v3jwiRMGGYLMhN4v0z7WPQNkVHUQEZDoMY0agk++bYegOhyn2vWZlJlvlR5Wv2p+ekipdZjNnrfqlwTB0h34YNmbL9n05q/PLbNvkUzLUHbTrrqlJfhTkCYujStTOCOEKGTs7e6g4LdGZR+TxDvbd9wxPbhyS74GjGrkJyUs0HPnPJ0UPC1GKEC0zPD4y4KLjITpSYzagCW0emxtWZvqrfDD5pFyvMiljBjPX6MQHxnNGIkSJIj18RD5CgpHCwAhX0lpA2s5KSoQZ+TC+pEdgzI4ePaaEGePJj6mPHz+W/PjPi3khbP0l1lcrM7mqPiKfktH+9ARScmYvvZYndqQ/zFHw4YcG+0ySxomLjyEuho1ZsX3fpNX5ZbZt8ikZ6vbruYuIb+acjQnR+aRTsf5a/w0PK7f9cG3yKbm9wiv0re39WF+tzGylcEDG5JNyvcqkjBnMXKMTH4ahO3Ql1lcrM9kqP6p81f70lFTpMps5a9UvDYahO/TDsDFbtu/LWZ1fZtsmn5KhruzcVXoVYYrNUNk6ZbisTU75sPXjS6yvZWVl/pg86zIZbKXqqB90GbZ+/LO+Duqr6Ur5nKprw/6w9fs+puZGVZ2vJ7U97P4MW3+qb13dx4UA0UmkPSDa9R//eF/8n//zXiNU5dpUyNYJIVGnhKw8rITmtWsQr7OaV5Zo1D//eVFuONbkxlnOR0LUsnDjNTm5KTfP5II9JjddLoUCL+j6618Xiv/3/xaFXJ2UDzco63Ijt1p89dWaRNzMStqDE3KDNqUfiFrSLkCyYguilhy33KRDrB49Sn5bR9LKk7FaXpYLlr5wxuR+HbKWeyH6TJ5cImCJnvUX6vk4ovao4LEpJO17IZldRG2ZHV9Ht30AEGCeDLGbw9Rtbu+c+a60rKzMH5NnXSaD5lSdszzY32Hrxzvr62CeutYHAS/DKdVXq4McMaIWgsRF1ULG8n3SI2pFZlNymTKbyHvKi5moOylELZFvnJvt/GxELbrc7Bts9PZifoV4xTw2vEzWX8fk/XrbHnZf0K8ku0SQQrxC0kLEEqX44cOafP9u9glb0lwclnGFsGWszsgYEoFLhK2NJX4vSmS1T9TG+lpWVtZfk2ddJoPtVB31dRc3P4UIlIsSojSNEIS0Ba+27MT8sb7G6nLL9gqvMr+GhRPjw1gwD8mZzPjYj/sxX1I45OA9rP6Yz8PWb3ZYGyax/ludL2/bMXmr89fD7suw9dOXWF/Lysr8MXnWZTLYStVRP+gybP34Z30d1FfTlfK5rK6UqKWBOWjrMiXWgapBM7k666a6cttZ30Kf/P5bXVX/Tc50Vsnn+mr6Y+umunLbWd9iPjQty/WhqZ022uX66uOVmg9VdabH1il5+pnrZwqbNnWl7HR1Bw8BiFYiVUkjsLw8KTdQRHzw2ZIcf8y8VXkUTF508XpVyUuI0hMnpiXClheFfdC0AK9fQ2Juys0YN9VbcnPNjZcjb41onZ/fEB0TcrM2qR8IVHmaUdIcbMnjf6RFIAKKm/UpaT8t+XBnlFCVa2UhSteEOCaaV3IFSaoC9J84MSEELlGuG2rz/PktIXBdNCxyr17xIUICQhafXIoC+ru66shfUjuQI5eFcluDB3lrSc/AS9dOnVoWvzbEFqkinFz3t0PAEGDqVH0fmGzVuqmu3Ha96b7LHfoR1tXtm7Wrks/1dZeTXkFTXbntrG+e6YE3c30Y2OAACnJ99fFKzYeddRCtzkn3WDzfQ5Nyjj6qLwu7IS/54TF4PhCz169dl8frP5Xzs+Q/tYb9PqLIPv3CrI3cPmcp94R9rCg2TFiX1XnN+5u+vLUzXX2hYKPNPlbpIsfw0ydPipfy5fxWthffL8r3KkSuRE1LCgseOz8ja14sx0vizp8/L0/mzMlLtl5LXvyHfc+tb/2C3obf/6p+h21NZ1W7qj6Geoexn+uD9a1NX3J9aNN2rq5h+ZqaK/5cNPxT8vSpTT/b1JXC2/pmMtZHv/9hne37a1/edJouX87fbrOPTXXltrO++f1g2++/1VX13+RMZ5V8rq+mP7Zuqiu3nfUt5kPTslwfsFNK1FLZH7yet2Vhuchah5o4QXt/aaort53JYzs2yWJlvp/+tsmqTlNshb5gb9tEWCfEIi13FzXVldvO5PEg9Dnc3+3lzhKTV53yJzW3aGm2rd1ObXl7TXVZO9Z1/DB5vAvlw/2qHph8n9CRAisL25rdun6G7f39QXRZ2zI/fTvd9sFDgLnMDTFriNqVFYhaHh91hCQkK6Tm3BxE7QeJcppUstYRtYckN+Cq5AHcELIV9nJTbp4haklN4Ihal2JgU3LNkjpgU0jd6R7ZyeOpLvppYWGbqKUMsvb48WkhSGckJ92mEqZv334QEvmQtHV5Zom8PXFiUlIobEoZqRY2xJdpifidFiJ3QvqwVfz97/hMFO2m+MNnRvx3uXSNPKbfp05tM6/sE21LxA96IIeRPX2a/nzQaOO1Nfdo7cGbLV2PYwjIlNGF9aDn2aa6ctuZPI7HfI6VaScjf0xWdZpiK4zImwjrhFik5e6iprpy25k8HoQ+h/u7vdxZYvKqU/501109fAQYw8YQcxGI8gSFRGNevHRJntL4VKomincSXXlSiNobN24okQdR2/ZiY8469KvKlrWt085k0RmTj5Wl7COvOnuKU/PLbLPOtRP6UEcXBPu9+/eL+/fuaR5aXvJGRC2Ri7xca05I2Zu3bskPwJ8JaUsO13N6ffLs2c86B7BpdtiO+dwvM+KeL/WSxWRVwsSsMNLGRFj3xcQO21xH7cViVnb4kDBs8oj0fe7Jh/sJNVpl8qrTHEjgbLatXZX+VP1uXe5HHeeL1e7WYDWszQ/OK1Xtdmvabh+ri5WZPZsa43QsxvylzPAy38vkfFm2Y/KxspQ+5N24OKlxx8uwYl2nryZP72LysTKHxO6/JuvjFVXaa2q26/q62+J2SVNdue1MHsvWX/Mi3LfysrXJq075k5pb6DDb1i5J1O4ySmtruauyKwgR2Gu4hjk0NnHCPg68b4plXTV5B7bVkoI6OFu3MFlHPtu1BF7Y8+1n697rBvRlr2129sYGAS4kiRTd2JjUj9CbSnZubBDRVGhO2efPV5REJQKVqFfSE1y9Olv8+uuK3GhtSUTTlqYjOHXKvYSMduvrROluCFG7LiQwEbRE2fLhCCHfIBG2G5oHlqhZ9G5tyaOQQtaif3GRKNYtIVzXJF/thpKoRNQaUUsE7/T0htzUFcXcHLl0XZqG5WVI4XXJbbemvskTskLUuhd9ATo2eRka9xj4yGIX04uLa1pHVDGEMSkQLlzgRWfLxYsXpEGws0l3xChw3Z8OgQABjgw7SoKqoewO09bQjnJTLOvuuqs3LfoD6fKd22ThsfiL8jj8pxI9y8vFnj59It8Bx4pLly8Xl4XAJbcpLxCzlAnWLrWGHCQql9y2hyU37qx8pnl8Q74UcIPhgXzbWN8o1tbXihXR/+7dO/2g1yfm8O/suXPFOfki2pQ2m/JD3/ul9xr5yyP7ZcuE5CU9JV9OvFyKtA+ke+CR67dviBp+I9v8ELnRt4U8L1lDjpd14Tvt+GGV3Ke28J25KU+4fFj9oHgtLi4UHyRnL+kgtkb4SAgYElX74sXz4omMIXln8Zs8oKtygbAlfpMq4cqVy0reHjlCDuLTOk7ku/UXoqyPyYeUCqRWOCSpMMDHPaouWPTg0B+ipc9rkhOXceTlZIwjvughaF/8PeWUbSPJEzz8+DtdHBFbzBcifcGb9AUaxd3D3dkhVRPpHT5ItPD7YgE7XPg0WLCBTfpJH/kwP9fkhWq8VA29fJh7zIWZ6Rm5RnqvL2TjWFheXinWJSdw1UIfXJqRWenbcUknckLzOjsdy2JjtVhZXdF5dvLESZE5KmPjyHX9IUWuk3ThPMY/wZr5x4vhwHp5ealYFTzWeHwqsXD8cRzTX53XkoMaHXx4QeCsjP8Mc1/6yUvX1Lb4rnNdbK6syNySHwJIj8GP9xyHzC1+COAYccfZKZ1XYMtRbv7iH2NGBDd+DG0Bo+2pucMMKOp83FF6wHfCg/GAw1HV/b2Gyz9PVvmWWz+0Y8EUy7rsWIz5uouoNT0Ix4DQ75XIwR6TjRm0spSdXF2ms247tc2fSD9MV9219SNqWyq1PmInKp8wmrKTq8vM1G1nY067um3MRrhO9QOwyiZvrt2UnVxd1oc67dQuf3rCddqY/nBtfaA8qkcE2sArZSdqN3S0ZL9OWw+qEi1d8UFCQG8+tMNE1ZJLblLTGzx9uqLEJS8UI60BOWPPn+fi/oNcNEOYkl6A3K6kL3A3MeR3Jb8sJKvcI8oNJ1EQfNw2ZniRM4QsEbtE6m5uyk3zrEuvQGQubd+/X9OoXC7KXY5abrJJW7AutjY0dy4vL+PDjRrE8JMnK+IfvhUii78uypdzKflpIWpJb0DUrr/w4rOHD9/Lzd+k6DsuNqblxvGw5NJdFdtrcuMBieAfsX7rbvugIVDnHOtj4s+csG2477dLbddtp7b5Iw3qtimza/2I6pFKrY/YicqXGZHylJ1cXWambrvuusshVgcvHSf+9ITrtLHxCNfu/OqeloAAg2w5L0Tt3M2bxdOfn8o5Xn4MPHpEc5meE3KF75T5+Xn5/jmmREyoL7YP8Xflk0+KWzdvKcl6tpcHF9IQggeiE9sQRQsLi8XLly+LH3/4p5JPSsr1OoxtyKUvv/iy+M1vf6tEK2Td06dP5amOv2tu1Zh9mkP2XblyRZ4G+Vy+w84pQQX59ve//U3a/k1+UFzVJ1qwx8KLjo5KH4km/nRurriJ70IOQ7RBJtqyIV+qEHqQokSvPnj4QEjDBenHu2JdvtNtyR0j54VrHbYN982Gv94Q0hlslqWP4PpeiDzw40v6tTz+AjELDu/fL2kz+kRqBMhIyDU7HrFFqoSrMn6Q9RcvXCzOnD2jGNBGrjBUJ7hxDQP5DVm9KOP48KeHxQ8//KDYSmX//NL3Uzqp/USFFLqX1h1T8vjWrdvFtevX1B/zSf2XBsyXbZL9rbxs9VFxT7Cnr+jJXchhe05SQXxy9RP5MeKy9PNScUQI6ffgJikjXkn6CD6nT53WuXD8+DGZcz9LpPJTIcJf6Gd92RG1Kftu/h6TJ4tOaoT6rdu3i+NC2D4XMv3F8xfyI/0v8nkl+J4tPpdI52uSbuQwxLEQ6vioPxCIAcaG9FeQyLwo7unPPxePBOtnQsaT5mK+gqiFdOelgRpZPXez4Hj8WSKpfxY9HNenTkoeavlRA1IasthIefsh5dXLV8Xf5Li5u/y9/iABMc9cwFeOkTt37hR3Pr8j80l+ENH55J6uwlcIXqK9b4pdbA2y6NzpKYjiDk5SEauLlZX5krKToyfUX6et2uZPT7hOm9CO7af6gYx/zFsb1rk2U3ZydZkfddv5eNVtYzbCtfUjqkcqtV4qw/pwP9Qb7qfs5Ooy3XXb2ZjTrm4bsxGuU/0ArLrH4va3a2jhY9439FrsIyoHHdQ67uyVHfOlD1ULhvu6TDlrQPMrZLts8vrNUtu+upTcUOvECa4Bh77Q2b2wM6yO9MZ7WOo7vfsHATte9OZDJjU5WSFY371bl3y1q5In8JDcaG3KjSnpCabkApgICJfP1hG1EKxG1JJOYVNuyNaF3CSiRc4rPaLWTjrYIWp3aWlTc9RCoHKTTooFolmxQ/7aX3+F7F0X2W2i9uTJabH1QeQ2xQ9y5h6Rmwgu4CF+1yV1wqzcyLsUDuSnxV8IZi4CVlacPfZJ+eAvELX37i2IbojowxLRMyv5cg/Jy86O6k36kycb4svONn77brtDYGwRGMK0ReVefP3tlR0buz5ULRju6zLlrAHNr5Dt7rqL7whAcQQbEaB8WHhp2HXJUXv2zFl9kdgxiaiFgDkp5M17oheFUGIhIjO1EEkLUQPRRyqFb7/7TsnSixcvCkEVkDTyZUIELyQOxNuqRBZCXFk040aP9DwkNj+d+7T4wx/+oGQdcnfv3i1evnhZ/PTwJ+mTI319vxh+yMdLEhH8zTffFFevXdP8rKR1eCek8w9CCkN68R2ppJSQtPSNqN3LQk5+9eVX6jvtIQ19olbJMmkLYUcd+8+fP5PIxlUlLh3R7E8+37PhbevQinqzz9r1j2sN+VF47YP6COG5Y4m4yvhBVt8W8pQUGOAABpD6/oINdDOGfA5JPlwiPXUMJfKUdbjgk8vTT6qnE/ojASTtv/zmX4RUh+zjx2oimRlFdyDTN6KfHYH6i0YJv3j5QvLxvtTDHKk6Cz9CzEgEKeT/lU8ciT8n/SRXL+PP/MMG5Dz9+kTI6t/+9jdCcJ8v/vnPf6pvjPeb12+K5aXlypMzfT0mJC8vcIOk/d3v/k1zPkNmT0vkLFGnyxKtyvHxhcy5r7/+Snw7poSmjZ3fL5t79378USLVZ/WHE8YAYl5Jc44ZwAoWIoY5nunnb37zGyVsIbpPCDFLapPz5y8oWUxkLBG3HDt8zB7H59v5t8WDB/d1fq3LHOK4RCe5rb/5+pvi3/7t3xRDjn98xy8iacH0119/levHa4p74Fr7u3S/7oRo3/rgGr3h28/dGByImho8vGq2qBTbqym0V3asw32oWjDc12XKWTNh/QrZrnPdtfNbxdNjB4DqtR0MyRLsukL5m9M31ZvQ1Vc6jI1eB8r60cSk6dJ+2U5PUbCrpTZWsbqU/Vz5lK46ddhjIrEMalt1BXp8/WokqLeyHLzMjrXdy3WsP03tWz9Y95cdO/3SXRtN8KqpepetgQrE6EjsDuR013ivEOCaemWFPLIuhQGpArhBIU0BZCpkp1zzygU5N8kuLQFEKwuy5LiF3OX6nIvjcKGceiJnyS2LPSJd0U9OWdpD1JLnFqKWOl4CRvQtBO2lS+tyEy+PJkqZ+UJE7+nTM708t9t5bZ1f5OLdkGgj9/IyyGR/IbL3/v0laT9b3L69JuQAeWxn5GbwqNysr0ofeezQpXrw23XbBxcBzvW7Z3YcD+Ry5ONaGpb2nKzrax0rpkv7ZTu9hsGultJ3llidq4n/zZWPa6lfir3uuqsZXvVblUm67wHInXfv5uV7ZEOJKaItIV4ga0kXoJF1okIfp+cxeiFuqvLV8vg6UXu8hOzrr7/WaFZIYCL1aM+j2qQMgOSBGIMQI8oOwnNDHiWn7MGDB/pZIvJTJgrfazyabY+Fc4S/kfQFp+Wx/aMS+fvhA4TzByWGXI8hXyeUWFQCWojGTySylkfdIY8mhZQlmhYSin3SHRwT/+g/kbtffvmF+g9xTX8gwPiwOHlHkOEzj6KfOHG8+Otf/6qPoL+RyFXTrfLyp+6xpcdEhjz6/YWXhjE+kIKkOuBRftIWHDlyWHMQQzrekhy19JN+QMBDSr6WiEx8Vqx7ComwvH79huBwQ0jES/ICslOCsUQSC7FveDCeNoaMI6Q+dZD14H7//v3ioYylf6yjnnYu3cBh8ee24s2aOQNhCZHMx0hCHX/Bmr7w+DxE5kshydHBUhdfZJkv2CDS+osvGesvBa+LOu9JR0DkMZHdRIHyIwLXS8eOHdc24EXEMi9f+2nmpx14oTu26DEjuHzyyVWJUL6qevCbNAREQEN+M//PnD6jaUbwix8O6DNYQ3SyWFQ3Eau0AR/m3wlJlwAxihz+LclnFxHfaw85zRidlehoiHfmAHiAJ+VE8VpOY+yzML6Mp/5oI7aIoGWM8Y159N233xVfCbkMoU/0NXWMGz6wjR7mAscR8vTddKuBzD86l6TNjjHfsVOuMOe7MWqnXHW7Nb3+1OxW0nbYD90PFAe7fX0511Ghnb6SvdjodaCsH01cMF3aL9vpKQp2tTRnbvn+xHT59W1v+/0Z1LbqEgd9Pb5+892vt7IQr11ELYJhw3DflPlrU5w7eX0de7Vdpz91fYnpipWV6auLV47OMltNy9u0HdMVKyvz9aDjVQcrOxbLMIyV19EbazdomdqVP6OyP6j/XfvhIkAULEEnjqjl5mSzR9ROygU8RC03nRCohVzk7iRqIVbJBwvZKtfEOxYuhrkQpxyClly2kKbceJCHFtIX4nV1dUuIWm7aXLTt7Cw3d0S6uJeHLSxMy4X2jFzMO6IWI5C8kKuXLx9S+5SRRsG9TKxQW2/frsvNOTd2Ox2DwL13b0Vujrbz2EL6ov/u3UWxvST93dkG/d1yMBGwc33d70VQGtW5tk27MV2xsrJZURevHJ1ltpqWt2k7pitWVubrQcKL7wDITkhTot0gky7J499K0p4TolaIHIg6omrlZKxE7cOHD4WsO61Rt350aYgnhAyk23f/8p28tOpzfXEV5BJkD9GVkGFEnpJaAdIGAorvqtNCBEIKQeqwPHv2TEknjmbqIVMhmhype0gItTcatavka7Gk+VH1y03airh+h5JrEzL3xo3r2j9SIWB/SqIqISYhk4x4pb+QZJBORO5CKp2UMmzTBt+R5YOfSq6Jr6RJ4PF5iLJn8hj5spDf6FUSWHsC0vXPSTlztqe+vyKNwSl5VB+iFvuQ4aeFuKUMkvaaEM+sjagl8pWUE2/evBb/V3ecNyHqwY2oaMhfSLx3ktrhg+AGSYd+iELmAmMO0cc8gvhjLNkn4hSilsXvFykmGH98u337VvH73/97cfPmTbUDEYhfkKRgyjihFxIa3JkDPMnz6NFPmqrA19sHIrHBfOGHBEjar776WiNYIWKZn4wfRDvRrvSP9BbMKX5kUPJbfIGYf/TTI52PdWzjO1hg8xP5XBKSmJQGYLcp80SJWvGJeQ95evnyFZ1rzDefqMU/iHfmnUtP4KJ0TwqGzE+OYxZyA1cRtWfkhxjIaoflBT0GwZa5Dd58bK5z7GIPG4wz84B8uPSLeUTE/O9//3s9dxCNTu5gchTzowuR7hyL9A0dHO/YYeG4arqELcP9mF495cUqEmV19CaaN65q226oL9yPOWp47dW5K+ZD3bI6/RlEV47+unjl6Kzre125Nm3HdMXKynwzvKJEbVmjJuVmqEnbg9DGHzSwYvHLXEn31xDwsenmlqGycw1GNpf8mg4vH41ue78gwP0AZCoRsnKtrBe3RLZCfLJm4bqW/LFErcr1ui5cTEPWks7A5R105f5f9EHWmhx1TpdFbUDS8gIwR/aim5eNuYjaWblp2JQbDV74YS+WcLqIsL1wgZfMcFNK/lyIWpf6gDJeUEa7MPUBssvLE/KY5KY8LroqN+QrcsPADYjkSZScvDduyA3J9Kbsc48UO8r93nXbBxWB7lyfHvnwOgJpvyzd+uDV+tgclLk1P/9OSScXDXlKibOrV68V3333L8Xc3Jw+Ag0pQ9Tlgwf3leiDwIoRtRAvfCBkIC4hay9duqjEEo89kxoAMolct0T+HT9+Qr5jjmt+UAgsCD7IMJ4mIe8rL1YiOhCyjJyw80L+QN5CKJMyB4L0ipBacxKFSTkRpJYflvy4PFJPfl3IJIg4fCP/KI/nLwlBbRF/jDWPes/dnBPi7qtiTvqNH5BkT5480RdW0YaUCUZeQVyeE0IbIpdoVR4bh9AkOpNH6x8/fqRkW9lRNKz5pdjL4/wQepDu7xfBWXKOygcc6BdkG317IRHSRC5///33BST8gpCj/sI4/fTTT3JdIi8hFVKRKGTGjQ9zAPx48RT6IQt5rJ0PpCTXIswtXpwFoWe4mX5ISgjjzyQn62eSP5htiFtIvle/vJK5Qg7Y50r08iIq8rSSOxhiEbKPD/liiQivuzBmpHIg3QDjfOeLO5oXl7y99BXCmjlOFDDzlJdlQcpCUNJX5jx9JaKXNZGnzClIV+qO4pf4x/ECyQrJDE7IMP8uXJTUAkJYQkQzVyGjSZ3BS8l4URcpHP7xj3/Ii8Ukx7DY5EcU6tiekE5CmNL/i3JMEeHMNqQnYwoBD27gzMu+GN9wwQ/IXvtwzKOD8SHH7XM5hjjGyM8Lrm7MJDhAbEAOv5GX75G/GhIXzJhT1yWfLpHqzC30MoeePHms5xTIWtIj8GMJkcQc4/Qfu7HzR+hv2/tgyHEXLsM6FkM7H8t+h1d6JJlntth888usrls7BAyb1ohaU+gDbPeRdXIw+O0OwnaIl07a3szt8No9A8rw0hNjWLm7+YErCSGx+dXNrQM3FfZ9hyFSITQhMbnJcRfVPLpJnjDXPdZyLSxlLr8bpbSzj30XxcDYKYN+l/4Andh9/35CiWJsu7QILoctOXIpO3lyRvwg363zkShZyNzz53lzMKkKyKs7rcQyfpBm4fXrdblZXBe9O6Nj0bG2NikRM0RNrchN7ZLc4B2Ri3h5s/fZmWJujugrZFz0b6w/XdnBQSA8z9Nzm+vduX73PAjxsu9FxU0qw/rdGg5WSYiH4cWa8+THvMxLzsmH8kKiwxKJyWPnRGBCtq0L0cPLxSCkIH5+UaL2geR6/VbJJx8TxUsKjLSC1FECdU6IXmkPwfSLkEh//OMflRCE6IPIgmTi8+233yoRBJF2RqJfIT55FJ2XL5ETc0tIIwgv0i88evRYIhEPKeEDUcTLynjhF+QRRJstEIGQRzfk0X1yi0LsQbZByEEak1KBfV3kZALpS0oACGrSHRCB+khycpLDE9KVXLi0E+pO2R7IMSIkr0vE6c2bN4trV89rO17eRXqAt0JqQfbFps8wz12QsDxiD4EMwQdpOCv4H4bkk3FhPJTMExx4xP/ejz8Uf/nLn4vH0lciWP3l119+VeLwZyFEyQ0L6UY0LViTOxgSE5KS8WXs/vM//1Nz+/IY/bQQuIwX9iACeQTeHVduttDmusyz3/3ud/qyuQsS3YnM69cvlBy/f/+eEqYrQlQa2cmYElULKazjIyTywuJOn33/w21Iws9uf6b5YiHUb926rfMC0pD5+ac//Y/mPX4kesGGg5/xg9RfX1/TfkBsbgkBDpYQk/SN9pCZzDcI+0XxibQJi4In85yX53FMUEcEMf3gGJiXlCP8wACu/BAxJTgT6f1I5htjtyTRyKTzYAxZwPSovOSL+cacN2IcQv7atauawsTIdeZYeO7i+NRjVK7j3JonqlxENOP//d3vZR48Vj2QyIwUc4Wx4viBXIa4xzfmP8cox8pFiQJm3tEGcvbevfvFn/7nf5Q4Zkw5tyx+tahYEdEOhqMgasEwPB7dnJR+SkVYh/xBXmJ4DPPctd+xDvGyuUW/uvm1e3RDvFojanebkhKs6YhEa7tCD4EOKg+MbrNDoEOgQ8BDwF1Ic4HtzpRcFFlUA2Juf3tNmX8x7m9T5y/U2cfK0S3X0XITAlk7IWsXnYt9UiIQ4QqpKtfWsj0lsi59AsQr6RYgdElZgOz79+QWJLLERc8QnbuwwAsuyFe2k6ilH5ubE3JhX8gbh8lX+15tyX2b6COilkfjtiSKi8gSR9bSJtU/61O3PiAIdBcTtQe6g6o2VAdOkIhLIiuJ8iN6FeIJ4oc5AzlDZCZEFYTpKyEeiXjkce3YMiWRirwECgKVt8urHjlpQ7T9Kjk9IT1/kJcxQfR9ECJ4RgiuaYmu42VGRFaS35L2kLekK0AHhBmkMRGCEKUPHjzQdAc3JOcshM9lIYmIkiT6EtLQFvRANM9JHQQaEaFExL6Ul089ffpUSTK+/2whQvCyROp+KmQ1fuMDC4+RQ0ARZfh+SR476TUh4nBRyiASUQPBfV7s0J4XXB35x1FTvXs9xAPSiEMIOB47J8UARBspEVgTzWjjBzkISci+EqkeHjgNkQhxB3HO4q5PHMnHlzHdIHqYthBvRJCyYAP77jF5l9qCObDFRyWEdBQZop1v3ybq+pISuow148MLux5IVCtk7arkMkY/xpiL6IYUJgXHawj3ioha8GDsIYxZ8IkP8+f8+XMa9ct8YG4SzfqjvKCL6FJIUn6Yps8QlMxZ+oB9oq+ZHxC11k/mKsTzNYkwhaR/IT8aEIUO2c0L3DiWzojPHBu0Yz5D1kLoMoFsLjJmv77+tYeSrLTOpfHghwX6w5yDLGXffGDO8uMI0cyUxZfe2AmY0i3tG/pYiKR9KMcWKR8g7DnOGSx+mJhlPGXuME+ILGdMOF54ERsv3WM8GH/687OkjoDM/fHej/rDCf2i70RL63yQY5bjkbJu2YcIDPHctQ/RSLrcQZWEZ1dla0StfclggUFg0cGQP7bvSkf313wcB39ivvAFQfk4+cdojZM/5gvrcfolJjaeYDeqJfSnw2tUI9HZHRQBuc6VGymX1oBrZ0eg8sbcTSVL0U8Z0a+QpBCoLNxIQJjy4dwaWyhHJzLcfHC2M11Ercr1t+wTLeteTsbFNYQrEbK0JZ0BOWnxhQ9pDT58kDf+StmJEzzG5myzxgaELnqXltyLztDrL+6Gb1LrHz/ekJueZbngP6x9It3C9eu88IU8t+siQ2M70n0t3fZBQcAffZvirLvvxvgMMLwMK6Q4jin3y+Kth19q/mFpnPwxX1gflLm1srqiZNFhIaNICwD5Q/TlWSFTOAlDqELcaBSskEOQpjwS7i+GG6QVj3ifkJQGPAYOqUVEIR9yoBKVC3mlEYRiB5KICLtXr34RUueVPIb+RiNlSVkAsXb+3HklZ7ENIfdKZH6Y+ac+Jo9OSCki+64LkfqPu3dVH37hHcTkJXk8HCKQR9UhkiBciZKFACTaUxc5MPAf39EH4QWJxHcUxOZpIdcgoyCFIRZtIS0DEZq0QQ55oiyJDCX/J2UsPlKG0zDnF7hApkEWMm7sE83JuECo8d3OuODfGekrUcGaT1QuCMB5QQg7W8CcSFMjN3lpFakqSFmBDgjBKXmsnTWYnZPxYhssGFswB1fDgrllhCRyzBPypKIXWew9efJUCVOId4hb0l5syfUEgzQpL9iCeF6SeUhaBX5AgEhPLcwv/IcMZmyZe0S/8rI8XtgFSfu3v/1NCMp/KsFIftplwQzClGsiFo4BiFHSE9BvSFryJUMc648FMj8gaInIvnX7lvp9/udnGqm+LtHVRFbPyg8HELxgAQYambyy2vefeaK4iU4WxgYfwW9GbJFiAqyJTiX1AZHnpArRMZA2EKfkFMY3sJchqFzwgzGBNH4nEdbPnj1XPJgzENMs+IUN+oo8aRmILma8Sb8A6cr5Ah30k2Pr6dMnug3hTXv0PZcfg4ha55i5IVG4o1rwh8XgYX1QzvXa8Yw/hhVNOryqgTO8DCvFTXYo98uqNQ1HwvxTv4ZjIkur+WPYtEbUlnlhhsrq96rcOr5X9uraCSfquOBV1/+9lvPxGkesfP/2GhuzVzbXxwUv379xwMtw69bjhwAX1XL9Lxfe3Bw6MlWuiTUSlchUuVeRi2RHgJLHljIjauWaXIlSR9TGZz/6qSffrYsSgZh1ZCr65Fpd9buUBC5PLaQrOWhpwxpiF4IY24uLRDhtyU2yi7p15Ow2GWwksFyfi3w8dy43E8vLWxKBgW9rkjOOvG5yEyW2PvnkiPb9+XPewMxLK8pJ6PEbzc6jvUIgPtv3yvq2Hf9cv106+q3we2dc8Bo9MnEPfLzGESvfv3gP8kshZCBpiBrksX32IaPItbkkEaQQYjxOrUSt1NnLlWKWlIwSghWSlQhdyDeiECEM3751j9q/hiCVLzcj7NBDBCEkD+QppCKRuazPSg5YyMVfhMiFTCSilpeQffX110r+QBJBKJPD9JS8vAp7PGaO/kPyiDyk6dzNm0oOEW2LH+ScfSj5WCEzWZQcky9II9Kw54iuCSWg2IeYhrAlV6stEG4QfpCARBzSH8grR95SNmui0fWw5hekGDiS+/S14Ao5TR9IhcDYEp2Kz4wxfbpy5RMl2YishrT0Fx65J2stZCEkJxhf7D3yTv8ptzytEJfI7CRq5fpBypGFELSIW2gL5HSMz0q0s9SzD1FLKgCiWyGM30lEr0bT+k7JWNEn/Cf9Aj8cpBbGnShWnRci6BPI4EEE75///CclaV8KZpqntzc/bY6CA77xgVS2vuMDpDUv/+IHgc/v3CnuyId5yovpZCLqjwuMwyFJ13H8+DHFjD5BePIjCT7AqjIfIEOxxbUZxxB5e8EIMpiIVo0oFjypwy7zDdz46FyUMkhTCO06C/3j+MQHImpJHfJcMCDSmvGyhWOEj7K/0oYo6sOankRy7sqYE02OHoj1h3Js2QvZOGY5ZynOohffyKXL8TqKBV9iy7COxZitVJnv3zDO9SnbOXXjiFeO/8OWDcduXPAadr+b6je8WiNqAdyUNnVqFO3wmWVUE2ZUdl2v8/6OGqtRjlMeUk56VHjZsdjE565Nh8A4ITAxsaUk7dmzLkKVCFYu1iFFSSlAFCvLxoY8hidlpAMgYpWFyFdSDhw6RLSJuwHWi2qpsxsN7l0hgHlh1+ysIz0hZdEFOco1OW1YQ8aiG/LVRfi6NAgLC+ty48SHCCve+MzNhHvBGPa3iWMedXVEMuRy6ltnY2NS7BVy4yU367+uCWm7LDeVs0rWnjo1I1Ew8nZh8cXy44JJtxw8BOxcv5+uIxglm62j8ntUdpvM0FFjhc8HES/OqZAyRBFC8EHWQODxeS95XHkBGDlKITkhQLdn9e5R5hFzSMBjQkhBYvH9AzlHNCJkzcaGfGdJmX0vmQbINkhh0gsgz3cRZBjRqhBVMzPTStg5Uku+L8SXhYV3otNFcEJcYZeIPR7PhkwmspD2vPCLbfoI2fzm9RsllCwSk/QLM+I3MtiByGPBR8qJgsSfdXmDvU9eQSbTR0g0CCwIUotEJIrSCEbmFKjt1dziBVSQ3k+ePNYoRiO/j0neWPAgvysveJubu6nRtJCrLLy8iyhoW/AZIpwcwJ8ImQtpSFQqKQfIswoprlhJ38GKSFfGAdIQvFiIWEUOktHGlTqIPnAnQpR6FrBlfBmjxcUFJeTDeaKCYgtsXaSt/Kgs+6kFexDKtuAzH/wkMpS8r8w1IlbVb9EX2oVY5McKiEjGHByJYIWUP3bseHFVUh5orlb5YeCU1KEHHW+lDccRP1qAgR0TEL4cTx8khQBylEP2k/rj5txNTctAFDf7kJu0xV9mErrx15HFVu4IaPCEkBaRWgs4gjc/WkCMu2NU0mAEmCrClPXLnc/MfY4bhyVPPy0pRpw3/GOFbQhw0kHMyw82RN+OYgGW9GwZhVfVNs3nmsNarbCmhOG113ZrulcqNiq8zKH9hNeosQIzw6s1otZXaoMy7msdCP4YGnvo8AhMDt673swdxeMQ+w2v/twS1Du8Bp96nYaDiQAX1kTTnjvHTYAjPx1Ry80lRC03Dy6idmXF5YklopXrZot8hajt3WPqxb/edPTgpBzSlZyz5JOlDqIVkpaXgMl9rbR1Lwpz+5ty8+BkbUSMpCVv7Pz8mlyIb2m6AuxDLLPgM7Ys1y0+77i+7ymzGwkeLVxdnZCblkJuLtclosflhSP9AYTtpUvuMUFIWxe12zs59/R0q4ODwL79bhyB4yMwOfhE7K67amPY5nUXj3hDpKwLSUa0K0QtxBEEE8QLEY686V2J2p6HZWdhCKUTpC0Q8spIKUgZ9PCoN3ZCEgyVkG6OoHNELWUQUUr6ClFLPlPII6Jp14Rcw5eFd73H+oUs6hO1QpJhD9IZAomXkUE2shDxh43XkoLhteTL5SVNLOgmMvHwYSKAe2SdlOMnBB8+GNHn+853KB8jJt2j8SvyXe183BRcbdnL4xGsSS/x+PFj/fASNCP26Ce5Qufm5pRgvHnzpkbB0kdSQhBFzWLzi1QGX37BS7duFZ9IigSIWsg59KicYATZZ+PKOBjRbfhMk7dYcFzuEbgQiUbQQtI6AtKND0QheZIXFxZFb3yuYJdIWiPC/TFRp4I/+MP4GSGMX7YoYSzXOeAzLWuI5Zg+5i5kJkQtkcnoJO0AKS64r+alXtdv3NA0DhDhEPzYpA25lol2JWcyx4SRo30yWpzBN8hcyNnvvvuu+Foixn1CnKhl/IJY5scO94SRyz2ML9RNClEO1oa/9TG1xhcjV9/pDx8rOpaicGcz2Q9KtC8+UQsRz48tHFscZ8wJW7DDjyua41ZyXduxZ/V7ud4e/b202tyWHYuqYQTOj8Bkc7CkZR+vETg+ApMDYaWNewf2OPA3rRK1gyMzPA1MlPCE2i+gYl/OpOHh1WluhkA3japx84/FDq9qvA6iBJG0U1PyVtzDm3JjPCmPIfI2a3K6TcoNH29A/iA3W8tywU/UK7NoQiJaNyXyaV2ilNyFMCQpkbJ85D5Alk254dh+mQQX8UTa8jKwM2e4KeVi3kXOvnnDC1rWhKwVzXKTAmFLTlgibQ8fJk+tm7nc2xBp+8svH+TGnRx4kjdOvk9u3XI+IIfPELSQtRDAbCNDW+/eaNcwb21NyoV7IQTBuuSmey82J+XmWt5SfZiX2shjfEIgW0TtrsZdQYfAGCDAUdJdd43BQHzkLrizccudlInLeZr8tOSW/Pvf/y7fO78qYfuzELS8XIh0ARCjVQv+6Uf+mK8QRxBRPILuk2S+Lh7VJqJR83Dy5aSLI0L7bcTJLUhB+fBINQQyEY1TV64oKUZkKGQZeWIhish9SuQjhNmCEH+Qu+Qf5RF/yFT06IJeAPCOYEgmiEJw0L7zS2LJwvcmZCO5UCGr+PAyJYipUSxrEs1LLlUwIEpyXogxJURlDEjHQCoC1kSIQmrjOxhB1toHUpy8sBCzN4WkvXnzpubnJboZ7EmrAPGtOAlWYMn39NWr11QXOo0wnJByCFFLPaAwK+YOnf746q5P/G4T3btwpP2uwniBIzjXta9K8Mu44B9zh35D5N+6dVswW5EUIO/kumqp3zfTSN2vEqVMnlVyIrMQocwcQxdrftigz6RlYOGHAmxcuHBRI2OZi4wD8wMCl/QIy/LCMo4TXjIGEf75Z58J3jc1ehlMOSZXJT3CiuSypR2Ycwygm3QD+MI2ejniwJp/20efbCYWCFTtt6SYwBfy9+rJINHGqtSSXNgxfjqGvTmDTn6kkN0dC/vUMR5h3Q7BA7zDyBlsdv48wHBUdt3Hqy9sALLuQOzDsh82DgxRy2B0c7P+lOywqo9VN7fysOrwysfrILXgghUCc2ZmU8jTTSUnr17lhRwQtVMatfry5Qd5OQN5Wol6Jb3AhFzkb8lFviNq0UGELCkIIGLJJwv5a5d77qIYwpW3HU+pDeS4qYLohXiFIF1achfbROkuLXGjtyHyLopV57E4SroFommfPuVGY111kA6Bi26iXfEDkhg5I2rdt1HqLOvsQhC/eAGhvCw3PDNy48SjrNNyo+PSIOBL//79IE2Srq/7BoHULN83ndgjRzus8oDeC7yIZCSqEjLop59c6gPSBECIvpA8nqQaqFpcGgUiLB0hA4FDFCFkEjlM+d6JLdO8JElkiNQkwpXFRfr2Iid7zA7fZ3xpQhZCoEKEEcEIgegIt1uajxVi9rKQjJBjkISQlpCLvwg5RgShRYBiB/KIfb+MbaL+nsvLlf7yl78oaY1sbKFHRlaB3dr6hqSKeKpEaEx+2GX0BwKW6FRIuCUh4MAdQhkikQ+P50PiUg/mjBERouB1+vQZh4noUaL25pwS4MjRP3D8/vu/S1shu2UfQhGbjC9rxgECFALTx0Y8ACn5uB9zkYUMdtdBkLk86SPXEIj06Sq2B1uwo5G6Mu7MGUh05tqXX36p6QouXbpcfPONXPNIeo4Xkv6Bl7CBC3PAFiK0iVJmPszNzanPpPcAH+YrL6uD5Cby9rXMMbAiLy4R3aSZIOIWIndKIl6Zm8iQd5kIVObOeSFc8eeLL7+StAefat5XSGGwfvXqpcqSFgQiFXkieS1lBfmHIWopV/B6K/M9tQZ7sMEnyH0iXusu7mVr/KDhjnVxgANB/VBf8EMWc4fxpf9TkPbqq6vv/u5EoAfbzsJurxSBDq9SaHZVjDtWB4qojY5O9+vCLli6gg6BDoEOgWEj4K5feUSSHLGTcsHOI2zkgOUlHbyAZFMuugt57G1GIjMOyU3ntNwkbMnF85oSo48fr8vNw6SU8YgbL/KakJvALbn55OUcLuqEHLEQm2fPTkqUBfljSW3AdTOpCJx+omlJIQAJzA01kbOvXxNRC7nqLvQhahcXN7QOH+zGmj5A7L56tSZRJeSpJTXChMqhiwtv+oM8OWXRjS6Wqmty2joCGp/XhaSVl9tIHlwIa/rlXmjGDea4X2YMeyZ1+vcVAkzX7rprXw3ZQXYWcoqXKfEIP7lKeayZiD5eNEYkIuVVy4bkcYX4IfoPAo9zuyMB5WVIQt5B1sQWUg5gz+WjdUQt3wVEE5LHU3PbWkMhl3hM+4lE/54TgoyXE/HIOMTV3NycI2ol+vc0JK68+Akf8B+SjhdHQdRCLtnCNjlysce2I57c+o2Qdg/l5UiPhNyzHz2tXWytpKWQ1BDJi0IOj2Lpp7KQ/pBSYtdj5oIH48oYGUkKqTorL7s6KnlXSV/AiQtOHNL10sVLgi3krTwpI3MAApGoaxeBuZ2LF3ISQpLH8/uL2NJ/rHtf3w5Hh6/hjX3mBoQjL92CSIVsZkyQjy7bCqPVVkh7XpQHMf2zvLn0H3fvKpFKnt1zMmeYd9ev35AfrXvR04sLEj3LS+skNUbPNu2JgOUHCyKyWchNSw5ZCGp+MMBnIrb5YQPilTQS7kVjl/XYgVylfxxn5BBWXZLLlYWI2jmZu59++mk/SpYfFyCVn8q8xe9F8QvyGB34S/chisGo6QI24AxJ+0HWjEfdBV84Njl2aMdxxjHOMcwY+sc6BDypH5hb4MR4d0uHwFAQ4DzTXXcNBdphKz3QRK3OW/nDuluqEeALsDvOq3FCwuaWbddr1Ul1CBwcBDifcF3Ko/yXLs3KW4Elz4AskhZNSUiI2TNnpou5uaP6iD91EJUvX/JGYshaeSz1Pflpyfc6ITdYk7K/KTefELhrqoNo1rNnZ4vPPjsiNwXcKMrN7LsNtSHXzcXNm7NyM+tIYAhPCF5y35JS4e1blyeWo5mUB+iFBIZMtoX7FYja168ha8mROyF2eYEKkb4uQoZ7cG7mTAfrqpeJbetHlyOjsfHy5YpgwtuNiRQmj1337WVYdev9gYB9N3Yzt954dddd9XBCyuaWbddvWS4J4QO5CHGzIFGCEKxK4kC8QshIPSRRalkVOUhR0wNZQ/5PI2hIfxBbILvIbUt0LPJKroldR3gual5avx2kGwTWRSHESDEASXTq1GkhCq/rGpLrmBBlJyRCFBIJku3evXvyNMhTIWp3EqjU008+RIg6YpAfHqe1jBQBr4RYo04fDfcd8bflO5K2EKXgQHTluC3gxIc0DUSCQqwxppRNUi55ThkLxp4PUaLkToVoW1mWSFAhIl8IUftYIq8h7h2xRzv5oVjGb2V5RWUZd3TGFu6tuE4gtQRkH+Q+1ySOzDukRDsE8TsZV8bZjcdOTdYPdPERoZ0C3h4+4ivpBvD9p0c/ab+JguVFcUQR84Fk/vqbb7Tl3bvfi/wb1W1z8Q3pCmQevJf5Qxlz+sqVy4ofOFHGy7L++te/FLdvf6Y/HEBKXr58RfHBHljzQwF5oInOhXylL5C+pE/gxwYlqYUkJpr27vff96JqX0kf5AcGsXH40GElghk7xsgnRL1u19x085VxAKdyFHeqQw6in+NsSbB154YpwfGEkNeX9Lh9KZHAtuiL5gQj6si9i9/dUg8BO9fHj6Z6Og6SVIdX3mhzmuZ4Hof5lb66yOvXvpQeh0HYT8B1eNUfrQ6r+lh1kgcPAb4IuREhOpSXY33xhby4QvKwHjkyqSQkLw8j0vXKlcNKTC4uQqByoS4RTpKW4JdfJuUimg9ELXlgp+Ri3xGxyE1MuMhTUgbcvn1UbPEGZ9qvyY0WBO60PE7HiyoOS/TIlBKppCZYWICk3ZLoXCJ13Y0VQSSOqJWbUiFg9Uu8d/UOUUv07S+/EPkKcVwoUUvkLDde3DBwv4Ru+rC6Snm98XbtJuVmZFrTPJDy4cKFD4qZS6lQT08n1SEwTgh03415o9HhVR+vtrGCbOFDCoSypYqohbyBqH0veTrZZoFQgoyCgKK9fk9QwUlfyukH5CxkF4QZ2yw8Wk/OUHQRtecv2IBYIqKRt8mjn7boh5TjwzZkGiQUBOODB/c1MhGizF+UpBJf1j4IWSv9Z58F8hE8yDlKpCTkK9Gp+nWI77pAMPY2HX2uO5B2JmG1e7d2ZCyYQL76RB7b5Ip1JC1P1xzSfiKr8vJYOiQaUaYa4SyP9zNu1BEJCtkJAQfhTToA+smj7ERLkpeUaGolfLFT1mHFZksjrteFpGWegLWmvxB/Tp0+JakELuj4Mhexsb04vOkHH4hLHtdnXbYoUYvvQrhDkEIy84MBxCnpCG7dvi3XXlckv+5VHXuI9l8lN/H9+/fVB6Kk6ZfllbWIbCJHSZuA78wzZND/t7/9Teb8oeLzO3dUP9HezE2X+mBKIpEdUfvs+TOdW/gN1vSZyFzGhPlLqoUffvxByWFso5/JdlzsghlyHFv++JZhUFYObFy7MefJfavHZJmwXy4N8YFjAzw4ToioPiER7PQXHGZlHjFvWMCI6PbLghfRw9R1S30ESo+l+ioOlGSHV95wjwtetYlaTvejcNq+ZuraHpWf/vCP0odc27nyfj/b2h6VD9hlqTu3kB2Vr9i2ZVQ+5OI1Kj8Np249Xghw8etuLrZnktxTyIU1EbWH5IL7mFy4EmnkPhC4kJHLy+tyc7AoROgHuaFckRvLZdnmIprHRfmwuBuq1dVJzRX73/89X9y8ebSYm4MMLuRinwv3Qm4KpmV7TYjgKd3m5VxsEwH788/L+rl3b0lIWnydko+7AVpZ2ZIbEkhcHpkkIlbesCwpECBtiZDl3nttzUhjoipIwbCuBDAX5ciS9oBIX2yZXnU9+cf1i36S/xbfILJAbyHRAABAAElEQVSPHp0WwtbduCebd5UdAg0Q2D5C6zVGPud7tJ7WPKlR+pBrO1c+D4l60qPyAbssOfNlVL46T93fQXwgKhWSiXyaRNuxDZEEaXpBiKgv7nyhF5dEJfI4OSTg4cNHik/lC8xFEx5ScseRQPIIukTCvn07L989jvQ1PyFUieRbXFjUXLCkZ4CAhCzCFiSWEo/ynQQxRmQuZC0ELz6GC7lSiVgkNQIpEsgtevLkKfm+vlR89+13Gp0LKeX6xMudVly/ZuQFXUKWYZe+rAq5DKFGaoa3b96ofGirrX2bX6G+Y8eOynfmRflx9oYSZOQwnRJMpoUsg4SdkReJfTr3qZCTn+g+RCZkG4Q3fs8LVjwGz6P/5LeFxGMMZ6SfkJO8wIo8qkQmE2F8WLA+I5GgEHREpfKSKyUPeySd+Rf6C/lOhCqEKNGk585JhKsQnnNzNzVK+vHjx2oPrCECISnBmsfqyad7VF7m9ebNayXfITLLFq7F6MOa9OeDEO1ra0IOy9wkH/MR8RWdRPAyX1h/+umc5qqdl3n3y6+/qI/0E3+Zh4wxPrEw7kaUkqaDeUhULfOWOQcZDOYQtdjBl1V5kR1zibnLPGfROSMv9OK4QY45rKk8xBedW2KHeUsdhO+cHC9gTUoKytpebKzKzl30g+OS1AykGIHo5ocW8Lt585ZEQi9o/8nTCwHMnOAlaXe+uFNclihkorSHsQxy7hrEnyq8Qt2j8nNc/NiPeI1yzHJt58qH86KN/SY+1CJqUTyKRe2a8bIzo+eYibKuIe61bG9zlD6obfmj/a8BwCh9NcRH6kPPuHAxtebLSH3tATYqH9RuBl6j8tPmVbceXwQgOVnk+l8u5ifk5pG3A3Nj6l7mNT3NI4NEvDiC8/nzZclvtiw3iivy+SBELC/7InKVx0WNyEQpb5feEpkNac+bpbc0Ivf8+UNyYyA3TfICLkjaS5dcWgTSB5DnFTJ4dVVedCJE7Z///E5ukHi0FP2OCOZGhfuP+fmdRC0pEEiVQITs6io5aDnp0o59R9SSHxf9ELVE3s7Pc8NeP6JWFKpOsOKe6/79D3KTtiw3I0eULKa8WzoE2kRAD087gdeYXybKuoZ4m672dY3SB7Utf7T/NQAYpa8G2Eh96Bk/SNdd5CflvA+hCekEAQjRBJlE3s47EmVIdB3RgqQUgHTiAzl29uw5JVj53iRyFSILomx+/q18/+xMIwBpBvm2II+OQ45BikEUQSRCmFLHh2hLJSGl3ojaMDrXflTVKMaXrzRaFPKNl2pB1H773bdCRJ6RqNo3Qgy+ke+nt/qZkheg0TfIRSIhyXn6DoJKyE5eJka6CHAYxqJTS/70ptgOExCYFy9eUMyOCAl+QcjCWSFTIa/BBp+JbIRcgxCEdKTvkIcQ2eCJ7xCSkNzgCB6MIcQbhPuNG9e1bxCM9P+65AmGvCUqVUlyked6IrbgMzUQprzc7f69+yI7qWSmI2rn9JqJfpB+gvQA+AgRTz3jDN4QmQ8fPtQ0G3WIWshnyM41maOkVSCylvkBQTw3J7mNZR5CNLLoXBE8pn74weFBO7neYR6uSJ/xx7Ckn2BEBLimyegTtYKjELHgbT8cKFEr7ZWolX5BQIOHI2olr7HYJK+tEbX8gAFBTg5nUkTQf8hf/L169ZrgcFZ0SzSz+Nbq0lNXdu6i+q0cl6SRIJ0Bxxg+gx94cDyCBZHCYEO6hps3bxaffy5EraSCALu2F0OANfNrrxa12zNehpfvy6j89H1g2/wIy4e97+NVZ6DMT9Z7Oa4+DqP0wfDS/tcAYJS+GmZNfahF1JqRka1rDMLIfAsM46oNRlC1d7tjiJceTHuHQD1LDQdrDOGt198BpHKhypUfwLWu6b5BgFkxITdzGxIVK5FDQo5y8+mITQhP9+Zel5dNzqNSR/Tq48dL8oGs5YVd5NWTl368dySqdd1uftbXJ+WmkYjVDbnBWZELeImGebcuF8BEL7lcs5CmpCFgzYvJeLKN/R9/XJKI1VWxAakKCbx9U7WyMiF6N8SHD+I7j4i6fLYQtS9eyM2bELXIs/ACsNeviQJ+rxG4kLVE0/7005K2X1gg/xl92JKb35Xin/+EVHb9JfcuhK/1h3K2wWJpaVIimzYl4uWD6F6S/vEIHRLUubQKRByjf3SXbupO9+djQKA3t/ZDV3CVWT/SZQzxGsszQcPBGiq8ADXABKpqSnQm0a4QYbwA6eGDB8VFITuJmIRgm5tzxBMvAZsXwhOSFtKN6EBI1vV1fuR7q0TZ8xfPVQYSUSMqvUkP4WUkLKQvj+JfFR2QbRDB+AGZRo5TRwq/VTKS9AY82h5bIFWfygvKzvx4Rr+LIJkgCiEfj0sOUSNojazdJmpPaGQjkasvnr/Ql0QRUTgjuV6HvfTnCl+cvQW/iaiFXD0lUcH069DhbaKWCGYiPJEDW15sxYecv2/fvJXvWPDmRaWrBS9TIzoUspHv5xMnJC/rJ59IZOQXIicvJBNCl3EDo0/kAwYQc4wX48AX+rZn5qFbQ8a/EmL8ByFDScWAHiNiPxXSl4akQ1iUl3fxsiufqGXekJOYMca32OLb1fkic4J5QYQn+YMZTzBSsvHHy/oiL8hr+sB8BBvs8mMB7SFd6ReR1+8k+hU8IK+pQ5ayRflxgu0FIetdNPhbJTDpF+35kMeXqFpIY64JRY1EMc9rJDfjckwIauYxx8VtSctwXNJP4BM5fU8IiUsEK+Qy14+A5A19DIagzFCx9Xb1jhKnersy3BKjzCtSHDz7+Zlc7/0sPp2VvkwqWQt+1J8V4haCmShuXoBGNDbnAUjd/pLXgX6zcdmogir0M1c+bP/R7APEPlnGYszGEC/OGW261T8r2DmBk2O4RIr6InYSS8n0hTM3VGeG4gzRLE/CPup+byRiNmNlZjDUZeVtrNVuynhgJEM0aJneDftoeMV+VUv5YHqwlpJLe1NeqzozFGeIlhsNamJ9NLzodGgz3PfVxXT59YNux84NKZ0pX1PturqPEQFmg8sl++LFRvGnP70TwpG3ZbsLakhTPizMM76P+BAhCxFKXtnXr3msjBeGkSPPkaIhoUm+2oUFImQLIV3XRZdcFJ9dVaKWlAqQtTMzLlKXHLKkLmDNi8Z+/HFVyFSXm5YXk6Hb9POSMHlCVHxek/YLciG+qm1pTxkv/OLmhoV+vHixKS/PeC83Eity44c/pFYgdcO63HBDTpPKoCju3nWEtTaUPz/9xCOizq7Zpo5tyun/kyeb8nbp94KNS8EAhmzTB3L3vn7Nm4b7X+2mult/ZAhwtAzjHKs6MxRniGaNgDsbbPdR93udjtmMlZnBUJeVt7FWuynjgZEM0aBlejfso+HVXXftxs2wombHeFCxo8C1jRS5Cvnr6+oXBhuQVlsbvMzynZK0kDLkIT0hRBWE2nV5HB8yikhVojdPSj0v/CI6knpIMEhXXvzFo+/oIdoQgi1c8HVFSLHn8oKo+0IIHxWi7xMhEXnUnO8RCENeAEUqA9YQY5C0+BhbeAHaI7FJmgBIRohM/IcUI3KRXLmkB4D8xS/kiJRETgk2sY/dZSH3IEbRUQJzzHxWmY6T/tndF/whopb1hfPLSg5CKM5K5CWEGS8Lg4DGV8hKUgA8kPQD9+7fK15LKoEVeYQfrFZWpuSx/1+VhEMXZCFEISQcaRSILCWdAI+1E+XJGIIH5CmLHzWpmPdctTmGDYg+yFhIbWxA+II5aRTII0sEL8Qnc4Dct0clrQNyzBU+z+THAGzuXAwTW1PrbxdKuEI0CwjFQ4nKhbxmbjCOZ86cdvblOof0Fc+fPdMXyREhuiFzm3avJbqaeQa5zDxjLhOFu/TeRSBDUvIDwS+/vFIZSFdIWsrpD1HdShr33CJam8hi9BFZzjFBG2yAK8cL8pC4YECf8YNcuEeO8F4Cd022E4eSPZv/OyHZIbw9v3YU93doSrQ14/qzkLQPH/6k84MfCPhRhuOQhQhh8CHV18WLl3RsmYvqL36YLyq984/vns0ZLeOPFFiZtQr3rZx1TJdfP+i2TKOsJVO8lm7ro6/b4I3558uFBmK6Qpmm+2o3ZTxQnCEatEzvhn3Uff6IwZjNWJlZCHVZeRtrtZsyHhjJEA1apnfDPhpebV536d2cGcIdtpt0qGm7NARjXpvZaR/nMe9ZY/cOQh8bg1O3YQdiXaQ6uX2FAATkpFyobxbff78sNxar0ZtDu06FdJXrdrlp2pRoVnK8TsoHknZKb6a4oQoX2hANu7Q0IaQokSJrcpOxLhfw3CDxFmFeVAZxij6iiyA55eJaHkt99mxLbpCmZH/7JWKmH5KUF4uhc319VWRdJK5ca8sNMY/obUffcu8sgTjiI4/3kYOXl4xBMvPhpWToh1DelBvvNSlzL2nBFmkdfF1mnzU5cCGuwe/HH+UN5PLSMxZuCvADwlnui0SfwyWGjzbo/nw0CGRegnwc/c7s9EH4Oj0IfRzm5F1fX9OoP31UXE+fE5Lr1ZFLdexyDoaIs4hCCCrIGEgo7qqUkJM1ZZCePLYNYUcaAdaQNEQEurydJ/qEG/sQWJBhDx48lO/N7yV9wM9KbIXRtL6f+PLixQslhXnsGoLICEIiX58JyQYRCREGOeb88zVsb0M8QfoiAxnIo/eQkqaT7xn6A0EImQjZRGQgaQWsb9NCgNLekXButmYextsO1dgid6pGeEoEJ4Qp+DpCWr6PZXtKfMTfacmly+PzkKKQtGDK2IE3Uc93794tHv30SB/zh3xd55pDPr9KNCmEOUQmfSKSFZLwgpBxjDm2wICIUYhpxpDUCfhCGfluKYOs42VjPmWGD+SYJbIWWT4sYH5IxpIxgADGBrLgr4Sz9Avs+RBlK1db2s7+QKaSi1Z9EfvMdVJSkFMXn+kHH/sBgMhvdEOS8nIwiGx0/3/23vRJkhtJ7466r77Ibt7ksJucGZLDPWYPSWv6smaS6Yv+ar0m08pM0pjtHJwZnn0f7K6+u86szHz9B6RXIlGIMyOPqnJ0R0UE4HB3PEBEJp70QFy6xI8IsklfgyFjmh8deMEdEaTU8Vh2ZAw+EkL3kVv2grYSBcxYunr1mhtH1NflAPAH24wTN0LkO5IS5hDFLEuB7UV5SRuY0Dr6Ep8Za+AM4ftS/AAbEtcPfUmfOt0im0r4BgZu3WYZM9h9I3X2JIqafsdGpSS+Y4fo+SdCtt++fUtwov/8S/2UYFYiG52MG2zju7+mRcdguQiijIteCHfsk30AHEORd6D3mxAqzcurk5fftF6evlORX7PRIc6non0NnJxWGx1Ryw0P9pc0emv3eUV/Xd0G9Yp0TrOs5thzroV41fH1LGBFe4vGSKqNildRvRSOKV0puXnN04u4qN3JNg4qFNVLtTmpKyVoeYbADBDgCzzLA8gcQSY5fZnIDAnK0B35rusSZCYbyw7s7y/Ll+8hgep1hbX0GDKYYyJvM5koeIJ0ebkvX9qZaEr0ySaRup6chYA9OvLry755s+iOsRknXlwm37/lSz/yLL/ApAaS1C/DgG/qk4/qhTztSRvl7c9LXhZbtIU9d1GidFnK4dWr4STg5UvWs/W6VN/QF48fgTksgbCzQz0fkYwvbJDMENon6w612NHZQeDkSD0dbbPvXdX7qen3CMYGt7K6Y8TVk7p161Vv0WQlm+AFWfTjDz8ek5l4eFui4SBry5LDS26+EFC///3vhdgi2pFlbh66x8PD+hCoRBRCeBH115PPCIg3F00nRJN8oDiS6rk8ak/icfSubEQw8ij8Dz/84KIRlYgKdYfHRHXyaPrq7VWnn88J7JEgkyFpWYuUyEZIpaLrEfKIqNlt8e+WRFlCAPKyK0g5CCd+fHUY4LtsEI+8hEwJN0gubN25e8e1XSNLJzm+doQQvCsRwxuC7ZXLD+SReR6R5zP5yGGOT/gJueeITWkDkalgAWEGsUc07U0hax8/eSz96aNh3diSNrKG7PfffedITyJLIdn5zFUdkKzYUGx0HViIRXxieQuWk2B8OSJQdGqiHhjh730hSyHBIUOJsoV0Z0xA3jl77jF/ho0nwRkXLGOB76xTHCYimp9LdKt7WZgQpOhjzD56JONUxiQvSdPEmINYJl266JeDQJ5lBiAVie4GJ+zhC3ksycEPCSwX8eDBffmexLsEZJxIGxjz6GTpAyK5Ie4hRfkxgTWbaR9jiz1Jxwb4oIOXc0HO8rI9JaUZY9hmqQ+IVnzhOmZ5EQhdsIIYxU9e8MXyG3nXDeT1U8HmtozTNVk3Fr8g4tmICKZ9VZPrC/EHMh6/SRDiYE+f0dPgCD5uPNKf0pYVIfbpa9qOn2DBNUZ/honyE9frALDBLhQvPE7qKqwxX4V61RS1O26jOx9UKKqXammsKyUzz3knxk0FZ0O8Kogfi5wFrGhM0RhJtVHxKqp3DFJwkNKlxcfPR9ZVqgrYj1M31DPtY73IywZvqn2pvCr+N61XRfe0ZAyvcqR1bCFZF69xxsg4dctbZRKGQDMEPHHIY2i8UGFBCM8hOZmnkTq+HnvIRySViM2rpTIQqAvyZZcJDRuTsr5MxPsSBeKjaCFNWUIBYpWlCNRWSjNkLuQvJCvLD/iremjLr6vrrz6ZO8iEBEIaopkJK231L0ejHZSTIGohVYe6yPVtZvJ4Mnkf8Ju61EP/MPm6Q9yGJXZ09hDwo+30tUtHLPuiNqTKUnlVEGhar4ruackYXuVI69hCsg5ekCo//PiDEGQsx+NHyy2JhoNMqpIg1yDsIGo1Qo6oPAjN0Cci5J50nsij4DuOYIJEYvkDF6kqj27zCDdRl/gBeUREH3vIojvygiJINhexJ0ROUSIiD9uOYJLPCAguIkdJu0KMPRIi6rFsz4QAPuocFalypBEEppJVkLaQe1evXhNC7JKLqiQykiUEaDv6WCaAtuI7j6JDdhJhyPqkLMsw6esR8g+SDZLZRwHLr7MFyX2Myh8IMvylX4gofSB9SsSpj3SUMTX4vKUd3wlRC7l3VR7Bf0s2IkwhNZElctW9dIw+FNIVMpY8lljY2Fh3uLD2LeMLm5CvmpSohWzHB0jbbZZakDVPdSkM8GacrMtSEvikOEPu8bI52g7ZHCZwp7+XZQwRRc0yAkSbMk6fMFb4JXqQID+5JtDnlqoQG7wIjkhdrix8ASPa6ta2FXlIX757+HVy/Zq8EKSM3e0n2268u5eViW/el2fZ23ffPvadtrKExjDx1BPr/cryDoN1Z9G1uSnLOwjZzdIGm4IDJK0uvUG0OBs/IFyRpRogarleWF8Y//KIWsqfSZ8Sac36wkQM08fk0ceHEVk69PHkkf/O13dE920hn1mX+dnTZ+56Qy+EM1HBRPEfiC0id+krvvMR4Q2GXSFx8fuB4AzpH6f4+onPY/mi83HqFumddFl4Xy2zFbcxPi+rH5aPUzfUM+1jxavO56L62LTNTeup3XnYzwNex0RtU0C0809Dh5QB3hSDOvVmiVfd9teVr4NDVdlZ+lDXdl35qhjUkZulD7O0XQcjk50dAp4M5cu+JzHzPPFylHry0cvV/ZTx8n5uRaSqX/OWL9IcQ75C0voIWvZiLccE/ng9yAx959j7Glf056Nl5CHvW+PtDXWRO9Tnj73k8K/XxzmEr3/hht+H9kPbw7p2dIYQkLF6Wu638+AnPpDCq8TnTP5v3fbXlZ9EC2bpQ13bdeVTeEGcapQg5YwTogA1+jNVJ8wjsu+pkDE/SsQrL4CCwII8g+w6/uCQCvxoRxQdeiHHiDLckMfnIdzWhXSCVGS5AIgsCD7kIPwgzCCpIG8cOaYfRuiULR7XROwhuyAEEGQjx6xtSoJwJfKQNWUhCoksLU1iD0IMkhZb+AYh5vwVv/EZktYTtbKOqxBQByIDBkRyejLqjZB7shwExKToiH0u9aGGAP7Rf5B8RCkShRmn0D7+0E/+EXgItANHYtIGSDOiN8NEuyA9HZZCdj6Wl39BwLFpdCcvxqI+hCs6yIf0XBEyDgwgArHjIpqD/jy2I3mMA4hU+hzsnwjhzXILDm/GjGCOZw5nsJb+dKSjLJ1AXpiwRZ/TTnxCh6snJCVR1vgRJhfNLbKQuW6ZDNHJ9w/sEW1L/o7Y0/HImCKRD5EM4YwvEN2MX76n0B/UdS+8E/94aRoENkQ29cArTPiAV6+FfCZCHeIWgppxxnWDHXDlZWVEUUMes1H+RKLFWTMY/yBaWWeY41Sir/Cf65ixA660DV2MXUjVKglsdFy5PpP6JHyEjL1wYcutLwwp6/06dOv38kOKfDOUa9QHDIAdP3iwxAaRt5NMoc+TtJPSPUvbKX/K8vCXpH3sz+bz7zxgO0u86ra/rvwkej3Ph4Vffv6ZYtnIrtzXfJKRO+3BG5gu9V1lEVQ/U3mlisYQcPYGRnWyPoa6WlXrtjUln8qr5URNYWdvYPS04RViRbN1zNWEoJb4MV4zvBartlXxcbhI565KpIF77GfaHV0LYRNuAwG+sNdJQ3KyTq1Y1tskIIQIW8hZ3Bi6Uv0Kjf0v8q9MNi7H6yJ92qpUPS2rUl9lbX/6EGCCx8TWTTpneK+vcsWEV7rKp/Im2QvO3sDotD9e6rY1JZ/KM7w8AjE24TkSOubK8GI9UcgdIvA0QcJBbkGyFCVsQrJQn21Bov+4P0NGoYMtTNyfIWqwRYQlxB3kLnWJEGS9TSX4tL6PyJTH2iE5RbdGYIbtDduKDZ7e4GVFzg6PVDP4pQLELPcONtrGhs6wfuivHlOftUeXl1nPdUn28qi2+A/JjO/4DSGKXqISwe5AImvZh/YgniCiMFhmU23X3eMnL+LicXKiQFmSQABw7Xe6YsODLwKu3+g7R5QJ3tIW56sDWnAfOMKj+4oDL08DY32hFXgSsUpfsZwAfef6DIzFB/xxUahCHhIt6WyCRyJBrjusnT3sME6HpLgnoD25CKmvY5b98WfEQC96XNSm+Et0NaSgXzaA8eDXu3VtDf0Qf2kbSzbQ35roz44QifroPrhQzoadJYkYBS0dX9r/2Pft8eOHY8hR8ABrfKbOcQKvge74eoFMhWzmxw5+aIF0Rge21A79rvrdtcT1k8DaYSO+QOwqNs539HGNyP4ENsdO+gMdG5zhMz6oH953eTGcRPpuyY8x5DtfNfocgpoxKP66JIf8qOP6k/GT8NkLjvfX+cwfMTuwPJ7CGrWd7YF8Fdsqr7J6jgrNq2G+kShd5JIYnJZNdTQwrVm5e5VFQP1M5eUqaKHA2RsY1WHdgtpKKuq2NSWfyqtkvKGQszcwGuN1LolacGTwzlNHNOzbytXqtjWWD88xqhd/ZQcaCDqb/BFj07AXuhi2t4rtWD4+D3VP6tjZ5M8M8aqCFe0fwUfuSv6tu4PJxKQAMr2GgCFgCJxyBNwkWSZv7Of9Xh/e54Gdz4cwr+rnxThd5uwNjMZfgMfRW6Vu3bbG8uE59qaKlxibhr0Qx7C9VWzH8vF5qHtSx84mfxripWQOBNGaLB8AqePWNB1c41zneSSRtrcKVrRf5TmmTnxOfp0EweVIKCHyIEVpQ5f1Nx1RCZnnX6wV6jyNZAf+F+FFHzoCVUhr+ooIWl6wRd9B8jVNrn8GncS9C6LXk/uQ/GzykjZRHhKz2IT8HTeFGqqMr1g+PMeXKjrKfKb9er3Qfohq8CZCmGhdmu3aDlZlylouD9t70jY/nPgXh0Eu0w5H6AsJDKGvP8CoSyfra0m7e+czf8TgtGxqCxSvqnZVnvrUic9V7yT3x5fVnOMVYgMes8DL+TBwhLE/zRS2v4rpWD48x+8qOsZtn7PJHzEW2xv+RNbQCh0w0N1QQ3E1BSx2nFqpvDxtKqv6dK/5efXazHe2JmhQ24TPsZn4vKxdKo/OIr1lesYpx4cmL8OoalPbpW0N66XywvL42Pk6yFS9nNbVE+utc+58kD+TsqntSulP5RX5jrzqK5KzMkPAEDAEDIEEAnITrXvfTWhJZum9OaU/lZdUIpkqq/p0r/l59drMd7YmaFDbhM+xmfi8rF0qj84ivWV6xinHB/veVR3BcfGCWIK08ZGVfskCR/YJAcXeRQSKOzo2Qs9SeWF5fOx8HWS2Mb7wT4nkziCCEH+d3/KiNJZgiNNZnDPSd5DStJtjoiG17+L21zl3/Rt0Mn1GFCv6/Rqnfi17okqJjvX2q1soGgOB2UoKVR6dRXorKcsR8teIi9V1OBPtKgduDHqbfjmonOpjZ2u7tK2hwlTesJwxIS8Jg0RnSQq5CIiS1WvFFQ6Ei/UMNbZxhC2711dH8izeu6q3vp6kG8cTHMx6LeJVbCY+L/Nc5dFZpLdMzzjl+JB3LY5N1OKYNnIcJ1N1Q8BS5U3yHBhNKlqdmSAwqbEVNoZx1oadeGy1oTP0s8rxNGxOCq8q7TMZQ8AQMATOPQJyo5/Uvd6+d5370TWxsRUiO6nvEZO6LkLf4+NxbHpib/C4fSL6Uq/HecQL3yFq66Zx8CqypVgVydQtw9cyvYpDEyxq+SN4u0fyISjPaYKk7kvzIaaFHZ8JCk2vRaKr4wjrcGxN6rooAmkaNpviFfsdX4vT8D3lQ5zXxnk4DtrQh44Yr7b0mp7JIJA3nv3PcWKTQdL2QCnTWWYvz+kqEJXZVh1lPqhcvK+qP65XdF6ks6hMdSpeutf8Kvs8/bEu5Oom1d2kbpEt1ZuSKSpTeW2b7jW/yj6vLaGuKj6kbDWtl9IV5uX5jExRWaiD47CNcVneeZ7+JrrybFi+IWAIGALnHYGyz4+8e7HiNs49ucy22ijzQeXifVX9cb2i8yKdRWWqU/HSveZX2efpj3UhVzep7iZ1i2yp3pRMUZnKa9t0r/lV9nltCXVV8SFlq2m9lK4wL89nZIrKQh0ch22My/LO8/SHupq2u2m9PF/JL9OZ1x7VGbZL86ruy2yrnjIfVC7eV9Uf1ys6L9JZVKY6FS/da36VfZ7+WBdydZPqblK3yJbqTckUlam8tk33ml9ln9eWUFcVH1K2mtZL6Qrz8nxGpqgs1MFx2Ma4LO88T3+oq2m7m9bL85X8Mp157VGdYbs0r+q+zLbqKfNB5eJ9Vf1xvaLzIp1FZapT8dK95lfZ5+mPdSFXN6nuJnXzbDmi1ikcaG9TuRpN6dQ83atsvAe4GLxYpug8pT/WmZIp1UmluhWLlAZlRWqLylDRBKsqOkO9ZfJBU/whFWpXOqFlJKNIXVHZiBI5CdsVl+Wdq37dx3Kxzjy5uN7xORVkq13vWMHJA9Wl+1BC83QfloXHtCtuW1ied6x6dZ8nZ/mGgCFgCBgC7SCQut9qnu7zLDW916u+lP5YZ0pG66f2Tp4/dSumlCXyitQWlaFqnM/FhCsua1y8HE5ljucZz8kvUldUFqsbB688O7HOPLnYl+NzKshWu96xgpMHqkv3oYTm6T4sC4/jcRCWFR2rXt3HsjFecXnRudPJH9ny9BfVLytL6dQ83efpaIqX6kvpj3WmZLR+au/k+VO3YkpZIq9IbVEZqpqMgyo6Q71l8ieaRIXalU5oGckoUldUNqJETsJ2xWV556pf97FcrDNPLq53fE4F2WrXO1Zw8kB16T6U0Dzdh2XhMe2K2xaW5x2rXt3Hck10qg6nkz+y5elX2Sb7lE7N032e3qZ4qb6U/lhnSkbrp/ZOnj91K6aUJfKK1BaVoarJOKiiM9RbJn+iSVSoXemElpEMR9Q6pwa9GTo4IjnGSZHOorIxTB5Xnaj+CSkvUltUdtzomgd1ddaVb3Q1lbShyIeishK1rRWHPoTHlQzUrlBJa67QtMwV2Skqy3XcCgwBQ8AQMARqI5B3vx3n++U4dWs1IM/5Wkq8cFWf80xWrd/AtRNV8nw4IagZtStoxWb7MnPTwCr0ITyu1KLaFSppzRWalrkiO0VluY5LgavHH9ma6ijVnyMwCXuhqYnqn5DyIrVFZWG76xzX1VlXfhKDqsiHorI6uIwjG/oQHlfSWbtCJa25QtMyV2SnqCzXcSlw9fgjW1MdpfpzBCZhLzQ1Uf0TUl6ktqgsbHed47o668pPYlAdr1Fb25kKyBTpLCpzqvlWVyqU70SVqlVkUhZcvaaVUwoHeUUqi8qO2ftCoQLDUlSlahWZlBVXr2nllMJBXpHKorJx8SrUHfhbVS6o4g5dvaaVY2WD8zJ1heVTuBZz3LZsQ8AQMAQMgZYQKLrPOyJN/uS90KAlFyp910jZcr4XNSBVacy8InO8HIZkeHkc+JuH1/HYQiZPaKhmrKOm6l29ppVzPC5TV1gOaIUCOUYH2VWrVpWLrTWtF+sJz4t0FpU5HVPAq9SHsDHBsavXtHKgJz4sUllUNu4cCD8K9Q8crSITt+lYd9PKKYUV/Ck0N7jXV2p0wn6h7kC+qlxQxR26ek0rx8oG52XqCsuncC3iZqEPOe0ap16BykJfSv2cAl6lPuQ0ztVrWjlHZ1kfFJob81oss60uF/qgQon9JPBa1jYn7B1nxQ5XqXNcue5BqJzj2HhdfTOQj10Om9S6O6Fyw6sc3lOOVzy2aHDYpHIAakqoct2nHKipMhZfkBkv/9ybTyc9i4uN27khYAgYAobA2Ajw0TDBj4mx/UspOI0+p9pxmvIYIxP4GjE1CHSMT9SgGtH9KQMsdlebMRHMQuUcx8YnYrRdpbHLYZPatSTaQuWGVzm8pxyveGzR4LBJ5QDUlFDluk85UFPlNMVjd7UZE/EhVM5xbHwiRttVGrscNqldS6ItVH6O8Fp25EgJmiE2JaKtFROt4DibWRgfsxUzcRmjXDEzMT4eYFN3WQ2eQrzU9fEQr1kbo3o3noADfZSLXmdGw5RqumjihoAhcEoQsB9jJtpRequua8R9HMqfvPp6688rx15RWV1/Ynln331ItGunqc8M44E7savHX8OKdBeVnVDYIGMSeDX1mXpEHpNSOpyvOWWu0qAsD2+VGWdfBS//9US9HcdahbphY6dksoJXlURm4a7NGSt1zVBIx9csOmvoRaOjqbusBt2NrJHLM6ukrk/VAYzqjX4mDjRv7SzctXtXzf7S8TWLzqrpaizexOXlqryIXnMYbWIodrbKeVXfquiatoziNS2sXPumaqw9RBUrNE61CVM1dsrxmiRWMgAmqb495E2TIWAIGAJnF4Hwszhs5Vzdn3Emz9HQ6Skcl7kxU1e102bqxLATyrBCsszVKjqGFmseKV4l1aY6L6noU4nLMykO+2pazZhq37SMquI1Layc+1M11h5gihUap9qEqRo75XidUqxAfRbjy+5dNcf7KR1fTcZW6dIHqjSFSSqvCGrVFcvU1UP9edcVtyk+jzFInc97G2Of67ZR25eql8qL7cXnqi/On0dd4/iUqpvKi3GIz1N4taUHW1V1pfyIfa2jT+vm6a3ql+phb7pCNMqPDa9yjFQiDyvK647V06hLcbB9MwTiMVI0BrCAfJlM7AnydevVlY9tarvUV+eDnsTCNc5Vr1YpUqmyRTKqJ7WvU68NvEbsjZykvCvP0/arZJlKlS+TU33xvmq9ce1g9wTeA+N1fYjbUHae0q/tKasblqf0UD4vulJ+pPLCNsXH897G2N+67aO+tjGuG5/HtlLnqisuOyu6tH2p9qTyYhzic9UX58+jrnF8StVN5cU4xOcpvNrSg6150ZXyI5UX4xOep7CapzaGvo7rV4xNfB7bSp2fdby0fSlsUnkhRovhSeo4T0FefkqH5qXqpPJUvmifqpfKK9KhZal6qTyVL9qn6qXyinRoWapeKk/li/apeqm8Ih1alqqXylP5vH1enbz8PD2an6qXylP5on2qXiqvSEfbZXn28/Lbtp+nL2U/lZdXP8zPq5eXH9aNj5vUiXXoeUpXKk/li/apeqm8Ih1alqqXylP5on2qXiqvSIeWpeql8lS+aJ+ql8or0qFlqXqpPJWvu2+iK69OXn6RT3l18vJnravIvpWVIzDSr5zINpIXqdAy3UfFhaf6RbNQaFCo+nVfpU4VGXyo40esc8QfTkYyYunheUWx4wp1/VT9uj9WVPFA6+meaurDOHgdm0exbKH+47LBQVFZLBufq69xfup8HDuqT3Xonvw6PqieWe5D39WPVJ6WFe1T9VJ5RTq0LK9eXr7WS+1TdVJ5qbpxXqpeKi+ulzpP1UvlperGeal6qby4Xuo8VS+Vl6ob56XqpfLieqnzVL1UXqpumJdXJy8/rJs6TtVL5aXqxnmpeqm8uN4kz/Ps5+VP0pdQd8p+Ki+sk3ecqpfKy6sf5ufVy8sP68bHqTqpvLhe6jxVL5WXqhvnpeql8uJ6qfNUvVReqm6cl6qXyovrpc5T9VJ5qbpxXqpeKi+uF5/n1cnLD+uXErWhsB5XUayytjcEihA4D2PptLRxXv1s0682dRWNays7+wi0OZba1HX2kbcW5iIgbFMrxFyugekUTO16qAhWmVhb/pbZmQ76CSsVHKsgcqx4HLzq2Dk2GByMYztQ09rhvPnTWsMCReehjUFz7XCCCJyHsXRa2nha/BxnOJ6HNo6Dj9WtjkDTsbRc3YRJGgKGgCFgCBgChoAhYAjMAwIjpNXISdq7CiI+anLwjbLpe9+K7IRfVmO5sIwWxOXpVlXPHdE3cpLWUUHkGC9ellVFPmWpqF6ISSxXVJayUzdvxN7ISVpTBZGp4ZXyZdJ4pVGxXEPAEDAEDAFDwBAwBOoj0Ciitr4Zq2EIGAKGgCFgCBgChoAhYAiUI5Ai2sprmcTcIxCypRN0dkpmJtgCU20IGAKGgCFgCBgC5xkBI2rPc+9b2w0BQ8AQMAQMAUPAEBgg4AhS/kyIKQ3VQqaFhFpR2bx2kPNZ/oS+t+lrqPdM4EWDpohX2BcxlmGZHRsChoAhYAgYAoaAITBPCBhRO0+9Yb4YAucYgX4/nLKfYyCs6YbAGAi0eRXFuuLzOm4e17XrvA5sM5EdcGkTsx0SZrGRuOx43MSCc3Qe+9y2a0X6i8ra9qMtfZP2OdQfj5+isrbaZ3oMAUPAEDAEDAFDwBAYFwFbo3ZcBK2+IWAIjIUABG2323U6FmRRxHAiRWY80apjzHTVQetkVJhhX4yfja9ifOJSh1fiGo/lZn2u4z7u31n7hf1er5f1ZZunBF51sUJecY7bEpbV1RvrmsfzSeI1j+0d16cmeKnN1PjR8ZUq03q2NwQMAUPAEDAEDAFDYJYIGFE7S/TNtiFgCDgEIGohIEipyVPehN5VKPhzWnQ1bV8KL9OVPyBOy3igBU37cd7byI8xk3z0Ob/3q5XEuKfwrKZpMlIEJPcbj472fVK82NfFqki+qKz9VkxPo+FVD+umeJWNn7Lyel6atCFgCBgChoAhYAgYAu0iYERtu3iaNkPAEGiAAFG1uvRBPIHSiVoDtSeIA9NVjKJhX4xPXGp4xYjknytWLmpeTsa5FvOttFOivuGzHrej2bQYAoZAEwT0/tGkrtUxBAwBQ8AQMAQMAUPgtCFgRO1p6zHz1xAwBAwBQ8AQMARGEFBCtQ1Cp6mONn0YadwETtrytSlWNKktHyYAz4hK9ZPMcdo7Tv02fRhp3ARO1NdxsToveE2gC0ylIWAIGAKGgCFgCJxyBOxlYqe8A819Q8AQMAQMAUPAEPAIKEk0bTxCu+HxtP2oYm8e/JsHH6pgZTLNEbA+bo6d1TQEDAFDwBAwBAyB842AEbXnu/+t9YaAIWAIGAKGwEwQgMiJyZxUXl3nYp1169eVj+21EUmYwiEvr66/oX8pnXX11ZUP8Qp9qasnlE+1I7SDbEom1JF3HPrYVEee7rL82F7oS1ndovIq2MS2i/SFZaGPsZ1QbhLHsc+hL5OwZzoNAUPAEDAEDAFDwBCYBAJG1E4CVdNpCBgChoAhYAgYApUQUDJH95UqRUIQMiEpM46uSHXhaWgn9qGwYsVC1a/7sJrm6T4sKzuOfW2io8xGqjy0E/ZXSrZqXqhT62ie7jWffSovLE8dt+VrSnfVvLZ80PbrPrRfNS+skzoOfU3pTNUZNy+2E/owrm6rbwgYAoaAIWAIGAKGwDQRKCVqU190UnlNnT5rulLtSeVVwatpvZTu06Srqa9N650mvFK+tpV31vBLtSeV1xS/s6Yr1Z5UXhW8mtZL6T5Nupr62rTeacIr5WuYF5MsYdm4x+ielP68vmvLnurXPVhMsj2qn32Y2mpPqDM8Hkd/iI3qDPPOAl5he7SNTfdlumaBV9O2hPXCdoXH44ytUP8kjkM/x9U/D7pSPqTymrb1rOlKtSeVVwWvpvVSuk+Trqa+Nq13mvBK+dpW3lnDL9WeVF5T/M6arlR7UnlV8GpaL6X7NOmq4utyFaHTDkTK/yp5TbFJ6W5LV1t68HFedbXp27y20fxKXSX5eYZXPjapknnEax59Ars2/WpTX5t+zbuuiRMpAwN9AQIsQnttYBPrUP3s4zLGSJWUqkee6q6io4mM0y9/nO8DJ9Smy2uiNKiTalcb+lN6p4qXGFMf2miPQqY69Zy96k+VhXJFx3FdPVfdRXXHKXP65Y9ei+hSm+rDOPpjHaqbfVzWph3TVYyAYV+MT1zaFl5t6cG/edXVpm/z2kbzK75Cis8Nr2J84tJ5xGsefQK3Nv2qom857qy889Ax/eKTJ3ve80OswMLwKh4RIV6GVTFWlBpe5RiFEoZXiEbxcYgVknY9VsfLsCrGap5KGefWX6M9El/7o6V2BgI2bmwcGALVEAjvJ3avLcYsxApJw6s6XoZVMVaUhuPL8DK8yhGoLhGOLWrZ+CrGLsSrKlaVidpi01ZqCBgChoAhYAgYAoZAdQSqflFRjSofftnRMt2nyhYkk7phWXisdXVfxY7Kso/li3QX1UuVhXl1j2O/UvVjXzkPox2pE8vEeqrY0ToqG+ot0x/XTcmHelW+zj6sn9KvuuIyzuvgVdWO2lP50G54rHLxXuuRH8uHZXG9queqI9Yd1k+VkdcEr5Su0JYex341raf6bG8IGAKGgCFgCBgChsAsEDCidgKo80VRvxzql8YJmDGVhsDZQUCYFL1m2m7UpPS27ec86DOs6vWC4VUPL6QXuNYTwJEVfl7GIuHnalxWxYuqderaqSuvvjat5+r3qT2Kl8sI/niJIKPGYVWsUDmOnRouFdop80HbUyZXx59QVvWHeW0f4/s07OC32qmCVxO/VH8djJrYqaNfZadlR+3Z3hAIxxzHlgwBQ8AQOA0I2L1r8r20XPahoF+oYrn4vIqrqiuWPYu64jbF5zEGqfPzglcKm1ReCqMwb9J4NfEJ/1J+NdGlelJ1U3khNqlj1ReWNdFD/XF0UXdpcTFbWlpyJE7ojx438SvlE/pMl6I6uje8RvEoOztNeDUZ87Q/1caxdeX9KIOxWHnoQFFZWWfVKa9rp668+lJUb1AWi1C13+9l3W436/d6rn+QCWFS9QpnqkxlyvZqP0+HlqMnTya20dSvonpaFtuK/VI59nEqKotl884Vj5R+LdO6KRktC/dN/Sqqp2WhHT1O+ZXKK5LXsrI9mOTpbopXmc2y8jx/4nqxf3F53nlK/6x1pXzC/yZ+qa64bnyeh0+Yr7rCPI7Poq64TfF5jEHq/LzglcImlZfCKMybNF5NfMK/lF9NdKmeVN1UXohN6lj1hWVN9FC/LV0pPehv4pfqiuvG5+gvS6orljuLuuI2xecxBqnz84JXCptUXohRaUQtCmIAy5SGBsJj0xWiUX5seJVjFEpMGq/Q1iyOU+3DD/LnLdXySYibRSFpV1ZXfbRd1JhauqK6bd27UGu6InBLTg2vEoCi4nOFVyqkNsLDTtMIdI+OhKTtZ92s5wTicRPWKioL5cqOU5894X25rp268upfUT3KQp+ok5JP5VXRrzJ5+9h2nhz5RT6k6tWVVx1F9SiLfY7l43PVy76oLJTLO1bb7GNdWkbduCxPn+bXlR+3ntafh32IWx1/yvrAdI0iYHiN4lF2dl7xKsNl0uUp3LFJ/rylpj6l2mi68nvX8MrHJlUyD3iVErUpxy3PEDAEqiOQutCr156eZNMPtzY89I9D80h0u0sgNJ20pdpkulKo5OcZXvnYpErawqstPfg4EV1G0qa6v3oe+LXZMRUt532OTcOVPNux6/gSfo5VrRfrGfdcfUhhk8ob115cv2q7Y7xiPdM6j/Gapl9VsZoUFtr2Sek3vYaAIXC6EJj1PakqWnbvqoqUyRkCzRFYbF7VahoChoAhYAgYAoaAIWAInHkEZFYWTswg06ZFOmI4tF2EdexX1XpFOhuVRT7HfjXSWaGSW744sl1ULexDsJoJXgPDoe1p4OXsyZ/Bks9FMFmZIWAIGAKGgCFgCBgCU0XAiNqpwm3GDAFDwBAwBAwBQ8AQMATOEgIh4Xna2nWafT9tWJu/hoAhYAgYAoaAIWAIVEHAiNoqKJmMIWAIGAKGgCFgCBgCc4SAC0QkInBCPo0QeHIycj4hm7FaZ7OBbfVV9+g9D3i5TmoTr7hDWjoP+6Wpz+O64nwAqxFnxtVq9Q0BQ8AQMAQMAUPAEBgfAVujdnwMTYMhYAgYAoaAIWAIGALTRUAZWvYTIpsmpLYWTk19OFFP8aplvZ7wCZv1qo8tPY79sK6DaoBXXwrCsrGdHCiYhM66vs2DD3V9NnlDwBAwBAwBQ8AQOPsIWETt2e9ja6EhYAgYAoaAIWAInDUElGXS/RTbB4c3Bd6z3RaBk2wzgMtH87bbmolqcxgZXhPF2JQbAoaAIWAIGAKGgCGQh4BF1OYhY/mGgCFgCBgChoAhYAjMKQLHZNos/JtwtOUkmjQLgpZ2OKgMr8pdGuI1E1a9sqcmaAgYAoaAIWAIGAKGwGQQsIjayeBqWg0BQ8AQMAQMAUPAEDibCMyK9TyFaIZQhcensCnTddnAmi7eZs0QMAQMAUPAEDAE5gYBi6idm64wRwwBQ8AQMAQMAUPAEJh/BByHVoNIGwSUVg6QrCsfI6b1ya/hZqymtfO6L6xS/6v4rrLjtLUNHW2B1XRsVW3/PLW1LcxMjyFgCBgChoAhYAicLQQsovZs9ae1xhAwBAwBQ8AQMAQMgblEICTJ5tLBOXDKMJqDTjAXDAFDwBAwBAwBQ8AQmCECRtTOEHwzbQgYAoaAIWAIGAKGwLgIQO7FBF8qb1w7qfpV7GhkqO5TesI85KrKUi/2QevqPtTtZOUPe01xfc1ve1/Fjvqs+zIfVE73ZfKUx35oXd2HOpys/GGvKa6v+W3vq9hRn3Vf5oPK6b5M3soNAUPAEDAEDAFDwBCYNgJG1E4bcbNnCBgChoAhYAgYAoZASwg4Am3AaLlj0av7lkzkqqljZ1LEWJ4PpfYSFRNZuW0fp6DMTqnvkfE68nm2c3XkVRAfCooiD8c7LbOT63uO2bryOWos2xAwBAwBQ8AQMAQMgYkgUErUpr7MpPKaejcPulI+pPKqtDFVL5U3D7qq+JCSadqeqrqa6m9ar6pfKbkqeW36VcVeU5k2/WyqK1UvlVeljal6qTzT5RFIYZPKM7zmG68q/WMypxwBYa1C4spdp/yRTa9Z3Tdpaai7rP44dsp0Vy0v84H2JNuUqJjIKnUjqbukVhM7JSorF5fZPtGeggoFRbn+nNCfKzksaGJnWHt+j9ps1zzoSvmQymvaI/OgK+VDKq9KG1P1UnnzoKuKDymZpu2pqqup/qb1qvqVkquS16ZfVew1lWnTz3nQlfIhlXea8Uq1J5VXpY2peqm8edBVxYeUTNP2VNVVRf9yFaGqBlNyVfKa+pDSbbpSqKTz5hUrvG3Lt7b0tOmT6QKBesn60fCKEbAxESOSfz6vWOV7bCWlCAjb1ZeO1b7VfVgvlReWp46VRGNftX5VuZS9tvLyfHDt0UYNhNwuqhCdVnZLVVfFq6mdyg5VFMzzQ/Fy7RkIuV1UITqtaHVImJ82vOIGNm1/rIdz05VCJT/P8MrHJlXSFl5t6cHHNnW1qa9Nv0xXajTm5xle+dikSgyvFCrpvHnFCm/LfFtON+lkbqjIfZE7KWI5AwRCrMgyvIqHRoiXYVWMFaWGVzlGTSX6/fQIXKj7yu7IAac10B2fR+Kjp2I77PMsPhfp0O+6ujE2on/U+ojuqKj8dIDbsf6E7+VKpiMRYhhaHLfvQ115x2GfhcdOPoVZKi9PueSHbQuPC6rIoPC9dtx3CNe0uyjP7Cwu9rOlpUy2vhxn2dHRQtY5wqeFrNdzSpNupPys0hdF9eKy+DzpSCIz5UcqL1F17rPobzcG595Tc3CiCIxc+BO1ZMrPIALh8LH7SXEHh1ghaXhVx8uwKsaK0nB8GV6GVzkC1SXCsUUtG1/F2IV4VcWqMlFbbNpKDQFDwBA43QhA2riNZiipCjEFYSXnTYkYdzNW3QO9tQmiAUGGD9zo0an+qM99Yb3UFk2olQbtHPkQwWeUDHyupS8Sdn6D4yCp73o+y722Ufv/2JcBJq79A9yPy9o+CMZHcmyofd2r/fhc84O9jg/acaKNgVzeoeurgR039irYVF2Qs6ur/WxtrZ9tbPSz5ZV+trOz4LZOZ0H88WRtOB60/bGvKqN7taH7snrIhTpVXus32eNL6E943ERfnTpiemJpgqpHfHbXnuSoPT0PhbQszNPjUD5PzuXnFaqiMfYTVD3iVaqtYZ4KF/mj8kUylIWR2qq3rX2R7bZsoEfbyrHaDPPIJ2mZPxv9q/JFMqM17MwQMAQMAUPAEDAEDIF2EDCith0cR7Tw5U6/2OkXvREBOzEEDIG5Q2B5WYik5Z6L/INgWpDov253IetKBGC3u5gddWXy19Mru5r77voXgmxBogrX13qykQMBWv3O4C2KD2IbX4hI5LgnvnmyqZ+tiO9ron9FiDCvv5p/SKn+/YOF7GB/IVuU6EeINXS6tFDdV19h+Fd1w/U6LMXnI8GyO4ioHErO6EjatjjYIBRXZCP1JdKzK/19eLiYHXYWswUaMCFmbEHsr6xK38nYI/qU7fgDRHxRDB0J6E70xwOJTnXj00epHgmmjAsv75rh/jCuV1Z6Mrb5scGPxWFp8RHaQKRzuCBYQKouypijTmyFyFnZ5LpZlvEDjqsrMo7WMzfmNzezbOvCgpC2C9mrV73s5ct+tr8PvugVjAf61Ruuw+F49rkHjM+DReeD8yDoDyVdl5ao568F76e3QT3OKVsVrH1yDRkc19sNTXNv8Ju7LmVs92reI+pZHkifhL+RmllWao7+LL0+G7bBvmgIFZWdDQTKW2Hjsxwjk2gHgfB6tHHXDqamxRAwBCaPgN27Jo+xTsVzLekXtvjDIz7PVRAUqK4gyx2eRV1xm+LzGIPU+XnBK4VNKi+FUZiXwquJHnTOoy71KdWmVF6ITepY9YVlTfRQfxxdqbqhTxw38StP7wldwuCQ987Vbvb+e/3s2juL2dtvr2Qb64vZkydHbtve7mVPtpey3d2lkbae0BU57iL4JNJ1a6OXfflVln315aqQZkJ/LUK2RcIFp4g+e36UPXok/jzuyvFS9vw5JJqQTsIqXnunl/3mN8vZ9U9XG2HFI+h//vNe9udvjrILFxeyL369nH300apEQC4IwVfD0UQbqL2/L/g5LLvZ9nbfYQnxViXlSZVhn9Id6qL+spCia+vdbGurl3322ZJsa65f9vd62dNnR9lPP/WyWzdFEBYySqGusKiWXzL21mVsfPQR20J2+dJSdunyshsjoU5vS/7KfwjHXq+fdTr97OnTo+zpdlfw7GfbTxazNzvCkkqC1HVjT46vXulln/yin73//mJ2YWspu3BBZPKcd7WHfxDrHPUFh8Pspx+PhGRdzA4Ol+THAm9nKJllq/JDweVLPbl2+tmHH8n4+XBFsIWcXXQE7Zrsl+SnYcbCnuDLtrsrvj/pZjdvdrNbt3x0LWPx3Xd72RdfLAkmy/LDyYLbvvlmP/tGxufLl0vSwaX9YwAAQABJREFUHUKeBxeQa6sA8/bbXbkOFrNf/lIYYkmI4Ps333TEVpZ9+eVi9utfy7iWMc0WqAibUukY+/TDkycd14bt7UzGdpa9fn0Sm0oKGwox3ip2Z6mFprp0zFf1Q+Vjh6ifVxbLch7Ka70iH6rIpOyk8sbRRd0iP0N7akfzwnph+ykPy1Q+3IfyqreoThWZUH/RcVNddeupvPpS1L6yshFdIyf1xqn6wj5lM1Idihcez6Mu9SluU3xe2LBBoeqKZc+irrhN8XmMQer8vOCVwiaVl8IozEvh1UQPOudRl/qUalMqL8Qmdaz6wrImeqg/j7rUp7hN8XnY/rxj1RWXn0VdcZvi8xiD1Pl5wSuFTSovxKg0ohYFMYBlSkMD4bHpCtEoPza8yjEKJVJ4heV1judRV55P5LeR2tKDL0115bWxSftSulJ+kQfRA8H06y+Ws1/9ajO7cWMru3JlNfv229fZd9+9ke0we/2mn+3uCKkrBA33xJSu2E/09mRbW+9lX321nv33//6uPAK+5EiiRSFr66Rbt3ayP/3pVfbXv+5JJGUve/ZsSfyW5Q763eyda1n2n/7Thew//+erdVQeyx4dEUn8SAizl9k77yxl//TPm9k//uOVbH19yW3Hgg0PXr3sZN9+91rwfJMtfn+UvXARlUR4lmNQtR+ruKa6XN9JvxCBubHRlb7vZX/3d5vZv/7rNSEBF4QMPMx+/HFHyMQ3QvRJlKvIOk8Df1VXaNfpDTMKjhkbJKI8f/GLBcF7U8jNDSE5N7LNzfRHsxtPQmTSX3t7XfHxTfbjD7vZ8g+H2Zs3PRmjQigPxie6kb8sRC0/EHz9Nxey995bFxIUMrocd+qTDg662f/3P7az169eCWnbdRHRkMShDuwQAfv21V524/pS9ve/3cx++9srkrd4PNbBFbOQm90uSyB0hdTsOJwPDl5nd+50XTQqRO0772TZf/yPW9k//MNlR/SurAjJ68bnaxn3NPGk/z2pePlyT+psZf/lv1xzMoj9z/+5nd2//8JdK7/5zVb23/7bteNxXfca9IgM/9IP37lxvZN9//2BkMF9adOwfNJHOt5SY7Gu7aa6tF5Ve6H8yV48+X2zTC86nE5VnFIaKUG0glhUK31aV5e6Wbce1lM+p/LSnvpc5J0P6kgFBU18DX1QU2Fe3eMqPsR24qbF52U+HMvHissq1ihvU/U86MKHY9wGODT1y3TVGEgianiNj1c9DUPpFPbD0npHbenK00N+G6ktPfgyD7pSeDX1y3TVG2GGVz5e6dlgvryVGAKGgCEwVQSaflDWdXJZ7obrEkV74cKyED4rQtSuZBcvLguR5yMCeUS+SYLE4nF29KBzcxOilkex+/LId89FRhbrHdqFGOp0eo7QGtZhyYYFFyn51lvyvPkgIYd+HuHPT163f1xbSGjxqTuwQX2INl4E5dMwAhGCi8hgCDTIMKnmyDfqQOINkz/2y0j49h5JhCZ2ZprEPh6wburHHy9kn3++nl2/vpldvboqUaOd7MWLTvb48aEj3hZwnpQgB31B87/gwHIERJ1ubS1nFy8x7lbFryXBsyeErCc1ITYZMywdAEkJ2UnfUk7dxaUdOT6QvjrKdoSs3ZHIWoex6Heyg7HAMRGqSpr6yFJPptIKusX3oY4bxq5f/gAf/HIbvr3e9wUZzz4i+eOPM/mRY1WiWTcyfugAS+rg5/5+dzBuJYJYyH/ax7XF9QbeF2RZhMXFnmsb03z82pLoX64XH5G7KHaknXIdpcYOeWyMVa4vMCQIGqzQw7IPtB288AeddKcf255W4JyNMc1GffBgow64cDxM2PR90enQPm9jWD6fRzTBt7gd/9A1AkuB2qpyBSpKi1wf0ZcFkkVlBdWSRU11ldWLsSqTTzqXlxko18Mi/UVleSbCfOqrnTC/znGZD7H+MvmU7Y2NjezT69flyZRP5Z46+OALFOu9hyyOu/Lh2ul05MesA4mm35bI+ifyA9qe3C8OXVnKxjTy1tfX5f560W0XLlyQe+CWfKa9cP69ll+S8PuItXLmKC3LF7C1tTX5bNiQH07fdhtYvpIfCN+Izzs7/HC6N0cemyuGgCFgCBgChsBkETCidrL4mnZDwBA4JQgwL4N8hMSBoIRQYs85ZZA4TNCarlcK+aR6OYbYgcAiYrEoeXKoL5OUI/eoOI+Md2Td1DBBKq0KuYTPJOpAkmEDgikvqW4ndwgRB5HVl+hMHjHvuGr4qhGMnszyRNramifaoESYtEJmHRz0R9qj+on+3N09cnqR6fUGk+A8x6aRL86xduqnn65kf//3F7NPPtlwJP2TJwfZgwf72e3b+4IB/T5s/yTcAlPI0+G484QsS0MMce05Xzc2WBbBk4z0NfUg5yFTDw4g8MX3+5ngPBwfwiPIeddFCUN8MuYgfRkzi7IgMf2LLvrKkw/DcUOejtEDyMoj1mDlKtDUFzKgJ5G6fSFoVyUq+YIsLXDREaz84MEY2tlhyQT2HTcWr11bF7/XnM2NDSWmWd6gK2MWv1nawF+L+AUubG7JkBL2BSyRgwBWMlpJV64HxuCLF4eunWBHmSbkvV2Pv/6Y4sldP679ePY1OObaYvkGrheWdPD+q8bJ70vgOOGA9hz7uG58fqJyQUaVusfYiXAV+QJzx6Rfrh5pYOqFWLnyOcYUr1S9VF6OmpHsKvWc3cB4lTojRoITVUNWUo8KJAoTWYHmk4cFqtK2T6o4kVPFB2eXPyJcRf6EkUHGpnwg/N3f/m32X/7rf5V7zqrPHTTK2/AnPCXj782HjkCETPzmm2/kiZc/OTKU6H7I0FkliNr3339ffoT82O05vnnzZvbHP/7REbT7skD4PBK1kMpXr16VZW++cNu2EN937tyRz+MH2c8//2xE7awGlNk1BAwBQ8AQmAkCRtTOBHYzaggYAvOGAIQcZA0EDhsEFntHaOnsD7YBNqhBQo/qhASCuHr0aD97+HDfqVQyNFbtCY5+dvfunkwCIb0gjUIf/GPoiwOfeXQcMg1yjDo8Xs70Nc9tJpyQUU+2IdIWs10JWnn06FAIuJ3skkR4Xrq07MhK/EIHmECEfSSP6F+4sOnwYU4KoUd72EJ76H/16kgmWweypirEFlGIof9onm7i5W5COWabW6zduuoiQN9+e9W1DTLv0SPIWgi46RDKjA0dc4wR8Hz92pOKkJ3gp1GoEKBsROCurS0JgbvsiEJkIAvfSL0HDwbsgsB6IN3x9Gk3u3fvwOEOoc74ww4k74ey3AK6XMSsjB3sPXhAJJMn6pF//LiT7ckar7wwiyhSEv1Kuny5n12/vixRyRuy3xI81x1p/+zZoUyuGd97sp5yx/kIsflM1v7l/K23Vh2hy7hh/IlG0YlGP57BI8REiVck8pKOT9rHsV7PXFudzoJEvXVlKYvdwbg+PCZqh7KZw2N9fUOIGsYpP3j0pN6hLJ8gS45ItHl4ndKee/f25bpkGQcI7jzPLN8QaIbAuHdK6g/vBgMfkpnN/DtLtVaEnH3/gw+yr7/+G7m3rrmm9Xrcn2RZFrkpc+0vyM3a7d09hR+gduRe+crJQs5Ckt67d89F1eo9ctoY4cO1a9ey69evy7I6v3Abvty/f18+C57KfWr+blQrKysu8hei9lOJaP7666/lc+iBg44IZcV42liaPUPAEDAEDAFDYFYIGFE7K+TNriFgCJxrBIjs++MfX2W///1rRyj5FySdhGTAh0kkYFcIs66QXEtCyPnJIjNwobWOKyGrj8xD0v6f//NciLJDN7GEtEol6kBI8UKng0MhZYVw+unHrkyMdrP1NYkCFlJW5qQueUKx78jb//Af+hJJueHINKJwnz49dGvo/uEPsg6tVHCEFvVE/75E0W5vH8m2IBNbXkY1KE85NIW8pSWWEpCXvAlRC1n5zjtrjrSDeIPwhNDD193d4aR80m4pxtiBLIYsvX17V/rvQLaO4Mx6tosyAV/OWKbhF7/YcGQnBDPbjRubjiy/f3/HrYusfUAbHj7sSjTSodt///2+kJBEnmauzurqkkQxrTmylOjuu3d3s9/97mX28AHjRsaTjI179yAilx2R3+v5KFQm/mxXry5IFO2GELV+6Qj8h6BFz717e7I/cGOXMSKch5Djh4L7jhCiqxLFvC7joSvlR24MMhbDFGIS5tc9Rs/+/oL4QtTxnpAp+4OoW6+JcpY+AeN/+qfLQj6vSvmStFeIb4mW/f77N9n/+38vXcS4v478wOa68eOaHyOWhJwZRujW9bGJfAgXHpWlKjJlOpqWgzH+tuFDrIPzwe8Hx+7FMhQoXqmy44rBQVW5oEorh9qetuzHelS/OhuXa/55w4vPrJVleZGoPH4PUcv9DZLw8OBQ7h/78nLNFblPLLtoWyJuIUSRIxIXkvby5cvy2XjJyT5//tzBiI5pJ3xj+YAPP/zQbR8I+QzpyXII+DuPSwgsyc0XHK9cueJIZqKAwQ6C9pksTP7w4cNpw2j2DAFDwBAwBAyBmSJgRO1M4TfjhoAhcF4RINL1u293sn/7X/vZ0jKPsS95cjMHEIJgOh3II6Ia05GezAllvugIJiJ1f//7XXlZU0+IYB4FzyeRqLe/t5h1DiWaU5auu3O3L1Glfm3dRXnhlk+cE43ZlYnUgkTUrjtSmDVcIbSePz+UFyvtZv/7fx96e5IPOUOC7IPEwneIvllH1K6ssOwBL59alAntiiM8/fIMkIYdF/kLId7vDwhx34yp/SXK9PHjffeirZ9+4sVmPkqaLpS5tyM3OSZyFJLVr8kKCd4VomA36wuD2BcBiIc9IfU7jzOZ7NJ3ENQdIRq6MmFnqYpe9tlnW9JO/4IyzkfGjevDBUdyHhzQb7K28oBqY21d6VmH3+efb0kU1JaL9GUsQNTy4rtbtw7l0dW+ROnKQBAmjbqsM7u4eJRdv+6XRGCM8CNEt8u4FjHUStKx48+a/0UPODD+Hj5cFFsQst4H1UpbVla6sskL0WQ8fP31JWnrqiOvWbrh1q1d+dHjQAgOH3XvfoSQyvjKmD6UHzhY9kBJbNVr+1EEBreD0cyWzuroZojVkW/JxVpqJu1fHf3nBS+ua10rVYlaok8hNl/KOjirQnJCgkIo8nmKDOu/QoCSBzGK/I9yw75165bcE2azFiw+Qhq/++67x9tbb73lfMVnvmvMWwJ3iG+Ibkjmd+SNkizPQAQw5C1+WzIEDAFDwBAwBM4TAkbUnqfetrYaAobA3CBAdOGBRBlC/iy5R9EhUvOnz5CbkLDlJKd/hJzHyVkiYU8IWNYizYuo9YAsyKSII0+Wdakrs3NPcjFN98k/is7aun65hJBYI7pQgo8G9mRdX5jEQXuQk6dHB2Sct6E6p70nSufKlX72i08WZV3VdZkU+rUInz49cBGgd+7sS/Sox1kJuWn7CJbDtVGJBoUE9F5AuEKALi+/EXJgWaJSN2XiveCWRmB5BJY0OI7ikg4Ee0hElizw6xZ70hcZolzJIyFHnh83w35cFLLWL3kg5YP+hOhcX++57coV/2Iwon1JrNn6+PGBkBWHsu8LlosyDn0ZZC3LTjCutrc96Q9x+/y590+XVXCKWv7j2w+pyrXgfVATELXg4F/WxxrKvgRMOOZHEiJy/bU0St5DMPvrctBGVTqFPXcLei+8a/jeHM2bgiunyoThVa+7ziNe3AshWp9LNCfrz37//feOxF0aEIqbEnV7TcjEzz77zD2qD5HI5wUkI9GgbJC7vMRrFgkiGUJWf6Rlj3+z+kyrggG+qb/qu9uX/IhdRXdKRu+fqTLLMwQMAUPAEDAEZo2AEbWz7gGzbwgYAucSga6sIwtRBvnjiVrWgs2HAtKoCv2CHBvEk7yMWvQTrVscUeusQqIN7DvSlnVDI3/gXnlZEy8E8+uKen/9pFbbI/ZE0E8MB+WyG/U/UuzFJv4XP3HkrStZ9stfrWa/+tXWMVHLOqTffvtaIkAP5HF3xCDehphM3LnAgBKmvOQNsn1/f8mRgYg8f85klreN78vLYg5cP0CSQtJuBkSttNR3n7SDsaCELH3My27YhkQt0r6PhgS//IAwIPhHCFQRhajd2upJJDJLRyxLFNSKRDzhI+MZopaoMl5KB0m7JLaEJHAW5M/gYHt7UWQ9YcpyGPwAQbsXFlgHFuHjGlpzjP2QsNblCXSsO0tC1ELSMrbB3I0TR4H6Y/Igy+kHJTzUmVmP6xMo+a5MvkxLfT6v+xgrB5XhlTscivBq9fLM9WB2BXqPfPb8mXtJ2L/92/+S+5InOyFl14WohaQlevX69etuzzqrRK4qUQvROwuiVglPSE7dlABtm6xV4tffM5v3l/qlvuNv6LvaaW4hXVP1jut/WrvlGgKGgCFgCBgCzREworY5dlbTEDAEDIHGCPDG+YsX5NH7q91smRcnubuxnxqHJJIaOJRlCYi+5YVfRQSin+hkEu24KJGjmSxTcHQcpaK6dE+0INGSRAweHQmhJ1tPCFvITEeUyW7AY7gq6IZQo54nqFST30PosaFjwR1H5XKqE6PRkumcLfK4vizfcPESSwisZx98sC5RqX4tUl5+desWL0PrOkKuXaKwXvvA1m8+OtphKph7/H3EJy+MCyeX9AlvI3cVpZ+UZPH954lKvPAivg+pEydV0aefGYiyhzkd6us7olZe0C2Ppy4KScuajUT89mXphSNZYuFQIsl4ERvEJvnUFPvur/zBRdkxnv2Rj1j1eOOQWpLDIDGeIYZ5yRpLODCJ18S6zLz0h+he5HCbTZMe6/gkn3Zq4gcIznVca1m4932AUsj7QPlASSpP9U91j2tB26Zq+5QZc1AN8DrZo6esMdN095yAxf2VNWqJjP35Z1k/ZpAgZCFoIWx5NP+N/LLHORtLIBBVy8u8WKeW+0J4n0YFj/lfEUL3LfmAduvhyiP/6AzvIdRhGQXs88Iy1mlFH/mhPpZjcEscSHQv0b78SPrxJ5+4KF9IY/RDenL8+eefu7q0h00T6+/SBrfJ4yTsNeEXSxKgR9fgxX/uv+GPVuoT5HRXfundleUingk2+MwSBkeSrzLgxHIG+KTr/PISMdbS5eVn4Id+bOpL0Vh+Amw1dUQn+IANfQA+cQJP9fNtsYVelqpw/ksb3DAe9A++Hcgv27T99QADjmmPJUPAEDAEDAFDYBYIGFE7C9TNpiFgCJx7BHir/FtvL8tar37tV8gi5X9070Hys2JeLE1kIqSqsI2ynZwtU4+NZQ4uXFiWl30tyeSDt1WzTu1J9gZdu7u6LWV78hh35riyoe7hEXY5SxNVlGrSOjrxVMuar3LT3Uu0ppC0rLN78eKiRD2tCT7rMlHkJVA9mewdysu7jiQalAjW+XtMVLFkmQPGzvq6vPhGyH76G5KUiNAjifyEbAxx5hj8tX5lzAeDcKSeTGZJMscVDBeEqF2SccZyC36d4levWN/3UCa7PRmnkMFYD71x1Z0v+MlSGaSBWn+S83dra0kICZZhOJLJN2NcRxXth6jtiz8rjnjX6yClaqQ9xwJDXcdZwYGHwo976qd1BBWmdBh6rSi7vZ5MyY88Myn/8mSnkZ/yx/DKR17x0uE0T1jhtfrHsfrIcVsJ8g6iDgJvZ8eTl9yrFuUGBAEIQQgRCenJOrWQmpC3EJqQghCNqYQc69n++le/cssnQFLqurfcW7DLPQ0Skpdp8SKtv/zlL84O+Up4ontDSNRf/vKX2T/8wz840hMSFNsfffSRIzkhJtEJ4fk3f/M3LtoX0hNyVhPtuH//vtvu3b07QtQqqcqasTdu3HBRxLSLfCVB0YNPbBDLB6L78ePH2Z///Gd5keiBs9WVPPUbjD7++GN5CeWvna8QthC34MYe4hnd+P7ee+95YlvywcvZkj+0AUIVbLCTR9RCymLvEyGAf/PVV9l7siQFy1asCW56L9foabC+K+2/d++ew4J+N6LWQW5/DAFDwBAwBGaAgBG1MwDdTBoChoAhwKPqH3ywJo/frzti1U8awGV0yulJokwmJEcy4WHyRvmoTIgmJC1k3pUrKxKdsiaTFJHOIZd4edTLl37bfiKTLFnSgDU3SfwNJ8Iuk/x806NlgWCeLtU5jT1E+OZmXybPXXkB16rbtraWZWLZFQwgGDvZkyeZTIyJAvVE7TT8StmgD4lSJTqUJQYuXmRyzotuMolg7cvkFaJ5WfKXZexAePpI01fygjqORzsiZaEsbzgGTkjKZBySdGtrQTBccT8IsC4uSyYQ7frixaFMonsyjnw0LcOANWCP94wsIpsliapg722mR13mxvP16+ti17+sjjGtCQIAovbjj9dchG9YpjKpPC3z+6G+0fxBaXFxqorlGQKGwClHgPtK58hHtnK/cmSj3Hu4n0CkQhhCTkLoUUaUKeQgG8dhgtyEWIWY/ezGDXlp4deOOIQEhfykvupQ/ZDAEK+QhhCJGvHJD1akZSF9IWF/KdGyEJtEqG7J4w6QnhdkD0mJLsqIWOVlXUSian10QNLyAspdac/29jZZx4n6EKlKrOIzvsbtwwbt7UDUiq8PHz1ymHD8WD5Yn8jGMe2DhIWQhUxmmQjIWPzFdwhr/EYftvEXefIhcDVB0io5e+fOHc0+3lMfQhys2b744ovsb//2b7MPxSa60E3CH01gjV9qf1d+xSaP/g3xUnnbGwKGgCFgCBgCk0TAiNpJomu6DQFDwBDIQeDChRV5FJGJlEZvIsgEMF3hu+92JHpnTwhFSDtIsLQcc0OIs3feWcu++uqiTIZ8VE9KL8QvEZDb251scUFItpc8/iekmnMlx5G02bnO9ZPDnkxo+4LHomxrjuTkkfnt7QOJotmT/ZG0nfVcRyfXs2gYJC1LCrzzzqpEPNMnR26cbG0tyqRzSSa3K9IGv3QD0awQzY8e7WUPHvAIq0QNS2czUZ1EYlor82aZrLO0Bo/F8ggs6xZ3xdcjsU8EGlJD+yx8sEQ085KuPwt5672DgObHAaJvIXSZN/u583ACjeS7764LsXFZ9B+5umH76F/qvPUWE3OICdXt92f1L80cRXr+W+p6deD0cIRMx2/Dqx7O0+6fet6lpd34kqKJ+s79ZmAeEhFCkD33JH0cHyIRgi9MRN3yaD9r234l0Z2/kohSCEpIVBLEL3UgQtkgEyENITC5x0Ew8lKz7777zhG2rpLk94QkVvK1O4i4DQlIJzf44++VPlJY8yGZWUoAMhJdYcI2RDBELVHAkKokZLHJRkQqcuDAXlYWcnvweEtI5n//93+Xz4bdY1nqY1MJUI41UjjPb8qR0xTb13z2EMZsYEfULgTtjRs33HIQVwRvIqLxDftsEOj4rQQ05DD1sQeJDXlNf1oyBAwBQ8AQMASmiYARtdNE22wZAoaAITBAgGjOTz/dkknQkFgqAocXGn333b6QsPKIOy/6SiQIKkgzJiHohQTudJTRPTl13ds7krX3DoTk25e3W7/Jbt5M602YOkVZvk2sayrzTRfBDFELUQ6OT54cZD/9RCSRJ2o1mhYsZ5V4qZUStfRfv09U7bJEVq0IYbnm1tZ9/32ZEMtLvOhvyMuHD/ezB/f3s9dviF4dRARPqBH8GLCxsSAkw4rsIWqZuPsXieELY1WTm3gLSbu83JWJPMtwCIkScOEQtH6d5PDHh5PgM54hsIfjWS0M957gZq1HJXuHZWf16CRSc95SHRrsZ+D8DEyO1yGK13hazkVtB9UAL/n9p5XhxXjh89TfU/lBaDCCJE9JWl0GADmIS6JeiX4lgjRMELWQtL/97W/dcgWsGQu5SYLIhAwkQhfSEJ0QtUSuEuVJHpGt6Ofx/J3BOrLcXyEtseX8EHlHuA5+yVXikz3EI5sSrOqbOxfCkj2EaJjQiV2icYn8JTqVZRPwFV3YpZ6S1ZDJEJ4QtJfF709kvVwI6B9++MHVwQ/1WYlS9QdbStjig8qGfqtv1MUP9pSHiX7AHwhXiNp//dd/dX5zDp7gQz321IWUxW/s00eQ0ZShn3L8N6I2RNiODQFDwBAwBKaBQClRm/pSS15b3x2b6mrTL9NVb6il8KqnYSid0kVek/GV0jW0VO9oHnXl+dQUrxiRtvSgt6muVBvnQVeMVd02ptq1v98VknTPkaR+IpiyMsx7SLTka0ha1rAb5sdHlPG4JlGW9+/vDiIQmWjGkqzz1hWC8lDIykOJpkV3wKCJeIx9QsUJpXkysa4TFXMyUvrq6xKicKnvolE/+4xHKJkIL8pkGoz2hQDfEwyYyA6im3N8CbPb8ctjHOtaW1uSyfGa9GMm0VbL4jcvqVkWcnnZkaNEjpLPy7uePvVE87ff7mQ3b3Wk3z2xQIer3hgvznUL2xQea90wT48ZS36tXB7z9T8MMOYgayFp/bzZr7XIZPutK10hKBayj2RpAuoy3jWxPvBrGdevXvXleui7NYLxLh7jLKlw9+6ui9qlPFDhVGEH4vqTTzYdNqrf9rNDgF4uuFXNzrE5tax4Da+OOXV0ztyaFF4QeBtC4L333vvuRVyLS0Rq8sJCH315/fp1R0RqJCYkI6Qej/n/LI/+vyEKU+5L7gkH0UXkLFGpN27ccFGqELE///xzxqP7rOnKY/YsP8DSBUSDfiyP6WPjgpCHkKWkd4UshXCEqD0UghTC8f6DB9kf/vAHT/CKTpYIgBAmIQsB+eLFC/lB8if5viF+SV2IYU0sIcBar/iA/yQw5dqFrKQ9SrSyfuuhkLPUZ/1ZjnlR2JbgtCntYzkDoobxF7ss24A/tBtCljayJ0r1RyFvsU3UKnJskMGQu7Qf0pr1c/EZu/ioCfuQ4fj2QtYJDtMlwesDsQcGn376qSNp6Uvk2dCnSzHQPkhacIKEhpBmj7+U6Xq7YKMpNd4UL5Wpuj+vuqriE8tNGq/YXtXzlF9V68ZybenK00N+G5/Lbemh/fOgK4XXWfOrzTaeV13x9Vr1vCleMsWqllROL249r1a7WOos6tI2nRe8tL3FPZ1fqvXbxkv15luuXjIvukI/DK/q/aeSMX7hucpU3ZfVpXwoMzxCPyQpkaw//vjGEVcx8TT0wRNuDx4euGhJv4asz9P+V1nILQgrSDNIyHv3mOgc5upnjdpnz47c9vLFgGCLHBn1Wi01289Cl8eoL4RizxGen3225ZaFgKjdFaLz/v2D7LtvO0IWLnuilqYJBk19bVovRJRI6LfflvUMZXkBSFrGCv5C4LLUAFGsEKWQtHfu7GSQtN9+uy/H9Ls81imT0tiP+Dy0Fx8XyVLGEIGgxU/84Jyxp0TtcVCWZLL24cWL/ezLL9eyf/zHSy6aNiRqd3e7QhAQ1c1jwgeyvAc95nst9IvxfOfOrlsDN/5hA9sklvu4cmVVlobw5/Z39ggUjaXZezd/Hhhe1ftkklj5e8yCiw4lwvKzzz+TKM1VF6lJhCukImQepCLELfJ89kIgQgJCBh6TnnI/XpLtwmCd2OvXrztyEKIW2d/97neORKUuxCD5bETeOltCHEJ8QvS+I6TnZSEVISchhiFqHwjRCWFKtOiSbBClHEM+EllKlCgE6c2bN93SCZC2nGuCEIVUjglc8HVErZCU3MfvC1mKXxCtGkkLSUvZipCyELOsYYtNyE/8hXCFXP5QCFBs0L7XQhRD1OL7hpCvEN1KjkKsOpJallrA9jMhaiGy/yIvDPteiF1N6gPENu0JxwLtBWN8QR9LN9Be5MDgz998I9+7fvTLPUhbsA85Tp1/+Zd/cfjRt7SHl8X9WV7kFupXH+J9FZm4jp5rXf3k03MtH2c/j7rG9Unrt42X6h0Hb607L7pCPwwv7Z38veLVNlZYVN351quXzIsu9eO84KXtrd5To5JavypepRG1o+r9IFPlcZmdewS0Ezjj2PDyuOT9DfHKk7F8Q2ASCMzy+iSi9tGjA4lU2XWP3vEIeyr53IXs58dHMglclMkgJJzkpsVdFGa3KxG1L3hEcl+iUOTlSwtSI6Gf6EeiGV+/Zi9rhbJOKE6I/FlJqys9mYj1JKqHpQ9WHAHKuq5Eo24Lif30KUQ1j6zKRJunPsFqxo2HaOcRf9YQhqTd2eGRVZY08C8Zo3sgSlkigbYgv7Pj+/DwcAp9KB9qMjd3xCx7Ej4JFyHErT9WDFnNkZePrcmL0S7I8g34vLKy6DZHlgtRS1to3717vCiMR2O9zvAvEeKsJfz4MTLSRgwOEgQJGz88/OIXm8n6Kmv7GSNAt9G/w+6bsUNzbl7xmnM358G9EKpxhxf3F6IwIQ0/+eRjRypCQLKxriwEKuQiBCqyRH4SHQoBSPQlpCdkImlFSFMITiJjIU/ZSJCdSkT+9NOPQrb65QcgWdkgGCE035NfniCD8QWSFpL42fNnTj/kLo/lQ5jiLxsEI8QkRCeP8HNvdKSn+EcEL76GUaisTwvRS4Tu0cBn56D8gUxFF0sAoJdNcXB+Ch60X31mjw8kloZAHhKUpRAuQhxLe1gHd0/87ordN1KfOthBL9jsC3GMz/gCiYx9MIUo1sRavNQHY9oWJqKgPxDMNJoW7PEFnST8w5bbi+3VQbn2ObJgzfcm+hciF1nqq47Q3rjH4VgNx/C4es9q/RCvs9pGa9fsEbBrsbwPwmvR8KqHV7m0l6hN1FZVbHKGgCFgCBgC+Qj4pQ8OZGLXcZOIJXmkMkVe6Afh6zcLMrlhAsSmuSf1Q9pBer0QYgvi6/YtefmSTDJSRLDMl2SySNTMotPN+qwwbvnaT9qb5xwmVevrfUfS/uIXSxJxKZNGWTIA7Ik0/vnnfSG0u3LOJM7jOg9tZzkAiMknT2Tt4Ocdt7FGLUsesFYr5CyRtbSFKNJLUsbcuCsvAodsZsI5ySRDTN7u7UlkCGXGHOMLAhbyFbJWE6NJ3tnmMN+R9Ws3t+TlO+I/0bgsVUB0MKQ57V1bg4AdML+qYLB/+fJIIqsOJAK6668XeQxZEy+FI7psYeFQSAtPTFA2aRzUvu2rI8DIbGv90OpWT6+ku5InezmfXnASnrd161PSDsLu00+vy732wuC+s3QcLarrsUKGsm7sn/70p+xPf/xj9ljIUIhH7kkkyEr0XJSNOpCEEKyQkM8kYnNbomq3n2w7MlTXTOUzm2hbCMoPhGCFFIYwhOxVAvfN6zeOEIbwpZ7c8NxnN5Gr6IbEdPniAz6SB6nL4/8vhPzUhJ+Qp24/8FnLIEuJgKW+vvSMiFV8oE20BaKVSF4ITl46Rjn5nIMjRCkELPUhrflchhTGN3yHBAUjyG1IWohjZCBjkcNvykKfKSeSF5+1jeozpPY1onglKha7+IAv+IRvH8ryDBw7HaIH3zlniQbaRMIf/CIKem1t1bURO7EttWl7Q8AQMAQMAUOgbQRqE7WJQJe2fTr1+sJgEcOrvDtDvMqlTcIQaA+BWV6fkHHPn/FWYR8VuSzEUxGxRMTngURLeqI2jYHMOWTywRuVibDsZk8e97IHDyQySB5PZ9IRJ+Zkva68zEk29n2NqI0FT+E5kzASRO377y9m12+syeSStzsvucfnWXaC9WlfvGTSKC/E4gVcRGrOQVuVqOVFb/5lb4cSwbUsE+xVmXz3ZVIpayfKsgjs33prNbsi28ULQt5K5DDN7ghhO8l2QAYfHDLGeCmLtwlRC/nq/HKLKnn8gfNIxu6rVzIetw+yKx3/8pwtWW+XvqAOa+9C2BJtm0e0YOvxYDxDVDPx1gRHwZi/fLknBIg8iium8/RoHdvPDoFJjs3ZtcosnzUE+DyGsIPcI3HPYXOPyguBRxkykJg8In/z5s3snixDABFKnibkIADZIBHRQTnkI7JEjLK5O+bgc4u6PKr/VEha9vhAPYheolMvSVTvKksSiDyErEbvUg9iE6IYUlE/BzmGFKUMkpglA6ok6jsSV/Ysb4AfrCMLIXtFok0hYR2pKThALkMoQ8hqZK1i6Eht2j4gaomGDV8Btit+sSzCAX4PsMM2ftO2PSmr6vOa+EnEM2QydvEB7LQv35doWyWdwYDvRmyQuvQt5C/nyLOtLAvpLH73xB9xqApstWTod70nujFQq/b5Ew7xOn+ttxZPCwG7FsuRDq9Fw6seXuXSXkLeg12c8j48yurlaVV9YXkTXSk96JwXXbEf8XnY/rzjeW9j6HeT9lFf2xjXj89DW3nHqissb6KH+vOoS31KtSmVF+KQOlZ9YVkTPdQfR1eqbugTx038ytMb6+I8zovt552X1RvVPSoNSQrpdnCwKN/9ZSshalmW4JhIlYnHqLahh8cTM3mxkzxJKS/88Ovj8SKUODHvwA/0cpzSmcqL9VQ9b6Kraj/GPmCrL4zixmZfImhW5S3bWzKJJEqGCXBHIpl3ZF3AA5kgy/gVPJXZq+pjU7/UT+efnkR7vyQFEbUHQrTzEq0jOe4JaUvk6ZFM8v3yAJubPqr2/ffXpH1r0t8HEkUtZOV96VQmzrRrkKq2C/EyWRchu0fUL1FaflkGSFYifImSXVsfvO0cHwTwPXky9b74tLy0J5FOHZlA89jpgkymV2QifHJcqs/hnvkx0d96vSwF4xmSlk3m+JOYR4dunItj7f/h6Cludl35Ym3NSmflg7PLH24hFV0fiFeUnozYrHxweA2aVAUvla8i2zZSEHaQmg/kZV28yApSku2qEKUkyD82SD0IPpZEgIxdJlozcEYJQpYA0EhOiFR0Q566dV6Rlw/hsB6Rpciw1i1kJffzkehUsROnsH5cFp7Hcil8kVkTcvVtIWRZG5e1b9kgatkcIUv7ZXOEruBF+8ECXPTzB3xoN2QnebFt9Uvzda/58b6sHH/ACVIcuyT1gZeecRwStfjEpiQ6Syk4PCQPQp0y2gOBjO0UVtgo8wuZOKmuuG58HtdLnauuuGwedTXxiXZpG+P68XmMQepcdYVlTfRQfx51qU+pNqXyQhxSx6ovLGuih/rzqEt9itsUn4ftLzpWfaFME10pPeicF12xH/F52P6843lvY+h3k/ZRX9sY14/PQ1scl0bUokCVa+UypSpXZd9UV5t+ma4qPTWUSeE1LK13lNJFXpOU0tVED3XmUVeeT03xirFpS4/iF+uvcp5qY1O/2tSV8r2OXylZHheXuZdEkQhJKxGC3RUiBOO7bcJyBRFI16MBcXVw4KNpmZyUpVh17Hd8ntKXJ5OXn9IR5lGvzK9QXo+ZOLLJnFHeRA2ReUGIQYjaBbeUwI8/7glZeySkLZPHky/fUj15+6Z+xfrQE2PDcgKvXkHOdoTgPMpu3SLqmrZ0hRzdl0kjk8pFadeGkJ5rEjG8nv3yV1tCykuU6xt5C/i9gUYmoAn9ajO2G/qWWyY6Iff39mUdZFmuAKKWsUx0L5Gxly6xHiOTcTT4sbe/v+CIWqJiP3hBJNmRRGYtS1TWZg2iFiJ2wS3TgS0mzpogcdmI7oWwZfyTxFVLNRFw0A3wq7JEwUC0ppV2xefBh6pfGtRX9rManjP1QY3XbPy08dLPD0jShw8fuJdwbW5uZRB9RJhuStQo0Zrch9ggJ4nihKhUclBHOWugsj6rlqEb4lWJ2jDyVeuwRwb7RN5C7JIgIIlqVULYZQ7+KLS6D8vqHqsOR0xLZCrrvf7mN79xm7YTAloTvkJq0nbqaEQt5eDjlkeQPaTnOEn9KtKBPXygT7CrRCu+0W+sYUsfxInvSMg7onbgJ2Q5HyTo5EdHEjXjVpzU5kRL/5xXXaXA5AhMGq8cs6XZKb9KK+UItKUrTw/5baS29ODLPOhK4XXW/GqzjedVV9NrpylepURtU4esniFgCBgChkA1BLiBM28Ycw6TNJaYjyTlzlrm5iYvEevKunOL8vKVFUciQuI9e3botufPeYkaLxEbENiTAL8hqPQZvhJZy/wcsh2SkvOff+4LQcDLU/oyqVzM3ntv3UWyfvDBuiNO795lrVfI0yX/qCZsW1sJjMS5o6MFIbj7Qr4eZp99xmO3PSFclx3GkOFbW6xBy4t0eNEZLwqT9ZX3eLyUiKueEA2sC+zXtm3mWottaubAzGulvvS14RTI6pCpgrKTb8NwBR15bZ6mD7luVgErqFxTPKiZPkxhk8qjdhleefXSlmvmlhnPUTdpvGhzyBZA5BFRu7e3Ky/9fCQv/fzBRVyur2+4l4Y9kZdi8fg/EaY8Sg95ef36dVd2T156xdqyEJdsqgt9ShBCCEImQh7m/YgKOUiUJxvyzkXxS/VxL55U0m6CEFaS9saNG/J5854jmO/cuSPY7B23UdvKi86QYU9dyFISZKluk/K5SC/r/f4kL3pjnVvtg1ge/+gLcNf017/+1b18jfbRf5YMAUPAEDAEDIFpIWBE7bSQNjuGgCFgCBgCU0GAidimLHlw7RovEluWSaN/idirVx2JVO24F4k9f96XSCUhM1mXVyZo85TwH6KWJQ6Iuj489IQnL7fu9Vh3EKJzT9q2ln31FS9pWc4gaolYffutPSEAeHu4J6EnMZVHtyyb6PxgGQkiWS9f9ksfsJzBBVkvd22N6FYeHcVnImElylbmuTtveuJnT8hnH/06T7ifNl8mRajVvRrqylfBWcet6nbn8se1WTMDRYms49JY13FBCwfObpHxyEYN0ahm/qm2z2EzEHN58icvKjrPj5SufMv1S+YVLyVptf20jPswUa9K1K6uyHqlqyvZI1kGgbVon8n6sZCtH3zwgawV/pYj+SAEv/32W0euEpmpRC1Rsxo5y+cNxCskJlGpeUQtMpC0GhmqPqEnJH3r90K1GvhJ9O7169ezr7/+2r1siyUPvv/+e1k26Ce3HARt1JeZ4Rey+Ea72PAdPbpVszyeFP2mm2qCOP+jvOiNZSxIYT+rDPvYT/p+W0h5I2pDlOzYEDAEDAFDYBoIGFE7DZTNhiFgCJw6BGRuIRMN1jJblpdmLMmabF35Es+b5aUp7s/JJsn8wKXd3QWZ4BFJmDcd8LovX1nK3nv/UNbu7Mn6behHeTpBeEHaeQIOAixfNq3hfOTqBO3Spb5EPPEW6jUhEf2aqDyqf+c2E295pPSNJzL9xGy+sGEc6UYQD0Sn9vfu7qJMHJmI9iRq61CWceBFY/JI5+ayWwbhvfdXsg8+PMheCBFN1KusSiBRWyxNwCbrHcmn/upqX7YFIReI6iKimIk0j6hCti7JWr4LEhUlY3JRKi/05U3cRMQS5SvLHog0Pu3sML4zISuOZDt01wkRvix98N57q9mNG/sS4QvRASnLcgnydu0lIdC3Mpn886gwkUs2hscZeecSvXPZ6HFGidWthEA0rvRzpHPYyd68fu2iKom0XFpalicx3mTP+aVKElG1NyTSlM8RyFqiaz/66CN58uFnR/BBZLIsANGnStwiC4nJ0glFRC3RtqylClmKHCnUBTGal/BfyVyO8R0dbGHEaF59PhDwE6KVl3J9+OGHLkIWYpqlGG7fvu1enkab2LClBO0nn3wiP8rxSTFM/nM2AnlY7IhV1YG/JF2KAMI6j8wOVBwfUh+cWC5CdYA/hCsEO/lHUu6tHFdLHugL35QcTwpZpiFgCBgChoAhMAEEjKidAKim0hAwBE4/AqxlCkl77dqqTEx48/BBdvWaELXyL0zxl33mGPfvdyVyg8fVfVROKK/HvOX+Y3nJ1VdfHTrCCntxknnScdrdZU3QvkSEZuLPovizOJho4EEgeFzjfB4wSWO7cmVBHstfl8c2Nxx5SHTq48cH2Z//8lrWcGXiTE+C2+nBjskuZClkLWvWsobtw4d7jmR9663V7NLFFbce7xdfHGQ3f+rJOPGTZUjri2wXF1y064qsh8yPEKzdy7qyJEhT1n5lmYgbN1bkuCOTXB8F++jnbvbzI3kxnaynnMmL7yCOfZTvkhAYRzLW94V0gOBdc9fM9eub2T//85HgfSTlXSE2eiLfFz/lxW4fevKcF7t5ktiZtz81ETg9o3a0YeH9sqgNcRnnedGhoxZOnsW6TkrMb47iVdSGVFlTvFK65hedk56NgxfawvbzOQJ52OkcyVryB4645B4M0cfasUS7sszBfSH/IGnZiDj97LPP5HP6lasLOYj8ayF79aVgkIcQnpCw6MgjTiFVIWkvyfq2yOMP0avo3hGyFDIyldRvfOeYBNmJPTYI4LJEO/ETH1jCAB/wk8jSF0JS0+6bN2+6tuEHdthYCgIM8TevXSnb6rNGrnJOffBhw/+qCVIVnCBn0aHY9UTngZDK+E9/kHS85OmmbRDR6MQnS4aAIWAIGAKGwLQQqP7JNy2PzI4hYAgYAnOAACSVkk+sDQqRBWFblggkOTzcl4gaJknhtG+0Jro//Gg9+2rXR9KmiFpqeLKWF2BBfHXEj55MljxZ6zTa3CEAti+TSwDpOaIWkvbDDzdctCmP50PUfv/9fvbQkY6yDl2Dl4gFxmZy6JcTWJSJZl8ihLrZ3bt7MpFdkom0RF8J6frhh+vZa3kR2Zs3u1Im5KjgcflKX6JcF4VIhUyFhIWUzZwsRC1jzBO1C26ZiOvX1x2h64lhJuAH2csXEBaCrIzpvkRzHx3xYwFr/nZl0r4n8kyIlwT3VbcMAzofPtwXEleie+UFYnt7fk1aIpw/+WTD2YEY9mvxQuTaUggzGVCnyGj+3fQUNaKhq9zV6ra/rnxD1+amWvhR2ASvFMCQe0fdI7nXHcp90P/wuifEHfdGok0haVmvFSKRyFPIWtZ0hQh8+vSpIzsh+4jM1JeCQfghT0StbujSiFIIUjZIVQhSjailHqShIxpLiFoITwhijbqFrEQX/rFkA+Qn+ka2AbFLHmOHNuInvuEnutALAYoPtI+2kac+d+V4WT5c1mqSq7QdPehTn93Lv8QuRDH218UPniTpy9MZ9K/6rrjpQFS8X8p6tPhPfSVs8e1I2rEjS1rE9ZScZs9Gwic2ZC0ZAoaAIWAIGALTRMCI2mmibbYMAUNgbhGQuclIknmSTA6WHKEEiUp07f5+MVGLDr7P//xzRyYIh3KcP1Xe2FiWiMYNR5D5icGI+RMn29uHQoSRzduiIencrPGEHBlxW5JCDTPRPaqfyZ5XpvuGqseuRp+xNiov0yK6k2hoiEjIwDevOzJB7QhZS1Tyoky+Fv28fDAhG9v4lBSou73eokTUdmU9RCK7WJpjzY3Va9Luwxs9IWkPZGJ74AhZSNpPP10RsnbNbcvLvMV6wS2ZoBG1jHGWLiAyl4hYIl6xRSTsy5dCxt7nEVcJqBW7fhLL2F4STI8c+U3fQ9xCFKOLNXPX1xeFZOBRYYlIkzVpWf7g/ffxYd0Ry9Sh7OefD4Ts2JMfI/yPEFOC8oSZ1PglL5V/ovI0M/BJ7OXfXSbnDHZJVW3Xlffa2/07Sx/q9lNd+XaR8tpOC16z89N/5rF+LZGl33zzjSMzWfIAQpHlD4h6ZR1XzrlfQrASUctGPYhDSEQicH/961874CF3IUGpAzl6/fp1uae/LZ9na06HRuYSpQtResAjO4kEsYgNfMAuhCZkL0sScA6pCgmKHKQoeftilz022MCWepRzToQq7aDu5cuX3ZIP+IodytAPIfrZ5587whr/aV/VhB2wwWf0YZt2Yws8b9y4kb0S4pU24w9kLBuy+MCmCUL87t27bi1d8sDw6tWr2ZdffukihFl3ljVrsYcsiXYRPazY++9kC46MZl3b58+fOzn7YwgYAoaAIWAITAuB6p+i0/LI7BgChoAhMBMEhoQj5iGbWPcT8spH1q7KxEanhvkOQgr+9a9vpB4TJCW1TsqjE6KWCMQq6fJlJlgQZz0haXmTtCdr3ITqhIJyP09UqZjh7GKbgyBFp0HJ9A7dGqjyEjEe9X/77WVH1kKw7+11s5fyErFnTyFqWV9Vlo0QEp3J2GgrpudrbElxjfNPnnuKjB8E/Fq1h9LWveyLLy44AvTqtbVsVdad/fNf3mQb6xJtKy/dZs1Yoos/kghuIowhaWk7RCr4yKHLY3xB1BLpyjgjHRx0ZamIvWxrc08m0RKx7LgB7wM6nj9fkDeiM+FnouyXN/joo01nh7VzIcz39ojugqjN3HrBumYwY+i1EOhEOt+5c+CI2q4sraBpFmNKx/UsbGu7K+25BqUbfE9UqjG2UN1rpa782A4mFDgfBo7MCi/MV+knxauqfKK5Y2c5H9SRKk6PbXGoQM3WbX9d+aHFhkdikJhOyEGIWqItIWkhDYlahViE9IQchPgjn3ONqqUe+RCRELVffPGFIzUhDyEEIRY1Mpdjol+xAUGpkbovhag9FL2pBAELCUlEKXa5p+EXRC2J+zYkKn6xofOF2IUkRRY7fMHgWIla8iB32dBFe8nDBoTte++957bPhail3RC1kNF6P035GeaF5DI+US8maskHQ9qGTTbOwSYkaiknyhk/wU99AmfyIGrZePEbpDe2wIM+wXewByM2yHZsGFEb9pYdGwKGgCFgCEwDASNqp4Gy2TAEDIG5R0C+2wth1JF113YdIfv0KY8NMlGRRx+FoD06YimD/GZoGVGDRG7qy5+owTEvsPrTn145cgzyFzmiDDsdT4jla/Yl+PPkyaFMpoiAgRBjLsVMmiUZ+tmtW7vZ738vkzchxDqy3b/P5NBPysp0Vy2njUQJy3xJHms/lLcov3QEH5HG4PbyJS9bE5/Yppz8ZKsv0TyZkJLLLnKTF2OB76NH+zLh2pFJGdFBgr2s8wpu85BkTi3jpSsvZ9mV/upJ/3ZkUtgRAmDf5ctc9MS4A2P6AsKZZR7u3DnM/iJr7+7s8Ghqz+nZ3uZlKvzgkLkx8+SJn9QzPvwklHULeakNkV0eC3SCFzKMexJjdFsIbsaSBD25l5OR7/pZyArWreWlZQ8f8qZv3nJOxLIQ4/LiNsa46tLrA9J8e/vAlRGBC0l765ZfKuSNvOCN8eXH855Eab10pDFLNTCeeSmZt4sHJxNY3b27n/3hDy/cEET29u09wYW2FNf10e+8qO1IopRfO/8Z10+l7eSx5MS8pWl7hD0/KqohEcrXqVdNezUp58MAqMGuWsUaUn50nawQtv9kaXFOjNekfM/1YuoGcz2pVDALvCAXITch+ZT045iNSFBewAVJyIvFIGEhRCEQv/vuO3ni4ANXzvIGLJVANCdLJ0B8XrlyxW28qIxyCEqWGcAGSy04AlbyIFFTSeUhkbEDyci9EJKScz4rISUhWpFlKQR8dH7KHqLT4SlyEKDk4zckJhttu3HjhiNjNWoXwhn/2ZOoF68ti928RFsgXtEHeQqRSpSuYgnJTBvQi3+6IUtd2qAJPeB969Yt5w9+oYeIX416BmN8BVcSpDKYQNLSPrAhYhfs6BtLhoAhYAgYAobAtBEwonbaiJs9Q8AQmDsEmADIHEomQTxO13PkzOXLy25Cw9yCSEAmGQXzjOM2IfPwIRGEnsxCN8d373ay3/3upXzp5/FBLw4Zhu4qifVxWacWspGXSSnxRNTuKyFIv/t2T95kPCCVRe/t24ci532oor+KDMQwhBbkHPr/7/99IRMc/3g8JPezZ5CAEqFZRVmLMr5v+kLq+bVYv/xywz16zwvbdnaOpF/3ZHK8mz0R7LpHRPkQ6dyiA2Oo6nQWZALedcsH8HIw1pyFcL1/H2K+J8f4e9IAefRDp7Mkk+iuTOjfyISaSCR+GOhLFOyhlPvx9eQJawhmbvw8esQjrF4feyLH2Ug6xiFYdVw6XeLLjoylI/FVlggMEqQ9y0gwziB3uzLRZpJ85IhmCFbGB0QwG3Ygbv0PFJC4ffEJkpr1lxdlvPrxBeH//fd7Itd1PwRQ99atIVHLNRUmztn4seWnn1juwRO1yPzww767tuM6YX0d14yLR4+6QvRCqOwJtkT8dl1er7fkbIT1ZnYszY8gaNUVHW6jKHsTqbwi48irPpWrq0PrNd1P0p62jX3KTiovrx0qqzpVTvP1fJJ7Z2uCBsO2xWbi87J2qs1sEVcAAEAASURBVHyRzjId45RD1BJtyX0TEhVyUMk+SEaIWqI4KYdIhIS8efNmdkHIV/IgC5GHhOSYSFzIXAhV6kMYEpkK8QhBC8HLI/3oIZo2b91UomjxB6IUshcyEl3YgnQkn0hTXT4AUnRLynj8HyKUdoiD7rqFEOXRf/zmHqokMi9Mg7SlHFKTfEhOXVIBH5GHICXR3qIElvhNPXynnZDKkKzgAUZgggx4YBeskAtJWmwoUUt78In69AX6OAaLd9991y0fAemNbxC14EI55Di6lVg3orao56zMEDAEDAFDYFIIGFE7KWRNryFgCJwKBJhM8EUdkkjmB/Il35Oh6+s6DfTNGD07ST6EUqyD2un4F4KgH7KLl4stLu7JxMWTLKG+4imM13xwgI+y1qosqba3p7U9QfVmRyIH7/C4466sIepJNuZaEHkkfGgrQWoRlfrokW8Pqgns4eVWL18Olnpo0V5Vv+nDxcWeTOaWXDQtS0tAuj9/fuiI2ttC9PGYPmu7ekqlPUyq+hjKaZ9A1ErQjqQjGX9dmZgTCdt3UaoyZ3V9DeYqP9TBuFpw4wxCd2WlI/WFMZUEFvTPvkSgHknfEDTU6XTlUdKuTEbTbwof6h0egVBXiNnHj3vZnlwf2ONlYmEi0rTbXZL+9z9o7O72xPdDqdMRewuysW4wkbuL2TIv5BMS+s0b/2Iy2s54xr/Xr5fcOKJviICFfH792i/3Acn84AGRvv6aCu3rMZNyiOl797rSVr9eIcPwyROum+G1qPLxHowhare3IYkPXT/wQ4rwIeKfJ5DjOmfxvMq9qG67GTGT0FvXj9Mib3jNpqe6crOEKHz06KEj7iAPn8nNaX9PHidIJF2OgCLIxdu3bzuyEzKR+xE/XBHFCdHH/RtSF8LVkaVCwEI8Qg4iC6EJQcieR/4hPCFAIVlZj/bHH3+UJZX+Kj8CP3REJC/EGr0TDx2EgKUOOoiqvTWILIWghJCkXUqg4hf2VtnET8pJ7np134t2HVELgalkJp8vJEhkfMceOsh/Ix8EvKiLfMhg6oENhCgkMLZTCSzRgwwRvD/88INrf0cw2BASGWJaccIWetSutkX1kg/Jijx9AkFNHnJggC3K8J+E3+BAOW2k34g0xhf2nFsyBAwBQ8AQMASmjYARtdNG3OwZAobA3CHAl3RITSIJIZFkfiNf2kdCByv4PJxe8wg3a20yGSBBZj1/7h8DF1MyKSC3HnWBDogtCODDQyXuUARBteCIYCIRmUOx7e0xgVI57LWRPJnFXIsnDSEUSdjDJx/p6+24JvrDif9louUnjz3pNyJjwMg/Yk807b17B47oe/2KKOnjDpi4X1UM+Ef96SvGnKyVtyTLbcjQI1IVTHnpWX7y/Q+x+eBBXyb1gzEreOwIeX94IJNy0ftMzllOgDl43XFN3+4J0cmPA4xpmdKOuMO1A/aUSaCT+Ms4ICqdNQa5lvpCAGSySXStRNTyY8PuHpHfXG9+TDNWOfaENGOXJRF6Mrn3S3wsLOD/4AVwYg+b/z97b/4mt5FkCSLvg5dEiiIpURKp0lElVVXXdPf0/jLft/vfd89OV81sVXXpPqmL4n0l84xcew68SIOHu8MdRxyZjvwi/DJ7ZvaAAAKWHg69sY1ErvwS1tjnOPwGl5ChHMd0iSQttqdPESeOI3yWUAeexC31JgyNN6t6+Yks/xVh+xAao2ydWfbGlSF84HKcZYoto4M3UUrRa/I85EtojLiMq41PIXziwk4VNk1GlQa7Umzjm89IyOfQGPEYV6pPxAaOrUtMjFHOlsFYaIPe3v6emaH5n//5ZzlXlYnWb779Rq7dJz+rtzHKc9+RSUZ+8sknJiGJmaZIkiLhiJ/mY/Ynkn1IvN6rZqti/EgupNuSnEWCFElCfF/AOQaJROIiIYmf3yNxiRfwkHQMbdDBrFLMNP1WkrRIBnNmKexiHP7ADl7Ah19Ipu5JkllvSFYiOQzfkLREApT+0lfioIT8C/z3TeJ4RZKi5yUZjeQ0EsbwHUls3wZ92IC9f/zjH8Z/zObFbN+jylf4jRfkOHMW/OoNOIiRvmMMMljX95LM/EUyFi/4j7joPzlBCS7wwpIPSLDnLTOQGcgMZAYyA9NmICdqp814tpcZyAwkMaBvwpIUE4X3Zfbh7m75s3jcJOHFzXfTdyJRSuKLP7ZlKZfMTRfuV3DjVciXfvz0nEiiaSlbzRJQvQNHvwRebliBJzdQMpMQCSntM2/6qKOgOlRLe0gaY/bso0cnyWzY0TY7GGmleiy/ycdL3JCbMCQEMXMTP8HHz0YPi1/uyn4Qv7FbuRdaGepRCZyNJBGI5Q2ePyv3H44D+Mf9Vh5Hbo8hg+3lSyzxoPa/BAk9HIfYMNMUuPZxbQY9b9oisUqfREEPoil2cEwgSYtkLW98kaRFwhMl/vmxvIw1bflPESRGkZioJ1GRlN2TBLM+nuE3jq3yZRmv7Eth/onx8OGSJAROZMY8VlxAbnIr5ZGsxT9ZkKzlRn0uD8H+eS95HLn8DI255GP6gMnNhw9WtRzlk0ofeBJIKax9CcGGxoB0crTEO6Ft+7Q0X00+TGDQQLLiBNK4g5DjDlUJjSkxU23Dl41htzVXGEsOWxT29/aLOz/cKf7ylz/LuRMJPEnASnIRiczQhvMdZo3i/IQSywBg1icSiS8lcYlEHxKHSC5ihiz6cU7bkeQhZtxixihm0+KFpKrRg668kGyEfSQ68cLM0qZELRKN0IVNJBpR8if98Mvwr86HTGIikWknUoGDhDNKxAH/MROYM4WR8MSGMeCgxOtYOIEcYnoo/iOGUKKW1yZwBHuIEcljzMrFjFjz3QJfeqoNMSHxjZnDdqIWWBgHd8CCP0gwY3Y0ErXgADyTc/AFe4jdJJolDsg/k9nVv8r+hH7eMgOZgcxAZiAzMG0GGhO1ri9U9heiWKczVixTpVzmqztfaQgn0i7uT0bTan1h+XDQn3KT5PO+Lxzgt8XyxejzOdTvwgr5hYQMbgOOcQMjX/RtTm08exy+jGUEA3i6j8lb02m9ubAskfHNFVCJLZVx/7L4bLKQlaKRUX7YeHZ77LsaQJ/tm5Gr7CKBN94qW2PfxgNlxYVliTibMX5BBnYxSxM////8s+dmViqWnPjpJ7mZk/tsrk2r9pKxN6RfzoDsTsUlbjDHG/kcd7gr5Bs3snr/j48NUYOMQXYc127Uk17DP32UEri+zfgiNk6OdfkcyVITR7IfEBpUjySZiw0JWnk3vpmO6k3Ho/lAP8dYuvTQZ7hQeJRnqfV0neO2PmU4zvailWAex4FvD4bG+oq1yQefHaPnc9yn1FO/y6z5PAm+a6wnszWYZDvJCjVzyQ2YIycuZY4N6Zb2IdmOKBzIzw+QaMWGz/qx/MLmxYsyyeeKiX04TyHBB10kDR9IchczZJH825cXEqCHUuIkiKQukpH3JWmIBOGGJAyRONySErNrmahF0hAvzHAF5mP5Ty+StFjyoHaepxPwWV7kGd2whWTjz1J/JLNrsbzBKhKr1jkcCc/dKimMOLARCz6Ok7fiP3zZliUDkFxel/++LVeJWugh8bwrPsJP+LixWS6nsLNTJpyhC1uhDQleJLeRGkfsSMRiBq859yq/ERsT0k+fyn/BHRv2C7iGL1h3FzFynV5wgTpeoypRC9kdkUFSGrYR9zNJ0hoMhe86tsiXEouqZqwomsZCQ/M1NpRYcfmVCDEW7wvLh4N+fZ4YG06s9IUDs/OA5eKrrV8ZK+1gynz5+Vp69/btqM+rJjFKwW/zTIyQr8xV8+4mV5DMfJ1BvuTLN76I48UZgM0sDCMxPv7ki33rTd1MOI/tHrA1Lv10eeySo3yX0mWLeEPZJL6rHGE2rdy4bW2N5AnaeGF9WsywxMOqsF7rkvyMEjeoMnvTfCV0ocy2b8wpj4/qOIrhc0IXoajjcBwZsccdkZUEX4BIf0x6WAIwMVQllhDgeDXidcJO1HoFex6Yld2YMDBT7OBg3/xs2iV/wm0Tu3Vto4c37q/6cGNL24Ww2eeNWrMV6OLz+KPUA1+LwBX2lOYrxWejR+U55gvJQCRYVzH9v9qQxMNnDklB7HN9bqAMSiQssVwC/slj/tEjWJDFC0sclPoCIP3GDuTlZeyJTZOslaQhSiZokdTEC/aRoAUGnPD5oP0xdbEFn2AHPsGuSXhagsBD4tMkP1HCTrVRB/+UJRZ8xAs88Z9aSG7iBV1ci7FBB/rEJj7HKxMTBTkEp2O/LanymCr9NtwIR66Nvwbh/gHfWP4B3zc3kXCWBDn8OhB9JqyRbMZs6pEsgWOWXJCYIDPkxs8TPyZD2lp0bHKFODJfzXsz89XMkZbIfGk2muvkK38W47mCZCxfS+++WyVqqUHGK3tWs+YFVWqdZ6XB4C2CrOaYDYqPO85SRQevCFLVCTa0ysTgae9g8BZBVrPGAlVqnQvSQOIMX5rX5iBRuyCUZTctBuTW1cx+WlsfFVcuH8vPJeWnj3KviXs3PCTu2VM8zVpmcOJG1dLNzSkzIPsgb+0ZiE3UprJsriF4E8VUXUbD61BbfeL4yso933Cr/rY+G73KobbxtrUdG2jlXqx4lFxbnyUXaLa2H3/aBUhbvksP2r+XMeBq099WJnfLhO36hnwPWl0zM3ExG7dMEEuSd+AkYWo08BEJT7POqyRjsSHJiQd/Yfkh39Ynbz4bTf1Y0mJF1rFfXVkdTxAoE8hlQv5g/8Dwz2R4b3ubwVsHr9Ucu0/xccdZqujgFUGqOsGGVpkYPO0dDN4iyGrWWKBKrfOsNBi8RZDVrLFBlVrnWWkweIsgqzlmg+LjjrNU0cErglR1gg2tMjEoHavmv6uQ0ii6XmnpLoLqPhf4qexzBe8ggl0u8VPJiy8o+9iCHMmpdHQz8zXJz2nny+x/eStLfTRUB0guMgMNDMiypjKlCTN3ZH3RZ/JzR/l1JW6qcX97JMnafXmomknSts0SNNjPw5mBeWGg7Rm0PP+6o+B1GaMh/NCYGzm+1/ggb+ZZgPFqjZJtfc58NVJbEwidenl8hfZFaKxmqGWDxxcOcJ8txICHKfrG25gur1NIEpazQ/eXMZuznN06kkGMu2bBtrHVlw5mmx7Kr1UwUxjXVRCC2admjlC1ozVHMfu3L99icODr4fGB8Fw+4A3JWCRmMdO3nDlbPsQSfnfe267gNTmVw+xyicfEdGpkStLr4ZAciys0M19CgsWP3dbDmS+LL00ODijZdNeZ5ssVvCanpGvMl0u8EjkbBQiw+bHauhnL16pRwlushsOPs7EHqijJciRfFD9THOlgSYDrANZyFr2OobPRdRY/i/LF3nwZrr7gn40dnaPslQFzDMllTLI4sqycedn4+fCyGcntzMACMhD5XWIBI8suz5IBfqdv8IFfaRvEEobLZCyWNTBLGzg0+7fpMJLQhaTmkSQ5zWY5ZzVdIgmWhhAtk7JY3aHkW9ZI8myuWDyi/m6C8Phi26PRMOzROkXdJCDyPE/xU8RAWiggIPLYAnDmK/OF4yBq48ESeXxRPAr7NAqRgJ7PXScPE6OBDuRxXxIiBEnZkAxxupR92HFidHScmCY2NAQvBEn5kEwXnqjbhx0nRkfHiXla+arRU2twz6SVNb5EtQmS8k1yaV5MSk/LzqTl3JMZyAxkBk4fAzynMrLQOZyyIRni6BLy0I3Va2tH27QxjA/yFuuDxmKdmKZdBRTCo3xIhti6hHwFr7u99bZ2NKCNYXyQt1TfXZimrwoohGf7oLFC9RCmS6+tHY1VhXPSVTmR6ssJwEm+hH1NWH3EQVuhsqsdp35TcCGHqjHiUjQESdmQDHG6lH3YcWJ0dJyYJjY0BC8ESfmQTBeeqNuHHSdGR8eJeVr5qtFTa3DPpJU1vkS1CZLyTXJpXkxKd7Xj1O/BaeLS4xAkZUMyxOlS9mHHidHRcWKa2NAQvBAk5UMyXXiibh92nBgdHScm+SoXF6LXHUobGN9Sa30e7BgZj2pSd1s7Wk/Xk4zHCEeCR4rFWAzKtLXTVi/kTA2z1nBrRYi4FRN7+7BDDJaJLjjFa1hoyKvWZ2mFxizRTs1p2enkZFbODGQGMgMLwkDtnIqGvGp9njhiZGzVNt8929iBXa2n6218sOOotTV4baDeiBSrKbXxtY0dGPXptfGBQdQwaw1K1MsIkbpCy1YfdojBEq6Aq175EnCNb4cbGrNlu7T7tDMYFoDlFYMfI9OFL+q2taP1dJ24vZWR4JFind1qa6etXsjhGmat4daKEHErJvb2YYcYLBNdcIrXsNCQV63P0gqNWaKdmn3aGQwLwPKKwY+R6URYpdzWjtbT9T58qmFEgkeK1aDbNNraaasX8rGGWTV6S9TWvuBU33hqfR7PmmTgZ81xD05Tt89OCNse82E02Y4ajwRvErN9jrLtEPLZCeGHxhwmortqvtQabogIkbFiF59T7IwNqoq23RVLwdZvNgAsrxB+aEzjwl/tsx6LqcfaicHKMpmBzEBm4KwzUDunoiGvWp+HoCaZrud6mvXZCV1H7DEfBm10KiPBm8Rsn9v65LMTwg+NtfUDejVfag03aoTIWLGLzyl2xgZVRdvuiqVgJ/kS8BB+aEzjwl/tsx6LqTfZCWHbtpuwYvyhTA0LDXnV+iholU0yts+WenTTZ6eJL23Ah6FlWtcjwZvEQvGk+OazE8IPjaXYtmVrvtQatmTZjhAZK3bxOcXO2KCqaNtdsRRs/XMHYHmF8ENjGhf+ap/1WEy9yU4I27bdhBXjD2VqWGjIq9ZHQatskrF9ttSjmz47TXxpAz4MLdO6HgneJBaKJ8U3n50QfmgsxbYtW/OlapwsfWBLt2jXDDTox8gaIshGjILDZkiN0ChtOY4B0h5zmEnuqmHWGm6oCJHyhCiOd3nYRsgOOTk1fFUBDc2Xi1Nyib3tGncfBfG9qZhR8gPzFR9dlswMZAYyA5kBMBB17q6oipE1p3leoGIUHLshpEZolLYcxwBpjznMJHfVMGsNN1SESP7epaiL4qvayfl7V+QxPiBf/LyhtPcdx7h77XH2dylTMGNkjc90PEbB4XxIjdAobTmOAdIec5hJ7qph1hpuqAiRfO5S1EXxVe3kfO6KPMYH5IufN5T2vuMYd689zv4uZQpmjKzxmY7HKDicD6kRGqUtxzFA2mMOM8ldNcxaww0VIXKmzl29zah1091Tb8xe62hKH6g2VGjMls3tBWJgCscV2MjHzwIdE9nVzEBmIDOQGRjmG7vFa+jaGBqzYHJzkRjI37vmZm/pXWF/3vTY3Dgc68gUnLf50q6FxrRcri8YA1M4rsBIPn6ajwu9K2y+9Fgz0pxJTMF5my/NQGhMy+X69BiY60Qtjlc8qXuo49bgK671ARoaUypzVTU8yZspB/BM44IrH1/22ACu9AI5a74YxMLwhWMLLzqey8xAZiAzkBk4VQzg/D7ked7gK8Z83yMgoseUylxVzfVQ3kw5gGca1/6ugDGO22MDuNILpPFX3uh3L6AKROPanITGFMRcVc1ncYp86eBtvvTYPNbhbz53xe8Zs3+neGzp87nZV5Wr9uc0PoLpSs6aL0a7MHzh2Jri8UV+UJp9VXXo407LzFMd/g7NlY8TY1uRsSh8YSfrmFQInasa1/68ab7ssc6GHQBznah1+Dv1Lr2zpm68hcGh/R0av0XInVSGjieEHxrrFFRWzgxkBjIDmYHMwIIysGjXxqH9HRp/2ofJ0PGE8ENj0+ZhXuxpTuyb9NDYvPg/T35ovubJL58vQ/s7NL4vrqH6h44nhB8aGyreecfVnORzV7e9pbnshjQd7aH9HRo/lqVTl6htk93mzmAZS95pkLNPbDExkSeWWod9LPXYotfbHFuImVyw1Dywj6UeW/R6W74WPe7sf2YgM5AZOEsMtDnX85rH8qzxlRoveWKp9dnHUo8ter3NsYWYyQVLzQP7WOqxRa9nvtL2YBu+eNywTLO42NLgK3UjTyy1PvtY6rFFr7c5thAzuWCpeWAfSz226PXMV9oebMMXjxuWaRYXW3pRz12nKlHbZifwsAsdtBgLjRNj0UryxTLF/xAfobEUG/Mqm/lq3jNtOGpGzRKZgcxAZiAzME8MdDnXh74rYCw0Pk8cpPhCvlim6Ib4CI2l2JhX2cxX855pw5FGDR1DoTGNsUj1LnyF+MBYaHyRONK+ki+WeqypHuIjNNaEuwjjma/mvdSGI40aOoZCYxpjkepd+ArxgbHQ+CJxpH0lXyz1WFM9xEdorAk3dnwuErVtiHMFOA3CXHan3dcXX/S7DW99+0Bfhij79vW089XHPmjDUR92M0ZmIDOQGcgMNDPQ13XxrJzr++KLe6YNb337QF+GKPv29bTz1cc+aMNRH3anjdHXsZX5arfn2vDW1z5r53GaVt++nna+0th1S7fhyI003719HVuZr3b7uQ1vfe2zdh4XxcwTtSSAZdtAqIed0HZH9OUDfRmipI8su9jowhXs9uFDF/9jdOkjyxgdn8xZ4asPrsBhW758/Of+zEBmIDOQGejOAM/xLLsitj3Xw35fPnSNIaRPH1mGZJvGunAF7D58aPKx6zh9ZNkF76zw1QdX4LkLX3350GV/N+nSR5ZN8k3jma8mhk7Gu3AFlL722YlH/dfoI8suFs4KX31wBZ678NWXD132d5MufWTZJN80nvlqYuhkvAtXQOlrn514FF+beaJWuzorImZlV8ee65mBeWIgfybmaW9kXzIDmYHMwDAMzOpcPyu7w7CYUTMD3RmY1WdiVna7MjYrv2dltytfWT8zMBQDs/pMzMpuVx5n5fes7Hbl6yzrr8YEzx2LjDQ3u49tjGs5yvtKylIfJft8On310ybx+rJLXOKxDTt2H9v0oamEPPFYpmI02fCN0x7H+7CrMYnHPrZhz9VHP0IlMKjLUuOGdLuO0R5w+rJJTI0X2xcTj82XthOjn2UyA5mBzEBmYDoM8NwPaynnaspSHyX7hvacNmmnL7vEJR7bsGP3sU0fmkrIE49lKkaTDd847XG8D7sak3jsYxv2XH30I1QCg7osNW5It+sY7QGnL5vE1HixfTHx2HxpOzH6XWQYBzD6sktMjWf3sZ1ql5jUR8k+YA250SZt9GWXuMRjG3bsPrbpQ1MJeeKxTMVosuEbpz2O92FXYxKPfWzDnquPfoRKYFCXpcYN6XYdoz3g9GWTmBovti8mHpsvbSdGv4sM4wBGX3aJqfHsPrZT7RKT+ijZB6whN9qkjb7sEpd4bMOO3cc2fWgqIU88lqkYTTZ847TH8T7sakzisY9t2LP7ohK1dBTKACMI+/soNS7t9IEbi6FJitVxyaVy0yZWzZXLh2n09cVXyFdyozllX0jPHps1X0Nw5eKBfZovm4uYtuaLmDF6XWSO5axyfNzV8y4eZN3MQGYgM7AADOA82dOpchbnes1wX9fGVDogn2pbc6VjmGY91ec2vpEbzSn7UvBmzdcQXLl4YJ/mK4Unymq+iMmxoUrt85B8aTt9xTILvrTvffGVyk2bY0NzpWOYZr0vvkI+kxvNKftCevbYrPkagisXD+zTfNlcxLQ1X8SM0esio30eki9tp4u/WncWfNn2dbttPZWbNseG5qqtn131hji+bJ/IjeaUfUmJWjqridOgtuE+2sSnbWDS+a74jENjd8UnpvZN9zEePd5nnfg6piH5ctlLiYfcaH/ZBxzip2DGyhJb23b1xeLFyAFf24vR0TLkxodB/7VOX3Via9uuvmR7kngYHR0VB8V+sbRUoVfAKMb2xpVkC5MKCp+DY/hxhSMNJUmgGPSlr+Z7NVbrS7VDfFfp8sEl17avwqeZsevjSgIwQSwVdAfhgoMWWFPT9mEgbJoZw48rTQ5W4xWAixtX3xg11c5Y0VNhIBzuE1/FOAGfasf2k4BSjvkCpi2XakfhTlRVPGPYcWVCOrljNBoVo+PRRAjJQAEF0qPdHvMX0IsZAqYLy9UXgwcZYmp53cd49HifdeJPiy+XvZR4yI32l33AIX4KZqwssbVtV18sXowc8LW9GB0tQ258GPRf6/RVJ7a27eprY88XV1e+6At9ph3003fK9F0Sn7ZpU7fb2mQcNlYXvoipfdJ9jEeP91knvo6pSzzaN8ZhY0NG92mdproLk33QZTxNOG3Gia19d/W1wfbpdN0X5Eb7rG3Rf93XV53Y2rarr409X1xd+aIv9Jl20E/fKdN3SXzapk3dbmuTcdhYXfgipvZJ9zEePd5nnfg6pi7xaN8Yh40NGd2ndZrqLkz2QZfx2DhRiVqXU+zzAduG2rQNNg1UBtlESR/aYFPHxugD38aELfQRm7b7Lg0+jVROsInS5VeqD31g2DZdmOij77Z8b+3KwLEYs33ogy8XJnzvim3jsj0kXwa7MkC++rR3hOSDvPSm8RmjHu9a1/jEamtHYwHDtKtOK/dsTLW1Qz9dpe2DS6Ztn8bWGG3i0FjUN33VwLT5og86rq51HaPGamNLY1F/PPlcOsZ9yhD7VFenqsuHToCWssbnUNsYNBYwTJud0jHuqwy1tUM/XSXNYaxv/DIebcHlQfu+Er/Sr5ynNZR9xGNj9IFvYyIC9BEb7SE2g08jlRNsonT5lepHHxi2TRcm+ui7Ld9buzLA7xEatw++7LgYT1dsG5dt4us4+qob7MoA+erbHuOgz8RHaY9Rpql06bGP+E0YbcYNNg1UBtlESR/aYFPHxugD38aELfQRm7b7Lg0+jVROsInS5VeqD31g2DZdmOij77Z8b+3KAD+LGrcPvuy4GE9XbBuXbeLrOPqqG+zKAPnq2x7joM/ER2mPUaapdOmxj/hNGG3GDTYNVAbZREkf2mBTx8boA9/GhC30EZu2+y4NPo1UTrCJ0uVXqg99YNg2XZjoo++2PNpRiVqXIvpCwD6dmP6JQCY6YlC6yczAZJLDwR3rcN7RlWRv2sJDHVu1OAIkDsFXwFzNrTaNofgiD8b3KoBaXxtnXTqSebJjsNsutbZ9fWMTr6KojAWd7JAqZdr63KRHfGWySSV6nNjRCg2CNp5p4005TxnV1YCaNkz8NK1m6b5xXXimzxpgM/NV7iPNA/ma6Gvena0kuC9aKTcoDYUNbmrbREdtdJDGDEwmxaGPnwlFh/OOrgm1eeoY6tiqxRggcQi+AuZqbrVpDMUXeTC+VwHU+to4Owc6Q/M1DpFkjTuGr8zAZFJQ1WHk1nE47+hy685J71DHVi28AIlD8BUwV3OrTWMovsiD8b0KoNbXxtk50Bmar3GIJGvcMXxlBiaTgqoOI7eOw3lHl1t3Tnqbjq1xopaCrgA55ospSKIoaX0XPnHtMdO2Oq0mVU0Za4dKLvkQfkiPYyg1ru5HHfihccjo8ZA/9phpW51WE/DjLdYOFVzyIfyQnmuMfboEvrarx1jneMgX15jpswasJk2YMsaOVnDJh/CpSz20bXk9RnldQr5JhuM2to2j26gbeUvJatZUYuxQgbJjO7RHgUBJXZcvHPOpQycko8dc+MS1x0zb6rSaVDVlrB0queRD+CE9jqHUuLofdeCHxiGjx0P+2GOmbXVaTcCPt1g7VHDJh/BDeq4x9ukS+NquHmOd4yFfXGOmzxqwmjRhyhg7WsElH8KnLvXQtuX1GOV1CfkmGY7b2DaObqNu5C0lq1lTibFDBcqO7dAeBQIldV2+cMynDp2QjB5z4RPXHjNtq9NqUtWUsXao5JIP4Yf0OIZS4+p+1IEfGoeMHg/5Y4+ZttVpNQE/3mLtUMElH8IP6bnG2KdL4Gu7eox1jod8cY2ZPmvAatKEKWPsaAWXfAifutRD25bXY5TXJeSbZDhuY9s4uo26kbeUrGZNJcYOFSg7tkN7FAiU1HX5wjGfOnRCMnrMhU9ce8y0rU6rSVVTxtqhkks+hB/S4xhKjav7UQd+aBwyejzkjz1m2lan1QT8eIu1QwWXfAg/pOcaY58uga/t6jHWOR7yxTVm+qwBq0kTpoyxoxVc8iF86lIPbVtej1Fel5BvkuG4jW3j6DbqRt5Sspo1lRg7VKDs2A7tUSBQUtflC8d86tAJyegxFz5x7THTtjqtJlVNGWuHSi75EH5Ij2MoNa7uRx34oXHI6PGQP/aYaVudVhPw4y3WDhVc8iH8kJ5rjH26BL62y7FlVtqWMY63xV5EPRfJdhyZM5uRcFvzpeu2Vgz3tk5sW2Preqz+NORC3EzDvrYxrxxpH+eJL+3XrOox+yxzlrZ3NF+6bqPEcG/rxLY1tq7H6k9DLsTNNOxrG/PKkfZxnvjSfs2qHrPPMmdpe0fzpes2Sgz3tk5sW2Preqz+NORC3EzDvrYxrxxpH+eJL+3XrOox+yxzlrZ3NF+6bqPEcG/rxLY1tq7H6k9DLsTNNOxrG/PKkfZxnvjSfs2qHrPPMmdpe0fzxfo4UYsOdtqwMf2UYakx2MdSj8XWcUD4Dgp7LNYO5VjG+kJ5lloPfa5+yOh+1lnaGLa8Ho+p25xoHXvM5YOWZ51yLNnfVFKepZZ39XFcj6Gu25RByTHfuJb11W1OtBzGuNEW26EyRVbjUM8Vj6sPuro/pE9ZLa9tx9RDXEHf5isGk/6wjNGhDONlW5c+PN3POkuXvmtMy4XqIb7ssVg7lGMZsq/HKM/SHnP1Q0b3s87SxrDl9XhM3eZE69hjLh+0POuUY8n+ppLyLLW8q4/jegx13aYMSo75xrWsr25zouUwxo222A6VKbIah3queFx90NX9IX3KanltO6Ye4gr6Nl8xmPSHZYwOZRgv27r04el+1lm69F1jWi5UD/Flj8XaoRzLkH09RnmW9pirHzK6n3WWNoYtr8dj6jYnWscec/mg5VmnHEv2N5WUZ6nlXX0c12Oo6zZlUHLMN65lfXWbEy2HMW60xXaoTJHVONRzxePqg67uD+lTVstr2zH1EFfQt/mKwaQ/LGN0KMN42dalD0/3s87Spe8a03KheogveyzWDuVYhuzrMcqztMdc/ZDR/ayztDFseT0eU7c50Tr2mMsHLc865Viyv6mkPEst7+rjuB5DXbcpg5JjvnEt66vbnGg5jHGjLbZDZYqsxqGeKx5XH3R1f0ifslpe246ph7iCvs1XDCb9YRmjQxnGy7YufXi6n3WWLn3XmJYL1UN82WOxdijHMmRfj1GepT3m6oeM7medpY1hy+vxmLrNidaxx1w+aHnWKceS/U0l5VlqeVcfx/UY6ro9TtRS2FdqJcjYbV8f8VzyHEspQXpoS7WTKk/bTXr2uN0GjqsvFp9yrlJzpOsu2ZAPfcgTI2THNebqI1bfZYgjPTZNn0Ix2n7Y7ZBun2OaG+LqvlS/UuVps6m0ce029F19xA2NUSam1Ny45FPtpMrTZpOePW63gePqi8WnnKvUHOm6SzbkQx/yxAjZcY25+ojVdxniSI9N06dQjLYfdjuk2+eY5oa4ui/Vr1R52mwqbVy7DX1XH3FDY5SJKTU3LvlUO6nytNmkZ4/bbeC4+mLxKecqNUe67pIN+dCHPDFCdlxjrj5i9V2GONJj0/QpFKPth90O6fY5prkhru5L9StVnjabShvXbkPf1Ufc0BhlYkrNjUs+1U6qPG026dnjdhs4rr5YfMq5Ss2RrrtkQz70IU+MkB3XmKuPWH2XIY702DR9CsVo+2G3Q7p9jmluiKv7Uv1KlafNptLGtdvQd/URNzRGmZhSc+OST7WTKk+bTXr2uN0GjqsvFp9yrlJzpOsu2ZAPfcgTI2THNebqIxbKZQTWFBwVNFisDnX7LH22tX992iNWClfUYenzmeNDlj7b88SX7YvP5yF5Ara9j22/hrRv2w7Z0n6l6IUw24zZtukXyzaYsTq27ZCe9gd6s9p8trV/Q/iWwpVt3+ezLTdE22d7nviyffH5PAQ/GtPex7ZfWrbvum07hK/9StELYbYZs23TL5ZtMGN1bNshPe0P9Ga1+Wxr/4bwLYUr277PZ1tuiLbP9jzxZfvi83kIfjSmvY9tv7Rs33Xbdghf+5WiF8JsM2bbpl8s22DG6ti2Q3raH+jNavPZ1v4N4VsKV7Z9n8+23BBtn+154sv2xefzEPxoTHsf235p2b7rtu0QvvYrRS+E2WbMtk2/WLbBjNWxbYf0tD/Qm9Xms639G8K3FK5s+z6fbbkh2j7b88SX7YvPZ/KzPJGZ4oin1AaawD0Q3bvFsDwkfrzBJ+3XeKDvCmzCdiSu7VesXiR8nJjDZ9uvOKA0KROrw3YIxfbrrPIV4kiPTeWY1wZd9Wof66Fp+KWPL207VNd+zeTYgnNiOJ+7QntJjVXHlt5X9jlCSfdWNfYctkMGbL+0zyG9XsccPtt+9WqvAtN8xeLrz2KsTu9yFV8adxp+deXL6Gunp1UXw/ncFUl2dWzpfTXtz6K2HfLa9itWL4SZPDYHfMX6PI1zRKMvFV9abhp+mWPDYVv7Yde1X0bfFphGWwznc1ck0dX+1fvKPkdEIiWJGXsO2yEQ2y/tc0iv1zGHz7ZfvdqrwDRfsfj6sxir07tcxZfGnYZfXfky+trpadXFcD53RZJdHVt6X037s6hth7y2/QrplUsfJH5KfOIhQyGHW435nGgFFqk0C5uRrmmxmpu1hpYatm7MdrTdUT06wJqdqlHri0bqQTDRcKJ4Dw46IGbpRKJtn3g+dzn26wy6avun1pieM8ZsR9sd1aODrdmpGrW+aKQeBBMNJ4r34KADYpZOJNr2iedzl2O/zqCrtn9qjek5Y8x2tN1RPTrYmp2qUeuLRupBMNFwongPDjogZulEom2feD53OfbrDLpq+6fWmJ4zxmxH2x3Vo4Ot2akatb5opB4EEw0nivfgoANilk4k2vaJ53OXY7/OoKu2f2qN6TljzHa0HVJfXQqNBuK01cxBK2/HMmCPBWCih2qYtUY0RGdBY7aFbZcK+QJZrvGuztYwa42uyPH6xmwL2y4V/kep7fHa5HXNZq3RpNnPuDHZ0q6tlo+t8D7x8ZXPXZO82VxBIh9fkzyxx8mXIUzO865BKnYoa7C1RgfQBFVjsqVdWy0fW2HifXzlc9ckbzZXkMjH1yRP7HHylc9dpGeitPnKx9YERbUOH1/53FWjyTRsrtCZj69Jntjj5Cufu0jPRGnzlY+tCYpqHT6+8rmrRpNp2FyhMx9fkzyxx8mXde5apXAup8xAtSOmbHUhzWmqUHcd2AsZ2NBOLxBZS8hiyWsW+9b8E4CG4cbQ+2WB8c0hxeMqc9W4J8d8QTLzFcVX+a0u8+UjC+erY5DE/176BHP/JAP4QOYtigFNFer5uhhFW3lXmsmKJCuLRTOgP5DRSmdTUFOVz10Jx0AmK4GsLBrNgP5ARiudTUFNFT+OvSVq8b1kqP8uNO0uHdjCfD+qHJ2Fv+RrFrab9qVrHH7i2MI2C58Xma+Stem9G67wJjsqZV8tr6wUK/KaTaq2vLcCSyk+T4/V+bK0aJ+HWbOX+UrbA5mvMF+j0ag4OjosRpKoxfkqf+8K81UbrU7wszjPL9pxzWML/GW+akeRs6H5cgoM2GmOLbyJE7PYV21CI1+z8JefRfg9C/tt+KKjs/CXfM3Cdhuu4Ge+Z4xnTvMVr9WPZD53pfHIzyK0FuXzSEdn4S/5moXttD1bSuvPIn3uLVE704Nm0fbEDD9g45Oi+DCrG7zycEx75wGbptVdOvOVyCE/iyhjd5rMpF1eXinW1tZkUm25bHai1SyeGcgMZAbOBAOHh0jSjopCErbYYk+zvZPDc/3MHEiPaFau5u8Rafsq85XG1/hXCCnfuxJNDCE+q8/jmK+ZOZDO5qxczZ/FtH2V+Urja/xZzOeuOOLMASaiszohxHlZk5qVq6fls9g6K8JjpbY3ZtVocRRM2/9p2/PtCkMV3uQVS1uq76nyLl/7wHDhpvYtCl+pcQ0mz4OKZZKhVkpJFrJwZiAzkBnIDPTAQIvT9bSv69O252PVUIU3ecXSlup7qrzL1z4wXLipfYvCV2pcg8nzoGIZYSh1X6fK2y501bfxOrUTeKKdafs/bXuM0y4X5bOY+bL33IK0+VlkGeF26r5Olbdd6Kpv43VqJ/BEO9P2f9r2GKddnpZzV6tELXcCS5ucabexM8wSl5GG6TfLJjXIxcq6sKjL0iUzzT7DV6RB+syySY1yLJvkXePUZemSmWbfIvA1V1wJYeAsZpsXv2N8zTKZgcxAZiAzUDJgrostzvWx53zIxcq69gl1Wbpkptln+Io0SJ9ZNqlRjmWTvGucuixdMtPsWwS+5oqrgT+L2Pdt46Uey2keRy5b5tgamK8usVKXpSuGafYtwmcRfGS+4o4K8DRXXA38WexybJAnlnEMDyeVz11p3J6Gc1erRC0CPw3baYljyH2RORqS3YydGcgMZAYyA5mBs8NA/k7RvK8zR80cZYnpM9D2uGyrN/0IwxZPSxzhKLuNZo668Ze1h2Gg7XHZVm+YKNqjnpY42jPQrDmvHEWtUcv/JOggdN0On09Rpwz1Icc+W6ePdqydVB9S5ekH9Vi6YjSyeBMhylEf8uxz6Xbti7WT4kOKLPx3+RDCMPJ4EyHKEYPtrrz49GPspPqQKu/yIYRh5PEmQpRzYfhi7tIfY4c+dbGTdTMDmYHMwFlnIH/vKo8AXlNYuo6L0HUR8iFdF15KH6+LTXZSfEiRhV2XDyGMEF8hvRRefLL0NWQnNObCTZV3+RDCyHyVrGuOdN3eJ/ncVecryBVEcYCJEOV4fGKIfaj3vcXaSfEhRRbxuHwIYRh5vIkQ5YjBdt88ES/GTqoPqfIuH0IYRh5vIkQ5FwZj7LOMsUOfYu2myrt8CGHkc1e5J8gRS9f+MdziTYQoR74hzz6Xbte+WDspPqTIwn+XDyEMIy9vSTNqtREfaWMZqYzrPuFT2N865taKp5DEUEgBngJDIcTksWnZCTkW7YMlaDVDJjqNpdoJnaw6OZKVMwOZgczAKWdgfL6Vyrh+ymPW4bWOubWitn4G6gGeAkO9EjMtOyGno32wBK1myESnsWnZiXUyxp+xjFTG9VgDp0CudcytFU8BaSkhBHgKDKVYaJSdlp2QI9E+WIJWM2Si09i07MQ6GePPWEYq43qsgVMg1zrm1oqngLSUECqekhK1rmQKcDTnRgZv8qK8Xab6qfFDul3shHBTxpp8CPFFO00YlHOVsVxBt4sdl+02fU0+2HwZp0WJetqmq0+Pu+qniS9yVYsJpCi+2nBE3ojPdqjsYieEm8cyA5mBzMCZZ0BOxvo8b863eJMXz712mcJZm3M97aXY6UuWtlnauHY8Rg5vSoFVljZGqK33RUgOY8Rn2SQ/xDhts7Rt2HwZp0XYJe/qs/Hs9mnii1zVYgIpiq82HJEz4rMdKrvYCeG2HXP5Y8djZPAmL8rbZYp9Gz+k28VOCDdlrMkHOx4jjzcqqqrqinYB+LEb8VnG6vUpR9ssbWybL8OTCLvkXX02nt0+TXyRq1pMIEXx1YYjckZ8tkNlFzsh3LZjLn/seIwM3uRFebtMsW/jh3S72Anhpow1+WDHY+TxRkVVVV3RLgA/diM+y1i9PuVom6WNbfNleBLhqKUPQqC8WzgWIcqx1E64+vS4q56yE6jfxg51+yp9Pph4qqCG5AsmfD7YMcbK2Xp9tn0+aL4YkEvW1RfjX7UrzCEcixErF2O/rYzXBwakBFR1bM7VNx6MqMQeX13tRLiSRTIDmYHMwNlkQE7EQ36PSCF1Hs71Ph/MZbG6Ng7JV+x1Ebz6fE3hvKuszwfNFx11ybr6YnyqdkX+3hVDlpKJPb7a7hdlqnPV54M+tob8LKYE4PM1BaOrrM+HafEVe2whTp+vXTlI0ff5oPmioy5ZV1+MfYMvgqeFL+ZvyBU4cHHj6ovhizKxfHW1Q3tdSp8P+tjK564ThmfNV+yxBY99vp5EM3zN54M+vugoZZNm1NohGJAKiYC2TJf2EJgp/oA4vmL0DNEBwTFfUhkitiEwfeG4YiVXrjEfTlT/wIENDG9CdHHSO1/TCESimZKZqEMjC2UGMgOZgbPKwBDn4iEwU/ZP6nXRdW3V9kw8eJPXELENgan913VXrKl8abxgfeDABoY3oU2Fr2kEItFMyczEIcHja2KgRYeJoQpkiHiGwEwJk1y5jjsXTpPcmC+pDBHbEJiuONHnijWVLx/2RP/AgQ0Mb8KZCl/TCESimZKZicOAx9fEQIsOE0MVyBDxDIGZEia5ch13LpwmuTFfUhkitiEwXXGizxVrKl8+7Il+R2DeGbXaMYfeGNuMhQTGku0qA0LXHGK8tMc2hdDmGPt0SfkmuRCGxmtbHxoffrliZR/9buJBy/t8Nv2+QRrqUA4IXfOKsWpO2EdBPcY+XVI+5PNp4UvHneuZgcxAZiAzYDEgJ/ul0MXAEk9tDghdc8W+rrFNodjrYpPc0PEMjQ8+yI2OlX2pfEHe57Pp9w3SUIdyQOiaV+SmD75CPp82vnSs5BDEsq7HNeEcR59PZjwWEtCgLeoDQte8Yby0xzaF0OYY+3RJ+Sa5EIbGa1sfGh9+uWJlH/1u4kHL+3w2/b5BGupQDghd84qxak7YR0E9xj5dUj7k82njS8fK+MEJ63rcxRX6fDLjsZCABm1RHxC65o3NB9sUQjvkC+Wb5EIYtNWlHBofvrliZR99b+JBy/t8Nv2ewagZtdoIHTtN5WmP7zTtq7MeSz5Wz/oRkOPPDGQGMgOLz0C+li3+PjwrEZz2Y7Xv+PrGm7fj7LTHN298Z3/aM3Daj9W+4+sbr/2eG0bztMc3DGuzRfUmapHY1cndpp2Lcb66hkScJpsuO9R1jdl9tqyO145fj9k4aOvxYwFu8t227cKM7WuLRb0mX+kH5dnWMes6xu02dVjq8UXjizE0lZovxKtj1nXg2G0bW4+fVr7smHM7M5AZyAxkBvwM8BoTew33I518f2uDRT9C+ByzZfW1DXW7TT1XqWUX7boYy3MTX5oXzYfuZ12PLxpfjKGp1HwhXh2zrgPHbtvYevw088W4dbw2Pxizx6lHWT3edHxzPzXJaRu+ehcs6vqwdb8tq+O1+dFjGoN1Pb5ox1bsPmvii1yg1Hzoftb1+KLxxRiaSs0X4tUx6zpw7LaNrcdPM1+MW8dr84Mxe5x6lNXjTcc391OTnLbhq3fBoq4PW/fbsjpemx89pjFY1+OLdmzF7rMmvsgFSs2H7mddj7fhy5uopQFTVh7HBljTnWKji3+aSO0y+n1jWg71mpw4E+NPjIxtx9fuE8tng/21WKtOcuUao54ujRydZqkFHPVIMYdm2dVVHygxGDEynfjyRhjnX0C9NhQTR02haqTqpcq7bOa+zEBmIDOQGZguA13O3b7vCrw2xkRSwxBnYvyJkYmxDZk+sZps1mKthMmVa8yFZ+ToNEuXoOqLFFMa9WpXfaDFYMTIdOKrHlatFWO7phBotMVK1dPyvuOHfAXcnRwCsLw0/qTQ7Hu6+NcHXzWMSL66+Gwz3ieWjW23a7FWgzy2XGO2PtpGjk6zdAmqvkgxpVGvdtUHWgxGjEwnvuph1VoxtmsKgUZbrFQ9Le87fshXwN3JIQDLS+NPCs2+p4t/ffBVw4jkq4vPNuN9YtnYdrsWazXIY8s1ZuujbeToNEuXoOqjmDNRy0ElX1ZlwDdGZ1lO6Do6+sQCPG2zdJg0XbCrbTfJ+3DQb2PVZGVQ26mNVY1Y20E7iVj0g7ZZst8ubdtN8ra+bttYtTEZxHhoi7XtsxOr38UHO4YuNm2ssV8y0GeMPjttfY/VM3Z9xsfB5kpmIDOQGcgM2AzwPMvSHne1fadbYrB06br6KM/SJYM+2NW2m+R9OC6smqwY0XZqY1Uj1rbtcxcs6tI2S/bbpW27Sd7W120bqzYmgxgPbbG2fXZi9bv4YMfQxaaNNfZLBvqM0Wenre+xer4YxnEmVnxxgCzfGH1lGWOyTyzYo22WPh9gV9tukvfhoN/GqsnKoLZTG6sasbaDdhKx6Adts2S/Xdq2m+Rtfd22sWpjMojx0BZr22cnVr+LD3YMXWzaWGO/ZKDPGH122voeq+eLYRxnYsUXB8jyjdFXljEm+8SCPdpm6fMBdrXtJnkfDvptrJqsDGo7tbGqEWs7aCcRi37QNkv226Vtu0ne1tdtG6s2JoMYD220PZGopSLLCZAAOEEndBwdxGdpi6Rgad0oPRitDEfJawOeui8O2HGNwW4b231iIZQmH4w9vFWGm+SB6dtcvk/IipBLLoUvl762k4KVqmds401ebe3QJuNgyf5xWdkZt1UlxTbxWSoYU03B0rpRemLUZ1dj5XpmIDOQGcgMTDKA82zsxnMtS1svBUvrRunBaGU4Sl4b8NR9ccCOawx229juEwuhNPlg7OGtMtwkD0zf5vJ9QlaEXHIpfLn0tZ0UrFQ9Yxtv8mprhzYZB0v2j8vKzritKim2ic9SwZhqCpbWjdJTMUTJawNWnf6ztIbNPvGNwXbsRgyWtl4KltaN0oPRynCUvDbgqfvigB3XGOy2sd0nFkJp8sHYw1tluEkemL7N5fuErAi55FL4culrOylYqXrGNt7k1dYObTIOluwfl5WdcVtVUmwTn6WCMdUULK0bpadiiJLXBqw6/WdpDZt94huD7diNGCxtvRQsrRulB6OV4Sh5bcBT98UBO64x2G1ju08shNLkg7GHt8pwkzwwfZvL9wlZEXLJ2XytTihWHXQQ5bF580kuYP8A8ZCvodmYlh3GMaZKKl1tj7EIjtLuHMqOtjmNeleyfD46+PKJLkR/D/t7IeI85U4eY+Ed2Vi2DXepepQ9y7Y4Q+kxPpTaR10f2jbw6QfsptiGnu078FIwIJ+3zEAyA/a1KxlgUmGoy6xtaVp2aHdMlVS62h5jERyl3TmUHW1zGvWuZPl8dPDlE12IfjueHpwm9QZ6APweXGwPMUA85Ku9U3Ga07JDb8ZUSaWr7TEWwVHanUPZ0TanUe9Kls9HB18+0YXot+PpwWlSb6AHwO/BxfYQA8RDvto7Fac5LTv0ZkyVVLraHmMRHKXdGWlnIlHrcs70uQaUAzor3CBqtGJkFHyv1Zh4Yg3accRiLxRfdpCx5DjkbKhUvmx9hwnTFSvn02/bHxtPDL4rhhj8hTq2YojIMnPNAJN/ukxxWCcJUV9eXnYmE1Mwh5DV8elkp+3/0LaJDx/AFTbtA8d1CVlsKEej0VgeenjpeLRers83Awt3rndd1FpQbMPEXBdhZqH4soNswRNVbKhUvmx94tplrJyt17UdG0+MHVcMMfgLdWyBCFegMQRZMi6YzJdFkmrafMVwBfWFOr7sIFX8qVUbKpUvW99nP1bOp9+2PzaeGHxXDDH4C3VsgQhXoDEEWTIumMyXRZJq2nzFcAX1hTq+7CBV/KlVGyqVL+pPJGpTHcnymYHMQGagEwNyNuIJqRNOVp46A0jwbW+PinPnRsX6OmaZ4pXuRqmzVLx4sVQ8f35c7O9zVZ4WYOnmGzWWl0eSFD0uNjfLeNfXC0l4FsXRUVHs7CzJa7k4PBwmwQyO8QLH584dFxsbJxzv7h4Xu7tLxcHBsryWxKdJvlZXj2XfjIwe9hFe9H1vr+R8dzcu4dtIVBbIDGQGMgOnjAHzjzC5SK2urBQr8uJF7lhOpEfyGsmFAOfokbzy1h8DmveNjQ25dq0b/s0+EDPg/ODwsHi5s1O8fPmyP8MZKTOQGcgMZAYyA3PAQG+JWtwe4iuKvk00X1mqTt0/B3HP3AUvXxaHM3d0ThxwHT/8SuwamxO3Z+KG99jKn8WZ7I/TatTcmMpN6vXro+Kjj1aKGzfWirW1JXkxyZoe+SefvCz++teD4t49JD1XzCsdpW+NMtG5uXlUvPVWUXzwwYbEvCY3hkeSoB0VX355UHz22ah4/LgYz3Dt0wNuU/5PAABAAElEQVTy/MYbo+Ljj1eLa9fAM/gpiu++2yu+/fagePgQ9lckaStJBGs7d+6oeP31kegtmX10/fq6yB2J/6Pixx8Pis8/HxXff1+eRc2NsaWfm/PLQD7Xp+0bL18CU34C0vBOu7SLk7P2vQvnRLxWVleLc9vn5J9l2+Pz/CGShJIgxOsIyVr8504law1X+XuX82Pi/SwqvpbkFyNIyl44f16uYdeK166+ZvbB9va2wQTnT54+Kb795hu5Fn7ntHNaOr18SYCuz+lpibttHC5Oztq5K5Y777GlPouxWGdBLvOVtpe9fAmM63Oahn76pG1OekvUgiobvDbf+fRx2TkizZe5gFRXEawJrMc6GzqFAJqvTNbkDp44fqpja+K/KZOquSczEMUAfkKP17VrRfGv/3pekrUXZHbtarG1NZksjAIUoc3Nu8WdO4+KBw8w67NMRsbqDiGHJClm+25sjIqLF4+K27c3iv/xPy4Vv/3theLRo31JkO7Lffkj8Xlf2v0vIQD7TNRev75U/Pf/fqH48EPwXHL8v/7XIwn7ibyQeF2S17JJKpAL6GIW7ptvLonehtlHv/vdxeLp0wPj/9/+9rS4f/+F3OQizomzBmFyOccMTOw1nuvn2OdZuqb50t8j8veu5r2i+Trt37uYoF3GLNrlFZnNuVZcunSxePXyZTOzFmzt7e0Vj588Mefog4ODYklemGGLmbY4947vgUCcPvAU1bSDEipQ4nlfiZ3K6gQlJn5QheR4UaxKchyzaC+98krx9ttvyfX33eLVV181L/B5sH9Q/PzLz8XOC1zDvjuVHOmgNF/VoWKG87lLs+Sua758n0W35tno1ceWibj6LOZ7Rvf+9/LlFj/zvZov/VnM567mQ6PXRC3I1zuDjVpfs0+DSUz4N5ilOGDtDzjCAYst81XyoN/NB1txo/nScrOs6/05Sz9ge8IXQ5gMzMnBZe/PWfOV7bdnYH9/VDx7dlg8eXJgbjSb8n0rK1iHVn5GuooXZsycHJTow80qJibNy4ab5qtXj4v33luT2bRbxWuvrRv/kaT94ovnxd27B7JUA24sy1effhMTa9E+fnwks3dfyI3rUnHr1jmZYbQpM3y3xLaswVC8kMTrkZlZC1noyeIMUo6KCxeOi3fe2ZBE7XlJqm+aRPr33+8Un376XPzflf0mpwUj36fnGWtaDDjP9WL85FM1LU/cdib8c4tNrVf7A47y9y4/9eAKG48lzVc5Mvt3vT/78Ibn3Os3bsg/uN4sLl++YmbRnjuH2bR4nVczag/kZ/fljNr9/X05F+8XP/30Y/HV118Xv969WxLX4OD16zfkPH5T/vm2Lf9o25VfaezIP8/uFffu3y8OJfHb52bvzz6x22BNUCMHGJaXuHjxonmZffDGm8X1G9fNjNqrr71meNqW/YBk+MGhJMflu8T5CxfamG/UmfCvUWNYAe2P/izy8zms9WZ07V+z9LAS8AUbudF8lSOzf583vsiVYcYQpgicMV32/pyxO+577Pmha9K/GROmj3X9WawdczP0Ufs3QzeMaftY7y1RS2Ad7LzsAETu8m+WO8PlT+YrbY9kvtx8eY+teSLM7XruXUAG9vePJVF7YBK1SLoi2Rra1teXzU/3cUOMpRLQ5gZ9JGrlHkySh+ydXYkkLdbdvXp1WWajnivef/+8JGo35Ea9MLNpv/hip/j11yO5QV8dLNkJnk4Stbsy63hZ/NmUhMFqcfPmtimfPj2S5Reej2dilYlXnAlGhfxqVGYjbYnvF6S+KvorZl99/vkLSfwiwb4yTjzMjulsuQ0D3nN9G7ABdFz+DWAmGtLlzxycZsb+u/wbD85J5XTzdfIPtxuSqP2Xf/6X4t3f/Ka4cuVK8YrM6lyTGZ6ra2vj5A/WpMXyB0fy2tvfkxm2+8Vf/vIXuR4+M4law1UDYdevXy/+5V/+1dh4LOvn3JcE7aeffir/mHvce6J2Tg4h44brWAdVWOoAXL/55s3i97//ffHHf/onuc7dlOvWpnlhHDNtsewBuD88PJJ/RvafqHX5N0v+XP40HFpTddfl31QdiDCW+XKT5Np3hqt5Iszt+kx6vXzNxJtJoy7/JqWm1+PyZ54OLZd/02On2VJvidpmU/MpgR00TwfMfLKUvVokBnA888Qzj35r3/Lnbx73UJxPnHkk96SyximWAHgus2BWTTLQfVbFTzoLWd9107ywzmqZUJT5oC+O5HUoP8k/lIdiyfF7jOQtbprjfBlG6lhuGo/lpvBIbhxX5MZxUxKkG7IMwrLMfDqSGawHxQ8/YH3Y8kFe5GMIX4CNB6398stIZnhhmYV9s84sktxIHF+7ti6cLslN/qH0r0rCYEn2BZZrGMlsrXUzjn1zeHhsEsz37u0XP/98JEtM4Oe7ZaKc+2II/zNmZkAzkM/7mo1cnxcG1tZWxz+t/+D9D4oPPvyguHXrtkkcnpf/eCExiCUOkCTEsj+4Pq2tnZdrxNq476effiq2qjVUY+LC7NG33367eOONN4qHjx7J9fO8/PPvV5OwjNGPlVmU711Iwl6RmbO/kQQ5Xrdv3TJLHzx//twksfd2d4tdWXLCJMhlP/z44w/FY+FtWls+d02L6WxnWgzga7Y+P0zLbqwd7Vv+/MWyNimXuZvkZBF6ekvU4oO+aJv58MvbLNbIWGS+kNmetv/TttfHsYykFDZ8mZ/2NgOT0w4x25sxA0jslTM9l2Vm5pHcXL40ScyNjcmjr1xzDwnY4+Kf//m8zAKVB4RcWDVtufeVhOGe3HC9lGUE9qvEYZmonWWIy8tI0o6q9WnXTUL04kWZTSVxI7H86NGhJE6L4vnzZblJ73/ZA8YOe+AN689i7d67d4/kYWvl+rhYqxYvLMfwzjtrkujeMwnY3d0l6RsV7767Ije7m5LcLZdrePJkX252IbMn/hfyM9sVSTwM5ztjyOUwDEx+0oax0ydq/t6Vxib5yt+74njr8r0L66HelCdG/vbDD+UXFB8XSNJek0XYNzY2TOIUDw3DbNldSRbuywxazO68dOmSXMsumrVU12S27TlJ0iLZGLttb8tyOlevFm/IMgv4ST90L332We+JWpc/83hsIf6rwsf7H3xg9gXWp0Vi/Icffii+/uqr4v6D+8WD+w/MMhOjY1l26enT4rvvv3eF13sf+cr3jHHUkq987orkyxCW7xlj2MrHVgxLJzLkK5+7TjgJ1cjXPJy74r9NhCJa1LHqpDh3i3nMK5/ka179myO/NFWoL+IN9VB0ggvyk3kZiuXhcZFAxPb8+YqZwXn37kgSt8fmZVvH8gErKyN5HcsMz31JDpZHAJY4ODg4kuTjrlnv9ZdfDuQmGEna2Sdq5R5cZjeN5EYcs1gx02rNLNPw/PmhSSw/fHhoZtMeHg7vK7je38fM3UISrUeyDiIS2zvFjRtbMmt2zSRi33lnS5IIeKjYgZlZK7/WlTV1NyWBuy0xrMkMsHI2Lda5/eknLFWxLFzjoWTwP2+ZgSkxwJN/vjDGEU6+4qTPtJSmqs3hhUQtljz4/R/+UODBVahj7djdXUnQSkLwvvwE4YG8dnZemGStmf0pa9hevvJS/vlYrl+LdVMx2zZ2W5ck8CWZVYvlFYCHmaLAwj9B+9yC37vakNWncwqLSx/g4WGvv/664QKcY6by3/72N/kn48/mhUQ5NvCFdX2nsvEAmyO+phJ3WyPkq63+GdLTVOXDq77jF+XcVfd6zlo8wPLBFbdjyFec9KBSZyZRyw96mVoYlNNTAZ75StuNma80vrL06WCgnO25JDdLy3JzWi5VUOVvqwDLq936+rF5qJU8sFmSimtmNi2WPkDyEA8i++GHl3ITtiPlyCQPmQSeFUuYwbqxMZLlDgq5YV+XcsOs7bqzc1jcubNjkspImI5GK2aZhmn4e2yeerQkfC0VX321Jz+5fVL86U+FWY4Bydrbt5FQwGzbA1mKYk94LpO0WGoC69Lu7ByJ7y+L//N/nks5MjN087+QZnWEnQ27+bqYtp8zX7Pla0USpa/KRertt96WXyS8ZtZExQzaL7/8svj2m2+KBw8fyj/nHhb4+T0SsiuSTMXDxbBcwWVJtF65fLn44vMviqd4QmPkhmsHkrJIUPLVd5LW54o53swFu+NdKTA4ldlnLLIffCBhjmQ1ZjKDC8xg/vXXu8XX33wt/2B8Ujx99tSsCwzII0mKI1nbevP4nj+LaYxmvjJfaQxk6aEYyJ/FNGbnna8zk6jFbsPOyFs8A5mveK4gmfmK5ytzFc/VvEuORvjpf+hGD7NsRzIzaSQ/I10ZJ2qxvur+vvx0URK1d+7sFX//+5HUV8zMUXyappH8dHGLJC22jY1jSdCuFn/4wzkpt4qtrRW5WdyTJOhO8fnneDL3SBK1WL6hPJrN/a4LsLe+JbG3LMsbHJuHgL14sWOWPPj440tmxuz6+nmzHzBjdn39hczQOmdm0167tikJgCXzALE7d3YlUXtoZkFj5jJ8nxXPvdGSgeaagXyuT9s9ma/Z8bW6IonaV14t3pI1Y7GkARKFd2V9m08/+aT4j//5H8Wjh49kyZhHJkl7LP9kxDkf69NiyQOsMYvXvXv3TDIxNgqdqF3Fg7LktbyMo6D/I8GFWPbhPXQND0QjJBhtT8IzoOkc0onazc0yUbu3J4nau78W33z9tfyq5MC88CA3s5liGN9dfDmdzp2GgcxX2oGQ+YrnK3MVzxUkM1+nh68zlaid2G04knF9z0f0BDXODvLlHMydmgFDVXVc5cNLM5Prp5EB3Fwxwanjw5IHeCFJe/PmavHHP25LWSY9nz07MDM8v/wSMzz3ZcbnspmZO+vkYenzSGZTjSTZuSYPeimXDsB9KJY9wPqud+6USwdg2QDEjtc0NtjBerjg6tEjLBmxL76UCduNDaxVu1F8/PEFk7D94IPzZlkEzLLFGsDffLNjljyA7sFBTtJOY39lGw4G8FHJ37scxHi6yJdnOHefMGCoqk7FVXEyGFHD+XVVHii2uYl/bmFZmKJ4KbM5Hzx8YH5u/0IeaPX8xYtiJGumltc7mQ27slwmV6Xc39+XfzY+k/Pzy5o1zLg9Jy8kfzFj98KFC+Pxjz/+fXFR+jFzFIlh1D/48LfF//3/PJHrzfNSTj4vWI91dDQqfpCHZ/0o67VivVzXhhhekXVd35K1dq9efd3MRt2VROehJDgx8xSzhs/LLODtc9vG5vKSXAsE6Fjwd19KrLIG7P379yWGnWJHbGDW8NbWlvH/svj+6quXTWJ6ZVVmAMsYstX4Ax94HR0dGjvwHQ9FQ+IadvHidwT4yFnENyS5/aa8sD4vNqz3iwe5gbO1Naytvmz6Pvztbw23WK/WPMxN/EWyHHbAyU8//mj09RvsYD9iSQnMkL4qSylcOH/B+I8+jOOF2JH4xcxdM2NXZu0+efJU/in6xPg9xuRnsc3BNQY5QxXydYZCbhuqoao6rvLh1czi+NDKZDWTBQkSlvlK4ytOelCpM52oNcdrPmijD7DMVzRVRjAfWml8ZenFZgA3PPaGNWuxNu25c1ibdl0StZfMeqqYnXr//r7MTH02/in+7u6q3IANv96r7aPdRqIWM4AxoxbLNLz11rbUS78w+/fnn/dlVm0hN3VlnytuG7PPNhK1eLDY48d4sBiWOdjBvbLM5tqSxDIStVjvUB6Kc3NbErWrcqOMJO2L4h//eC6+H4ruipmZy5nAffqWsTIDTQzk7xFNDNXHM191Pppak1ehJo2TcZxHMasWCVMk+JBYRPIOs2gxsxazOZGMZcLRaIrSsrwOJBH57OkzkdmXc2x9zVQkHa9fvy6/cHhHHu74nnlwGK0ioYoELuxtSIIY9d/97ncmUQlb2MoE6JGx/x///u/FwwcPnYlaXosuy7q5//Sn/1b8/vcfy3XisXm9lOQxYkFs8AXrvyJpyziRfH78+FHx6aefmte9e/dNrJgtjMTvNdGB7++9955Zt3dTcJjsxAUIPmJt3v29PWPn519+Lv4ua8q+kMQ27GKJgmOxgQ1+QhfYt2/fLv7t3/4v4w/G4N/bMqMZS0pgHIlacPLxxx+bEnZKW5KwPTwqfpb98h//8e/eRC0wgIlZ0r///R/kOol1h8+ZZDxmLi9Johp+I8GMJO13331XfC+vO3fuSLL6RS1Rmz+L2EPxW+YrnitIdjl3pVk6HdJyGslbJAP5sxhJVCU2T3yd6URt2m7L0pmBzEBmIDOQwgBm0r7yyrHcoC5L4nDDPPwK+s+fH8lsm125Kdotvv32UG6EV0ySdtazaeHb5uaxeYjYtWtLMgtnTW4O1+Sm+Eh83Jfk8p6sUTiSmTaYkTqbpDI4wprAu7tI1I4k2Y2lDpZNAhyJWqxJe+HCqtyM4vKOJQ+wtMRu8fXX++K7rOknyfB54Blc5y0zkBnIDMwTA5IGlPNj+TAwJASxFMH21raZBYvZm0ieIrHHhCF9Z5IS5WGVkOQYkpKbm/LgR0k4vn7tmvzz7yaH5Lx92azJiuQlkqZYnxWJUYMj6+Biw1rumJGKJOjFSxclyVnO9h2DqApwzsls2Zs3b0rC96OTRK0kj3d39wz+1atXzQxTyCIRihIvJKQxkxblrthC4hZJzlfFxzffvFm8++67xW9lZiv64AN0hCLDBWfIwk8kq1+9/Kpca7CO+6j4CQ8A++lnsf/SzN6Fu7SNGa5IHL/55hsmCiwlgfiZpIUc6piJzP0CQSRpkRxHAvicJF5rm+ggeb6xsSnY12TJpevFR8LFRx99ZGxhhjB4LhO+o8oXrP/+zGCZh7nJvgBfj4SDXZlZjCR93jIDmYHMQGYgMzBNBqIStfhZDLZp//PC2MWbGI61PStfDUHV26x8SOWLfsLtWH51nH3UZ+lDW75mxRX4Jl+z8IF8yfffqG2WvkY5mIUGYwA3QNguXTou3n9/WW4YN806r+fOrUiyEAlD/GT/ZfHLL4fyU8tlSYTOZnaqJoA+nz9/LDN6luSmdMPMTF1bWzIP6Prpp93ixx935WYOyU7cKEd+ELSRXuqlXSRr7949lJvMXUksr5qZv1j6ALOV+aC2ly8PDdc//bQvvh9Lgrn0Gze/ecsMuBjgeT5/73KxM9mXyhevi0Ca1adwlj605WsaXOEacCgJwL29fUmarppZn1iyAElPLEfwo/zE/lCWHTAzRCUJyWsG9iUSkkgcSqf8JL9M9KIfW5l0LX/+j5mbaHMDhsZBP9qjkSQ5ZakDbJBH0hNJUPTJsH+Tc/uaJCEvyvIKSMie2942iU8kGg8l8YsZpFjaAYlK4MLOmiz3gKQmgK9cec3Mbn0o6/Fylu9r0ndTnqx548YNSXpeM/4hYY2E7P7+gfFtW+wAE0lQJG23JLmNBDXw/vzn/5QHrD0V2T1jE84zbrOkg/hwVMWKX7PohOyJLHw94e0IOkjUghMm1o2wLEgkHCxLovX8+XPF+x98UPzzf/tnM6MW+/HixYsmMQvRPUlGIw4kguE/ZtpiuYVLkijGkhCHB3jQ6R25zv4qscY/IA7YKRt35zSOce1X288iMKbtK/0mV7PwoS1fs+IKHJGvWfhAvmK/bs7SV/v4mjZf5Cp/7+KeCJepfPHYAuq09y0jaetDVKJWG5lJgIguwrAmgT5Pu5wHH8yZOYKvaXMzd/Za7qzIw3HQcKftg6Gq4ivGdiU6KAcZfH4ZwJIHWEJAJsHIzyU3ig8/PC83eBtyI7csP4XEzc+O/GR/V26AjmXWDn5iOpvZqTaDuHlEovatt9YkUbtlZqmuyNqDT58eyuzfF3KjjjUIceNcziaK/QJq2+naxo06lkB4+BDLIIzEX6zxi6Qtfjq6IjfJS2Y93ZcvD8T3A0k0j2QGc7kGcNTFtKuDWX/xGYg50UuU83Cunwcf8veuyEO+5c6KPBwjnXCLYZ1SJO8wcxZJSrwwu/JNSfD9VtYrxZqse/Izfvycf79a89UkOyWJWiZSkbw9SSbSCmbYIiGI5QdePH8h5+SnHDL40C2Ts2UyEg/P4uxdCMIGkoZIEOOlE5ZjIFTkAoCv/kiQYs1XzEKF/5fEdjnTtXwQF3xhohUJXCRpl5flOiy6Jmkpyw6sb5Trw5ZYWEbnoknCog2OsEYuZt/CH2DjhQ3r78ImS8xmfSQ/5fji88+FN5mRLPbgP+Mt+X4h19WSEyR7L168MJaBHPiBPc0bEupIFD8XzAOJR2/wcXNrU5LEV4r3ZamGf/u3fzPJVyxBgX9SkkdgYl+eF38xSxgJbMzuhR5jPJTE+rNnz8X2MInalh8HHW73+jQ+XN29nD1Cy501D/RO2wdDVcVXjO1KdPb7uPIgxudBnI00PA98zYMPZ+F71zhRS8JD+T3XWIxe24MZ9qoHakdBGHmRdPkZBeARcsXo6oM6ffBAjW9q+vZxbDsBmL4mqPjCqvXb3LBNH7Vwkw/Q7du/sf0KOBU/VX5sz1OxYyRfLjvos+U1bGhMy6XWjd3KIZdfNh79tPtz+/QzwIeHnTt3JDc9KzKTFj/HL2d67u+PZBbtXvHJJy+Kr77alyQtfjpZ/hR/9szg0zOSRC3We12X5Kf8VPXimtwkHsus3/3iyy9fyizgQ7mBRlJ5thtuNpGURcIWP4vFWQFt9EsuwdQlxyA37MvSxgPIjuXGvJSfrefZel8MTONcH+Mrz/Uo+9wQHzaN6+qjDMeMkvXGMY1libRumvgTgI28WEtQifLNjpFtKNu2mnyArq0T5USMUAWcip8q3+SKHSPaSIY+ePBAlon52syixQxSzLR8U2aTYnvllVeLm7Jswc6LnWJPZoci8YqEKn4yf18ewvVAHsKFBCiSi3hxw0O6sJwA1j1FkvKXu79wqPjDH/5gcGEHSVPgffvtd8V//dffTSIUgnhoFpKVGMcMTyQRmzZeD5C0xHUBSdWHkjDFg8LuyUO+4C+WD0AiEslZJClh41eZPXr317uSXH1k7MH3e7/ek+v1V2YN1++//06WYJB/DEqSE0lr+ITZrZhJi9dbb71tlkjAw7uQdMXSDniIFx4ahpnKWEoAvpjksyR3f5FlEf761/9P/nH7nQkJSV74cVkeWoaZudjACez//e9/N228YWYxfAeveGAZNhwjuGdEkhizZ997/z1ZdulWcUV8wf5AovfRo4fyD9efJM67hkcs8bC9vWV0MAP57bffMclarGWLBPBLWa7hZ/GxONllxlbojXteH7OuPmAYnwNgPr2ASvQQ+YpVoK86rljdkJwdI9vQsW01+QBdWydkO2msAk7FT5Vv8smOkXy57KDPltf4oTEtl1o3diuHXH7ZePTT7u/adnHj6rPtuHyO0bNxYtsmfpdRDwD5SlDxINW7XTG6+qBFH+oIJy2f3olE+5qxnRA8fU1QiXLOjpFtKNu2mnyArq0DHJOoNcAVOi5ytqDdhqK9+QzYcqntGNsaM1Ve67rqFS21Ic3XBFki6fPBhVUD7qHhs+2DTpX34bDfGSM7PcY83eOkNtR9MrTbpkzFTJWP8YnU1GKsOl2fRWD6/HBixTgRKeOz61NPlffh5P7FYQA3Q0zUXrlyLDc8q3KTuymzaeVnlbLt7Y1kFu2uJGqxNi1uwPAgD6yRZ4Zn/IZPUJmohc94iNj2Nh68VSZqkViW+2y5ySzX88PN7zxsZVJAzgviT5mkLZO4SNBi2Qa4eXh4LDfUkJGfhc4+zzwPtJ0KH2rXjR4jSj2yU+WbXOW1TMuZPg44DDq6jDpVNFbfdZ9tn51UeR8O+50xstNjzNN9pr93IemIRO0333xtZlhiZiVmYb4hSUY80ArJPyT7OJP0qTx86q4kPe9K0m/ly5XiuSRsgaGTtNhHWJsVP89HghXrviKhyQ3rq2LdV9hCkhdJSTzQ6i9//vN4Bil2JZZTQHLzoSQmkSQObXLWN39cfxYzg+EXkrRIQn/5xRcmRuBhjVeMr8nasPhyCR+YUMVSDvD93r1fTVL0+zvfi9yqmRWLZC0wzRINct1HshcYf/zjH8eJTyRMMRP3dUmA3rjxhonHzMSVWaywixnMP//8i+EFM1qxYX1aJHc//OBDk+jFMgbPnz8zidr/93/+z3HY4BjX5l2ZfYxkLTcc1xcunC9u375dfPzRx8Xb8gA3cAuZB5Kc/la+ePztr38tvhAOOBN4U/YHEsTvis55mU38m9/8xviL/fTg4YNagph2fCU/dnrc9HHA8cFzdBl1qmisvus+2z47qfI+HPY7Y2Snx5in+0yfu8BnvmfkUTVZ4pDCcWMOrer4cvHlO7Y0IrF0Xx/1GNvaTqq81nXVK1pqQ5ovQ2BttOTU6jJNF5ZLrktfavyp8k2+OWNkp8eYpzt47jKJWijigMXmAylH/e9t9fyI0xkBpyHfMUbeJzwKKU4Iq5OEY+y0dDn5cnY2R9xSrRl43iXObODzvmOyf2EGyiTtyspI1sYrZLmDdblZ2pKfX+KhHYXc7GGpgz25UdqVG8ZCfnK4LDd6zBrioJ/dhuTy+fPyUBKZBYwlGl59FU+Kxtq5eIgYbt73ZTZRIW0uHzA7X2EZN6lYy++1144libAiSeUN8b/8gQxmLWMGLWQwoxazgm/cQMIcSYCRSY6Hr3qzjS1bj2dgtp+aeD9tyfy9y2akW9v5lcHZ2WynpVoz8LxLSOBI3CEp+flnn5sZm0isvi6zQZGww4xTJB5RR4LS/OxeljHAeqZM6OIBWj/99JOZJfr48WNz3cMdBGaIIrGJczLWiUUylhtm4x7ITF5sZpapYL+Q8fuSMH4iGNygixcSnSPBi934D0UsLYAEMJYg+P77780sUSRKgYn1WJdliR/Iwge8zKxXsYNYn4qPkEUydUNmyWKpBCQ2VyRpa9aDlX8Kor4q6/q+8uorZpwPF8OM3i2ZLYxEN5Leq7IeLjbYlTeJBzN9ca0q+7FMBJYjAGfGP5EFP8+ePhvPnC31wWz5kDXM7NUb9hH2GxLrSPwCG0sYYXkHxABfMMuXsa5LknlD9u/Fi5fMOHgABjYkmjclXiSz4Q908BnxbcHPT0jRARjEcsgvYpczRmdnc3Qt1ZqB513izAYev2NAETZDVdVgXzkS/95WL97CMJL5e1e/vJpjyYZ0dtpCk+2QWnllFJ22B15bvUk3p9+DgxZbzMFbSpbvJuaWgbdU0+ZnVidfcCAUhz1m2nZnZBQt1SLRhxUjX6EYXGOmzzXQ4G4LlQbEPJwZSGMACc/V1ZHMpF0uPv5YZqi8e05ulNbk5nQkP9l8Wfztb09lJg+WPJC1/vbKJQ94I5lmqV9prKn7yivHktBcktea3MityY1Zuc4rZgDfv38oN49Lxmec/WbpM2/Ykai9fn1JZjBtCc94Kvkq7ntlRtRIZkEdmfWAkWwG/2+/vS4J50OZEYxELW7OJQpMr83bwjKwqHuP10WUoRjsMdO2OyP3Xku1SPRhxcgXrITisMdM2+6MdLWlWiT6sGLkKxSDawx9SEpiWQD8rB7JwgeyVMDbb78tP59/xyx/gCQfkrW4a8DDrzD7FElarGuKxCDk/vGP/zL9T/CfPaQSxSEk946Py9mn+Dk9f9IPJnYkUYmkpDmvixzqSMY+k5m7JQakyvsUgJkEpsilbk8ePym+/eab4vMvPjcza7EMAvD4OcT1gNcElOVsWXlAmnCCxPKhlGaNV0m2ItH5+uvXDBdY3mBtXa6XkgRFMvONN98w/UiOMk7whnVnkdzFzFuzGdu4psr6uRIzEr7YoMd1eE0yV/oQM3hy8QEZjOsNSfXXrr4myy3cMHYRD5K06+LnhQsX5Z+bb0p9A3vHEAu/V1dX5B+f8vA1rH0kG+JC3zmZYQv/kYiWLzLym5tyX7iOIaMob/aYadudFG4oW6o1oE5nmJ9FWAvFYY+Ztt0Z6XJLtUj0YcXIVygG15jpcw00uNtCpQFxesPkChZDcbjGXH0xnrfVi8EeWoZ8oQzFYY+Ztt0Z6WxLtUj0YcXIF6yE4rDHTNvujHTVpzZO1EbiZLHMQGYgggH9IW86MUbAZZHMwNwzsLp6LD95HMlN3LHc1K4Vt25ty43Phrn5e/x4XxK1u8Vnn+3KTB7MTF2Ve55yBk91fzaz+HCjhwQzHnx2+/a63MRh5tSq3PwVckO7Lz+5fCEzeQ7FZy7TgBvambkrN8NIhh/JTfORSSq///45SRTgKd7LMgsKM8L2zAzg11/fkJtpzBJaNevtPnsmN7s7+zLjCzOmkCRHDDMMZHYUZsuZgczAKWSg6/cuJPywtAESsJgx+0x+co+ELZKUGEOiEclKJBvLWZorpo0+JHCRrN2XZQl+uPODPLzxV5lFu2d+1m+SsHLCRcLW3pAIxbIG2CAHGcy63d3dMwlLWz61DTy8nkmy9a6sjYv1VpF4fSnrxGq+zJUACU15IbFpfBF/VqSOJOw6kq2SoMXas1gK4k1JdiJhi37wgaV2oMcHmDFRi741mUVrZiUj4SlYJxuSrIfmxT6sGYu1gjF7lRv8B09I4MZsa2vyQDJJyMIX2IUPZnkH6ce+wn7CmsDl5a+KWfxHEndTfMTMaugguYtkLWJZxYxa8cN8MYhxIstkBhIYODnam/8RkACbRTMDmYEFZ6BzotacXORNrmlT33hiizWdKj9EQLP0IcU2ZcFBLL9982V8wJs4MG0fUuOn/LT91JzPA1+x8c8DX5q7XO/GAG7qNjdHcgN3LDOQVuQlM1okSYtZqU+e7MvDO17KS25gfziWB68sy71OeVOHm6FZbuUNtPyUcWkk6+Ity9p0eHDMltzE4cnWR5LUfCkPdXkhD0DDjeKKuXmbpb+wvb6O2b8jWaKhkJ92bhh/+dCzR4/2i08/xXp+L+QhNRflxnPNxHLz5pbEg/WBD2U/4QnkmBwkT/nmB3HWQWX7aQzIfsO+m8XHh4dM7Cc3VT6NiDjpWfqQYpuyiCqW3zgG4qWMD3gTB6btQ2r8lO/Lz2NZRxZJWiTkHjx4aGZ77knCFEsRIMG5ubVplkA4fx5rr14wicCrV183yctL8hN5JHIxWxMPH8MSCpiRG/Pgr/i9U5dsih/XNyQdkeREYhbJWiSeD/ZlwXLXJvLANLg4wcgLSwJg1vA1ueDcunVLXu9IvFeLy9KHZCcSoJg5C87wAgdbwhMTtTCDhCfWr8WsVFzzAS3FYBuWOcAsWCRpV7H2rmxlohbXw9JnzpzFGHyCO4gVPnKfob9M2pb6y9bMXegOvZl9IUYGpMsbQoptygJsFr7CrvEBb+LAtH1IjZ/y0/YTPHGbB75i458nvoY8d3Hf2GVq/Knytr0+2rP0IcU2ZRFz7PHYBz8aw/iAN3HA9qFTonYMLNgVvrY7aN3YTrCQKp8AHS1a48uxM6KBWgjOQ/wt3C5V4Lx95LYGG1Zxpq7OwU5OjT9Vfti9l9HbMVDOSN3awnqpy8XvfocnP29J4nNdbgoPZf05PITrpSQ9DyThiSQtZqaUs2nb2etPq/zCVS7XcOXKulmqAbNTsWTA06cHcnO+J4lPWaPv6YrcsGE93TLB3J8HKUjlB3xj41hulAtJhmPd2Q0zmxYJcXCNNYA/++x58b//93MzK/jdd8+bpQ8QEx688tVXO9KPtWqxFmGZME/xIMvOFwPTPn+WR2A8B6ny8cjxksaHyhHXw0PikdIl5yH+dK8rDTh/xr53IbGJpCZfmFGLGbZYJuC7778rsJYpZo++Kg+7uioLsb/11lsmAYlZpkgAYnbpjRvX5ef/b8q1Th6SJUlfLjHQej9EKPp2FRO1SDzuyHIKz2VNXaw9i37fZsbUOJYRQKy3bt+Sa/vvzAuzUjc3kQQtbyGRoGVCGGvYIjmKJCe3FUnklrNSJVErM1ex+XymTpdyWZLHWLoAa+nCLnxBXHghYYsELpLJ9rYka/UiDuxzbNAzawJLfMDUMdm6Q7TNXqp2VT53JTA85MGV4EaM6ExdrY6tGD+HkkmNP1W+L78NVRVf0/ahMhsdSqp8NHCCoPGhciSfuxKJO7l0GsVOiVpgdX0IWZP72M+Wz0bF2G5SVuNa3j6IXfhKtbeq8aEyNpTN08pXbzvBAmriq81+mtXx5fygWPF2aTKuECehsZBtYodk8th8MrC2NpKb15HMuhnJDM9Ns14qHsaFDUnaL798IcnOHfkpKH7miFmc5YyaeYgGfmO5hsuX8WCu1fHatEh63r+/Z9Z1ffKkXJt2NJplkhY3jeUDxC5cGJkk7UcfbUtSoEwq42Fn3377ovj8czwxfF98X5LZy3uSmH0u+2RLZn+tScJ2XdZQ3JKZtgfyMJmRWa8W6+5O++ZzHvb7qfBBTrZtz7dN8TddF5v0OQ7/eG5nqcdYH7I0PlREZb6amdZ8NUu3k2g6vtrsp76PLyQfZfFU83P7J08emxJJPszWfPbsefFU1qB9ufPSEHAkslin9oa8sKYplga4d+9e8Vj0DJ/taDJajCvESWgMSzZgljCWUxiNyrVw5SI8/lw2uXZBkrJYe/fjjz4u3n7nbUnavi6JzCfyT8xfzEzjg2rGLpYwOBS+XnvtilyX3pDyNbOMgknmSsLTXGfEUamZE1fI5yafQuPgi0lZlpDH/vj888+KRw8fSewiRWIVGHzEQ9XKtXWNp8UXX3wh19MHZvkLc0yI/FC+K1dMFXbyPbbNir+t+fJLdRvBYePa/8a2Z6zJon0ouvCbMFqND2yIcYXMhMZ8MRHXNz5EP/zMn8V4ZjNf8VxBUvNla3ZK1BLcBu2rzQ8jSteH2dUXsm2IsARSMSz15OaQ9jJfabujT764X4kJT9iX5lV76WnZc30eU21TXvPVPvKsOSsGcCOEh4edO3dklg7AT/ExixMzUmWoStS+lFmeB/JT0hVJ1JazUqf/6ZhkCL6vrZXLCNy4sSw3lkhmlmvtPX58YNanffjwSJZuQHKZfk/iTKsHDzxbWRnJjFgsL7FRfPTRRfF53axNi9m/SIj/13/tSKL2SG5KVyVRe2iWQFhbW5J1+eRp3OahYluScDiS/VAmzvFgMWw5WTutvdiTHTmB8hzaE+IYhudklC4brr6xsqMCeWJyOBWDem3LIe0xtsxX3N7pky/uV2LCA/bFeeOXwi8Qjo8PzfkS684uLT2tzpNLMhvzUXH/wTmzlACuI5BFEhczT8vlD96Qf/I9Ku58/73fQOKI6/hqihW+YYYo/McsYbMWrvTF8oXrwnlZe/cdWe7go48/kn/GvmYSsPfv35eHgn4tyxn9aGacYj3dkSSEjyQRfPv2bdkHS2atV6z3uiUzjbEBy1xnxOkmvxOpGYvruBAl4ueGNYP//re/FT+Iz6HN+Ca+crsvCd77D+4XSEgjUXsyQolhyyHtkR2ULjuuvlC0kCcm5VIxqNe2HNIeY+uDL/pJTMTLvraxp+pNy56Lr1TblD+tfDEuF1dtjg3wRUweF+SQ7aHLIe0xtrPAV+dE7ZA72nWgdbXXF6bv4Ojq37zpZ77a75HTeowMefJtz3bWnDYDuAnCC4nDt95akhu0dVnHrnx4FSYjHRzgCda4gS1k1mp5JsHsVXUPNOGy/DpTfpq5JDeW+Gl++ZoQ6qGDvmMZgWvXsDbtutxkb0iCeUVmC5Vr6n733Y7cbOMnnZhhg5vMHgy3hIC/589j5u+xzG5aMUseIEkLv5BUvnt318ygxYPCnjxZFu5XJDF+VHz99a5J0l69igekrZnlKG7f3pbZzZhVuytr8RXCNZZ1mGFwLTnJasMwUH5S+8XuC/O0XlNttjNfNiPx7S7HCBKJ5kFhsrwBEpx4iBiSc5xJSS+wlu2hJCaxDuoTmVn77NkzOZfuGjnoI1l7URKc6xvrVPGX4jB9RrJ3VfSxpqt9vWl7hoavmFWLGHAdsTfatvuZWN2U5QPwUC4kobe3z5nZps9kaYDvJQn99dffSCL7pTw0rVzXdyS2Lsj6vfvv7deWCjCxVAG0jcP2z9Xm5waxYhYxlnxAHJjVeyBtrNH7QJLM6Mc4N5sV7SOWi8DD18ghdVJLH8+pOPMuz33Q1c+zwpfm6bTGrD9POt6u9dPEV1+fG81pX5iniWfNj12fV75MohY7gal3+8uBHUhK2+BWCvYHNTSmbdh6eixUJ75Ln32QCcn58I2OvGEaPLF8sin9IV9CY7TRxZcQPnA5zjLFltGRt9PCFzkA7zYPbFMGJfsgH7MZ3UoxVdeHT38wbmOGxjSerafHQvUQflvMkL08Nh0GmOx85ZXCJDo//PCcJD03ZO26FUm24ueWR3JTV8hMzlX5KShmcTYnXu/dwwOvRpIsXTLJRiRrh9rg/+bmsfxMc7X44INz8iRoPL16SWwfyjICOzJDdVcStVh/l7Nph/MlFOMJz8cyW3lFfN0SPsvE6+PH+yZR++OPu7IG8KHMpMWaerjJX5b+kcx6OhT+dyWJvm/Wsr1wYVWSC9uy7MGu7CtZt3AHiV1wXc12CjmSxxaCgdD5NjSmg2t7pBPfpc8+yITktB+6bnTk7bR8j0BsIR7AF8dZkkPNi69udOTttPBFDhCvzQPblEHJPh8/dj908JN3PFAKiVasTbrjSNJCD0k7PGRsV2QwWxXLChwdyX8nZUOydUMStMAxP/uXPpc/2lfoLYltPMgKa6uurMp/N6ubsdQ4gKU35GbL2cEnM2mJqX1gH3WR4AQf8Kd8eNolk/REAvvx48fFD3d+KL795hu5duzL61BiFDQxdkuWSZCrieEA8aRs9Menw3HbVy2PMbN/JBn78uWO7APhstg0SWrMKN6V/key5jDXoaWuDxszafmAOXMtrhRCPhCTpcGWt9PyWURcPr4wBm44zvIs80UOyA1KbuSFMijZR5mm0uhWiqm6Pmz6g3EbMzSm8Ww9PRaqh/CJSRmU7AthcszoVco530VW/CX5yucuP0d6ZAi+Jq6iMJJy0GsH56VefQaNO4PG0yN4rM89mhzvLm173GlVcEzEyFlqgzVDvoTGBnPIAu7E1zwEYMUzdHPRzzlD8zOv+LhxkYlD8lP8TZnpuS0zb9Yl2YkZqJjBI7dHkrS9erWc+YkvRbj5C23r63Lzu3sgN0blw65kQtMgW7mMwLHckB9LAnPN+I51XHFT++TJgZmd+v33h1LHTR58Dvs9iJMGtFzuAP7KQ7YlUbtR3Lq1LXUklZdlps+hzGzaMf7KLzTl5rNcpgGJ2ufP8WCUY/MQNzxk7Pr1fYl31ejeuLEhs6DX5AFk+8L1yMgi9qb9M1ycGXnRGdCXLdQH+8T0CB7rc48mx7tZ2x53WhVwGCNnqQ3WDPkSGhvMIQu4E18SwOoK1il/Rf6J9bqcG18UmDm6u7trEn9IxGJ2Kq55JqkqScxtSehilun2ljxIbL18gBbGy1m45XqwzbzglyllkheJXczSxTq3r4gfR5IkxPq3SDDi/Ixk6KEkRZEYhp2YDXJ8JR9Mcr3Gmrx4iBoStkiA4oXkJWalmtm0Zv3bQ5OURmIWDxLb2MQ/bE8S1TF+apm4yLRGvY7E6hNJJj948EC+i6wYPvGgtwsXL5qZzjuyb3GtQyxIPJtN2khMl+sQyz87K0jIgHyzD+pm0lsIjMDp2jUNzVEINjRWA0xoaNs+tU6fRR9oh/6Qz6GxDiaTVDvxNQ8BJEU7H8KgraeP48wC0rt+0Hh6BI/1uUeT4/2jbY87rUqnz6KF1UfTJGqNU9XROq2DlkS47Bkiqz3kGu8jcGCEfAjZMHryNqRvtv2QrzzwhvYn5IPtr24bPXkb2j/abPJzmnzRp6SyImoe+CJX8H9a/iRxlYVnxgBv/jY3lyT5t2bWS93eRmJTbnhXZWaSrFN7+XL508+rV+VmRza5FwpuWCrh0aNDuUk+NglErA07RPJwfX0kN5JHklgujO/wc2VlSexittCBzEw9lPV1l+RGtLQ/hA9BIqpBJGi3tvDAsyOTUEZCHLNpt7ZW5Eb5SB7oslv84x94gNih/PwWD2nD2sAlyViy4eXLY7lZPZafqL4UjJXi1q1z5oFpWObhgw+2heNjSe4emAe9lfumYQfFOJ1l5pYB7N3qq9WEj+ZcXw0OeRSEfJhwSnUYPXkb0jdlzlRDvvLaOLQ/IR9sf3Xb6Mnb0P7RZpOf0+SLPiWVEgCSkTdvvikPXPyDSdBiSYMX8tN3JG0xOxPrvOKFpN/21lZx9fXXi/fee7+4dfu2XOuumGQlZB/KA6vu3btv9Hw+kK9jWd/2SB7CheQuEoVbgvvGjRuyBvlHgnGveImlBSTxOJJEMZKGeLAZlluAH103+oDSteEajyUeYB+JWfiH1yVJeN68edMkal+82JHxvTIJKv3v/uZds47tliSvOaPYhd22z+Wrfe56IUsVfH/nTnEFDzSTRC2Wbbhy5XLx4YcfmrVzf/7lF7nm/Vo8l4fCPXv+zCRikXxHkvy8JMkxoxofHFz37/16T36B8r1J+jbx5YvJ6AHPJzBAf8jXaX4WYSs1buO7vKXqtaXR2Av4OU2+WsVQETUPfJErxDGkP037zMej0ascG9I/bT/kq+Gr+pAM6U/IB+2rXTd68jakb06b0umyyePLNWbjdGkDv9otSTBGT9769G88o7ZP0NiovDa5J9qwFGu8kvP60IDTVq8BNjjstVnx1ffUdJczXh9cwqqvrZ6CSKr67BmqpshXktOVsM/3NlixOkGbFV+9nnliHctyc8kAk7S4ucS6rphJe/nyhtyYIVmIn5AuyU3vsvzsHj+bXJUbTB5E4XCw7AB+ln///qHM8ozTCSO6R9fXMRMYa76ummQyErVI0mKG6qNHeJDYSG62kfQcJlHs9qreC46RPMW6vq++irV0V2UW7JaUm4bfly+Pil9+2Ss++WRPZs0W4vuq3Oyf+ItErdxfGy6//npPEtNLJkn77rvn5EZ6w+yT58+xjm25DiNuwMtkbd2P3DpdDHjP9fy4ofQK9cNFW/i2el289tqs+Mrfu07Y9XFlqJoiXycexdfgO5YsuPnmm8Wf/vQnkwhFEhJJ0YcyMxM/98cM0pcvd4tz58/JtQ0zb68Xt2/dkl9kvFO8Iv/1Q2ISM3AfPXoo5917srTMTtAB2MS6rkiG4lqK2ZyYiXpdErW/+93vJLl4pXjy9IlJ+B5KMhfJWcyqxbqpfSRq4Rx8cG24/uBijuTwXpWoRSIbr4uXkKh90/iAxDGWibh2/br8M/G6/OrjXZO0RsIZiU6D4zLQos/nq7mjBh6OMRF6LsnyO5KovSA/93nttasmhsuXL8s/Jz80++31n38u7v5yt/j13q+SsL1nfMQSCUjQvibJ3SuSdAcO/P/yyy+LxxIjZudi8/pgRv1vbfX8iM0jXptT/Cx6fWhwv61eA6x32GfPUDVFvrwOBgZ8vgdUOg8FbVZ8tf6wRHoX9CGA0VYvANk45LVJrlB6hRrhowTawrfVi3LKI+S1OcXPotcHj8/sbqtHfbscJ2p5rPRtAAaTMaEQOGgDQyY+qreybRCa3/rmq5PPFcFVMeF8Cl8Tyj11NPmQakbzlaJr9Hriy8d3ij8u2b6PLdggX6k+G72AUsp+DcC4aMh9c84AbmLwevjwqPj00+eSFMSMoDJJi5/cIzmLF9bHwytm++abHYOHh4oN8YAr3jRevHhc3Lq1Uty+jQel4CerhdyI7ZtlBJAofvGinJ3a4uoVE2aSDCZO7e4eS1L2QJKyz4yf4H1396j46quXkhAoxF8sc1DuDw2O5CtmBf/6Kx58syc32U9F7tgkpZ89O5QE796gCXHtS65Pl4Hk8y0UAif0wJAJjOpoJNs2CM1vPIv0hd/J58oJny8pfDVH3k6iyYdUVM1Xiq7R64kvH98p/rhkDVeyZAwSpRdlZiiSrpjFuiMXoycycxbLIGBWKR4atrW9bZKAl1+9XLwuyyRcvHTJJFqRzPvxxx+Lb7/9trgjD9tCkhdbyOenT57KLyK+K/EkmYhk4WVJ+v7mvfdkRugV+aXEc5MIxTII+7gYSPL0vpz0kTQeesNsX8wQ/ln+E/jNN9+YmamvCxdYHuK2JGSx9IN5kJokpzF71SQ5JbkMX59K7OAJD1cz5xV+eIdw2hxgJ0Rj7WDMRgavmE2Lh6Fhv27KkgzXrl0zM2eRaH9Nxq5ff2g4XZYk+fb2liRyX5X4LlX7ek/WzP+1jKGj3ww/dCykmGDI0EnGrBR8ek3nDW07xecU2SYfUrAg29Zno1cRVRUTppt8pW2f/gRgYkffxxbMt/XZ6AUCbeJKhx6A0WLJ9SH4ohPJPhvCRNuj2MQX1WHfA0HXWpd989XJ5ypIX6wpfLUmpEGxyYcG9Ylhk6g1O6HaE33ODvAROeGF1WH0PMqVm6H7CYPmUbcstWtqvvr8ZLT1OaQ3T3z1eWxhz4XiDu3ZkB75Cul3sd2Ea8YrJ+adL3KFMsRpaCyKjyw0dwwgUYitTNSOJIH4okognriKpGg1Keeks6H2/7P3pc1y21iWfLuWp82SLMmWZXktu2pqpnsq5v9/657omeiu6Y7ucpXLmyRrsXbp7evcc8mTD4kEQIBLJvM9MCITIHCXcw+YZPImEnzyZF8StUdyY7ogCcUa4YbdwCX34ZKoXZXXeZ0NjCP41au94vvvN2S91/0qUVuuT1uF2tBbOzXwBx52d4/lhnFfEuKbkgjYlaRAoYnxH37A7N8yGYvZv+bGMdreRqIWS0lgPb4tfViaTJKS+pEkf7HMhKmV6/POQNPzrep5lIdwrlcMBOLB2WTsmpoK6REmypBcqK9JLKYO+Rr69whgJl8mfle9T74AYkH+CbK2JonaS5c1cYolDpB0fC9/pUfCcl9mlu7Jw7POiQySlOsysxYP2rogCcnXr1/LNeSVnJ/lIVuSqH3w4KEmK/Ui6AqmasOM2QeaqF3Xf0ogWXjtg2v6MDLMyIVfJIgxsxVLECBJ+91fv6u9Bwq4jOoqf9Q8LrCe6+MnjyWmnyR5vaSzfK9evSI/cn5e3JTZqsAHXFekDevqYgkBrPuKh3Uh+YlEber4ys+kmjyN/QKhx4VxcGBW83NZ2gBNSNJekvG8d++eLteABG25DrEk4N+81WQ68GEtXh17+XJwUcbzreBHov2yzMrFGr1tNo2fJBg429iEblNTIT3CRBmSC/W1jYt85XNXJJPVoA2dryEdW2C2S76afh5Uz6M8NL6CJ4TIQ5VinpDZ7S1DekPiq8tj62SN2oqWEAle5s5qRybrrI58v3HjuOIZp19PrazPCcxWMWZlPwNIBOL17t2CzFw5lETtoc5M9WvU97x9eyx/MS3Xhj087P4Ei5tP/MUUSx9cubI0Wpbh9es9SVruyM3oriQ1kSjmQ8TqMfclAW6Bd39/QRPXz5+jvi83k/KEbfkWgATus2cLchO/KDfx5bIFrqQyZtpubS3qrOaFBZkhtrWrkGEbfGM2bnlL1j3ffXGT7Z5hBvJheoYHv8fQ5bjCWrFIMD6Rv8Zvbm1qAhYPZkQiUh8qJSdYPCwLF7oDORdjCYKdnXLtVqx5itdPP/4k/1R4LEnblzobtw6xzqh98EuxIg8jQ4JzV+wdybm5PPfvqX2c93HdQqk4fN8PRQ/YsK7ts2fPZFmbHySe9xrTq5evJI7y3F+HyezflGQx4sEDznCdWBQ+4AM4sGQDrlNIyO7t7WtyE0llfViXJL2vyYxjzE5G8hozXN8LFsiFNozBa1lmAksXIFmKpRYeyyxlrCcbu4FHJLmROIedc+fO6xiCQ8yWLb8HlA9GQyIZfOO0gpiYGMdSF3ghkV6HORZXl4mOaJ9Z8PQzgIPXd04YUPRDgGliQD1vkQxksiKJ6l5stPSBXGtbbWPnCOyIvZBJUz4kZ4NKkYVuUz+mX9qgby25Ywom1GlTVbAj9kImKR+ScblPlW/qx/Rt2wCGtr8u0Kb6wY4YDcVG+ZCMiZn1VPmmK8LhsQAAQABJREFUfuiP+tinby25Q8HE0rSrHwKx5zNpyvpkfO5T5Nv48fnP7bNjQG/QZPYMHvz1+PGRzJzhCLNMx7a3tyA3RZiRg8TiyXqr6ZYmNXBzVr6wRMOx3ACWM1DxMK23b/dkJu2OvA4k4Ywb88llBCYt9t+ChOz+PvhYkvJY/maKmT+l36OjMqFNnjAerq1M6uLBYoXcLB/JTTvGp5ztXCaBS5496i6TuW0gDIx90rAjh4D7KCgBm/IhOTu8FFnoNvVj+qUN+taSO6ZgQp02VQU7Yi9kkvIhGZf7VPmmfkzftg1gyN+7TIZO6uQKLRwrlPsyW/bx41+LP//5z/JwrHKmLBKFWDtWX/JgKpSa6JO1ZQ9laQQkBZFAxbIHmO36SBKDWP8USxagz7cRAxKB+Iv+viQwN+QEj2QvH9qFxCKShyjhU5OYkgDeP9gf4bbtQw7LNPz9h79L8ndVE5ZIWj589Ejq6cslbIvukydPxT/+2bGjSV8sIbCysqozgLE8AnEyQbohM5BxFsDM1fVL67J0whOx8bh4/uL5aMkGxq/4sSMDgDE4kNgg/+///u86a3lFlqDAjN4XL1+MziscM9V1vAEPsSDpjnHa3NzQxOtVSdRiWYvlleXRuCp+SRAj8YwZ1Pvyeifjghm1WMJiQ3RTNsZGnFpyJ8WQIUub2mTwZYiMVSmf6jZVvqkfE6xtAxjyuctk6KROrtDCsdKSOyeiSTXTrn7QxJ7PpCnrk/E5T5Fv44f+acP02/a7Lm2qD+yIcdM+fbM05UNylGeZIgudpn7oz7RB31pyxxRMqJu46o4tF4ZYV6kwiStVz8Rj24Ctrs9do0St6biTuqBvC7YTHC2NcBBamqlXh6OIoyVSrN5fjURTPz6+IkKrQVR1+xwY2hEihnTz6rT8pCIcwzW2k2opy2cG/AwwMbi7u6QzPnGD2HaDzfFXW4u2fpmsxZq5+/uYXSp/a32/L+Wh3KDvySykQm7QyhmqtuZs9jFzFg81w8zZ4yrJKpcKg6e6h4BBV+5b5WZ1SW6Sy1m6HCvTTtQFaDYkZK+xDMhHMH/viiVL5HDKivhyEimW4Ngt2tQP9FxbRGgutck2nwNDMkLEkG5e7dMPEq5Pnz6VBN6yzqbFA7HOy1IEKLHGKR+mhSTg3q7MdpXE5bYkP5EIfSNJPczAxIPHkLTFA7bqbuDBAmZwPpVkItZVxXqvWBMVicQlWWYA5+fy7ruMGgnFF2Ibs3l9Gy7DsIOZvVgCALNBMZMWCcvt7fDDzVw2YQMPRsNMWWB8/eq1Jl+xlu7q6lqxhIXpZUMcJ68NnaW6vr6uPHJ2Kma47ogd5ya4ce7CGDx79rT4z//8T11LdlGWJHgjSxRAN3bTpLYkXRX78xc6PlsyQ/rN6zc6wxdjuSbJZsSAZSuQDEeiHOOJZDZkkWzGC8l3zBCO3fo8PscwwFHEBzxSbMx0k52mfnx8RYQWB9PnwNCOEDGkm1en5ScV4RiusZ1US8OVR1idHVN2mGI8f++ySQnsRw5GpFjAUVxXUz/Qc22dHWeVg84StQA2Al2hDIGlfEgGBNBmnZyLLLTV+YF9n2369tlu005casMHwHBA+ZCoiTckZ5idqIb80L7LNvto0CXDvlZlZThkH33AE5IBBmKuk4Osa6vzE7LPPtptioH6Zklc2lYZDtmnfEgGtoi5Ts7EYtZj/Zg6uT5sBvRGUiAiWYiNCUDdafBGe0wgNjBRo1ImgjEz9cED+YvmFmbeHMsNLNZrPZKb0SW5aUMsTY/yGvcNuk1OyK/ZFmMS8tDFONEGSpNn2oyxl2WGwQDPqYqmOmRDRy7lQzKw1fe5HvZ9GOhbY+r4jfGrWR8AwyflQ6Im3pCcYXaiGvJD+y7b7KNBlwz7WpWV4ZB99AFPSAYYiLlODrKurc5PyD77aNfGgAQs1prFDEwkZbEcwZokI8+dlwdRrZWzSNGGWZdIgGryUpYZQEJwe1teUkfSFkslgAjbPv2iZBwH+weFWBBe3miS8vWb16MZtSN5EivnbCQskcx0beU5vVAMv8rM4Pfv5eGRmCUqL33olyNJSk5cWNEHXSzHcHz8Vn7wK+0wgY1lA3jtx8xbJDnBCdbxFYWSQ5l5iwefgaMRN2KX8WsclXMU8PdSlmk4lKT0siTMcV2CLpaIwObCqR3VmxkPljRAkvpYZj//Jv1bm1uadMfYrq2t6sPOEAseGofZ1LuSfEeCHeOIRPyu6CJJi5i4cSi4b5b0bbZ1VXfxFbJN+RBfJt6QXFM/tO+yzT7adsmwr1VZGQ7ZRx/whGSAgZjr5CDr2ur8hOyzj3abYqC+WRKXtlWGQ/YpH5KBLWKukzOxmPU6PyH77KO9phiob5bEpW2V4ZB9yodkYIuY6+RMLGa9zg/s+2zTt2mvqzpxqT0fAMMZ5UOiJt6QnGF2ohryQ/su2+yjQZcM+1qVleGFL7/43PbZym6XygqM6ARw12TQNDDbtkN9XcbYpS2TL/wQ3/UW4iTU1zWOruzJd7hy6/nYghN7OOja1VeCGta74iXorvmSg3VVvszjb3o5WTSscT9taHCjiVlJt28fyYNFCplRg6UWjuVG7Fj+crogSwMsS+KWyx7Yn9rTxkaOZx4ZQDIJSQUki/rYej3XC2BeRoDd/oSF+vqItQubJl/5e1c9o0P/3oU1afFQsUUZTDwYC3+9X8MMTCRuJTG5LC8sQYDPIBKySOLhhSQpri0oy2PCPJrDvPB7D0rWqUEr/KyUftDKHkqelLRj2lI9kD8agHELtE8rpnW1Jx20WyY613Tm7yhRK8lUzLgtOYCV8ofAsobdaukhbTCto2F8A+/gnxukjytu2eYq1SpNi7paAKciTOxYugJjiAeEncOMaRlbJIUxSxnjiaTwaDyJueKNpuH7BF2JJNRXSgzv3eTLoLszoCFOQn2dAejY0Oijw2OrQ/smHzA778eXeWwhGDuettSZfNm2Q31t/faln/lKY9bk67SfuzqbUZtGcZw0PnyYTo7N/iCWrd29Y9BNH+q7Mm/3dee1J0tmID25CHES6usJTjOz5iA3s+DVsk2HOAn1eR1MuUPjqY6rqpgyguwuM9CeAdys4cZS7sXkL41YSgAzeLAObPnALSwTUF4J8lHenu1sYR4ZwJGfv3c1GLkpnDJC3xVCfQ2i6U9FD7B+zNumQ5z4+jD78vgQnwGxhuRglSBEIg8PzUKiD8lI/FCif5mXdvx4gg3J0CYb9ViaNmgx5fCCHZct0y7qJl82H2N9VVy0iRm9qONaimsqNrSBB8poY8M3cC5DkLwp5hLOyf0cuBBLxIVZtlj66KiaabxXJdkxluWPYAdR4xnkS/xVMJJjmInCFMDafJlxhvpMuZnX9QDrB4VtOsRJqK8fdOlWNZ7quKqKdCMBDZMvm49QX8DkTLsUc0VUVfSG5zTwNSKnb7LEkc3XyHdNnynXpj7oRC0C63MMaBuDgM0eDPT7+lRhYG8aD4PqARtNuzgJ9fUApROTma80GjnGaVpZOjMwHAYwWwpndazVKkv9yY2m7MkJTe4L5easXMuVN57DQZ2RZAamy0Cf53radn2PQJTo9/VNl4U4bxoPg4pTSZKiaRcnob4kJ1MUnhe+NLEnpB9K1hZ1JCI5KxP7fCHxp7I9ccgx7sl88PMG3+ZxBwxoQ1ITyU7N0VaJWia0ITPLrY4vjNXh4YEm25GY1TVzjfHkuLpioG2TE7ZBHnVfn8verNsUuxlAx4Bo2sVJqK9jGJ2Zy3ylUckxTtOKl4Z917EFC3Yf21AOdeuTL9qO5Yvyg+aqR5A07eIr1NcHX4NP1PYRtG0TpHMwUvps2byfGcgMZAYyA8NmADfbSMpWk6CGDTajywycUgby965TOrCnKiwkYcvE5KkKywom9bNYJjObzHm1HM9iF0lZ8XssCXj8QNtkS+WriY+skxnIDNQzkD+L9RyZEpkvk435qJ+6RC0TrjgYU7aQfKgvxcfQZMkVcKXEGJIN9Q0t/lQ85Cs1xpB8qC8V39Dkm/I1tDgynsxAZiAzkBnwM9D0XB+6/oX6/EiG30OugDQlxpBsqG/4jIQRkq/UGEPyob4wmuH3Zr7SxijzFc8XuYJGymcoJBvqi0c2TEnylRpjSD7UN0wW4lFlvuK5gmTmK54vcgWNlM9QSDbUF4+sXrJ8VHe93FxImAMxF4AzyLlkIB9n9cOWOarnKEtkBjIDmYF5ZyCf6+d9BOcDfz7O6scpc1TPkSmR+TLZyPW+GMjHWT2zmaN6jkyJzJfJxumuDyJR29UBx+w2y5ShA4aucKT4bSLbFU7yxDIFS1cYUnw2le0a62nmC1x1wVcTjpqOb9bLDGQGMgOZgTQGujjPwyPP9SxTUHR1vUnx2VR2KHw1xT9tva74Iu6mxxf1h1x29TlowhF56QoD7fVZdnVskS+WKZgzXylsdXNfkeaxuXRXxxcRND2+qD/ksqvPQROOyEtXGGivz7KrY4t8sUzBnPlKYWv2566ZJ2p50LJMo29SuulBO2lpmC3kiWVblG346gpD2xhC+sTIMiRb1weuTjtfdRyk9DflK8VHls0MZAYyA5mBNAZ4PWSZpj0p3ea6OGlteC3kiWVbhG346gpD2xhC+sTIMiRb19f0ewR9s6zzc1r6m/LF+IfOF/GxJO6mZZvPYlOf09QjTyzb+m7DV1cY2sYQ0idGliHZur6mn0X6Zlnn57T0N+WL8Q+dL+JjSdxNyzafxaY+p6lHnli29d2Gr64wNIlh5olak7hZEtGEvFnrzIKvWfjsiudZYJ+Fzy74mlfcXcSebWQGMgOZgdPMQP7e1Xx0Z3FtnIXP5gyNa84C+yx8jkfdbG9WuE2/5rmhWRT9apn4TNz9ej0d1mfB1yx8djVas8A+C59d8DUr3KZf89zQRUxd2zDxmbi79nMa7c2Cr1n4dI1d1MPECJYHGfdhMNTmcuhqgw3aREmbLtku2+gTNrv0Sbu0yX3Tj6stJjbbJuywLUa/jUxTzCGfLpuhttRYKU+bKNkWwtVFH33CVlc+XTbZRh/cb+IXNqjPknZhL2+ZgcxAZiAzMAwGeI4GmtTztH2uT9VvykAbzCGftMs4uG9y42oL2WSfbRN22EaZvsqmmEN4XDZDbamxUp42UbIthKuLPvqEra58umyyjT6438QvbFCfJe3CXl8bfdF+Vz5pl/a4Dz+hNuKoK2GDNlHSZp1e2376hJ0ufdIubXLf9ONqi4nHtgk7bIvRbyPTFHPIp8tmqC01VsrTJkq2hXB10UefsNWVT5dNttEH95v4hQ3qs6Rd2Otroy/a78on7dIe9+En1EYcdSVs0CZK2qzTa9tPn7DTpU/apU3um35cbTHx2DZhh20x+m1kmmIO+XTZDLUx1tYzak0nIYB1fQQEua5s1vnsoz8Ge4xMH9jm1abJl1mfl3jMY7tPzF1xMy28fXKRbWcGMgOZgcxAmAHzXN/V9SPssZ/eGOwxMv2gm0+rJl9mfV6iMY/tPjF3xc208Pq4mJb/PvjqyqaPmz7bY7DHyPSJcd5sm3yZ9XmJY54/i7PgeJ75msfjk2Mcgz1GhvZyOZ7/JHdRiVp8CMwPgr1PY32QDNu2fVdbE9+MiSVstLVNbkybZt2OpQlun45ilzfTh7b5FBLbGQdLqLe1T1ssYdOsm7Ggr8tNscub6UPbOnKCOMxYYLatfdpjCZtm3YwFfV1uLuyuti59ZluZgcxAZiAzMMnAvJ7reb1iicjaXkdgiy8yZdtne9elYpc3czzaxmNiZBws0dfWPm2xhE2zbsaCvi43xS5vpg9t68gJ4jBjgdm29mmPJWyadTMW9HW5ubC72pr4ZAwsYYO228QEe6ZNe7+N7bo4id+Uc7WZ/bF1xsQSem1tkxvTplnvnStxYPpoG4/JJeNg2RVfsGPaNOtmLCaWLurKjbyZPrStC+NVTGYsMNvWPu2xhE2zbsaCvi43F3ZXWxOfjIElbNB2m5hgz7Rp77exXRcn8ZtyrjazP7bOmFhCr61tcmPaNOu9cyUOTB9t4zG5ZBwsu+ILdkybZt2MxcQSlag1Fcy66cBs76quoCvmGQDLrnz4YpiWn67iGLPjAO9oGlOJ3TH5Mm2a9VhblDNthtrY11kZAB3oauy+K5uz4Eux401ejINlY0KyYmYgM5AZyAwMigE9r+NNXjzHs+wKqOsaBtvT8tNVHGN2HOAdTWMqsTsmX6ZNsx5ri3KmzVAb+zorA6ADXY3dd2VzFnwpdrzJi3GwbEyIpeiKyxLpbLdvX8oN3uRFnlh2FYQvhmn56SqOMTsO8I6mMZXYHZMv06ZZj7VFOdNmqI19nZUB0IGuxu67sjkLvhQ73uTFOFg2JsRSdMVliXS227cv5QZv8iJPLLsKwhfDtPx0FceYHQd4R9OYSuyOyZdp06zH2qKcaTPUxj6UozVq6dhlhH2mYmodNly2XXYoh/K42hlrC9hK8QPfPnn6g4xr8+lBFn1tt5B92FZuXE48wD3N3vhdptFm4jIx+OzTjqnHNpbT5GsMZ7Uz1laBcrWhKxQH42HJuGgLJdso4ytDfmJtNLFt64xhr3bG2mwFY584KW905WpmIDOQGcgM9MxA6Dpiu+Z5GmX+3mWzU+4rN64ukmf1eZqTvkfApDmOJgaffcIw9djGktdn7jcpQ/Zhj1jHcFY7Y22Vc1cbuur8VOpaMC7aQsk2U85VD/mJteGyi7aQbVtnDHu1M9ZmKxj7xEl5o8tZtXFBz25zKYb8sM+lF9sWg4G2GKtir3bG2kSQ+9RhmeIHOj55n/0YP9PgC/icfjzAPc3e+BmnXZp8mRh89qlv6rGNpTMOdkaWIfswQaxjOKudsbbKn6sNXXV+KnUtGBdtoWSbKeeqh/zE2nDZRVvItq0zhr3aGWuzFYx94qS80eWs2rigZ7e5FEN+2OfSi22LwUBbjFWxVztjbSLIfeqwTPEDHZ+8z36Mn2nwBXxOPx7gnmZv/IzTLk2+TAw++9Q39djG0hkHOz1lqxm1sAnAMaAhWwfQZcvXBnv2Rvss7X57n3Is0e/yF6NHGdMW28yyrf2QLdpGyY1t3DdLYmVp9rnqlGMJmZB92qA8S7ajdLWZ/WYsZrtZpw2WZp9Zt225sLvaaIP2WbI9pQzZpx3aZ8l2lK42s9+O0ewz9WPs2LZc2F1tph/bf97PDGQGMgOZgfYM2Odn2yLP8Sztfu67zuG+NuqYJe2zNPtcdcqxhIzLn61LeZZmv6vN7G9rP2SLtlFyYxv3zZJYWZp9rjrlWEImZJ82KM+S7ShdbWa/GYvZbtZpg6XZZ9ZtWy7srjbaoH2WbE8pQ/Zph/ZZsh2lq83st2M0+0z9GDu2LRd2V5vpx/bv2ycelpSzMbC9i9KH3bRNPCzNPrPusuVrM/VYp32WbPeVlGMJOZc/W5/yLM1+V5vZ39Z+yBZto+TGNu6bJbGyNPtcdcqxhEzIPm1QniXbUbrazH4zFrPdrNMGS7PPrNu2XNhdbbRB+yzZnlKG7NMO7bNkO0pXm9lvx2j2mfoxdmxbLuyuNtOP7d+3TzwsKWdjYHsXpQ+7aZt4WJp9Zt1ly9dm6rFO+yzZ7ispxxJyLn+2PuVZmv2uNrO/rf2QLdpGyY1t3DdLYmVp9rnqlGMJmZB92qA8S7ajdLWZ/WYsZnvrRK1p7KzUfWQi/lCfi59UeZeNJm11B0zI5rQw0w9LYDLrNsZQny2bum/y1acfE1eqH8qzNG2xHuqjTC4zA5mBzEBmIDMwJAZC165QnyuGVHmXjSZt5veIVP1pYaYflsBp1m3coT5bNnXf5KtPPyauVD+UZ2naYj3UR5lZlEPFNQsu+vQZ4jnU58KUKu+y0aTN/Cym6k8LM/2wBE6zbuMO9dmyqfsmX336MXGl+qE8S9MW66E+ysyiHCquWXDRp88Qz6E+F6ZUeZeNJm3mZzFVf1qY6YclcLI+WvqADa4g0OcK1NQx67aNUJ8t69unf5ct9kHX1e+zmSJr2wjpos/EBF1b3t437Yf6TLlQnf5dttgHfVe/z26KrGkjpMc+E5MLF+VMu6yH+igTKk3fLlt1/T7bLls+WbM9pMc+ExN02U479j7bXbJmX0zd9G37Mfu68BWDJ8tkBjIDmYGzyIB9/jU5CPWZcqE6z+cuW+yDvqvfZzdF1rYR0kWfiQm6try9b9oP9ZlyoTr9u2yxD/qufp/dFFnTRkiPfSYmFy7KmXZZD/VRJlSavl226vp9tl22fLJme0iPfSYm6LKddux9trtkzb6Yuunb9mP2pfqybcVgqfMBmzYmWyfkN9QXi4/+XbbYZ2Oqs+2yVafD/pAu+kxM0LHl7X3adcmafbF1+nf5YV+qL5etGDwhPfaZmFy4KOfyF+pzydttpm+Xrbp+2x73XbbYFypDeuwzMcEW22nX3me7S9bsi6mbvm0/Zl+qL9tWDJY6H7BpY7J1Qn5DfbH46N9li302pjrbLlt1OuwP6aLPxAQdW97ep12XrNkXW6d/lx/2pfpy2YrBE9Jjn4nJhYty9DdK1LLBV0LRNG4b8ul13Q4Ms/KdEovNV4puW1lznEJ8DYnHWfJl8m3zZXI5JL5MzKcB1/HxcXF0dFQsLAw1GpPxXM8MZAYyA7Nh4Pj4SL6MmVem/nHY18X+PTbzMMvvEeaIhPga0hVulnyZI2zzZXI5JL5MzBmXycZk3T62ZsWXfWxNIh1Gi83XNFGZn7cQX7MaQxcXs+TLxGPzZXI5JL5MzBmXycZk3T62ZsWXfWxNIh1Gi83XNFGZn7cQX7MaQxcXqXwt6/d90YoJwjROcmL0XEDbtNmYiatvLBpzdSTE+CIuxBo6gNpwEaNrj5WJK0a/qYztN8XOrPni+JIr7qfEkCqbwhdxwUeKXiqmOnnbN3El8SUf6MOjw+J4/zg+UUvHAJjkrC6invoFLyEr3GlipmOGNk3f9JlaVnyNoI4qqYYayGe+0kjLfDXnq8FxjR+0jqacqEWA+XtXs2HmEKO0PyppFuOk6YN+47RKKeg20Uvx4ZM1fZOraWBJ4Yu4EEOKni/mpu22b+Lqmy/1izdxFOOLuBCnjblp7E308rkrjTV7rMxxTLOUJm37TdGuDssUlc5kTd/kKubz0RZACl/EBZ8pem0x2vq2b+Lqmy/1izdxFOOLuIDfxmzH1Od+PnelsWuPlTmOaZbSpG2/KdrVYelVKWfU1kkZ6tMK2nA5XiUbFuaYD964oQZ79J2gavJlQU6w0kKUmC2CrN0WDtyq6rbyjSdIx/ijDCGjZJvbSw+tDszTwKBuHb5DEQJXpaJiqE8D6xgmB+YmGI4ODwu8Yjd1WwWc6q+CPDWu6E9ja4g5lhef3CivI2Sl8GViT9Hz4YhpH/lkJRFzjI86mbZ8TYsrxEGaRpUp86X+KxCpE+KJfVp80Z+Of0PMdcdOXb+6xVuDcSL+afE1ioWOK9xsnwoO+qbTiBK4qGZBjtDuQITOLYKs3Q4cjZtQt5Xv/L1rnBvXXlO+OLywiXrf4zqB3THGU8WQEDRwmXxNxNJ3A51bmKfCF30nxGjyZUFOsNJClJgtgqzdFg7cquq28p3PXW6OzNamfHF4YQv1vsfVxKx1xxhPFUNC0MBl8jURS98NdG5hngpf9J0Qo8mXBTnBSgtRYrYIsnZbOHCrqtvKdx/nrvJhYolR+MTJkTuUjlrpnGVHZqPMNPTpU+uLrzF/YztRUXYipG7xJq+mEEw9cDU1vlpgbkqexoq3RN+qVzk1633yNRZjA8xj+gPZ6evYGkh4jT+E5jFlxjIVvnzOTSB91Ts8rk/7Z1GHqeKri+GYNl9dYJ6ljal+FmfxmWzo06fWF19j/sZ2pnd0qFu8yaspBFOvz8+i6UfBtsDclGHFgLdE36pXOTXrffI1FmMDzGP6bXfMoCNs+cT7+iyOQaJzlmOdPe809OlT64uvMX9jOz3zY5hXt3iTV1MIpl6fn0XTTz53GYMYUwV58hrjMEavK5lExz7xvj6LY2HSOcuxzp53Gvr0qfXF15i/sZ2e+THMq1u8yaspBFPPPnctp86AITbTKNp0EOQtNptMO7HlmL+xnVgL7eXUbUPfthpnbJ16vhrQPsEVbFSf8qnw1QBzFyp23LE2bT1+FlXf7ow1GpDrwWTAm7tLMTQEYquRr6kcW7Zzd3idt3bK1zQ/i7Pkq8Eo2HB5bMHUVI6vBpi7ULHjjrVp65l8Nf7GE3Bu+wuI9talGBoCsdXI11SOLdt5bwyNG+6Ur3zuGifX2LOHl8cWRKZyfBlYplm14471beuZfOVz1ySLPr6mcmzZzifh9dKibhv6ttXyPaN/iCa4gug0z/V+aL322HHHOrP18rkrzJyPr3zucvM2wdc0P4u2czfEzluburX1zM8ij69yRm3nkLPBWgbs0alVOLsCmaqGY5+Ja0hcVgsykI+rID1mZ6bKZCOhnolLICuLRjOQj6tMVTQDDQXzMdaQuKwWZCAfV0F6zM5MlclGQj0Tl0BWFo1mIB9Xragq16iNNuEXxDgw++uX6qdnlIEWEPNyPAyBr6azqfsZxbDVWWGd12NrVh+EeeUrn7vCnz+zN5+7TDbq6/ncVc8RJfT6PaOLeD53cRTiysxXHE+UIl+zOh8QR0o5K6zkCt9jZnQ6SKFJZfO5K40y8JW/d8VzNgS+ZnU+iGfpRHJWWPO562QMYmrzylc+d8WMbimTz13xXEHSPnd1OqNWv6ik4elGWj/p3ZiappVZ8DU6KUqgc0rbNIfoxFcm64SLmNqc8TWLz6LSOGc8cehnwZdSVfE1p7SRvumWmaw0vueMr1l8FpXQOeOJB8Es+FKqKr7mlDbSN90yk5XG95zxNYvPohI6ZzzxIJgFX0pVxdec0kb6pltmstL4njO+ZvFZVELnjCceBLPgS6mq+JpT2pS+xolaBD2YwHEEyCv2QEjFnirPA9Msh8KVcjRwvrrg2+S+Td3kK9ZO6linyts4zhJfXcTahQ17DBrvD/yziLjaHp+NubEUzc+i1q1+127qWKfK2z7b6tv22uybfMXaSR3rVHkbx1niq4tYu7Bhj0Hj/XzuiqbO/Czmc1c9bSZf9dKlROq5KFXexjGkz2LffHURaxc27DFovA/C5KW8RRhJxZ4q74IAG0PYzGNrqHx1wXdXXJt8xdpMHetUeRvHWeKri1i7sGGPQeN9HGDyGupnEXG1PT4bc2Mpmp/FofIVc2w1StQOZRA4JhiA2EGgDsqYOGJkTJuuOm2wdMlMsy2Fr1TMqfKhuLu0FfJT19eEr1jslGNZhyXU34WNkP3Yvj75IoamsTbVo9+uyxSuTN8xccTImDZdddpg6ZKZZlsKX6mYU+VDcXdpK+Snrq8JX7HYKceyDkuovwsbIfuxfX3yRQxNY22qR79dlylcmb5j4oiRMW266rTB0iUzzbYUvlIxp8qH4u7SVshPXV8TvmKxU45lHZZQfxc2QvZj+/rkixiaxtpUj367LlO4Mn3HxBEjY9p01WmDpUtmmm0pfKViTpUPxd2lrZCfur4mfMVipxzLOiyh/i5shOzH9vXJFzE0jbWpHv12XaZwZfqOiSNGxrTpqtMGS5fMNNtS+ErFnCofijtkq1GiFoGHNpdDV1vIRtO+FD91cQBDjExTrNRzYXa1Ub7Lss5Pavyp8ojFh8FnyyffJS9NbfkwN7Xn0vPF7/Ptk3fZnlWbD7sPT6o87dTpubhytdFel2WKn7o4gCtGpi1+F2ZXW1s/Lv06P6nxp8oDkw+Dz5ZP3hXftNt8mLvE4Yvf59sn3yWmtrZ82H12U+Vpp07PxZWrjfa6LFP81MUBXDEybfG7MLva2vpx6df5SY0/VR6YfBh8tnzyrvim3ebD3CUOX/w+3z75LjG1teXD7rObKk87dXourlxttNdlmeKnLg7gipFpi9+F2dXW1o9Lv85Pavyp8sDkw+Cz5ZN3xTftNh/mLnH44vf59sl3iamtLR92n91Uedqp03Nx5WqjvS7LFD91cQBXjExb/C7Mrra2flz6dX5S40+VByYfBp8tyEc9TIyGTUNm3SREZeUNJRfEpb62mcId12P9+LD74KTIEwNsUY+ly77Ky5u5MDVtoAzpuuyltMX6ScWQIu/CENJXeXlz8RXSS+HFJ0us6A/5CvXZtlNkoUsMKKnL0rat8pXCLPkK4Qv1ueJJlSdfpp5ZN32orLyhzOeukhkfV+gd8SVClNO2qo9tpaVu32P9pGJIkXdhCOmH+ArpdcEcscJWyFeoz8aRIgtdYkBJXZa2bZWvFPK564QdH19Klbwpt5VQRV/ZdmKi81qsHx92H6AUeWKALeqxdNlXeXlzHVvoC+m67KW0EWudn1QMKfIuDCF9lZc3F18hvRRefLLEiv6Qr1CfbTtFFrrEgJK6LG3bKl8pzJKvEL5QnyueVHnyZeqZddOHysobyvy9q2TGxxV6R3yJEOW0repjW2mp2/dYP6kYUuRdGEL6Ib5Cel0wR6ywFfIV6rNxpMhClxhQUpelbVvlK4V87jphx8eXUiVvym0lVNFXtp2Y6LwW68eH3QcoRZ4YYIt6LF32VV7eXMcW+kK6LnspbcRa5ycVQ4q8C0NIX+XlLSpRm0JGls0MZAYyA6kMLCwsFguLC52eqHlSJJbQCREyPCmqvEfY00wXjUobJ4z04acOnI0jhGGMqwDgkI06PL5+G2fAvc9E6/ZUDDF89cEVArWx9uUnRKqNAbIhHGN8eQQ9zSEYUX021r78hMCEMBwfHxdH8irwyltmIDOQGcgMZAYyA5mBzEBmIDNw6hiIStSGblT0VkHe+EsoZM1sORgL6dcxyluRGBsxMnX+2vbXYbDjgXxXfNE2YqjDQRnoxMhCvo9N4xfDLgwaTwWQ/Sovb9wHJrOegpF8xerHyqVgSJUNYXDyJQoVhSNXIRsjIUelT76WlhaLpaVlOY80RecALE0pmClLS0BitnWLjF7Kclp+xr2O76VicMm72sa9dLM3LT8htKkYXPJs6/PYQgz0g3rfvuDDtaVgMGVhi5jZzn2Xny7apuUnhNWH4fDosCgODguUPF2Cj66+RwCTz7cLb99j4fJpt9VhsOPpki/aBqY6HJSBTows5PvYNH4x7MKg8VQA2a/y8sZ9YDLrKRjJV6x+rFwKhlTZEAYnX6JQUThyFbIxEnJUTitf+dxVDnbdcWGPP+S7OtfTNpDU4aCMfVyjfZqbxi8OXXg1ngog+1Ve3rgPrGY9BTv5itWPlUvBkCobwuDkSxQqCkeuQjZGQo7KaeUrn7vKwa47Luzxh3w+d7nPP87PYsVXVKLW8fk7aapGAgUHjeWJULMaB7mZ9vC0RgMh0MyDtSu+mkQ8S9/EW4vBPLhEqVaehiNLy3yk1gDFPB+YwfMlV73FxaVieWWl80TtAEcpQ8oMZAYyA80ZOFgojg6PVN+8dnV1nvdcRprjnbGmxlMFlb93nQxG7fFiHlyiVit/YjqqZpmP0hmkUHVs2dgyXzYj1T4/i7JLjlh6NKKbPUMRrT80QY2HfAlJ5InlLPDO0jfjrcUAzgwho0oTrUrLfCtbM1Wuji0bQ+bLZqTa52dRdskRS49GdLNnKKL1hyao8ZAvIYk8sZwF3ln6Zry1GMCZIYRq8GFiUQcOrMjLsEs8rcs+bPpAIVY7Xrax9Omy3dZnO0uNB2/y6iM22mRJv32UrljJk6vPhaFOTuPAW08B0SxLF8au2uxYTa7sPpdPyrv6Rm0VV33H07f9UTy5khnIDGQGMgNuBuRE3Me5uA+b7gDK71z29Y/XOpY+Xbbb+mxnqfHgTV59xEabLOm3j9IVK3ly9bkw1MlpHHjrKSCaZenC2FWbHavJld3n8kl5V9+oreKq73j6tu+KlW0sRzF7KpCr3Xrkq2+OzNhcnLCNpSnvqtfxpfFMga9p8OaKlTy5+try5dJv20aeWLa1F9K3OTG5svtcdijv6hu19XhsjXxIpW++XLGyjaWJx1WHXO3WI199c2TG5uKEbSxNeVe9ji+NZwp8TYM3V6zkydXXli9b35uopXOWtiL3q3Hgbudl3/YB2BWjqy0UHOVZ+mT7jmeaB60Zq1n3cWpyQnmWZp9ZP618mTGiHuIh1GfamQZX0zi+zJhyPTOQGcgMZAYsBuRE3Oe5uO9rCaJxXddcbVbkY7uUZznWaez0HU+fY8EwGCNLtJt11z51WVKeJdvt8rTyZccZ4iHUZ9qZBlfTOL4YE+NmyXaUrjb2s48l2+3yNPDlitHVZsdu7lOepdln1qfBl+mvjzpjZAkfZt21b+OgPEu7n/unlS/GxzLEQ6iP+iinwRV8TGtj3CxNv6429rOPJdvt8jTw5YrR1WbHbu5TnqXZZ9anwZfpr486Y2QJH2bdtW/joDxLu5/7Pr68iVrzw1VnnE5yWTJwmvnqI7Y+bA7lWOwiNvuz2IXNofCTcWQGMgOZgcxAZqAtA6f5uthHbH3YbDuGXel3EdtZ+t5l8sW4WZpj4mpjv9ln2mN/Lv0MnGa++oitD5v+0ZluTxex2Z/FLmxOl4V4b2ZsjJulacXVxn6zz7TH/lz6GTjNfPURWxObwTVqcfCqUXnTUhrMA9ocOtO5T8aUD9Wb2krVC8mnxkB5tSlvKLngtCvWkG+XfKitqa1UvZA84w/hNPsorzblzVw7zpRjnb6px/YmZVNbqXqUB0Ybt71fFwfkR/akEuJrJOfwW+fH7m9ji7qpsdoY8n5mIDOQGcgMTDLAcyx62p5nm9pK1QvJp8ZAebUpbyjz967J44QtE3xJA9soY5Ycq5CMKR+qN7WVqkd5YLFx2/shvNQf2ZPKafveNYqtIsLmx96P5gtcVQT6bJi+fTJ1/tjf1FaqXkg+NQbKq015Q5nPXRzRyXKCL2lg26R0dfyBU1dnYhvHPdVWqh7lAc/2Ze/XhQD5kT2p5HNXmLERX+AKotLg43zEaykWNlzT29RWql5I3henDzrl1aa8ocznLh9bJ8fRiK/AsQUrKgdOK5PeGbVVfy5aMECyW5g4/aokSUpWhx50DE5Thh+2tnGpHRpm2dboEPQlltMUzhAozRgyA5mBzMBZZCBfSyJGnSTN0bWXkEPRmTL5e1eIqcm+rviatJxbYhkwj99YnTMnR5KkZHXoHMTgNGW6+iye2ntGa8C74ssym3cTGDCP3wS1syVKkqRkNYaAiUQtlL0GYBwvh2V+UFg6RMaaYMNlB0K0wXJMMbBDeZY+Udt3nbzPDtptW2Oy0tlVjCE/xM9yDENgh/IsfaK27zp5nx2027bGZKUT/a4NPlP8hvyk2iIe+mfJdrNUv0YQIVlTz1cPxdHVZxG+fX6In6UPp6sdOnV6BlUuE7ktM5AZyAxkBjwM8PzK0iM2avad5yFAGyxHSjUVyrP0idu+6+R9dtBu2xqTlU70uzb6ZOmSMdtCfmiDpakXqlOepU/W9l0n77ODdtvWmKx0ot+1wWeK35CfVFvEQ/8s2W6W6tcIIiRr6vnqoThOy/cuxMGtDV8hrnBgdcVXyA/xs2RcdSXlWfrkbd918j47aLdtjcmCr7GGkx36ZHnS466F/NAGS7eFyVbKs5yUKFts33XyPjtot22NyUon+l0bfKb4DflJtUU89M+S7Wapfo0gQrKmnq8eiqOrzyJ8+/wQP0sfTlc7dOr0uuTLF4Nik86u+Ar5YbwsXby42ijP0iWDNtt3nbzPjsvWmCz4Gms42aFPlic97pqN2ZSiDZZmX6hOeZY+Wdt3nbzPDtptW2Oy0ol+1wafpt+JRC2VfAa039NpGqadutJjagxknQ2zvw6D+sNb5bhO3rQdqvvigB9fXxPfXdpCPHUY1B/eKsd18o04MpXET+XKbE2qt9UPOYuOX0BEy3ocRsXhEUrx7TExQpVia6QUWxHndf5jTWW5zEBmIDNw1hhocn72nXOb2ALfdXrqD2+V4zr52DH0xQE/vr4mvru0NW2+fNjHOA7wNSYX2InyE9APdUWPmYCIlvU4jIrDI5Ti22NihCrF1kgptmI478qPYXIShaeziW+PqcbjXodB/eGtclwnPxm8u8UXRz53nfDl5ehERMclSs7Usept9S1zY7vRx4uAiJYd83CyExWHRyjFt8fECEiKrZFSbMVw3pUfw+QkCk9nE98eU43HvQ6D+sNb5bhOfjJ4d4svjnzuOuHLy9GJSPS5y5uo5YBqyR06sPer9ihgtFGVHlOWVHe7o3ik0qVv2hrZJ+SAn7PGFzkiNVrajR6+wFUsX7bJMX/T2AGADkDQBEuFPrbj9xPLFWzaJtXPtN7E+Uz9TyvO7CczkBnIDPTAQMq5nu6nfc5Vf3iTV5e+aUtL7iBIqZu7jBvlWePLyYPd6OELXMXyZZs0OZ9KHQA6AEETLBX72I7fTyxXsGmbVD/TeoPzjgHQnJbcYTz2ftWewleNKXZ3Xo7ikYonjEY+aWtkn1YCfs4aX+SI1GhpN3r4AlexfNkmx/xNYwcAOgBBEywV+tiO308sV7Bpm1Q/03qD844B0JyW3GE89n7VnsJXjSl2d16O4pGKJ4xGPmlrZJ9WAn7OGl/kiNRoaTd6+AJXJl8TDxOz7cC4trk61HP5RqMoa0RVIUbGMN9ptUvfLlva5uowosh8lWTEcGXQFl2toT/aTqpg135tezF8pR5biNH2kxp3U/lZ+W2KN+tlBjIDmYGhMJB6rp/l+bZL3y5b2ubqMAYr81WSEcOVQVt0tYb+aDupgl37te3F8JV6bCFG209q3E3lu/TrstUHXy4/TeNP1evSt8tW5ss/IjZfMVz5rfl7bD9+yW57uvZr24vhK5+7Tsa0D77sMTnx1n+tS98uW5kv/xjafMVw5bLmnVHrEs5tmYHMwPAZsE8ORMyLMfcHUwpgH+bBYMxAMgOZgcxAZiAzkBnIDDgY8H2HGez3LkcMuSkzkBk4ewzkc9fZG/Mc8fwwMDGjtil01wddv6DgTTpd/U19nQY9Fx9c3H/B1Xkagm4Rg01JPrbCZPr4OpYOuy9sKfdmBjIDmYHMwBAZcJ3L87XRP1JOvpQwuS66Ov2mzkSPTUk+tsLD7uMrf++a5M3mChL5+JrkiS1OvvK5i/RMlDZf+diaoGiswcdXPneN0aQ7NldozMfXJE9scfKVz12kZ6K0+ep3Rm01EBMocsMEAyZVZn1CMDeMM5DJGucj72UGMgOZgczA2WUgXxOjx96kyqxHGzirgpmsszry/cadj6tofk2qzHq0gbMqmMk6qyPfb9z5uIrm16TKrEcbOGOCnSZqJwhHWlhednZ4VhwD3wTGGYGxsShHA+RrRvRMuA3xNSE8gwYb3wwgjLm08fD4yp/FMZryTmYgM5AZmGsGcK4f2wb4PWIC4xjg6e34rotD+546PUbCnkJ8hTWn02vjm45XvxcbT/7e5ecKPeBrbMvnrjE6zB3fsZXPXSZLJ/UQXydSs6vZ+GaHpPRs48nnrvCIgK+xLZ+7xugwd3zHVj53mSyd1G2+OkvU8qBlCZfVcXvifYY1E9cMYUy4NnENkS8T3wT4KTWYGMz6kPgiFSY+tk279GEAX0PYTHxmfQjYMobMQGYgMzAvDPD8yRK4h3RdNHENiVMT1xD5MvHNijcTg1kfEl/kxsTHtmmXPgz5e5d7JMgXS0gN6dgycbkjmE2riWuIfJn4ZsPQ+A8AJp4h8UVuTHxsm3bpw5DPXe6RIF8sITWkY8vE5Y5gNq0mriHyZeKbDUPuc1ena9QOIchUcoF5liejWfpO5Qrys+ALHPHYmie+ZoXZ5KvJGGedzEBbBrDeI14rK8fF6upxsbzMT0NR7O3htVAcHi4UWJf7GItgebbjauFulgvVQpIsPWpis/TH0pRnnX0sfbZC7bTF0pSlXZZmX2zdttvGlssn7bN0yeS24TIwr+d6fDr9n/r++Z6l7ybRzYIv89iaJ77KM//0jy+TryZjPCudWRxbiDXz1WzE5+mziAhncXyZx9Y88ZXPXWmfiVkcW0BoHl9piGcrPSu+GPU8fRaBeRZ8mccW+eosUYugaBT1edj0pChvs1gse964wnjyYWeZr/qjm8eW8iaDPe3xnra/ekayxFliAPnUxcXjYm3tqLh06bg4d04/EZpA3dxcKDY2FjRZe3BQJmtdiUIkJc0X+IMcZVnavJo6TGxSjzpsd8na9ux92rBLU4520XZ0dKRd9GnKheouzLTBMqQf6jOxm/WQTu4bJgPzdq7ntTF/j4g7nvL3rjieIMVjS+vywZj2Z2Pa/uKZcUuSL5TVb6BuwZ5a55avfGxFHRH53BVFkwrxs4idfG2s54185XNXPVd6TFVv+diK5EsPsGF8FjtN1MaFPyCpaiBmkjYfEA0ZSmZgmgzgyzk/evP2RX2aPM2XLyRlj4vLl48lMVtIvXytry8U6+uLkqiVMa8GfXPzSBK1x8Xu7nFxcHBcbG8XxatXC/rC7FokDpeWjjTJi0Tv+npRXLyIhGc5G3d7G4nexWJzc2mCoqWl4+L8+UN5Hcmr0Bf87uwU6mdra7HY2lqSmb6l/fPnj9U+ZOO3Y8UC3Ds7x2pve3tRYilXElpYQGL6SGYSHwnuY8W+uhpvHZLAjGTs4WEhsZavCxcK5TbVlttzORhImr98uVC8e0fs+RPp5iu3dsZAdR7I37s6YzQb6pkB/mi2srIi/w5ZHv1YiB/hDuQkfXhwUBzJ+fq4+lHOB2dNLoTrckG7IBccfgy2NjflHL8hP1zKX0163PL3rg7I5aChzJfKDgjNJjID9Qzkc1c9R7US+dxVS9FQBc5MojZfU9MOwcxX5iuNgTTpfHyl8TVsaXwDQMLzqPjyy0Jeq8WVK8vF1avLkihdkoTlgtzcliOOBOT+/pHclB7L60iStUeSoN0v/vVfd6REMnZRZuIuatL3+vXD4sMPj4vPPluT13mVff16v3j8eL/44QckeyeTi0jA3rp1VHz0USGv1eLjj9c0Gfz06W7x5Ml+8fDhUfHgwUJx4cJhcePGkfQviu1zxSefSCY5YdvZOSpKm3vFo0eH8kJcZYxIFl+5clhcv35UfPrpsmL/4IOVBOuFJGiRpD2WGA+KH3/ckddece/eSvH11xeKVFsux0dHmK1cFD//vFP8n/+zW7x+fSzJ8aVRAsKlk9syA6kM5PN8GmOZr+HxpUlauSYty/nxovxiuC6/RC7JPrb9/f1ic2ur2JbXgSRrD5GsxYnVs12SJO1nn39e3LlzR3+Ng+Sjhw+Ln376qfdELSDl48szMI7mzJWDlEBT5itAjqMr8+UgJdCU+QqQY3VlrixCanaHzteZSdQ6xwmjg29KQx8lJ/jcmBnIDGQGZs8A1p9FghSJyS+/XCv+9KdLkgRdK27eXJP2xdGNKyYb4Sa2nJ1UaAIVydonT7Yl6bknydp9namKfti7evW4uHt3qfjjHy+KzWsyg/ag+PXXbUmybsos0O2RLTIA21gT94MPCkmOrhTffLMur0uaEP773zdklutm8f79riRryxmv164da/LzH/7hUvGHP1ymGcWH+3Dg4MbEJm/CgeVvf4PNDZmpu1s8e1beoEMHukha37q1UPzud+cF+1VJCF8Y8YD7+PLlv6HHTGNw8+rVruA4Lt682S0+/3yt+F//64rYmpz+S04JGfvASl+Ig9hRRzxIBK+vv5Wk924l68cDnbxlBjphIH/v6oTGbKRfBjB7dlX+vrAs5YrMol1dXSuuXbsqr2v6oxa87+7uyb8R3srrvSRt9zRxuyszY3d3d4sDSeLa2/r6peL+p/eL333zjXSV52fIPH32TM7xb2zxM7Wv1zC5eCIJjlnLy8srcp2S2cqYsVy9uIzQzIjJ566ZUZ8dZwYyAy0YyOeuFuTNVvVMJ2r1uMVb3uIYqLjKlNXTZR5bma96vrLEfDKA5N+1a5jBelR88cWKvC5I/bzMPFqWJOaS3LgeaYJ1e/tQ69hH3/r6siZxL1xY0jpm3R4fH8mrTOwi4SgTmHQm7uoqlk5Y0sTu2tqiztBdWvJ/qqC3srIgcpiZuySJ07KONurJ5Kdq2YJDSbQeSl3WGJBf7OAXengtLy/qPkYGMpj9WyZssVzDocb17t2+6KLdXIbhWH0SBzAAN3Txgh0kYZFE9W27u4eypMJh8fbtvs6q3d4+GuEEVtzUmhsS4vCBmcuIF92cuXx4eKRJWfNfuWXfkfg4UDksOWEmck3buZ4Z6JIBHLlYJy1vkQxUXGXK6vkyj62mfJU/ei0Ud+RvGUiq3rx5U65R6/q6IOvPnJcXzrHYDg5w7dgudrZ3dEYskrQPHvxS/PW77+SfH48nAJ+/cL64fed28dVXX+r5H+fcZ0+fFuewVtAMNpOvGbgfc4mE+HlZEgKzjjHj+La83r9/Lz/KvpR/fLwu3r19q/tjSlPeGRJfUw69mbvqQ1gVzWycES3z2Mp81Q+6yVe9dJbIfCUeA9WHcAifxTOdqMWwDWEQEg+fmYlnrtKoz3yl8ZWl54sB3GQyUfv11yvFt99eGCVqMasUSVEkHDc29uVGa08TjUg+3rp1bpRExdIIly5hthJngJbZSyQaYQOJxzLhWq4Bi6QnkpLoY2KRs0fJXqlXJnTPnStly8RrOdsVckjUIvkJPNvbB5qoZfITuJeWyuQwbSK5iuQmXvDLRO3799BFIvQkUevCjiQqZrDu74OzMlGLfd+GZOz79/uaqIUP4EQbX8RKfcS8uIhlJmRGkuBHf5mYPdAEN3Bjli432tncPKza89mK3OSyfwby0RbPceYqnitItuOrPHcuyAn1I0kU/s8//UmSql/JP0RuyD81MJN2WV4n53pcCzDLEzM+MYsWr3/5l3+Rf0K8ciZqsTbtndt35Dr5pQYF/e+//77A2rWz2trx1R1qzFpGQvzWrVvF7//wB/knzR/lnzZPix9/+LH4+ZefZYbywcwTtYh2KHx1x3x/ljJXadxmvjJfaQykSefjK56vIXE1+EQtbi2HRFj8MM9GMpWvVPk+opolhln67oPLvm1mvvpmeH7s8yYVD/rCerCffHJeZtfKX0Ulufrs2Y7cZO0UL17syYwY/D10X2eSIuH566+7Iret69hevryiidIXLw4kgTl+pkfCEwnHk5J1tPt4wtIKZf+J7uT+3l75QLKnT4+Kv/xlSxKhnOF6LHFckLVg12UW7zn1D09YnuG7797LjeKBtiHR+fAh1r3FrFckkcsbfBcq4EHSFMlWJF8fPdrWF7jANp50xScMD00rk8hv3x6I7L4+7Ovhw/3i//2/97IvT0aTDXoYA2y3b6/JMg4XZE3fczr7eG1tQZPjWCrizZs9SZaXM4fpC/bxQgxv3yKBjdnDXlLVR347Owzk83zaWKfylSqfhiZOepYYZuk7xM7q6kpxQ2bQYhbtN998KwnVL+R68Ik8JPOyrk+LB37hpevRSnIW58w1mQ177tyazgbF+RjLI6zJMgmuDefZFVlOATNHIYvXqswkXVyQX9oC21D5CkBO7sJyB5ixfPXqVU3W3rt3T75L4PvBdvF+433xGovYR2xngasIGqJFUvlKlY8GkiA4Swyz9J1A0WBEM1/xQ5G5iucKkql8pcqnoYmTboIhKlELw9imfRunfuVNA4twTpyzwKoEydssMahveUO+I4KuEVboxcgzxi5L8jULDOpb3lL5Qvyz5msWGKqcUDJfs+Kqy+M025pkADeZmE104cKCJgrv3DkvN7TlQ7OQjPy///eNPsDr7Vssf4AHZJWvc+eO5OZ2TxK1CzJTCQ+wOha5MlGLG98+EobIQZ7kIRfkZntJkp/lQ7s2N/fkoVpYH7eM5x//8UDW213VNXYxUxXbgwdbxT/905vi+fNDTWoeHS1I0vVIE6g7O1iWIXyjfXBwpElaJLD/8pf3knDdkomG6w8AAEAASURBVOTpkcZ6gqv0hXdwhdm3u7vH4mNBXiuCsRAb23KTXyZqIYfPJMbhm2/OCa4FTdICM5Z5eP58V5LL7ySxuyvJ8kOxUSaxoVeOxbHYKyShWz7ArQ/e4Stv88XA6LoosF3Hph2NyleNszrXzxLDiC+cY2xyHPvEijJG3mGiddMsMTTlC0H3zRfWpEVi9g8yo/Pbb78t7t+/Lz9+fSjnU0mmyol1Sx4ahr/jI3mI2bPLy0uaWFxZuSL/ZljV14ULF6XdfWuFcyzWYOWsXJy7F+XfG6HPGc7x2FK/p/bNVYnK/c7jKwUDZitjxvEVSdTeuH5DvlPc1msy1gB+8eKFXNsm12a3vY+OLekIcUo94sR+Clbqd1HOEsOILwk+Jn5iRRkj3wU/to1ZYmjKF2KYNV+zwHBWzl32Mdpkf3Rs4ViJOFj4OZjFuDK+WWIY8SVcRdA11/ku97cJjkIuMwOZgcxAZiAzYDGAG0y+sGwBErRXr8pDV2RZAvylH0nCv/51R/7+iZmhS3JTi7VnMQMUf9HHGq6FLHlwKAnRA9Ep5K+icFAmDC1Xne6WiWAsfbAgywiU695ubR0Xv/2Gh2vhL6xHcmO+p+vPYhYsvzC9fr0vT+bel3jKJR1g5+AA+pgtuySvMsEMTlwbOMESCZiR++TJnjzAC4lT6JQPV7N1YAY28drfh68F5XVj41hu8k+k4Q8J5vX1PZn9hfVysZRBeVnf2DiQWc27kmTek7KQmbUnCQHYx3ggwby31z/vJ4hzLTOQGcgMDJOBlZVVnc3JJC1m1iJJu7GxIefrd7pe6ktJGm5tbxW7O7vFkiRqP5CnV+IBY3hQ2KVLl4oNSeTuOx4kVkZcXieQ9MWG8/cCZtPyQlMKncl3JKyR7D4vCdmL6xeFy8vyvWJTy4sy03ZlJd+unskDIwedGcgMZAbOMAOjKx9vL12ZaVcbOQvpUaZpCb+xvyLDh8pXJfa72uwYdR9v4tDmxt63Mdi27P42+xq/A5PPpspLZx1mn76v3Y6xjq+KSqc525ZTqGFjE74auvKqMT4IcBya8kVbtON12rAD9xLwEWs/Vq4hnKw2YwaYqMVxgQQtXqhjLVT81f7FiyOdrbm/j+Qtb0yZnESCEUsGHMnso0ISo3joV5nMncbMznKZhTL5iaQlMHPG795eWTfpRf+OTGTd3sZsqHJGFBK5SKQyAW3Ku+rgi+vU7uwsqK3ywV+Tn5QykYobefoAxvLGvrrH1z6OgUzu0hiQtIUONvhCLJiVu7OzqC98evVzXMkwGQz5afAOP3nrhgEM4eSR0942bObvXfE8zitfoeOnOj0M5viKH404ScYHaX6G0IbE69Wr12RW7T35t8dNmcV5ThO03/3lL8X3f/9e15599fJVsbu3K+fbA71m4e/6F2X9H8wCvS5r2f7w97/LcjJv44CEpKovXPgxLzRWtgnGY7e32Sdfpm1XG32Ycmxj6dODDpLW+B6A9dYx67i81sq+1GOuT7CRz11kur6cV75Cnwff8VXPRr1EE77qraZJMD5oAQ82batIYVvZU8pUXWwalbRl64wEWlaqU9gIZ525PnC4YnS1EVsIQ0iP+k1L+M3nrnj25pUvHEO+Y8x3fGmiVjsriZQDxaQ05NyUS637AvLZSZX32WE7ieP+WJkYdNDWmOHmO6nxp8rXIXPGyEYPXz4MVKvz2abf57uNzda6NYHXYfbQ3BoWDNT57sRJNjI3DJQzgsqHfuEhVkhensweLdeBRUL2+LhM1JaBlWurylJ/mqwsk7tybEkF9dCGfryQrFxa4nq0OOLLBCVmm6IPr9KW22CZzESiFq/SIxO1mAxlJjzRi0Tt7i5m4S7q313519VSs8TOuq8sk65cdqB8OFoZsxsjuBTLRuK11DXtg38sP8GHhUEHbdgQA5ZPAM+Y0YwZxK6b3RjeTZ+5PhwG+jrXu49If9yp8n5LZU95BHukEoMO2vK4SG1OjT9Vvg6PM0Y2evjyYaBanc82/T7fbWy21pXAl+Xv91evXCnu3r2rs2Ox/uxj+RvF3/72t+Kf//mfitdv3hRvXr+R64EslSPnWbliaXIXM3HvyMPH8ACyly9fSnI3PlGLxCSWSsBsUjzEbLG6yIEjHYvqHH8oJ/cjuUjxxzlXvHp+F33YxBILKHEhdPHNawf+RYIHXIbswhes6A+LirG0XfpD38k2wgzcghcPWsPG6xLq0OMSEOX1B8v2nJeHqq0Vq8I5HiymMch4gFus+Yuk+TlZGmG0iX2NwfJjYhnJBiqp8gFT2hX8/KAzwWHQVh2QyP4EOGoxVb4OhjNGNnr48mGgWp3PNv0+321sttatCbwOs4fm1rBgoM53J04ijDBGpariK+e7xomraBlv5B4J5H5NGbRVoxvbnXpspcrX4XDGyEYPXz4MVHP51EQtFHHAYvMZKXv97031/Ban0+PhcuRcuRntlRVtaxCwy5ZlevC7TfhqelCRrwZUD4JHfvBC+J0xVgohPVeATlsuwdyWGeiIAdxkITmIRCFeuJHDw8Ru3FgpvvwSf2U81GUNNjdxU4Wko9w4ygY93GQhUSpVqaOtLH3QkAheW1uSv5guy99NF+TGeE/twBY22JN/nspyCiu6FMO5c5iR47ZGHZbmTaRb46QVOtQ7aQ3XwMvq6qLMvMJfZZcU+8WL5cNoTM0qFEmuLsiSEUgMI5G8KByDtzJOyhNziWW8jzKlvZJjE7NZp2wu548B96gPP44m3yMQK7+npkSoeikKA5Rtwpd1uoiOinzN87GFYEP4nTFKI86LS1XSFD/G4Ry7I3+leP36dfH02bNiSxZb35R1ao80uVn9UIik6NKOzv7cl1/FNjY3dA3bWMKxbMJXX35V4O/9+Ls//vaPh4styDUDP8Ih0bnxfkMSxr9q0hhr4+KFPntDshcJzWvXPpBrzG2dFYxZwkhA85x/JElZ4N+XZPNvz36TZX+e6azhTYkNdn2bzjaWJPYVeX1w/bpcZ6/LmrIXNKGqCWH8WCrKmGm8v3+gyWokuZ8+eSL7+9qGhDA2JMBv37ot69De0tnIF2RGMnj48OaHxZ2PPio+vHVL+FzSPqxViwe4LcvSBx99/LHq4w1tGBvMXoafJ/Kaxtbks6jHW+iA9ADncerpnovmJnwFP7yBqMlXA6oDVqfXBa6whfA7Y6wUQnql5fF3p61xkUHv1R1bJnhyozFXO2wz5WLqTfVibPcpU8eXcmMB0LYGAbtsWaYHv9uEr+CHNxAx+XJRPVr6wNUZsDnqaqo3MjDDCk+KMYNhw2wad1M92/8s9pvy1SbmNrqz4KiJTztGez/FZhvdFD9ZNjMwuvGTe6+9PSRqj2X2CxO1q5KoXZObyR3pO5QbV8wGxcza8iwCXSRuea9ZNcvNZJlwdbGLBPDa2qLczC7JTeKS3OSNP4wLNtbXFyURuiyJ2mV56BaWU/B/IogfvlDnK/Q12dRxYfS1YWJTmahFknlFbqJ3JA7ctPKsWmoifvjf3DySmVngDJlm8DQZB7CQz1I79H6i3zSGkPXcN30GTkZ0+r7beOQRjzIUg6vP1RaDpalejO2+ZZry1SbmNrp989GVfTtG7OPciNmtSCQiUYhk6M7OtiRqXxXPZKFvJiHL8245Mno+FT0kad9J0hAy21gnJ3JDgvLLL7+UBOUduS5IklIeXsYZsQeSpN3fxxrjz4p/+9d/lSTwpj7MDIlPV6IWuC9dvlx8cu+T4r//9/9RfP311xoL2nnehx708UC0//qv/5TXfxWPf32sbb5ELbgBL8B6Vx629uUXXxZffPmFJmuRBNakNhK1QglswPavv/5a/Nu//atygn0knDG5FrbOCR7MWv7jH/9Y3JB1gG/IkhGXBTeWkLi0vl5ck3V/mai9JUnb8zKT9pbw8vvf/2HE6qYkxJGkffjwYXF4cDiVRG3TzyJA28fbKJCaSlO9GrNT6W7KV5uY2+hOhZQOnNgx2vspLtropvjpWrbpsQUcTWNuqtd17E3sZb7SWGvKV5tjxKc7StSmhZClMwPTYQAfFt/BOx0EzbzwQw7tacYwTV/NmMlap4UB3PjhhnJ7Gw/j2i2ePduRJOSqJCBX5AZuTR5uhQeALMoN2J6uV4tE7oHcUGHSDu5jZWKSJCTL5QRKTsKf9OVlzEhdVtv375d/gRQIcgNaauMmEcnZjz46Jze7azrzFsndIWxIGGOGLxLId++e08Q2Hvzl2sDry5f7coO9L/ziAWR46Fc5I9mWh2w4WTseP2/WbTt5f84YMC8wcwY9wx0+A/P6PcL8WDSLQc6zkshEshWJSWz42/1VSVDekpmdSMS+lYeKof9Y1wM/8YjUrLbLhehQ+us2nIvxQvLzs88+k3Vv97R+9epV9Q3/OLcjwXnx4rpcL7eKPUna/vLzz/Igsx31pT7EBpc5QFLzs88+L7766qvid7/7XXH//v0RjJPkssjLOutYGufo6FB8rRRYZxdftOGrnP0q6/9UG5YeOH/+nHLw2eefj+zeu3dPrrHrguNQlzjAdwG8sERDifmi2kLbwwcP5KGWD+QhbPKLrcSEuPGQNsz+XZfkLGbpXrlyWfbPa1IWfdiQrNUHjEmi9vDwQJeGqGBpH/iGjWWZNZy3zAAYaPa5nz13J2eS6cYwr3zNfsQygsxAtwz4PoutE7V6cqmsj98SdhuAy5r6lo5Yv6nyLp9t2kZcAXMs6DYODV3GjqYY16nyhqvOquQLf3eMwdyZYzGUGn+qfJdYaWsIfMWOE/mKlWeMuRwGA7zJxE0YHhz26NGO3GSuaGL2yhUkalcFqMyMubZa3Lu3L3+DPJAE7ZG+Xr06kOUQDiSxeyR/WVzQxC2XRAhFh9m6SNTevLkmN4QLmrC1z6NIDMP/5csrmqjFDekQNizbgCSyzKsVPjDzd1luYvkpGEeImB4/3pEYN+UmeE9uUPFwNr2/HRfMe2eaAfwwgQvjtM+hPGpj/abKdz2o6r8CYZ8vuvZl22PsaI/hK1Xe9tfFPvk6i9+7kMw8kIQg/laPZCGSpRclGfnJ3U80QYlk4+6u/OX+eLs4EFnIky+sxzpq0w+nfzRw/WRiE4laHBtI1CIxCZ9ITuKFfchhRiwSqCgxI/aJzO5F4ha+saYtlmsAXsxS/dOf/lR8JTNpkbSFbcjhBT28IIfEL2apMlF8TtaGxaxXLH+wIRcb+OKGdWOx1MHdj+8qB//4j/8o1+CbahtHNdbjReJ4ZXVFEsbCl9gFdiRx4QuzZf/3//7n4vnzF+JjRzFjfd9ytvC+JpyR2AU2Lo1A32VyGdc+JJXL9djZh2Q4k8pIDsds/HzFfBZhL1U+BkOKDI8t6ORzVz1z5Ossnrvq2ZmUGAJf8/JZBHvkCyfsWNyTrDdrUd+iGus3Vb4ZKr/WiCtgjgXtN5fUw9ihFOM6VT4JTKQw+XKdu1onakdXskgwsxIzBwL1mMGbFdbs12JgzgfsLB1rqUNFeZR5my8GeLNZJmr35OZvS27QFmWGS5kcvXq1TJbeunWkyx/s7OBvpIdyw7anM3AvXtyTm1A8OftIbiSP5SYRawL6OUByFjNkMTP10iWsuVfKssQeEqJI5iIpisSu3OMOYgNXwMZ1ao+OVjUB6wO3uYlZVLhBx19OIYWkAL7wnKWziY+d3D4vDJgfZ9Tz0TsvIyc453zAmhxrSBZubWGpg9d6rkWyEWvHfiwJ0Pcb7+UhVzLTU07ESGgimYu1WDGrEy/s44UkZPBCVh0CvH4imXlefGDt2K3NrWJH/nKyhkStnPwvX74kPzxelX+qfKCJTMwe/eWXX4pV0eGGRC6WDLgs69t+Ir8C/u6bb4r79+9rUheXCyRpf/vtt+IAyyWIDyRoMQMX5QcfXNOZrEjSPpP1arGUAMZ9E78MVpsuO4CZujKb9osvvtAXZuEieYqk7quXr+Qha6/VHxLJSA6fO3ejwMxgxIb9p0+fFN/LA9mwpqyurytr5G4LLvCsCWmZEYsHtK2vX5Lr4tEo0YsELuTBN5afgDy39+/eyw++r4q3b8pEMdu7KnH4c5vzjwLDODvlnA9Yk3PXvA5u6lClynfKC5zPwWbCnClfc8DV4CA6Bqx9orY6o/R1YuEB57LvavORDlnagoxZT7Hjsx/Trhh6dsa4bDfqW0Da7T7clEc/bVI21gblm5aKQd768se4XPbVtwB39bnioTz6aBf1WH3Itt0Ug7z15ZNxueyrbwnA1eeKi/Kuvtw2Xwzgr/kPH2L9uS25ccNM2R1deuDDD89pwvTChfIBYAcH+Evpsc4mxTqtN27syTqze7KW3V7x/fcH8mRtzJiRh6h4kpGYWYpZue/e7RdPnuyoH1sUa9hi2QUswYCZtZhhO4QNs4GAfWvrYLRMBNb19W3PniGZjQeylMtE4N4/b5mBMQbkJBp7vh3Ti9jh4eay72rzmYQsbUHGrKfY8dmPaVcMPTtjXLYb9S0g7XYfbsqjnzYpG2uD8k1LxSBvffljXC776luAu/pc8VAefbSLeqw+ZM1tXxKur16+KH766Ue5nh1owhAPuvpIHnCFhOgHH1wv7n16TxOqSCBubW3KOfq9LIfwdvRgLrQDC2eDmvbtOq51SHY+evRQHrr1tPjt+fPitSQf8eAsJEORGP1v/+0PMoP1Q/lx8pLaRPIYM22xIU4kOvHArfuf3i/u379f3JQZrEiQvn//vnjz5k3xww8/6GtvT3BJInpd7HzyyT2dfXvjBh4KdkNm396W9Wy/0nV2MVP12bOnah9vWDMWdn//+2+Lj+VhXsDx22/P5br9SK7DT0T2mSZMkcQGbuD4+neY0XtbceChYx999HHx+edfaP76mTy8DBy9EJ6Xf1yWZZGey/eHy5qMxnq1iAVcI8GLxO5LWawdvn766Sfh6dEI1041A/iVJG8RJzceB65jwNVGPbuELG2hz6yn2LHtpuwrhp6dMS7bjfoWsHa7Dz/l0U+blI21QfmmpWKQt778MS6XffUtwF19rngojz7aRT1WH7JtN8Ugb335ZFwu++pbAnD1ueKiPPpoF/VYfci23ipnfflkXC77rjZfPJClLciY9RQ7Pvsx7YqhZ2eMy3ajvgWk3e7DTXn00yZlY21QvmmpGOTN5a91otZltClQW88mzO5P3SdW0y7bUm01le/TnxmXC1+qb8ibNlP1XRhS26bhEzG6/LjaQvghn/kKMTTeZ/M13pv3hs4AE6obG4sys+hYZuMc6GzZhw+3iz/8YV1uIDEj9CRZy2QjlkPY3T2Um7eD4tNP9+Xma1tueN9qshYyCwvlTSjlyQOSvJiR+/YtErXbcuO2OZHURVJ4f/9oNHsVSwwMYUOiFg9VQyIb6/n+/POW/A3Un6h9/RpcHmqidne3fPDaEOLIGAbCgJw8U69PscjNa1isTkiOOE27bAvpddnXpz8zLhfmVN+QN22m6rswpLZNwydidPlxtYXwQ74rvjAzFonBH3/8UWaFnpcfE2/KD35X5CFfdzRx+Ik8SAuJVcxSRRLx7ds38pCxZ7oUAZYgwDIA+Dt++Td+E9VkBLh+4oWE6qNHv8r1729yXfi5+FXqi7JkD5KV29tbmhy9ffuOLiWAGatmohZWMbv2tsx4/VYSqZ9KkvTGzRtid1HtPnz4QB8Y9uc//1nxIlOK9XbfvH6jMaws/16TqNBH8nR/b19mv54kaWEf/j6992nx7bffKh+Y9frDDz8Wf/3rX+XH1b/pQ9ZevHiheIEZM10vrl8UvUuSBL4us4Iva6L7s88+U58bMjMZM3Zfig54RKIZMWCJBDyoDLxeu1bOIMZMX8yaffDgYfFf//lfxXd//Q6QdNOlD2S8NGEuM26xhRlXkaQ3HoumXbYlGWoh3Kc/My4XxFTfkDdtpuq7MKS2TcMnYnT5cbWF8EM+8xViaLxv1nylju84+vCeeRyEJeN6idW0y7Y4C+2l+vRnxuVCmuob8qbNVH0XhtQ2n8/RXSwB+gRTHVIedn02Q33Qhx5xYT91q7MPezEyLr/E5YvNpdO2rQ5rG758tk2bbWL22W/DSchmqM/22WQMffZtvpraBsYmunZs5r4PM2RCfaYN1JvgSrFv+8v7w2YAs2CRqJV7LrmpwgNVsA7ejiQmC7nJ3Za/ZS7Jw0qWdMkCLIuAZQvwwDG0YTkAyN++vSyvXU1Mbm25jzDIbW8fyuwZJGp3JVErDuRolHvd0YblArBEwvnzy2ofM2uHsHFG7Umidk/+zolE7Th+Yt3YOBYuF4RTcFvOCmZinDK5zAz4GAidb0N9sIePE2SabnX2YTdGxuWfuIyPvEus07Y6rG348tk2bbaJ2We/DUEhm6E+22eTMfTZt/lqahuJSiwTgCTkgSxrgKQs1nrFLFIsL4CZqvhLP5KX+/JgLyQh0Yc1XFHHLNKHDx/q66XMGAVezKz14UEfkrsPHvyiyWEkfZGYXJBrGM73+Kv/hiRyd3d3dIYtZtLiwVlYxxZ1JIRRwjeSuVevXlG5Mvn7qPjLX76TB3k9VJtYlgGJWiSjoY81YjH79suvvtJlFhAXEqvnL5QP6uR4LUvMiBcJa66R+07+6oGEMmJ9Ixjhj4lnJHp//vkXuf6WfEEPs3LBI9bWXXtwTjnRdXDlS8O+4NqRGJCwBd9IznKNXMSH+s7Otvbp0gwVMPTpusASD2LCZh4HlVhS4Tu+TCMxMqY869DD5jsWyt5u3+uwtuHLZ9u02SZmn/02DIVshvpsn03G0Gff5qupbWBsomvHZu77MEMm1GfaQL0Jrhj7MTI2FuxDD1sTXKWm+z2EJ9RHLMTlth5urbMP7RgZlxfi6povly+21WEFFuKiTmzps23apO0mMfvsx+Kz5TRRq4AqVK6FbG2l2H0G6gId6jPtNyEJ+rRv2mKdNinjwkdZV6l6VKYxl2BiW8gk+1CGXIb6fHDqbNNmnVzQviiftmPLNxbgqylXymGlfBb44rHlO3Zy+7AZwM2Z3O/JDeOSlIuSnMVfOfnQsG1JmO7KDdiC3LTh6dZL8louPvvsouwjWSsPHpH1ZGUSjtxk4u+bkuktsJ5t+ZAWO3LMqD1J1O7Lja2cCxfKJ0hDVu5B5YYVa/Dty00lnqAdXgfWtt/nPjjC0gdlonZfbmQP5ea29GgmmokBPG5vL4oO+MWnJH9SyE0uwwyErj2hPtNq06ON9k1brNMmZVCyjTKhUvWonKIYMip9IZPsQxlyGerzua+zTZt1ckH7onwWvkeAA/DVlCvlUJSRFESiFuXGe5n1KbNrP/300+JzWYLgnqz/ivVaL8h6stjw4Ks9SexiJijWUEUi8v79+8V//Md/yA9sm5IcfQkhxQRcHE9VVv0S7bu374oHvzwofpILGhKR78UvhCGvSVCZgbqzsyt+FyVRjAeMlcsiIEELC3iQGBK1d+7c1mQqksmYqYplAr777rviyePHmqhlMhOJUMxC3dzYLL6WJC1iRSIWiVoknC+cL+MjTtgrE7VXR8lh4HwkyxEgCbwtSVQ8TAy/mALzU1k24ReZGYzkLLjBLFsst3BLljS4/uih/GCLB6Idq19gYoJ3dXVNro+bct3b0T4ksY+ODrWOWbYbmxuyHu3JEgfABxmVw8W/2mye2V5XnliYlKRNyqBk26T0ZIvqUTlFcdLUWEvIJPtQhlyG+sacGTt1tmmzTs4wOVZVPXnL564xWvw7FdFnga+uji2Qedr4ch0gXfIVPJG4nAfaeG4gPlOUfShd/ZQN9VHGLuts02adnG2X+6onb10eW5qoBTCCIkg6nceSsQA76r3F1KHhWMwdupzHoY3CDI5MPqOUOhZqhaGVcseBTMlcPq6nRHQvbhbkhko+c3JlQlnOAMUyBYXcWGLGTyE3Z4UkTg/lZhAzX8qHat2+fU7aygeO3by5KjfEqzIzZl9mGLkTtbi5w6xaJDzfvz+WmbXlera40cNW3tjhASflzFssgQA8Q9iADQ9Jwbq0W1tHckO+oC/epNoYkdg9OCiT4OA1b5mBoTNgXnPz966hj1b3+IbwtaUVBlE+lMTghiRdMdsUMzaR1OQMT5SYVYvX2tqqJk1XV7EO+oqur4oEJNZVxazQX375Wdebpb6L7fJ6VfrAw7gwk3ZbLppYS5YbHiy2K0latGE2K370ROITSdpFeS0IRuxjmQbMXEUiGftIxMIe1pDF+q3Yx+xTbIgLvrEh+YkHdsEek9CYQXuyyUMwxd6KzHblbFrII3GKJQ7ev39XYF1fLEPADTOAn8u6s1gOAQ8MwwZd4EPCt7SPJKx5xiiT5Ejcwj7xASYS4mhDQnlPXti6viKaSFDv2r6C7hh4LObeYhkFNf8VcGTyOYuIWmFopTyLaNv7bBqyqYf6vG/mcZvPXfM+mm78o6UPqntdt1QPraEPiB541REXkmsLq6lt1Wuq3BB0yN088NXlrwsxFAb5UsLky1hIKMZJjUxT86rXVLkGk6s75Gpax5YLV26bHwbKZCkSrIt6Ayb3tHJjdSw3jZjxioTtsSZXX706lP1tlUHScmVFnlZ9GevTrcrDRs5rkvbRI9yYlYlXmwEkXjGzFvdru7tI1JZLHZQ3dOU6sJiRCxncCFb3o7aZmewDOx6IBl7kvrnCX/7F1QYE3JAv4wp9Qm3NvJ8Z8DMQOpKmda4PYfAjr5InTZVDhgN9IXfzwFf+3hUYXKsLY40EIf6Kr0lNGWDMZEWyFX/t/1Vmpp6ThOM5+dXx0uVLmni8fv2Grl+L2bRYTgDrsuLBY3joFmbmarISF0Nrgx+8kDTdkyUUtre2NfnJWa88to7w4x4SlDJzF7NLsWEt3KVqDVtgxv6KJIzPy0xYzLhFohZ2kDDG0gl46NaxkRSFzV2JEbNusRwCMOD6DfxIOsO2btIG+7jGIlkLu0iYwjaSplj6YV+WhziSRKq5wfY7mXH7RtbvRaIZtrGsAWYiI6G8jF9uG2yKxaNHvgAYcn1tTW2rXlPlhsGE3M0DX/ncFT/w0z6+hnBsgZ0QjhB7ckqa6hZyNw+fxcZEN2R53vnq+tw1StQ25HOQahhkPfilDA34kMC3wsxghxSQhWUo42BShfpQcFl0DW83kzW8MRkIIiw/IPdwuiG5iDVr5V5NEpEnnzYkbLEm69u3xzK75lBuCHd06YOPPjons5HWZKbtqtzcnpeZSLvSd6SJVjs8JC2RfMULiVzM3MVNIG4gyxk4C9KGJC/6IQcLJxhse9PcB/byxrzEtr8PrGWStkxyTxNN9pUZ6J6BVt9huocTZbEV5mGcWoJxDuX7jUkV6kPBNUGenKiRiCxfh5rMxLIG+Kv/Y0nUrqzIsgOSzMTMWfytHw8Xw5qxWBsWiVIkIz/88ENN1D6V9WYxkxXJ2vL6NO6NiVqshQs5vEyeII0kaollX65pZUIU14sFJE5RIuMgr2VZDgHJUCRb0YakLmbhYm3XffmXinkd1Bmq8kMmEsAHByezV3EdRRJ1URKz2HSMKh/wp35lv8RdJmwPD09m0qqSvGF2LRK0mHUL7NgwY1dnBAt3i4vNErVqqKc3xEruB3tsWrG3wsxgLZtD2h3KOJhUoT4UXEMaKyeWTJaTlq4bW50HugYTaa8VZvMDGelv2mJdnyNGiVrG3qUDDkaqTdWTN5/eED7/ffDV+GCqiHLxFYMTen1yqhgqBy6MTeJuiln1KhAuLIPhS0hx4WvCFXQ07gY2VS8AZAh8NeUk67VjgDefy8tHchNWzpzFLFckac2bOnjB3/exhi2St3t7h1Ivk65IYMq9n9xg4gFgeKAIbgjb4cramYGzzICes4WA1I+R6smbT6+6hM+U2pjrzdQAVkS5+IrBCb0+OVUMlQMXxiY8NcWsehUIF5bB8CWkEF/5l3tJOkqyE9c6lEgyYsYp/vaP9VIxKxWDiITqxx/f1QQt/t5/585HsqbtC5nRKk/XNGzqTvUGm5r0RKlHgnTggiibyZdMh1W58mgpOxUjL5SiohYqe9DHOrbnZfYqsGxhKQckTGlb9JA4XZGkLmIxr9XwTiyoL6hOhUn0kMzVZRc02SpJW8jIy9wwK/eiJKzXZYkILA3BDRwdAaNqsXW8tG2N9/r3yJdP34XTb62fnpLFSb768VZjtSLKxVcMTuVbXLj0azxHdSuGatC68tEUs+pVIFxYBsNXx+PRBV+uwc58jbPC48t1bEGy+hiMK015L2bMpgapIsrFVwxO5VvAuvS7iEExVIPWlQ9N1I4MC8qup+w2BerT40BUPHh59el7FRI6TL66HO2mmGP0ZsnX6HtZHYiEMYBoTNwukzF6dVBjbLh8R7XpATY/n8WYmHrlKwZAlumFAdx8IVF7/nz590kkYPf2TmbM4CaQG+4Vse7q/j5m43DGq3yORWRlBevsyc3jCm4GqZHLzEBmoAkDJ5+6NG2fXnVJqr1p8OmnoXBLKwYC6dBRU1MxeoAbkgv1uVlIaCVXdSASTEK0KeYYvTqoMTYSwzkRr/jiPZAmFuX6xjVZzWsZlj/A7FksiYBlBSCLZQewBALWsMXyB1gb9ueff1K+OBQnzsoak7Uszf4yVklrijJ8VHnWUsS4rqJB9QUDN645i6UYkKTdwvIHVSfiwPq2mBkMOTMu2BkJQkFAlHrlu866lQQvSr1wQ1xkzHHRRK1wcPHiunICt4xvzH6Fp6vCxGDaLJGXcfhkIB/qM+01qSsGAunQUVNTMXqAG5IL9TXhaEyHXNWBGFOq32mKOUavDmqMjfoIPBIVX/Zn0SMd3dwUs0+PwxoDwGcjRjckoxjmjC/ADfER6gtxEdNn8hUEEWPMkGmKOUZvlnzZ108j5MZVTdQicHzAscWQUEpOvlfH/qijzlYdmSNDRkWxGvsx1SZ+Yuy2IkscmHzVcRWFJyDUt33T9QTfHLSWIM4aXy3pSjq+JsbMHFBPncPq6XY2N/HjNJQbZ84Ab76uXDkqPvtMnuy8vijLG2CJg0OZOYulD5CYLV9lMvZYZtgUshbtUnH//prc1K7pLFosZbCxcVA8f74rN75I4sp1yLoR7TrYpSXcWOMhZ8dyQ1kIDsyKKh8gg+UYLl6Uv4BW96LwjYeeffbZktyc4+FoWCvwWGZTFbJ+IRLTmEVcPvira5zZXmagjgHzugjZuutGk3PwoM71dQHWEGby1dJUjaf6sag1kCAwMa4ctJZBniW+8Ld/zALFMgJ8eBUfwqVJxmo89KFWcgHAsghYwxbLFiAhChksP6CJXLmorCyfzChNGEpL1BwBq0t2MfMXWPEgsnPiE76B/9oH14rbt2/pUgRYM5ZpXOC7JAncG7K+7rokU5GsBe5y3VlZYqFaCxfXOPmfjPZhXVsko7EhSbsm9jFrFslqrFWrM3a1F9dULGd0XZeGQL8YUNuYfbwrGM3lEszIgAG+kRinL2DDkgl4LQnuiWO88hkq+DEIydh9TfzYNpz7+bPopGWCbw5a5iuJr5Z06eeLDutsTYwZFQMlhzUgMtHVxM+EEaNBMVTB1cVoqE1Ugcvc6mw1iUOxmk4i6k38RJht/WXG5KuOqyg8AaG+7ZuuJ/jmoLUEYfI1Wvqgpc2xD/hoJ2CUICaCNBnw1ANmJzTa+KEx2qBfLblDocSSNlVNdup+CaN8qttUefoBrlRd6FAfJfW15A6EGmy0q6qyMzS+mobHuLrkizbJFcoQX5Q3MahuxFtK3G38REDJIlNkADdVeOGGSpbrK77+elVuClcleXlUrUV7KOv6HcpNrDy4RBK2WMcWidxLlxY1SXv//nmRx6ykZbkxw4PG9ounT3dUB7NucSbpM1e7vIy1co9kbcFCEsYLclOJm1UkaxeLu3fXBCtmDVVrAAqaDz5YLb74Qm5+r+EJ2eX6si9fHhYvX5YPSTs8XJI4Uj4NUxys7OrUMsBzqgbIncBhSBGUATEnXynybfzQOW3Qr5bcoVBiSZuqJjuh6yJkKJ/qNlWefuAzVdfECTvU15I7EGqwmbhAxtD4ahoe47L5QhISicaLsmTAtiQWsS4sE7UmfYeytuuuXPuwDivWgsU6sHzYFx68hUQm7CAp2tfG2DXJKg8bQyIUs3lxTUZi84MPPtAHnb17965YeCLruAsQ6GAm7WV5GNrNmzd1aQQkQ6GDZCseLoZE6WjDdR5rwks/2sEPk6dYVuHixQv64+xYolaSxddvSKJW7CNRC7+wiyUYtmX5iIPKPsdAfcmOfp8QvrHG7bH4w74mvdfOyUPchEtZzgEb49CdyDdyFSNOXE380D5t0K+W3KFQYkmbqiY7Q/ssAleTEBkXSuqfBb4Yq45nwlsffNGmwqh2QscX5VGmxpEi38YPKaUN7NM3S8qklqZNPSGZxh3GKI8y1XeKfBs/hE0b9KsldyiUWNKmqslO6NiCDOVT3abK0w98puqaOGGH+lpyB0INNhMXyOjvW0QDcENUGSNsiAB7wtTyOOsJVTabGcgMDIUB3EjhhUkzt26tFp9+itk18pTqvWNZm29fX1tbmF2LmTgL8pTsJblBXJa/ha7J67w+TAyzad+8OZAnZO8Wjx7tFK9eYXYQ1tDDGQj2J6NFm6t9UnKypcSMpRYwk/ZIbmYX5IEwK7Ke4JrGArt372JGLR7KIqjlhbYyUYsHxRxoAndn51hm4UoGupCnXstN5fY21muoP2u2wT4ZTUyLg8AYtSyTGZghA2f1qK0/g8xwUM6A62V5WNgH168XH3/0cbG5tVkgybmzjYdilQ/e4r8ukKzEDE/IXpOE6FX5xe+8JCiRyNyrEp47uycP02pDXd1nAYnPd+/fFc+ePdUE7eXLl7W8ceOmXNvu6RIMv/32m8xmxcPKjosr0v+RxHf//n1N5mKtWiRSsVQD1tRFvOaG2DFzGFwg8Yo4L0mi96OPP5IfVt/Ij5WvtETseOjYTXnI2q1bt0czanHNhT4wvH71Wmcfm/ZZRyIYM5MxQ7l8ABqu0yuaTMbD25D8xYPakDjXBHr1DxjoYTawmSymzVmUdeM1C0zT8JnPXdNgOftIYeCsfhZTODJlzypfQz93dZaoNQOty5bjwDDlzQPFrOtBgzcRjpE3dVkP6ZkHpS1n9sGW3U/7TUvT3rzxZWJn/JkvMnFSkpM6vlz9J1bSa2P2ZAc4xtosk6E+U1TjkTckr5psDdWauMo6U2QAk4bOn1+Um9UVubGSp1FLzvLduwN57cuMIyRusX5tocnP9XU8IXtVZZG0hAyWPHjwYEfW89uXJ2QXctOFWTt6tEkULMuEKXTqNiZDTdmyjcpYggEzfI9lVtGSJJjXiq++kvUPZIMckrJlorY8YoEdbZ9/flGTzthHAlru1eXmEDOGj+Qml7b96Ew8fqn2PaYfs97ecrYwNAbKI7RENW/fI4DaxI99+1Nk90OmzWbamze+TOzkIPNFJk5KclLHl6sfSwbcvXu3+Id/+Ae5du3Kkjzvi433G1JuyDl/U65l+3J92tNE6AWZvYrE4ZdffFl8dv8zuUZc1xmg7yVp+ur1a7mWvdBZrifI0muMhaXLwoEkKeHr73//u87i/VBmsiKZivVyMeMXeN7K0gc7kgDFD6NIen719VfF1199XdySpREwwxZr7T579kx+LP1Vk770A787kjx99eql9mMWLmxfl1i/+d03mph+9PCR9iGpuiKJ7nuffiocfqwzdiGLRO0b4eOXX34uHj9+LDNrZc0g2Uz+8VnEkgiYFQy8mlQWvXMyM/jKlSvy75vbsvTQZ8WmjAPGBUnwvd09GY8ysQv8GCPlCW9iz7SvDiPfQnrmONhyZh9c2f2R7r1ipr187vLSNOo4zXyZsY0CblEZsyc71UfIa3FM3itVXc/FGL4zN9nq1PiZc8mxD35d/U3wUMe0N2+fRRcfJleufsbdtJxnvkzsjH/afHWWqGUAKF2Bmf3JdbDSudF4FH277tx+z3zVme88HmuoOrNvf9osP13t1vHVlR+fnS74UqoqvmYdjy/O3D5dBrCObPnCMgULcpO2IAnOJbmRW5IbxiVdPgAzbJHMxAn83LnygWHoW12VJ2e/P5DZOEjSbhUPH2JG7bEkbpfk5kv+OirLEshEGbkpxtO2MWP1QF87O4ea+MVyCe4Na8ViTTwkUA81oVrWMVNX/sIpfUheYukD+WeqLsXwwQcrclMrO9W2tiZ/ExUh+OSFB7HduLGm+hDDmrpv3uAGeVfiPZIb1nJ2MXg4lm9uMslW4j7WJO729qHEi2UgDiWW8kFqlavOCvhDQhw+8MI6weCtjLlMQHfmLBsaJANdnOfHApvxib7zeMaC4yfbamyz2zNfdebnhi8EMoWtji8XhFVJNiIp+Pvf/17O9bh+bMs16Z3MBH2lM06R+NyRv+9jiYErMosWidpP730qM1c/kX+LXFaTm5KIfPnyhc4gxUzSvrd9mcH7UhK1P/74o8xmvVkgaYxZvlj6QJOkb15ronZbYsG/P9D+5ZdfarIWyWVcs5DoRBL110ePNF5g5jAh5hfPX2i/rn0rcSP2L774QpdBWF0t15DVtWTPrSkfd+58pAlhJG+h//LlS7nOP9BZv9vbZaLW5AXHLmYGo+/du/fy8LMtuZ7tlTNqL11Snu/fv18gKb0hnG5ubGpSF4ndt+/e6lghUTvamgz+SLl9ZW4+iwy1Z77qzM8NX/xQkLeeyjq+enI7MtvFeChVFV99xFOZHmE2K2ZfF7GYtu165/b7IMsGHdjvPB7LV+f2e+arznzn8Tj46iVRa/lpvAsC8GtFX5var4zzg013ob6+8LS1q5gZQFtjDn2bE9NVqM9hahhNVQBmHH0BC33YQ3194Um1q+M7Rb5S8WX56TKAmztsKDGb9PvvtzQ5iiQtXpi5g1cpA7lSliXakah98WKvePJkT24CDyX5WSZpkeiUe0+5YTuWdWsPir/9rbzZRQLy5cs9SeruSR/tneDATSn0gOfRoz3xiVlQZWL08eMdTQbLxCJNpMo9oK6t9/z5gdzgYi1CXgEKXXYBM4OXl6sDXrCWSzpg3Twgx0PEDotff92V2cAHEgf8nqxni6Qp7s9fvDgqfvppW2cZI4EN7L/9tqftBwdYKqGbDWMArn7+eVdificzkPB30SXhbUPwIWkL/Cf4uvGarZxWBnDU5+9d8aM7bb5OzkpyDsRYVVBRmn3xEUxZsgI5DawhTlx9ukatrIeKpOvqyqpyi7/iI1n7Xl74a/6uzOLUv/9LAvHq1Ws6cxSzPpHYxczWX399JOfin4uHkpjETFaOT9cs0y7+8o9lCx49fFjcuX2nuPPRR7qmLBKnmD17TxLJXFYA12SsT4u269dvKCQkUR9Jgvann34sfv7lF7WFDh5bSIo+ePhAlyAAP5ckbmzXZdkHXHuQvL0uyV+Uq2urxccf31W/kIFtYEOS9smTJ1rfxcXXsWHdXzwQDcs4PP/tucaDhPN5+UX1kozH3buf6MPZkMRF0hlJcCRnMRMYSV0sraCYezywyAngk3+6C/U5wh1Ek2JmAD0gsjkxXYX6eoDSjckqADOObgxPWnGdnygV6qPMrEsd3x75UvtVkPmzWD/ama96jkwJm6/qUFaRUJ9po6v6oBO1CNIkp6ugTTsm4WY76v+fvTf9ktvG0ryZu1K7bMmSLC+S93JVV1V3zdL95Z0/fb7MOT29zZnqnqr2bsu2ZC22rD0XZUa+9wfwRiIQIAgwGEtmgnkiQQIXd3mAYJBP3ABjbb7sohzPEi//w8LFy29bFHxcP2aBFfb0Q8TFRG2H2lwfF2lffV4kn4ov80OAmzRu3CBGv/rqlZT7kqVqM2flnk1u3LiJWzaZtsiS8WkJTzJNeQgXSwbsy88qD+QGd8kQtYOBzUiFWHz6FHJxX8jRLbnh3ZO+ByJj5Z88Cc9GCFO5LxSylZ9RHghRyUNeKll7b09eB6KHbFlLXJKAA5G5vMxDzMietZu4Knb1iNI++Zo9JWrxxeociE/LciNMq92QsUQtmcbyEBV5wBpZuvj+9OlAYiXbVtbzGzWi3TuVENe3b++K3T0hEchIXhbCYFfiY33AZUMkd1JcOp1IBEam/xQQQL9+9vnqY22+7KIczxIvcHPtuXj5bYuCj+uH67tb39e+6tf55WISa8M+a6zyELAL5y8YchCSkAdpQQhCDLLswStZ/mBDMkdPnz5j1mwlu5Y+kLSW9LxjiNrvhThlDdfhh0ZfAXp6ePjWr78+NiQya8Nev37d+HNDCFuIWkha1pYlG3VwMDAkM+vXsq7uI8kUVqL2m2++NcsTPHks32bWG3g9f/HcEK18XrE27XXJOIaYfl3WooXQhrglC3ltnaUP1k0bdrGH7m8l0/f297ern+7dk8/mx4LhK1U/UrL0AcszQIo/fPiw+kHIYz6IN0Q3dnhI22uil2UPdFmKZ5J9C/6QtbrpGOtx3yX6dW75umNtvuyiHM8SL/e9SPwuXn7bouDj+jELrLCn88vFRG2H2lwfF2lffZ6WT6o/hEmsbVr+TKpXfZ5UT1N/9CtWvkyszZddlONZ4uW+F4nfxctv6xufhSdq+w44pM8F3G+PtfmyJ+U4hkms7aTgU+IsCJwEBJRofPlyWW6ULIkqv3QUcpY1YCshCy1Zy7IBcJI8ZIwXJK0kJklWKq8luQHmtSyEqiVpwW5/f0na7BIEZAE9f/5K6my/ly+XhPwcJzrxBx208zG6tTWQG1ibBSu/kDS2aLMZu8sityJ+WfKYh5/Zrekypm6uC4hZ1Ynv+/uHGbLo39nh2C6HwBIKZOdq3CzvoPKK4aj2vCN0gKMkFAmO+3KzPBB7lZAELCWxJDe1+AcmZSsILA4CsWuFWNviRDBbT2KYxNpm6+XRtuau9wo5ePrMafNl5KtXe3IO3asO+KWIkJ2Qn6yRypIBEIh8wEEuPpST8Ddff13dk+zRJ0JKsr6ru/GAMgjIv/71r7ZavtVjyQEIytBGNuvduz8J+fmVIYLPnTtr5M0yBuIDvyLh85G1Wg/ELx4oxlq1+PdUlgSAkGXpgR0hN1n2gA2ilAzUhw8fyOtnWdbgofX5nvjMWrYi6267EgMEKxnGLK9w9sxZs3wCZO3yyrJZTxZ9LMHAl54sDcFDyVgC4rvvvq2++/a76ieJ0RLdfHFq/XBtsE8s+A0W94TU/eyzz+Rz/5no+lWI5k3xmfWBeWiYLVn2QLNqd4VAn+UWe7/F2mbp4yLZimESa1ukGIovi48Ac6lpi7U19TmO9bH3W6ztOGKRElMMk1hbiu5UmWNF1Lq32ACYs8XkY205NhZNtuCVNyKKV+58iMnH2vK8WzzprngtXiTFoxACSjJCqJK5ScYqa7XysmTtgVkL1hK13Exykwhhy8tmeQ4GluQkExZyVXVSL/eXIgfxShYqpKclYmlryki1RK3tC1GpDyWDqKRtf1+eACZ26M/9IvpZNoA1a+2W9o6Ue0rRhT5elmRW37nhJD5i3d6WB6k8tg9Tw298wDaxqHxteKICMlbuk+VG29paWmKdXouxJYXT4prIidL5RCKg7xyCz51lMflY21EGuuCVN3qKV+58iMk3tUE43rlzp/rzn/9cnRVSlExUlhBYlW++VlfX5LVSra6sDslalh0wxKeQtmSP8rpz9051TzI8ycLdk5/zuxsZoBC5KzyJkk0+K27LMgmQmqGNZQBoHwiBeeYsmbubtfxz+dyxRK18MoqdPUOA3heiGD8hkB88uC9E7WXzsDDWiuXzhhdEKT7viM+P8FkeFMbatCwdwMO60OtuyLLsA59rZ74+Y8hqMmbPXxAie/O0yaQ1mIheso+VSH3y5KnRy1IQZLxCGGObz87QRj3tLC/xk5DGYP3Lzw+rO1fuStbsaWNfiWlIabMMhTxY7KHIvOQnLB0215WmOdGkNiYfa2vSdxTqC155o6R45c6HmHysLc+7xZMueKWPiWJFj9w5EZOPtaV7t3iSRxmvY0XULt7UKB4dRwR4wx/Xk9lxHK8S0/QQ4MYPkpWlAOxGtsyS3GQdmMxO7kctCWrXnYVMtPJKVtrMWJ+0lPs1uTEj+xXS1S49oDKULLkgxdhGHwhK2/fwAV8I0s/25WYVonXZELXc/PHK3VSfLdGvGix5iw9kEBMD+l355eWhsHbqVKIT3SwVATlcVdaWbw/fDv3rZKp0KggUBAoCc0NgFtddkJIQlhCpm5LFyZIGrEfLi32zDqtklu5Jdi0ZtWSfsoYtGa481OqpkJNkgJJNC5HobywjcFvWgTVZq/VHDsRw6AFb9H3+7LlZP5bs0Q1Z/3VNfqpCRi7HStTKB4AQx2TWDkxGLOf+F2LnkRCwF4VQZWkAXsTE5wUxaiYqGbTW50emL0S1v2EHAhYbZP++koxWljs4e/bs8AVhSz2EMXigH70/C4nKkhAmm1Z041vzxmelfJkrOliSAbtk8kI+bwpBvSSfmfivG2vaYhMS+RnrGJWtILCgCMzi3LWgoRe3CgIFgQkRWAiiVj+6Dz+Cu0VF/64nxL586OZ5ei/1kx4Fr3bcFK9JsZoE7z59aI94Mok+fe0D88miKb1nhYC9gbKkJGdhbshs1qp9wBd+QI7aFzdcljjlLObefKm/Wkfp39xpm8r6Je1t/VRHSM7X13as9nw514a2aZ0e91GqTkqw0mN0676WfdgrOo4HAn2d6znPo6vL+b4vH6Y9IuondrrE6fp3kvCaFKtJ8NYxy/GBDFiIVshMslDX1lblAVkbhqQ9JSVrsLIWK+vC8lN8Hiy2vcXP/e3yAix1wHHTA7O2hGC9+9NdQ+qaOSFOPpOf99Mff31fX8pSCWSjQgKvCtG6LC/WcD3MTtUo7QyDHH4q5CvLFSC3KX3JCuZFXz4HIFMhTiF7d4zfO4ZchaQN+WD9lGUJpB/ELuQoWIALBCokMCQ25DUyPBDMktcvq5eGxOZBo6yPO+qr9Xj8/4FcJIATWcT4CGlLRrM4P8QHTXzWIYPfTyWDuMt2kt6L4OPPr1zMThJek2I1Cd76TunDh9wxzpXv09eu8fbpQ278ufJ9+XqS3otg3HVu6PgcZbyWPnj/PZ03Gs9MS9f4pAPR1fFF8CHV90XwdRF8KHilIpAu544rvWb2fpQLcNY/I1ukEErp41UkCwIFgZOHgP259a4hRbpG757rZ3ae95xdBB88lxoPF8HXRfChESCvYRF8ndQHrkV4QdhCSm7I9ckq5K2QhmR7Qj5CEkKOGpJTiEP/S0UPluCh6ycCvb0fxXfWz9WsYPMrFDmGTIUANeSw47PrR5sPPHRtmes2wWRTsml5uBoZrqzjCx7o5jw1jS3Hz2nYR+ci+JAa2yL4ugg+FLxSEUiXc8eVXm3njXTNeZKuH/PyIcXjRfBzEXxIwQqZRfB1EXxIyqhVR903AHXusYLq11Ef25BX/Vrm6ojpb2tTm21yOe2p2ITk2uz4eM0SK3xz8erLdggHv07tTmLT19mG9aTt6rPqmcR31UHpx6F2XP2+jNu/aZ/+qguZLjqadJf6gkBBoCBQEOgfgS7nafdcr+d89/Ojfy9HNarN0drJjkI4pNa1WfbxmiVW+Obi1ZftFGzU7iQ2Q3ba8J6kXX1WHV19N3qEyISUhYgle3NZSshPskPNkgBStycvCFrfrtpvK/HP7ct+V59HbIlP+AmhzAa5il6WSIBEdX127SfZruNFj5KyPGSNbFiWLuABZ34c/jE+heqoj20uXup3ks8xpRltajOjS6toCIfUujblPl6zxArfXLz6sp2CjdqdxGbIThvek7Srz6pjEt9VB6Ufh9px9fsybv+mffqrLmS66GjSnVLv2kbejSelf0hGdbq6QnGF6kL63DoXr5AdV3Ya+2qzT90hHFLr2vzw8XLHpK1vH+0uXn3ZTsFG7arNJKJWA1YDqkSPaQ/Vab+20h0M1aUOtvWdpF19RkcOKKbPAABAAElEQVRf9lRnGzYhudRYXLxcO6n9u8qpz/SfNV5dfVY/1fdZ4uX6rH64dV32U+JIkWmyrX5OoqNJd6kvCBQECgIFgf4QmOQ8zble++MR+3r+53ham2uzL3uq040htS41Thcv105q/65yGgf9Z41XV5/VT/V9lni5Pqsfbl3yfk1GGkIWApIMWzpLKSyneb+YDFr25cWm8ebaVXnt3xdehjh9tWfIZNcG9ZP4bEjeOm7w0V9CmXpwcPDAbiiuUB0YpmyuTuT7wqvNtvqMnOLZ1qetXXW6MaTWtenWdhcv1462T6vUONA/a7y6xqR+qu+zxMv1Wf1w67rsp8SRItNkW/2cREeT7li92kNGfYjJ57ahH71qR4/RE6qjPmVzdSLv6k3p31VGfaZ/X3ipTjeG1LrUOFy8XDup/bvKaRz0nzVevs9ZRK066wPnK+1y7Ors0n9R+rTF4Q7+NHyexUTWeTAN/0M6Xcz6jq9vfSH/Z4XXLGIJxVfqCgIFgYJAQWC2CLifi10tt12vdNU7635tcfSBVSymWXz2zuo6QuN0Mes7vr71qc9u2RdeSkqqbtXr4tM2/7TvPMoDMl33p2PZx0atKDaKlYuPtqls19LV2VXHIvRri6MvvJpiRb+OU5PMpPXT1u/752LWd3x96/N953hWeM0illB8fdS1vW8mtaFj4Npx59Uk+l2dk+iZd9+2OPrCqynOWcxfnQdNPvRd72Km8SURtSFH2waoD+eNw7Wn6oMbhNZ1tRXqr/pDbal2/L56rLpT9eTKGf3yTx42PjzRuzbVj1y9Kh/qr/pDbdovVob6aR26VX9MR9c2o1v+hfBSH7rqpl9Ih8YTakuxFepHnerVMkVXrkydJGECUz/Unh7n6izyBYGCQEGgILA4CJhzOv/kpK7ndT3P46XWdfU41F/1h9pS7fh99Vh1p+rJlTP65V/oOgJd6keuXpUP9deYQm3aL1aG+mkdulV/TEfXNqNb/oXwUh+66qZfSIfGE2pLsRXqR53q1TJFV67MtK+7/NjcWPy2VN9D/Vy8UvXkyhnf+SfG1Ic+4lE/VKceU6r+UJsrF9v3++qx6o71naTN6Jd/ofcietWPrjZC/TWmUFuKnVA/rUO36k/RlStjdMu/EF7qQ65OVz6kQ+MJtbl9m/ZD/ahTvVo29Z+kvpy70tEz48A/GRwdM3dstC5d46hkqL/qD7WN9m4+8vvqsepu7jlZi9Ev/0LvRTSrH12thPprTKG2FDuhflqHbtXv61r2KxbyuMn7KTo7B5NTjKaoDiIw40Gepjl9swfjnFLlNOOZkstFbUGgIFAQKAikIDCHE/wcTKYgUWT6RGDGgzxNc+W6q8+J0aOuaQ56g5tzMNngSameGgIzHuRpmivnrqnNkskUT3PQGzybg8kGT0p1CIFhRq0OVOjNq20hBal1qiOkX3XQhpzKmGM9qIV8Ge2rZYodlaV07XHcph8ZtpgdbbOS+f+1vxf6iKKQn6ZO/rn9QnKqKMWOylKG5F1brqy/T98mWdXr90k91v5N+tETwsEsNVa3qS2V02O3TLETk1fdMT/pH7Ojba6d3H3VEfMj6GvdQfsFZRxnUuw44mW3IFAQKAgUBHpEIOUc7J/HzbGe5GtffBnfxRQ7bh/kXRNt+rVvzI62qWxuqf1dv3wdIT9Nnfxz+4XkVFeKHZWlDMm7tlxZf5++TbKq1++Teqz9m/SjJ4RDue5qRjiElw6g4hyUcVSmjIsjPja/2vRr35gdbVPZLqXq0LhDOnxfzbHXwZfx9aTYcfsg75po0699Y3a0TWVzS+3v+uXrCPlp6uSf2y8kp7pS7KgsZUjeteXK+vv0bZJVvX6f1GPt36QfPSEcyrmrGeEQXjqAinNQxlGZMi6O+Nj8atOvfWN2tE1lu5SqQ+MO6fB9NcdeB1/G15Nix+2DvGuiTb/2jdnRNpXNLbW/65evI+SnqZN/br+QnOpKsaOylCF515Yr6+/Tt0lW9fp9Yscmo9bt6O7HOmobzjQ5pDI5On1dIf2+TBc79FG/tFQ9Tfq13ZfXespYG+2heKgPbSm6/H4h30N1br82O64s+13lQ/1Cda69Nt9d2S66QvpDdTl2kHV9cffbdOfaceXZb9Pv+uL39Y99XRyH6vx+HOfYCfUvdQWBgkBBoCDQjIB/LvYlc87Bvq5pnuvVLy3Vb98HrdfSl9d6ylgb7aF4qA9tKbr8fiHfQ3VuvzY7riz7XeVD/UJ1rr02313ZLrpC+kN1OXaQdX1x99t059px5dlv0+/64vf1j31dHIfq/H4c59iJyfv2fFuuHXfflwsdh+Lx5XJ0+r6G9Psyai/HDn1UXkvV06Rf2315raeMtdEeiof60Jaiy+8X8j1U5/Zrs+PKst9VPtQvVOfaa/Pdle2iK6Q/VJdjB1nXF3e/TXeuHVee/Tb9ri9+X//Y18VxqM7vx3GOnZi8b8+35dpx93250HEoHl8uR6fva0i/L6P2cuzQR+W1VD1N+rXdl9d6ylgb7aF4qA9tKbr8fiHfQ3VuvzY7riz7XeVD/UJ1rr0m3w1R6za6+66Ctv1Yv1hbm163PRZkrM3V4e6rX1q6bbH9mHysLaQzJh9rC+nKqXPxyrWTK69+hfqF6nx5V8bdVzktY20q01S6ePgytLntKXZcGXff1x07zu2n8lqGdMfaQvJNdS4evkyszZctxwWBgkBBoCDQDYHY+TzWlmMtdj6PtTXZUL+0bJLz62PysTZfD8cx+VhbSFdOnYtXrp1cefUr1C9U58u7Mu6+ymkZa1OZptLFw5ehzW1PsePKuPu+7thxbj+V1zKkO9YWkm+qc/HwZWJtvqwed/XL7efuq96UMtYv1paiW2VimMTatL9fql9a+u1NxzH5WFtIX0w+1hbSlVPn4pVrJ1de/Qr1C9X58q6Mu69yWsbaVKapdPHwZWhz21PsuDLuvq87dpzbT+W1DOmOtYXkm+pcPHyZWJsvq8dd/XL7ufuqN6WM9Yu1pehWmRgmsTbt75fql5Z+e9NxTD7WFtIXk4+1hXTl1Ll45drJlVe/Qv1Cdb68K6P7w6UPtEI7uaW2tQWrcm5f3Y+1qUysVNuUvi5to7/fFtPZRV71xezQ5voUstPWX+10LdV+yI62hfyK2QvpislrW1s/2l2f6Of38Y9Vd0jWbUvZV9uUvh1tUz1+u9aHyhxZt3+sn7a1+aVyrl7dj7WpTKxU2214TWon5kNpKwgUBAoCBYHxzywXk0nPwdM613f1K9aPNvVXMfDl/WOVo4y1uXKxfbUf0qVtubZCumI+aFtbP9pdn0J+xXTE2tSHWKm2KX1d2qb9/XatD5U5sm7/WD9ta/NL5Vy9uh9rU5lYqbbb8Mq1kyuvPsb6aZv6TB+t0/5Nddoekte2lFJtHxW81F+NzY/fP1Y5ylibKxfbV/shXdqWayukK+aDtrX1o931KeRXTEesTX2IlWqb0telbdrfb9f6UJkj6/aP9dO2Nr9UztWr+7E2lYmVarsNr1w7ufLqY6yftqnP9NE67d9Up+0heW1LKdX2UcFL/dXY/Pj9Y5WjjLW5crF9tR/SpW25tkK6Yj5oW1s/2l2fQn75Oo7Gw8QUgSNU+kDP0nV3Erj7vg/z9HFRffHxcjFy933/T+qxj9dJxaHEXRAoCBQECgLzRWCen9HuZ6G77yMyTx8X1RcfLxcjd9/3/6Qe+3idVByOU9zznOfufHL3fXzn6eOi+uLj5WLk7vv+n9RjH6+TisNxinue89ydT+6+j+88fZzUl+UDiSwWnGuAQDVY+qT2c3X0se/7rH6pb33YCOkwMcu/1Lhdf0zfkNIZ1DXhNW3TileqHR+v1H59y4GXu+n8cuv63lesPNONZnyfUvs1KuzaIIZd2+qXO5ZdVZd+BYGCQEGgILAYCDRdR0z7XM/ni287hojrj+kbE55im++zfjZO0aRRrXil2vHxSu3Xt1y57spAVAaZcdZN55Y7ltrWZ6lzy7Ud069+IWP6xoSn2Nb0XlxEvBSGRcRLfZtWqfMrVb87fqlzMlV3jlw5d2WgJQPljpWeI9yxzNCWLKpzy7Ud66x+IWP6xoSn2FbOXXngNuGVpyVfWudXak93vrfNSZtR2yaVanmWcvPwuYNNdzBmBc+IzQ4+9+GnMVvbznHB9T2nXx8+Gx0dfO7NNooyg547Xh187hWvoqwgUBAoCBQEZoNA5udTL051sOl+LvbiQ4KSEZsdfE4w0SpizNa2c1xwfc/p1+pQqkAHn1NVJ8llBj13vAgq0+ckHFKF5mk71Udfbh4+d7Dpzi0/hGkdj9js4HMffhmzte0cF1zfc/r14bPR0cHn3myjKDPouePVwed54tWr7a7KMse4q5mRfh1sunNrRNcUD0ZsdvC5D9eM2dp2jguu77F+q8MU2QxvUY7SJiNufYbaqKjaNELTMBC1XjfWdnPNq+9uPx0Uty7FhWyZ2sDU7XiOYe+go23TV/q7Pk8TL7VnQujosxd+9qHxwQ04W8N88ergbulSECgIFAQKAhMgoJ+LqJjw4yPohflc0pZpGFDdsbK2m2tefXf7KV5uXcx057bawNTteA5ir1x3eaBEDl28ImLRJneMpzm/jK/qiWtU62ZQdsVLfXfdVqxw263vKwy1afRNw0CKo7XdXPPqu9tP8XLrUlzIlqkNTN2O5xj2yrnLAyVy6OIVEYs2uWM8zfllfFVPXKNaN4OyK17qu+u2YoXbbn1fYahNo28aBlIcre3mmlff3X6Kl1uX4kK2TG1g6nY8x7A3zXPXateAxvrpSBDAWKMXVcfDKalN9mYS+2N9a7wY3LG2ZI+aBaehs9lauGUSH9y+BqqCVxhkqXWxQsjFa6yxUUteg28zr3eRLggUBAoCBYGJEag/F42eKZ2Up6Q2OfRJ7I/1LdcRUdxdvNzriHKdOg6bixWtLl7H+brLj3scmXDNWL9y7goDVdc24VXei2HYXLzc92LBaxwvFytaXbzKuasdLwtYLeeDOd69U82U1Cb7Mon9sb71ub68F8Pwu3i570XFq7+HiaklLcP+TK22ngdT09+74jnhRBxgdZTwMlDxT17zgO0oYcX4Drd5gCXGjyxeQ+DKTkGgIFAQOAII6Dleyxm7fOTO9XPCiWEBq6OEl4GKf/KaB2xHCSvGd7jNAywxfuTwUpy0HAI4m50ji9ds4BmxAlZHCS8zpfgnr3lMr6OE1chAzwOsIza3DF6Kk5YjIE7/4MjNrznhxEgch3PXal9TyozDnAbDTFr5p+xzXzFNU8888dJP3COH1zQHpEH3cG5J+9Kc5neDa43V85xbQ7zEiSMCVyOOpaEgUBAoCCwyAuVcnzc688SrXHelj9XwOkK6lOuudtyGeB2h6655vhcLXu1zakTCAHYE77FHgpjNwXBuibly7mrHfIhXOXe1gyUSBa8kmA6FjsG5qzei9hCVslcQKAgUBDIQkBPp4GBQ7e/vy4WNuXzP6FxECwIFgYLAyUFgMBhUB/5jpk9O+CXSgkBBoCBQECgIFAQKAgWBgsCxR6AzUVuT1AuRNQe1k5Mdmut7rrw/a7Q/9YtAQ8GF4VOqL+r/tOSb8Eq15/fv8xgfcuYWtnPwUln6dY1XdXTtj+2+tly8rO8H1UBI2j0OFiGIvsAoegoCBYGCQM8IHAwOKl7z3rqd69NP8Rph148E7Q9OXXX0iXG57kpHM3duoVnHO2WsVZZ+KfLI+Zvq6Nrf1zfJcS5eub7nyodi6UNHSG+XukXHS7EitoWYX+IEPqX6ov5PS94f81x7fv8+j4m53DOmI5qLV+5Y58qHPO9DR0hvl7pFx0uxIrbU938XHFL7HIfrrk5ErTsQqWBNW67LhCCOtn6LGGsfWLbFrTZy48+VVzuhMmV8Qv36rkvFCrt9xp8bx1HES2PclywxMsXaNhffnHFRvZP2Vz3zKnP8z5FtiqcPHU26p12f63uufMj/PnSE9M6iLtf3XPlQDH3oCOmdRV2u77nyfgyT9vf19XHc9Rzc1s+NtQ8/F0VHW9zqZ278ufJqJ1SiK9XPUP++6nJ86DP+XP+PIl4aY67vufKuHd1flDJnfqnPKfEjcxy3VLxy48+Vj2GbMj6x/n21pWKFvT7jz/X/KOKlMeb6nivv2tH9RSlz5pf6nBI/MsdxS8UrN/5c+Ri2sfFJepgYClyH2oL25XHO7R9zdtK2HDttceBLiozvsx+/6tCyTZ72nDh8fTnHbXaafG6ykSuPHt8H1aGla8vHVvv7Otw+fe2HbPu61Wct/Xb/WOW09NtDx02xhnSEfA7VhexMWpdiR33WMtVmqrzvQ1s/Xx5/qJvFlmOnLQ78TZHx4/LjVx1atsnTnhOHry/nuM1Ok89NNnLl0eP7oDq0dG352Gp/X4fbp6/9kG1ft/qspd/uH6ucln576Lgp1pCOkM+hupCdSetS7KjPWqbaTJX3fWjr58vjD3Wz2HLstMWBvykyflx+/KpDyzZ52nPi8PXlHLfZafK5yUauPHp8H1SHlq4tH1vt7+tw+/S1H7Lt61aftfTb/WOV09JvDx03xRrSEfI5VBeyM2ldih31WctUm6nyvg9t/Xx5/KFuFluOnbY48DdFxo/Lj191aNkmT3tOHL6+nOM2O00+N9nIlUeP74Pq0NK15WOr/X0dbp++9kO2fd3qs5Z+u3+sclr67aHjplhDOkI+h+pCdiatS7GjPmuZajNV3vehrZ8vjz/UzWLLsdMWB/6myPhx+fGrDi3b5GnPicPXl3PcZqfJ5yYbufLo8X1QHVq6thTbJKJWO7oGUNqk2Hgiwirvl6qv7zLVTpPvTf7kyKsPvq4QVsgYef45HXVXS19XX8eqX8smvTnxoyNHXm1rqT404eXPLZWn9HW4bX3ut9lp9L3BiRx5ta0lKqN4IygvldeywZXeqnPs5MQfjTXivetPkw4jwz95qbxfRkxM1JRqp8n3JuM58uqDrwsdoc3I88/pqLtahvr1Uaf6tWzSmRM/OnLk1baW6kMTXgYnEfbl6ReqU319lm12Gn1vcCJHXm1ricoo3gjKS+W1bHClt+ocOznxR2ONeO/606TDyPBPXirvlxETEzWl2mnyvcl4jrz64OtCR2gz8vxzOuqulqF+fdSpfi2bdObEj44cebWtpfrQhJfBSYR9efqF6lRfn2WbnUbfG5zIkVfbWqIyijeC8lJ5LRtc6a06x05O/NFYI967/jTpMDL8k5fK+2XExERNqXaafG8yniOvPvi60BHajDz/nI66q2WoXx91ql/LJp058aMjR15ta6k+NOFlcBJhX55+oTrV12fZZqfR9wYncuTVtpaojOKNoLxUXssGV3qrzrGTE3801oj3rj9NOowM/+Sl8n4ZMTFRU6qdJt+bjOfIqw++LnSENiPPP6ej7moZ6tdHnerXsklnTvzoyJFX21qqD014GZxEOIuobVLmGh3KyM5wX72Zcjlre6FwOvvQuWPIi+NT584tE1UEp0hTr4DMyk7M6SYf2vBq6hez1aVtVnZSfWvyx8VrKCM7w/1UAxPKzdpeyN3OPnTuGPLi+NS5c8tEFcEp0tQrILOyE3O6yYc2vJr6xWx1aZuVnVTfmvxx8RrKyM5wP9XAhHKzthdyt7MPnTuGvDg+de7cMlFFcIo09QrIrOzEnG7yoQ2vpn4xW13aZmUn1bcmf1y8hjKyM9xPNTCh3Kzthdzt7EPnjiEvjk+dO7dMVBGcIk29AjIrOzGnm3xow6upX8xWl7ZZ2Un1rckfF6+hjOwM91MNTCg3a3shdzv70LljyIvjU+fOLRNVjdPSB++/N9aWE/bw4cOicBrYq3PT0J0TZx+yJpY6oGk83F6xwtdjhdeU51bBK2126/w6DnOLiMu5K23cDVbDf3JumcIE0LmFmSmoR+1MNxMP/8q5Kwn3WeF1HOYWgJZzV9K0MkLDuSVH5dzVjtsQr3LuagdLJGaFVzl3JQ3HMFnrOOA1nFsSejl3tY//EK9y7moHSyRmhddxeC8CaLnuSppWRmg4t+SonLvacRviFTh3ZWXUtpvqV8I43q/Kou0oIlAmwlEctRPtc5myJ3r4D4MvE+EQi7J3JBAoU/ZIDNP0nSwTYfoYFwu9IlCmbK9wHl1lZSIc3bE7oZ6XKXtCB94POzARVn0Z91jlo9+G1I1RGVdpxj468WEaun03QrFqncrG/FDZmIyJJyaghjqWRr/0naKJoWd+vHo8FGjxQ+Vjvpp45F9MxrWXu2/0t/iZqzMkH4pV61S+LUaVj8mZeORfTEbtdSmnpdf3JRSr1qlsmy8qH5WrG6MyajCzRCc+TEO370ooVq1T2ZgfKhuTMfHEBNRQx9Lol75TNDH0zI9Xj4cCLX6ofMxXE4/8i8m49nL3jf4WP3N1huRDsWqdyrfFqPIxOROP/IvJqL0u5bT0+r6EYtU6lW3zReWjcnVjVEYNZpboxIdp6PZdCcWqdSob80NlYzImnpiAGupYGv3Sd4omhp758erxUKDFD5WP+WrikX8xGdde7r7R3+Jnrs6QfChWrVP5thhVPiZn4pF/MRm116Wcll7fl1CsWqeybb6ofFSubozKqMHMEp34MA3dviuhWLVOZWN+qGxMxsQTE1BDHUujX/pO0cTQMz9ePR4KtPih8jFfTTzyLybj2svdN/pb/MzVGZIPxap1Kt8Wo8rH5Ew88i8mo/a6lNPS6/sSilXrVLbNF5WPytWNURk1mFmiEx+modt3JRSr1qlszA+VjcmYeGICaqhjafRL3ymaGHrmx6vHQ4EWP1Q+5quJR/6FZBozalWx60hoH6UhxSHZLnXT1K3+hGJNrVMdWob6aRvlccXLjTFnPwWvHH25srOYX+pTLNbUtpgcdmYZj8Y1rVJj1dK1E6rT9libylAe1/diKP5QnYsF+20yxxUvH4fU4xS8UnV1kZvlez0Wa2pbTI74ZxlPF7xz+misWrp9Q3XaHmtTGcrj+l4MxR+qc7Fgv03muOLl45B6nIJXqq4ucrN8r8diTW2LyRH/LOPpgndOH41VS7dvqE7bY20qQ3lc34uh+EN1Lhbst8kcV7x8HFKPU/BK1dVFbpbv9VisqW0xOeKfZTxd8M7po7Fq6fYN1Wl7rE1lKI/rezEUf6jOxYL9NpnjipePQ+pxCl4hXY1ErfvmRXmbAZSnyIScCNV11ZXbr0nejV/9C9WF2tDZpFflKVNkXPnYfldduf1y5WM+a1uKTmRS5FRnrJxEV44Pvp3U+eP77vdL8SFFxrfTdNxVV24/5N0+GreWrn+hOm1323ydKuOXrl2/Lfe4q67cfk3ybvzqe6gu1IbOJr0qT5ki48rH9rvqyu2XKx/zWdtSdCKTIqc6Y+UkunJ88O2kzh/fd79fig8pMr6dpuOuunL7Ie/20bi1dP0L1Wm72+brVBm/dO36bbnHXXXl9muSd+NX30N1oTZ0NulVecoUGVc+tt9VV26/XPmYz9qWohOZFDnVGSsn0ZXjg28ndf74vvv9UnxIkfHtNB131ZXbD3m3j8atpetfqE7b3TZfp8r4pWvXb8s97qort1+TvBu/+h6qC7Whs0mvylOmyLjysf2uunL75crHfNa2FJ3IpMipzlg5ia4cH3w7qfPH993vl+JDioxvp+m4q67cfsi7fTRuLV3/QnXa7rb5OlXGL127flvucVdduf2a5N341fdQXagNnU16VZ4yRcaVj+131ZXbL1c+5rO2pehExpVrJGpROhyoupfbUY1qqW1aan2XUnVomapD5bVs6+fKEesw3rqj1mnZpm/YH8Wu8kBHbdYyIJJcpTq0TO2o8lq29XPlfEz02C1j+lTOyIhiV3es3zzb1Ectc3whXnfT+LV020L7QzmMyyvmg7ZpGdKXWqc6tJxWP1f/MFbHmNZp6TQFd5EzG4rl5eqvW4aFtmk5bOiwozq0TFWh8lq29XPlQphonZZt+ny8YvJqW8uYbFub6tCyTV7bVV5LrW8qXTkfEz12yyY91KuckRHFru5Yv3m2qY9a5vhCvO6m8WvptoX2h3IYl1fMB23TMqQvtU51aDmtfq7+YayOMa3T0mkK7iJnNhTLy9VftwwLbdNy2NBhR3VomapC5bVs6+fKhTDROi3b9Pl4xeTVtpYx2bY21aFlm7y2q7yWWt9UunI+Jnrslk16qFc5IyOKXd2xfvNsUx+1zPGFeN1N49fSbQvtD+UwLq+YD9qmZUhfap3q0HJa/Vz9w1gdY1qnpdMU3EXObCiWl6u/bhkW2qblsKHDjurQMlWFymvZ1s+VC2GidVq26fPxismrbS1jsm1tqkPLNnltV3kttb6pdOV8TPTYLZv0UK9yRkYUu7pj/ebZpj5qmeML8bqbxq+l2xbaH8phXF4xH7RNy5C+1DrVoeW0+rn6h7E6xrROS6cpuIuc2VAsL1d/3TIstE3LYUOHHdWhZaoKldeyrZ8rF8JE67Rs0+fjFZNX21rGZNvaVIeWbfLarvJaan1T6cr5mOixWzbpoV7ljIwodnXH+mlbdI1aFRqWaMfiMdhygeoS8qzhmubQuHj1akcVS3kginvV3WXQEvqk+KhhoS5FPsHsqEgEL+y59kc7zuYo14fl5WV5MiSvnv1TIPrW27ObC6FOscKZglf7kBS82jFyJQpeLhrt+4qX9148kEcPHwwG8gRiFWhXtSgSs/AYGx5kUw1/mrZcvHq1o4qlLNddGdMjghfjo7BmaOxVdBF8GAkIQHqduCPaZ3owi7GdNVzTHBoXr17tqGIpy7kr4y0QwWsRzhuL4MMImsyzXifuiPaZHuhbZppGZw3XNIfGxatXO6pYypxz1xhRq3oY0JCD5t5AGvw2/7htQsTs5OpSW6n9jG3+SYfUPmrDLzWOoB5pNO0BO0F5X7lzHLOTq0vVpvQzdvlXC6f0Uf2hMhYHYBlTASOBqpD6YV3MTq4uVZrSz9g1QdheKX1Uv19qDNQH9YhA05s9KO8bqI9jdnL0+OpT+qrtleWVanV1VYha2yulr2/PP1bdWh/S6csgG5JTHbGyq67cfrnyMZ+1LVVnqpzqjZVddeX2y5WP+axtqTp9ua5zC7tddfn90BXzw5ePyaIrZfN10sfXmyKTYguZSXT5fX0/XR98Wdpi8m7f2L6v19W5P9iv9vb2qoP9/Wxbrl5X5yR++3qa4jK2+ScdUvtEdVlV4yJiw9gK2Mm1a/Q02MnVpY6m9DN2+VcLp/RR/aEyFgdgGVMBI4GqkPphXcxOri5VmtLP2DVB2F4pfVS/X2oM1Af1iMCxuO6q8QrG6IMSOW7Dq9wzjoKneAVxZ24hLo1+u388qnX8KGYnV5dqT+ln7PKvFk7po/pDZSyOcu4aRUyxojaIuwiUc9chZm14lXPXIVbsKV6NcwshafTb/WPEYlvMTq4utZPSz9jlXy2c0kf1h8pYHDnnrjGiNmTs2NUpej0G5oxtj1rHVc3KzphlMTxptmMQdt4JXsOkMXrqxkKZSYU4MSleSX5OClaSkSkKGZyWKjJqXaJ2ihaL6oJAQaAgcGQRONjjs2X/6Pk/hQ/mWX38zcrO2KCaz8ex2qyKIOzluisLwzHhuU2IMU+6VQQnRTdVJ6LXFPCa1RSalZ2xeSCGJ70HCsJezl1jUGdVzG1CZHnZLBycFM3iJ75lCnjNagrNys7YHBHDi3TuGiNq9RxIyWaO9cBWKdlcHx0WOaD6dg61zGCvjscLq5NhPw5z7Cn2Do0dsGILtdmW0f9Gb4b8aO/uR8ZuqpMtZkIxhPSHzOXgFbLT4lpvzaF4uioPxhECJ2DgyOCVGE8gxFJVECgIFAROPALluiv9OjXnc5GJFfwMnsGMM3Z7+mwMxRDSHzKXg1fIzgygMiZC8XS1HYwjBE7AwJHBS+LJOW8EQh1W+XiZYw8v73DYN8cH385QySx26gCa4shxwY/DHHuKvUOjPmdu0cG3k+PjJLKheLrqC8UQ0k+dv+XgFbLj65vWcSierraCcYTACRg4MnhJPDnnjUCowyofL3Ps4eUdDvvm+ODbGSqZxU4dQFMcOS74cZhjT7F3aNTnzC06+HZyfJxENhRPV32hGEL6qfM3H68xopYOfkf/2FfKsSrOnbwhXdOuS4knxwdfn38c03XS8AphE6pzMdO5RV0qXm06Xf197/dp29flH4d8d/EKtYfqUvSG+vVSJ8bnar+XIIqSgkBBoCAwWwT0XJ/6uYh38zrX9m3X1+cfx0bipOEVwiZU52Kmc4u6VLzadLr6+97v07avyz8O+e7iFWoP1aXoDfXro65P274u/zjkr+KVOrfQkaI3ZGvSur7t+vr845i/Jw2vEDahOhcznVvUpeLVptPV3/d+n7Z9Xf5xyHcXr1B7qC5Fb6hfH3V92vZ1+cchfxWv1LmFjhS9IVuT1vVt19fnH8f8PWl4hbAJ1bmY6dyiTvFadgUm2W8y7hqdRP9x7eviBlYFr/GRdjFy9wtW41hR42LkShS8XDTKfkGgIFAQONoIlHN9t/FzcSvXXWEMXYzc/XId0Y6XK1HwctE43Hfn1GFtuQdysQjtu7iVc1cIodF7IB+vcI+TXeti5CJRzl0uGof7Ba9DLHL2XNzKuSuMnIuR7vdG1GISpaqYY7MQs4xGebODxug2hhXN9cwteI1ixVETXmaOjYuf+JpGvE48MgWAgkBBoCBwfBAYO9eX64jGwR3DCsmCVzZe5borDFnT/CrX9Il4lfdiGCipbZpbnL/K/BqHrQmvcu4ax4qaRrzC4ie+dgyvcu5qnBNjWCFZ8ErGq1eidswqo1O2JAQKVEkwjQsV4MYxKTUFgYJAQaAgcDIRKJ+JyeNeoEqGalSwADeKRznqB4Eyr5JxLFAlQzUqWIAbxaMc9YNAmVfJOBaokqEygsE1avNUWGn3Gz0dBMoD+afHXfT22Ud9XAR/Qr5M+pS5aWCFzkXEC5/K3GoecX9+FbyasSotBYGCQEHgKCKg53l818/pcq5vHknFS7EyuLkHzV1n0qL+Gb9mYjFuRP1RiMrcKnjFEUhv1blFjzK/2nFTvBQrg5t70K5iqhLqn/FrqpbSlKs/ChFluWdsxq7g1YyN36JYUV/ml4/O+LHipVgZ3NyD8S4zrVH/jF8ztRw2pv4oRNPNqBUf1FDYndnVauCzs5hmaVH9SvN+9lIuXosyt1wUXP/c+lnuN/mwKHi5/rn7s8So2CoIFAQKAscVgUU81y8S1uVzJ280XLwWZW65Ebj+ufWz3G/yYVHwcv1z92eJUYqtRcQrxe9ZySzy2M0Kgxw7Ll6LMrdc/13/3PpZ7jf5sCh4uf65+7PEKMXWIuKV4vesZBZ57GaFQY4dxas3olYnqJY5zsxLFhD0NWsfFCctZ22/i715YeX6WvBy0QjvK0ZahqVKbUGgIFAQKAgcZQT0HK/lUYhFryMoZ70pTlrO2n4Xe4pXl7599Sl4tSOpGGnZ3mMxJOY1vxQnLRcDjbgXilU5d8Vx0lbFS4/nUR7F+TVrnBQjLWdtv6u9ec0vxUnLrv7Psp9iVc5daagrXmnS05HS+dXb0ge4qUqn4/IUtLozdg7Oz8HkZCDWeM3j5yNHDSsDVcFrsvlWehcECgIFgYJAFIGj9tk48uSbOTg/B5PR8WttLNcRrRCpQLnuUiTSShevedzAHdX3okF3Ds7PwWTaRGqSKueuJmTG6t33YrnHHoNnrMLFq5y7xuAZr6jfi6ZhDieSOZgcxyCnZoHOXb1l1ObEPw/ZIzdJ5gFSsTkxAmWetUPoYuTut/csEgWBgkBBoCBwVBAo5/ejMlJH288yz9rHz8XI3W/veTIlCkYnc9xnHXWZZ+2Iuxi5++09T6ZEweh4jXuvGbWLDk2ZvOkjVLBKxwrJglfBKw+BIl0QKAgUBI4/AuWzMX2MC1bpWCFZ8Cp45SGQJ13mVzpeBat0rJAseBW88hDIky7zKx2vRcfqxGTUBodMR0fLoFCpLAgUBAoCBYGCQEGgIFAQmBgBvd7ScmKFRUFBoCBQEJgBAnrO0nIGJouJgkBBoCAwMQJ6ztJyYoVFwawQONFErZmv8q/M27TptgRQBa8ksMycKnglYVWECgIFgYJAQeBkIKCfjaY8GSFPFGW57kqHT+dWuU5Nw0zxMnMsrcuJlhridaJRSA++nLsysEKUCSYvM8/Su55IyeF7sYCVNP5DvJKki9AinbtO1NIHoalX3uMhVJrrCl7N2PgtBSsfkXJ80hDgw86/CTzQRdrdxe1PGjASbxM2is8JhKSEfEIQKJ+NeQNd8ErHq2CVjhWSBa+CVx4CedJlfqXjVbBKxwrJglfBKw+BPOlFmV9JRK3eT8/D6VzbyM/DT3f45+lDwcsdifh+LlZom+fYajTz8iEXr1x5ja+URx8BS0IeVOvrB9WpUwfV6qrOhqra2Vkyr/39qhoMlqoDHnHbsB3UrKVfuuJLDhOs+1q6cqn72FJ7bh90TqJ3VFc1xGZtzdobDKpqd1exacbF9S/kp2sntK8x9BlPyE6pO7oI6Lu1+Z05GhvyqbKjPfs7mqcPBa/0cczFCs3zHFuNbF4+5OKVK6/x9VnO04dc28iXc1c6BicZr9y5xXuq4JU3t8Bsnu/HLmOMz31subZP8twC75OCVxJRqxNw1pPCDELGSKjorP1UfNyJMw8fTPwKQsKZTkXn4atiNlcfauPwRAlwDU8KJxEvA1UGXrWoDnMpTxgCS0sH1bIsrLOxcVCdPz8QshYAICSr6vlz2ZM33c7OsjmGoFTy0IVJSUglJrV0ZXQ/RDqGdKp8U6k2BuKU2lfdlNR10evac0lssNncPBDCuqr29w+qZ8+Wqr29JTm2qxL5JLb6R4mPXbdlGZy+4unqQ+m3mAi45/qUD0Y911OmfI5OI+p5+lDwyhzRerDKdVc7bu7cSsFL3wftmmcjgT+zPCe4eKUYVrxm7aeL/jx9KHi5I5GwXw9WynsRbfMcW41mXj64cysFL/VT/Z53iT/l3BUfBR2zWWOFV8a2OpAwUCo6D18Vxa4+ZBG1CVioP/2WczPcHEbTYOOqDkZz7ym3HCG8poxEXH3HwVoEeGftg4GqxivFdi0ax7+0HiMEDgzh+NprB9WlS5UhZjc3l6ozZ5bltSKErZ01ELUvXw7kdSBE7UH16tWBOb53r6ru34e4tVmrSkiSiXv16qC6dq2q1tYgdEchc48hh9EPf0n/p0/t6+XLpWpra9lk8TaRrOhZXR1UKysD8X9Qvf76UnX2rPqsugbVixdL4u+yZL7mLO9+UJ0+fSA6D6rXXiOTlhfYLFXnzq0ZbAYDiFewOBAbELaD6skT7FZyvCzkNvYgvwfiF5gcVJcvq3+jmMSOFK8HD/are/cGBpeDA3R7wMaUlLaTgcACToly3ZU39ZrwytPSszTzCscyt0WYjpP6sHn6dHXxwgU5h58dRv9UTvKPnzypdra3h3W6Y6Cq8UqxXYtq97mXKT5Pxcm5Ga6q5ZUVuY5YqVZXVuWaZdXs7+7uVruvXlUD+RmR+yUwsS/EmM0Rr6bxX7Rz1+rqarUhGQebpzbl2u2MeW1tvZRrtKdy3fZSrmX35Ev2V8FwFgHeWftg5rX5l3Z1WYsG8ZtH5azxGsY4N8NDD8Z2mt6LCzFmRwivMWATKwxRa66Z6gsnvZFz+8dwqLtN5TbP2I0Zd52U/QxRr2f80I9R8Wr6lijmh68rbjmvdRHw0vjwXHGI4aUyoUhDukJyXesWHS8A9PHxj93YTwJebrxlf1EQIMv0QG4+B9UHHyxVH3+8IWTnqpCS60LYLsvNyrKQoGSj4q8lZyFod3cH5vXzz7vV//7fL4So3ZObmBUhIzWb9EBucvarDz9crv7hH85KZi43PfHlByA7X70aGAL422+3qu++26nu3t2vfv55RYjaVUPghslalmnYF0J1v3r//ZXqb//2dPX225sGYHR+9dVLeW1Xd+7sVw8e2OUbwnr8MVFs9quPPlquPv10U8jZFYllzWCzvm6xwQb4qO/37+9U+H/79q74D3kLfgPBeU8I2oPqv/2309Uf/3iuxtS3GT/mM/6f/umJYL5tspoHA3BZiXcqrQuHAG+n2OdBV4eNzgzFGaJZLunnmeqvTx9Vue4ah1GxoiUFL5UZ1zTKocbkQn1T6ozODMUZoinmjUwMr2led507e6567733qhtvvTUE+rvvvq1effVVkKjF2UXCS8dC34vGP600yNp/gaphq2IfkxkKZ+4YnRmKM0STPVkVknZ9Qwi9zVPVmdNn5IvYDfni9Zl57e7uVK/29qoD1n1ytpgfxx0vjQ84FAedX6Fzvco48A13Q7qGjRPurMk37JcuXpIv3F+vrr/5ZvXm9evVw4cPq2/l/XtfMg1evHgxRtTGfO3qTihGxWua564u/pr4M0DIEE12R/FS3UOsREPhu8ZhbMIr9F6kt+I6rmn4EReVCfVLqTN2Y8Y9JRmiXs/mQ8UKCdWv8yuEl8qENIZ0qdxYRi3CMWXa0S+79vP1HKnjExn0kRqho+ms+449mhEUr08QAixvcOrUvsl6/eCDjer3vz8rF7Mb8lo3xCoZrhCR+oJsXVlZNscQkz/9tF19882WICYZJ7Jm7ShRe1Bdv75a/eEP54X43RDS1xK1LBPAi42LLV7Ly5YM3t3dNwTw2bNk8lZiS26OxM6LF/tCSGJ3/BOO/mfO2KzXW7fWqr/5m/NCENusJ/yGcIYo3dvbkRuug+rxY2M6+o+s3tOnyYAdVO+8UwmBfUriOFdduLBmiFr4aGIAHzcG8Ll7d0v8hrjdF3v70k6sA5NRe/78kpDJp6r/+l8ldbne8BFdlgzX2ubyzp0tiellLVBOOM1ILXYLIzc+mxfb54m9O5FBT4xaURBB4JRkyp2RLFey5cyyMPJZkvK+Cp05td++nNh3d3bks2hXvhDbMa+zZ8/IZ8G71W8+/VS8qb+ckyy8O3fuRLxbnKbQWy9Ul+Jx134pumclQ+bsmvzUZ11IPOaQfW1Wp4SkPS0k7TmZU9Q9kYxpXltbW2YebG1vVS+F2Hvxgs9g5kFoJs0qimInBYH1tfXq4qWL5kuW9+XLlvc/+KD6/vvbZkwZSwh4MmvnspXp0wp76HwTqmtVJAJd+6XoXliZExn0YoyGIWq5sID9ZdOLDHvU/t/07dCvXfNsJFLmno+JiVn++fUpHnfpk6J3FjJgxRaLgTYfU1Mn/2L9jGLvX0iXJ7LQh13xUqBOGl4LPZjFuTEE9Obi0qV9yT6thNhcEwJxs7pxY1OySVblBoUs1n352T4XsHvDDFp+7k9G6cbGssitCJG5apYCgAiFSEXvYbYqWbVLIrsi+mx2LoQkel++3JebajmvCMuJLpudaktkbt48LTdLK2Ljuci/EMJzr9reXpEX76zDdxf2lpcPqosXK+mzWr355oaQqdZ/gqYd0pkM28ePB3JTvWewGPXTVA3/0caLZRs+/XRFsmlPCTan5fiUyTCGcIY4fvx4Vy709yTjmMzaZYML2Jw+vSr+kJW8Jv4LkyubqDMbMZOlDL7YYNvZGZgXhHTKhpySxKo3pV+RWSwEDmfxYvnV5o1/jRCS92PjOJSlEOrr1/m6/PZFPu56HdEVL9NPADmqmHXB68qVN6rf/e531a1btwzxxk/WzbdnE0yMbVnK4P79++Z1V4jYu3fvyrn8dHVNMvE+/PADcz7n/P2T1G9IBua8ti546dzC59x5chzml8YMCfuaZFheuXKleuftd6q333nbkP1kX0Lekk3LXNra2pbrju1qS4g8yLz7D+5Xn3/2WfXFF1/IF7UD89LPcn8eqC2//igcd5lbxGXmiPzLjd30q/v3jQ/j+Zqs63Xjxg25Fny7ele+fd8Xcpb3788//1y96IGk7YqXArVIePWNf0hfF7zMHKmBOol4tcXst3NcrrtCs68+T0mTi1lXvEw/T5daHWbUuoa0MbWcpG+qjWnI6ZucMjeGXPlp+D8vnW14hbAJ1aX437Vfiu5pyujcwkYuXpPEPEnfaeJRdB9PBLi5uHTpQIjI9eq3vz0rZOQZyYC1SwaQJQpB++zZq+rRo12zD7l67dopQ6pCrkI2QtRCXJIVqjcrlLovS4MZeWRZQgGScW+P5QD2DIkLcbm8vCoZsZCrciAb5C0k8LVrm6bPvXs7QrBumZvjnZ2VOov18N1CxurFi0vVu++eEqL2lMl6VV0QmWQIs1TDw4e7QqLKTxel8pBMHh9b6/9AiNmq+tOfzpoM3UuX1oxeln3Y2xvIjdue6Ns2ZC1ENC/iI+MW3ynps7m5K7Y4i9gXmcOscWuzfG22Mr6By/b26E8qfc+IBT0Qu3KPUePgS5Xjo4DA4ew9Ct4e+mimoBxS5saQK39o9ejvteEVwiZUl4JE134puqcpo3MLGzl4Xb5yufov//W/VH//9/8g51UyIzei5/eUGFi78vPPPxdC7nPzefHLL7/IuXxTPpOuyeckRK39jIOw2xB789hcvNrs+3PCP27r77ZP0tfVM+v9EbzMNcZm9cYbb8iSTx9Uf/d3fyevP5n5Q6Ytmdnur4MgZCFpnz9/JssofWUyMb/55hv5HGbJp7QvWGcdb1/2ct6LarPrHOnaT+02levra5JRK0StLHvwlixd8rYQtVtCvl++fEW+YL8j17i/NHVNqnfnVi5ek8Q8Sd+kwKYk5OLVZsKP0T9u6++2T9LX1TPrfcWrbW6F/DqqMYdiya1rwyuETaguxW5TvyFRm6IkJKOD32Qg1KevujYAfTu58n7/Po4LXnkoznPMcm3nyuchkSY9Tx9ybefKpyFQpGaFADea3GDIvafcfK4LQXvKPBwL+z/++FJeW4bYhKR9+nRPyEG7Lu3t2ztCQr6UF1mja4ZcvHePhzDE15/VuMiM/fzzZ9Vf//rU3AiRcQtpSfYs+t56y2b1Ug/xefHiumTKbspPD/dl3Vce1HU48/RmGSL03LllicEu2bC+Traq3OybGC1RfOnSulyQQyrbevwJkbVW177gsi83cetC8pJBTD8eaDaQdXNfiB8vZa3bneqXXyCw900b7SwBQRYtpDVxPngAdjyAZPyjGv8grCF9IaHB5P59SN2wXxY/Yq+qL7/cEaIbUpvXPD698aJsnRFgbkrneYxcrt1c+c6YRDriA1vBy+LQ9n+eY5ZrO1c+FDuZcVsvt+Sc+0zO+Swx434W2X1IN8gafurOeZ/Phv191lnflS/JdsfU7u7wa4ktybR7YWQGIk+/FdEDkceGjmVZBkgsjPVPrciNP1c+1Y9UOeyzdY/Y9u/yPzf2Jvnz589X5+WhcGRVfvLJb+SL6o/kS96b8qXzWXNNRPbsK3l4GCTsvqxHC0HPFwDMHfpeEsLv7JmzcrxezyOWZVJkRiPT2qOM12hE0z1qGrNJrfLeNeS7vHd5/9qXJeOX5D1tzgliJGecpuVrTqzz9CHXdq58Dg4psthnyxlj22Py/7mx58pP7uG4hoLXOCaxmqYxG7/7i2kJtdUj0TU1OqQyp64pMF+HTphUeb9/H8fGh9qRWeOVG3+ufB/4+DoUL0rIh1luufHnyk8jliFegtWM4TKkATGZsUoITvFKEC0iC4gANxW8IGpPn14yWbJk0rIuLBsk7T/+46+y/uyeEI2VkII2e5NnaKyvvzIvlhq4fJmb1krkuFFxb46bg2Yphc8/f179z//5TPram17I07W1A/kJ4mr13//7eZONSobt6dPLJiv11q3TJiP22bOXQpKyxMLoO8SSq2Tgyk8ZZS1csn25b8JflgjgGML33LlVIX9t3Hqz7XoKJisr9sFqPPTr6tVVk43Lcg/oY8mGr79+Uf2v//VYSNV9uZEnQ5g1e+kHlq/kBUZWz+7ugRDM3NC7Vg73IWkhfyFq//Vfn0qmziuPZDiUdfd+/ZUx4eOfOMHdbS37RwIBmROzvo5QXJiOKVNGp22qvOrvszQ+1I7MGq/c+HPl+8RJdSlelLM+L+TGnyuvMfrl3p4spSNPcH/+/LkhYyDQIF7YlKDhfL+8TLbtpqnjXA9JywOidnfHn/a+I23b8pN31iGFtD2Qz0pUQszyBHn6sy0vrwxtmYqMf7nxq3yGif5Faydm/V7UQDA/6bnr/PkLJqvyo48/qf7wxz8KWfuJXBucMy/IfohaSjJoIWxfe+01M+aQtWfOnJFrktdMuSbEP0Tu0tL4/MFfA9Wc8KrNZl/Tp+Kr49FnqXgZH1IGOce4vHmXl7jetNec9nxQZ05LvXlz12OWYjoX3xxXU2WHeInDKT6n6k2Ry41f5VN0T02mduIon7umho2nWOcW1bPGS+cKZcq8zpX3Qu3lUPEyPntOT07UolCj7MXd6Shx3TRATMdMslZvHJL7zUNw7sN7lMAKDNARdz8QUXNVbqz6Xpz7HGsOqbQ0IMCNJi+WLThzZqUmMZdMluejR68kc3RXCFiWPyCT1GZucm8qyQfy4oFcAyEh96R/JfvMHJuVYDIT6pvYkGl+4o/+H3+EzKzkBkh1VmY93GvXtmX5gpeGdGXtP5ZMYOmCa9f2xMdtuZ62fmOHG+elpYEhSjc37bIDuvbr1ta+3GTZJQVY/xayFvL3zBniZY3XJXkR1+hGbHJfVvFQMjJ0yabFzpMnr2Qts53qhx+2BZt92bf9BwMbN7isrQ3Ma2NjIPbsu8JmvoZJbGCCSGa92wcP9kU3D087fCDbqGeHRzs7EMR2TJSQOGwtewWBfhDgXa3ndkqO57nN235O7IpbTp9eZY8SWIHAc9znie13frwjX5KdMVmRZEbqeZEsOohVSDbWpoRoo01/yv7DDz/KF2XjDwOD9P32u++qB7JO7bNnT012Je8A82c+e2xWrrGT4+yEsdJd34uY1f2A2ulUqdHpaO9Nq+umjxEZse+/976sNfyhrE37tlxfvC6k/FZ1/949WX/2QXVPysfybehLqYOoRZ4XhC2ykLgQ+cyF1C1dMlXj9OSO7blLBsG+X+31GPtd3786v0LjGqqb3mjNV3NurP57cabe66DN1Gi+MdfNueJVu547xvkR99djEc9dExO1ZgCmOAoKWshEqC42XMirPi1zdcT0t7UZW1M0qDHhh2/GP07yVYRcnSG9bXomacfnaX4T48bm4+Mft8Wh8uiM6W3TM0n7rPDSWF1fQ3Vuu79vfPUry/GRQkCJWkhIfrbPMgNctJLl+fw5ROSBEKrLcrwsN7U2c5MAIUo5Q5GtSsYoGaqQkXY9t/aZxHJurPO6tYVN1nW1GUnoffp0IOTwK8ksfSH6luTmaN34xjq4LItg1521DwNTXyBW19cHpo3lE4iDNV95QdaSBXvhAg8HYU3dZdknu3bP+MzzI5RTVjzIjr1yZVmybE6bZRggd8l6vX9/22TT3r27K6TtsvEfXPRsDXZy72aIVhubzcBiX7NezU0Bjjsb9lkCAfKVh6WZn+fB+ka2wQCSgLEA73bMI6pK05wQMEM3Jdv6GRaaGaG6mBvIqz4tc3XE9Le1GVtTNKgx4Ydvxj9O8lWEXJ0hvW16JmnH55N23fXk6ZPqiy+/rB4JubbBg6DkIVA6ditC0vIgoYsXL5gvJq/Lw8D4CTsE3KNHj6q//OUv1f/5t38bgxwijnUrH/3yyBC1yGdtvMHNRJAvFqWj+uPqCNW57f4+8jq3VOfwM0U/yPxOPR8bn3Mdz/BB4wuZCNXFVCOv+rSk7vXLr1cfffxx9cH778v+ZfM5+lAeKPX97dvV7fr16NdHZo6QMXtaHiK3eXrTZOHeuvWe1Ms1wOPHcg3EL4n4hU/YC+NvktNce4mvTYrC6oex0eyb8Y8bVAyrVd4PResPBeuaTF+H/d0d/RCsdaG5z3MX7w2r2o/KdcLuY3ss1nExp8aOGQZc7Xk6HHUddvvGy3dB4wrFFKrzjS3Y8AAAQABJREFU+7vHxte6QvVymKvH1Zm7b2xN0aDGFTIRqov5j7zq0zJXR0x/W5uxNUWDGhN++Gb84yRfRcjVGdLbpmeSdnxuOndNTNRO4lhbXx+0NvmUdgNGimCRWQgEct9wC+F07cQ8fJ+FTd6XfdhBxzTe44s0B467L9wYcK0MKcqLi1rqyPLc27M/66ck+/Rw1thMolevVoRYlDX6hFPkwVZ6w2gvjptnBjaQh5iE6BwM9KejEL6V3BwP5AnbO7LswIYhdE+dYg3bFZMNS/Yvs05vaMjIJXv17FmWHbAPN2PMWDf2+fNXJlOVB6KtrkLQ2od8Xbq0Kks2sCbhgcjhJzrtht7l5YEQxKvVzZunxQeb0ctyDffubctTnl+YZR6ePyd2m0nr9rdZxWBBtrA4JxuENjKKD0fuBv6hlyuj+2B3uLljclhb9o4AAodTrndnR6ZIT9pxdxp6e3KvqPEQmOL08iz1f9jF9xeS/fqj/ByB7Fe7DqWcm+vz+uqazaa9cuWKrEP6rnz28BDLFVPywLBv5YFQ/xYgavcH+/LFm6xfy0v67NkT+VjAkL5nZL2bC7LmKXpXVuwvMDip83liP0/5wlCWWJAXmbysdysNY7q0Ap2siwrBjPy+vFh6AV18jkA+Y4t987li7LA8kfUZvyERLZFo7SBHZrF5if611TXRob/KsJaRND7LGuv7+6xLz7IQu8Zf7NMXn1bpK1+w4sPO9o7IbRs8NV6NI1aiizhXeYGbHGOPF2sOEzf6Jt303GVww45csJAVe/PmzeqtOsOaOfFAMmn/+te/yjrz30gm9bcmo1Z9YEz5Qvnhw4dmLWR8hsgFI2Sazo4b8oXBhmRyEx/zgTGH8Oel8Zv5omsqM46ijXHDp71a1v2SgPVU7TrJjIWMo4wHc575jgk2g5qZE9aemcdgKnqtv1ZO/zOO+HlKfsFk3jaiYCAEtJEVPfjIeC8bAxZRxoZ2vtBgXuMzx+6Y6fwEL75AYbzxHz1m3g4drsnOoc97hgznfYfP6I5tYLDOPJI5NHxv0AH9+CmvS7JWF4Q7sdqkgpjGw7ZlkWfO86Iv2Js1bWv9ds7b995A1rze23tl3jNgPoutHvKpmmI+9WHHzpxDV/vQeahtvnvmPdezCz5ePasv6npGoGk+D4lanSRNgl38adPZ9ubVSdbFp5ht1UtMbT40xR3T39SnrT6mM9amejWuPvFSnWqjC17G97pjF9/Utl/GMIm1qR6NrYtPdTiqaliqTipSfBh2dHa69nNUBHebfEY41qbKNLZcvGLx5OpSX0q5GAhwscx9hi4RoA/wunx5TZ6ETHYqmbWVZBRxvYusvcA2F9ky6zSzU66D7YV3YlhcP1sdbgermwxZsmLxpb7ONhf/PKCLTftxgUwmLWvJvvmmXcsWQpYM2l9/3TXLFPBArxcv9uSmd1UeDHZKyFzWsV2v3nmHtQkP5MaLG+lRnbybWCbh/Pk1I48v6Lx/f0cyfXdE77LcONQ3GmOXr/bmXDSKDHrB7VC/G62NxWbgsvSEJPbIUgusUUt28vg7Cz3YZbzIYH7xArLBZt4qJr7+cnz0ELCznBkU3mhvaqMHbW0yyIW2mG3VS79p6A/5k1IX8znWpro1rhimKuuXTfpVp8p3wcvorjt28U1t+2WTz8jF2lSPxtbFpzocVTUsVScVKT4MO9Y7EJkQfJBbhrTixFtvkEMQPSx5AOE1JJLkhArRti0kI8sc+BtytEPQQlKaE7kvJMf8JP6DDz6ULwvPVRcka/f8ufNC5Nj1MPELHU+ePK1++P529f0PP5j1T1kDFQJqfLOfea+99nr18ccfGSLxpayRax5oJuvkkskJ6XVRSCfWWYVoZY1cfIMkYwmIu3fvVHfu3q2eCQnNT/SV5IPAMj/hl5/vQ1q/ceWN6szZM4Z4AjM+X9heCdH0StbsfSwZo9+Lzz/8+KMlqwU7HqR1/fqb8ll6pTrHA7kk1u9keYhvvvlaPnN/NbYg1w7Rtzr1vzv+9L929Wp1WXy5eEHiEaLbZLSKTWyzFEEO2RWbN/gDWcoYsSwGSxgQC0QqGw+NY9mDL774Qr6I/ckueyA/t7EkHF/e8qXscnXvp3vm+mNViMsH9x+YeJlbwzlltB3+I3v71nvvmfgYK+YDhDAvxvCqxI8fEIy81B7j9qtke//88y9y3SHLMcgXELpBSDKXLwhmb954U659bhgSESIZP9kYS+bdvqzdfP/BfbO0x89yIfdS5gfr7hoZ899+XvClwPuSXfz+Bx/YWukP9sjynmJeYw8Mmduqn/fc97e/N/MEn/UhbDoW4LQmX5Qw3yDFr77xhmB+ymS8c40Dpva9X3+hIf6CJ4T4T/d+qn4Rn9Gr70/V688viPfr164bAh5fGWPWo8VXMACL0/JlyhtvXJUvVc4IXvaBgjUE4ULOIVxXbQqBfeOtt6obN26YNYzNQ+Skv9Ev7ZDAZFWDFX7i84/ynmEeGX/1jRW2Ymqb4op0SWpCr4+Vdoy1qYwdm2YdKueXsXhUJ31icr5O97hrP1eHv9+mk/YmLNGlccVkfJt6HLOtepFt80H1+WVMvy+behzTGWtT/RpXn3ipTrXRBS/je92xi29q2y0NUTtULC1Nqbdup9z9ULDGJvbkFQsm1pbiR5N+d0CaZJr0G9/NvxbnmxQE6lUdTTF/Ym307YKXaxsd/qY6Va7NB7//8Gya3XFM07BCfRlWODuxNkfM7Gpsfn3sWPU3hePOLfQ0yTXaqA30+V6M+Rxr833sgpfqiOEwiV7VX8rZIqDkHvegLBMAWbu0BDm7LKThutx8bsgF7rZcfHMDyIU/GaKWiKQvxG3wXjMzDHRZfXaGcQFP5qy9kLfK8BGi1r/mlSQHuThfEuJ1TW5CyahYkgvmgSFqyYBlDV3IWkhalheAsOWBY6yR+/DhzoinepPEO35jw653e/o0mUsQtSx9sCtLH0AIKEHaNOvtjYzv64ix+oAY0Q+BfPnyiiz9AFFL1pS+qxG0dsCAZSnkvkk2lo6wY6DjSG3Zjg8CofOtzopQmxt508x0ZWL7TfrRm+qDr9/0086TOlgrV3Ucst+kNtZG36Z+tDVtru2QjOpUuTYfxnR07jimaVihKocVzk6szREzuxqbXx87Vv2Uof7UqQx6muRo8zdIz13JZtNNPlKGG0QtmaYQKe5DwzjfQ+KQEfrixThRiwJ8QM5RN9SrO5ao/cD8LB4y5+q1a3JOt6QZJBeEF6TNv/zLhnwePTG6qAsRtcZv+QeR+Ic//m31pz/9SZZe+KX6RUg7fNx6uVWd2jxlbEGYrkHwSXwQyRBcP//yc/Xvf/6zIW3xWddYxVdINnx95513qo8++rj6+KOP5DPnsiEIIXH5cCVeyDawIkOZzydsb0k9sUAqvifE40fS95qQkNck1n/8x3+snsoavtiCiOQDKjR21LFpGyTvzZu3qg8+tNgRzz//8z9bwl1IYcXO9kr/r/r9HmSFnj13VkjDNwy+PDyMdYuxA1HLurRffPG5kMRPDHlPVq9u+lmOLOsVQ4jSh3G01w0qOVpC1DKGbwnRxzyENP/888/N6+233q4++c1vhPi+bgjjjQ2ypy3pBzHLEgxff/219NkdIWrJHmUc3nzzzer3v/9D9Yc//EGI29NGBzGy4RMkKv59/vlnZozxnTnC2OpYqLebQmKyXu//9z/+h8xPe40H6U/W8I58QcC85mWySiV2yEl0Q0z+8z//k+h8YXRD0psvBmoDkMcQs7wnfv/735uHtkGiQpjre0T9hezk/YneL2UZk7/8v/9n3is8KBA7vs/qOyVE7UfyxQZzEz8ZY8aI7NddwZyseI2f+nXnYYOuHnef9w+Zv6eExOY980d5P169+oa8Z64Y0hf/ufbiCxJeLKPy8OEDM2Zb8h5iPul7ytUb3K+DOyn3jGAbG88gRnWl6TcFvNQmqv3zvfoaatN+lH4/ty1lv0m/i1eTTJN+47v514ODtRFVx2HMn1gbfbvg5dpGh7+pTpVr88HvP5yY2R3HNA0rzFnZDGLtnTo5lJjyTpO9SWJUgKfserdZMqFT08Ar16UmHxr10GGSAW1UHG5Qc+HWwxN8dhxNCgP1rg/ZdurO2f0CfqRUub6G5Gc4dCHzpW5BEeAik4vWFy8OJAtn25CzV65sSObEulz4bkiGxRm5yF6RmxrW6uPBXPyMjnVfIQkP5OJ5SYhFiFGbxZF6QhWzcpFeyUX/viFW5f5FCNRKLn4rucCuqps31+Unqpvig12fdmuLZQe2JHPnpRCwchMoV7NKTq6vHxiC8+23T0mGihK1+yK/I/Jb4h8X+fvVrVtcqNt1bNHLsgpnz/LTNH6qp/7bgeImB/L0cN1eSGpufFiawWa0cj/ax8aNMOTy5csbcvN71sQAPiEsuVkkBsbhs8925YZxIDfVZPrM6kzTR8RFRx8INI34JOd6+s5ka3J+isabTE6CV667TT406qHDDB1Uc03+6PzIjqNJYaDe9SHXjqEZxUlOh5wrdRsn0qTREaAfMqFNayl9f/TzE/Lz5q1bhhhj+QOIKP1ZO3ohcSDpIPgghr/++qtqWwg4ftYe2rADaXfp0kVD4tnsyQtCHtplAchQvHjxkllqgf7Ea0ipmjiCpCJzEKKNLErW62VphteEzPpQCNbfCDnIQ9UgD3n4mpJYy0LWQj6RZQoRiM/8rB2ijYzZr2VJALJ3iQ2ymIxQiNrr13ldr1h+AsIYgjC2KY6Qi9ekL8tRXJNsyDck25KsR7IfIetCRHaTXh2npnbqIQ3PCTlss1gvGNIR8g4SEDKcZTAsmS/LUwih6c4Jo1/+7e29MoQ0BJ5mZ1u5sAfgSzYppKr9wgA5vpg9I5/5r8sY3DCZqvjHGOo4Qk6S1Uw29Q/f/0CzIZUhDd8UrN8j+/W996W0xCRj4m/60DxiZHozL7+UjGGWKcB3CEyNERKfjGbGcYUMbYlvR8hG5gxjwbyG2IaoxRZ+Mq+ZJx9++JEhWL/88ovq66++NpnQvFkgfCGVGWfeI+i+cQPCmuxhm+UOccyGTube6dP22o56MpDx+dSpL8ycgPw0mej1xRe68euivPji4JOPPzFZu5C254SQh2De3d0x8/k0F5gSEz4zdqclI5kYYttF8Rms33nnXSHUP5E4PzBjdeHCefFt1WCIn4wrr1On5H0meokFfCk1e5r3WHTjTSFjpO+NqGwPjbW5Rk12ljY299LQ5kOTEdOvBqoumkR7r2+yNwle9J3J1uT8FI03mZwEr1x3m3xo1EOHnh0cnp2znWn0Mq0hZs9MPPnX57dDIa9iPoTktc7069pZlWSWMXN6jVjwOgS1CS+dW0gWvNLxMuedJlAP1ZS9E4IAN5l6owmR+eOP23IxzVp+ELMbhiSFrISwvXnzlclKJbOWzNKff35V/fLLK8kS4idl/GxQ3ou8GRMvM8W0XMRaolaub+UidyAXwEtyA7UsNy5rQhCfksyIM8Y2DwAjyxQi+euvJcNDCOPBwH7scZMh1+oityoX05ty48gaYktyg7onvu1U334LmUkGCQ9FI0PnQG4EViU+S9SeOSM3lpLFgR6wYNObLq7hyepFH21kurBUwva2zfRtucY3utr+YVLuTWQjg3lDbqDPyw20zeKp3RlRwecERDlxvHz5q4nv11/JgrY+jgiXg2OJgJ2l4dD0s7F8Lh7iE8XLAFauIw7Raj6D69xCtswvOB/7JSdkD2tfQjJBgEmDIYAgtCA8qedF5iakzqaskbkrGZL8NBpic3yz5/I1yfiDVITkg6x6TUgjlmBQYgud2IbUhNSD+ILk5KfkEFWQng9/fmhtixyEG+Tsx/IArT/+8Y9GBpKLzzUeikV26Lp8abi8LGuJit/4CzHHz77RxU/IyQo2SzqIPuzhFxm5kMIQWo9l6YPn/PRGsoZDm/9exF+IXrIV8RnyGYIaYhBSWmMN6epSB2bnJSZ+fk8JuQaJCUH7ixC1/MRel88wawg7Rozv8g+fDgwRTdZp+1rDLCnwuixjAUbMCeaN/Qn+GzIXTgmGNrOUmJXcA3tIcK5FIJHBmY2sVwjPd2/eNFm0n/7mU/NQtNdfv2ziUN/1egY9vIgTQvX8+XMmvnuSrQshPTqfJNtYfMFPCEY7t8g23zaELn6z6bxGJzIQn/gOSYndh7KkA1mlipcu04DfEOSQtcTJSzOS0XtK5tyq4AMRDWbMQbu8x3mzPvTjJ4+HS2tgk42sWMbypuABSfvxJ5+YuUp/fNvbe2zi5T0HMYvv1PNiDChjG1ntv/vd76rfyuvtt98x7x/8Qg/+MzbMH44ZI3SyPAQlcw3S9j/+4z/M+6KNqFW8Yv703WZHdFyrnusp62EfF+qppsmHNvVd+7XpbWqP2RviJUIxuSbdqfVddZt+XTunOufJxcxxH8N2kq4jhkStDf14/GeQ67Gc6sTvE62j6HOf8c9DV+xkMA9/FtpmAWuhh2cezunNpiVqd+UC+aVcYNqJQpbnqVPLcuFLZg8/2bMkLUQtSwb8/POuXJySrcDaXwO5N1uSnwzKeVs+ffWivikmyOCrV9clC4IbPpu5eukSa8euScbFhlwQb4pdWcdMSFoyWZ88eSVrrG3LTwF3xIb9ub/VfSA3IQdycWzXnz17loe4LMkNwL4hku/f3xfS1j607Plzbigkm0Kuzc+cWZU+PKwF+xCjNmYuILjZsDc6du1YMl7ZaOP+gAerQTJzAdvPRSx42QeygT14sIV0Yx988aXlHsPoKP8KAjkIMPPKdVcOYidT1p6hTmbsbtT6+cnJms8MyEXImy0hwchihcCBoILMhCiDpIIEYx1UlisIbjW4ZBPy8CVIH0gxSogtXpBskItkzJLhCWkEgWSyY4UEZn1XMmH56T6fFRB8EKkfyPqjN2/eMqQT73SyNVmy4OGDh9Wvj38VfzcMUQrxBzkL4cXyBiwX8P3331dvXP3CkFusYctP3YkZGYjqq1evyVqoD+Qn+kLSCR5kaEJWES8v81N5wQdSz5xjpC+ZupeEnMUeRBd4selP1ZWQC+LkVaacu/DntGR3QgqfEXscQ7SBI0tSvNyy67GqXR1fSnONUI+NsQWwct0A1cceWIQ2HmQH/hof5CD6iJVxZF1f1uIlW9QQnjKOkKtgwFjjG0sfsJE5+u67N804sp4sGdHgatYilnnHnICsxRfsQHRelPVayf68du2qXL/sG7Kdn+SztAL2lAznOof5BrnIfAMb2sFnT/xgXvNiLPGd+azzmrlC/Z0f75j5MMShhgR/8OuJLCnxQNbLfSnLd+g8BgM2vhBgjvOFAgQpPkDsMhZkpUL+ogcynfnOti6kPjKffPKb6ubNm+b9hW98AcK8/uWXR4aAJ6MXf/ki4PV6bWL8teN6+JlnlKJXdPBegAR+7733ZYmQj6tL0o8vNlh+5MGDx+LHU8EbYn/bfKHClxrYoOTLFXDFxs+y1u5XsozDtiyvAv5N80RtL1RZz/eF8ukYOmPOJ3VcRwXyo+jzPKfOkKjVj4k+B7qrLjOI8i/UX/0EtFC7ghlrU5mupfGBfw0+dtXb1WeuA2p3xkwrXjHdsbYxhR0qpoFXV59Nv0jngtfoAANV7JurRcBr1ONyNGsEnj1bqn74gZ/Us1QA2ajb8lO9U3Lhu2lITdZPXVnhp2o2mxNClDVsr1xZFzmyg3blacm7crPDzzy5EYlnKtD/k0/OmTC5IYWg5GFaLF0AKUx2Kcc2c3RPLrZ3JaN2x/j45AkP3LDkJhe9q6sHchPE2nuSjSEEMBtk8tOnrFPLg8UgWO0aszwQjAwiMmWJCaL21CmWD2Ct3UOfOR/bl55oLHkr5upN6/W4e4k/kNFkDf/440sTq9r3tULUQpiz9MGDB6zlhp/9+eLbK8fzQaDriNKv6Vw/nLoiE9Mfa5sUDeMD/8RIn3a66uKtU7szFpriFdMdaxtT2KFiGnh19dn0i3Q+qXhx/n3+/JnJkOUhXvfv3Zd1Yn8xJA1Ezccff2TWtoSkhcRBHtIOIqxp7g2nishCuKGHEiKOpQzuyUOW7ty5a0oIISWFIGtZeuCRkH8QgJQQuefOXjFZmJ9++qlZv5Ofhd+9+1P1nTwE7M4d8VkeVsX6mtjhxTqfv5FsTX6uD2nFg81uyP57t94zPkBEQ/ZpRjDkHmTdZSHZyBLlp+UbEG9C4tLGC8KPrFX84nMbghESE+KUdvCAgNMXMWlWq84tcIlMwWgbfVm2AWL5ghCYlNjkp/TE80zGcFd+Kn/4GS+2wF4IQ9YBxvLws1ac0DWBiQsykVeIhKMPJCjjpy+pMvKM41dffSWf5Q/tw9pEFwQlSwOwoRPS/aGMORckLGnx299+aohJ1vMFYzKz78iLh2/xgmwmBsaRbGUIWuYeL9ZWZbkECPq/LP/FjIXJAjfWiNf6CS68IFeZG9iA2GVu4we6b8hDzP74x7815CUEK3GydALLEbDp3IbshWy+K/Ps//75/1Z3JSt7S3yEqEU/mDNwxM3yHCZzVTKsmU8QnpC2ENLgQJ970l8X1oBYZu1b1vklVt5XZHV/9tlnskzH19LniVyTPrZfYkhW7dvvvC2ZyJJNLl+cMBbD8azjNz5LHOjhCxYe0sbD2t4QMhj/GI/vZRmK//zP/zSZw1vbW2a+bp7aNOT6R5Kt/tvf/tYQ5FeuXBYMl6vPP/vc6IOQVuK7NjdSmDlegxab4yOdWg666qFf03UEJo2vUsb0x9rQMemW4kOuja4+x/BSP/Elpj/WlhuHL2984J8Y6dNOV13yFhueH4K+Wlf9puFxV7tDBS0708DLnNGHisWB2Busxb9em6cNZi/O1pO3F10TKmnDa66umgk2YYAz7l7wOgS8aW4dwWE9DKrsTYyAXqiyxuy9e6y/ui8X769kf1tu1PbkgtySl/zMkYdrra3ZhydsbrI8AkTthlzM7km5ZS6Iv/ySNc/sTU3MOfq/+y43cGQ1cANls2rJ4GVNXEpuNl6+3DcE5v3720Ies04tGba2zT5wayDyZMjKTxrP8xRf+fyTjhC8ELQ7OxCw3GDxk0UemAaRTMYEBC3robEGml2jVu7XjIzvN33pY2/g+n3HoBN/LVG7JzdEW2aJB2zq2Lj+QOradYIP5IadNYPteLgyZf9kIyBTZ/E33kYL4mibG3N1td/TzUzmxUnCi3M0L7L8ILN4ENX3t7+Xc/hdS8oJUcPP42/evGlITwgtQ0gJOQkRZs7x9oMlMDaim7eJ6IcY43MCYovsQh4wxcOWvv3mWyEzLUnIuqKswYo8P2mHQGRJAx7uBBH61o23JBPzQ5NNSuYtPpPpR3YvZBwPDOMp9nwW83A1ll04J4TVZSHLyMyEECOO73/43hCu/MQdAo6NuMiuhNAlGxQSzKyJKyTbpUu8Lhnf+aKXPkou89P100KgQZriryHuyOIUwhaZEPFpDHb8h1/4R+aj+okd8/A0IS9ZkkI+kYfawf1sTTQLsAZbOypyrSDZkZCc+KyvkL/I88X1IUnLNYksKSCZmMyTf//3fzcPDWPtYuotScqX15Y0xydIdOYCmcCsB0s2LXijk2zab7/9trojXxJAYpqlJyQECGaI/W0hE4kV0hHSk2UmwJqHzn355RfDWDkhM3fUT0pwgaD98osvq9vf3zZzm7hpY03YN4UsZikN9PPiCwDmt8FK5it4kBkMSclyC+yTmQ1hyYt4BzInxKyJm3nEMh4rMo/Zh3wli5WS+QohbR56V3vN8iCGfBY8mOP04X0I+f2v//ovQr5LFvAzyQIW4pu5RhbsW/IAN/w37z0n+uGuOEO2NRnikNuU4K5fIECGQ9TeufNjPU8HRv8a18iCwa1bNw3JzJcmp4TAZZzOyXxjLIgX7IPb4bQLNs+6kvkW2hbBTeND7Ujhu0Kj1FAHZk0D29BlWtVtbszV1Xpu9Rm7IWoJmgnL1gaAlQr/9/1r09UFTONrpp9d7LgRalwaj/FBD1zBzH3Vq91iKlU2JqN63NL4KhWp/bracW2iY8RefTBS53ZI2Fe/VLRNl8q3yak+v0ztN6kd7C4KXqkxK1bIa/xa11aOxdrWobQvNAJcsEJ+yjW03EThKg/JGMiF845kMDyVC2XJepHsU5uBakub+bouN1jcHNrlCVi24No1+XnbE5YbkCft7jbPRnMBv8vasXvmIt2/aIa4VPLyyZM9yfzZlmwRiNQVIU3Ry7IMB3JxPpCbD9YCIwPE/vwUUhW/rl9fkRsa+9NPbgSuXOHGx8oQJQ8Ke+21NblxWTEk9cOHrEFLi7wnZJK7L/rz0i10Q6ZtuSX+QiyTUXvnjl1Xl5tlHxP04hOycr0vhLolrZELyeb6UeTnh4B/DnamWtCpLudgdOb2y5X3ndW4NB7jgx74whnHqle7xFSqbExG9bil8VUqUvt1tePaRMeIvfpgpM7tkLCvfqlomy6Vb5NTfX6Z2m9SO9hdCLzkpPzkyVMhoG4LcfqNIVINscZ5Wc7jZJA+E7IIYg4SyxJxloRjH6IKMjdlIzvwOyHlIFfJUHz06Bfpq0v1WJKVzwLqyEbl5/Q8FAvSjixBSC8IJAijp/JT/x+FbPpBiNfHsv9ciDD9LCFb9rZk20J+QT5B8EHa8jPzX4X8vffTverxqyeif8tkGbLMA7pZA5WMSuJkyQTIPEPgClnLz+YhyCCqIA/xjexbzcCEFGT5gS35WTz+uZ+xzKmxsW4BLCRPfKtCgJIlDAmrWOEThKh5gFitl/6sY/uxrH16671bQ2xkVI0ED6li3Fk79SfJTv7pp7uG2Gxxy8T26NGvMo7fCfY/SJaqkOSSMcuXsMwDSF3mzYpgBSkJFiyNgK8Q2pDeEM3EQIYnYwSRiFsQlZDs+A5pf/l1S56fOWMfbkfMjBOk+3kh4pl/bMiHNjKN70rm9ldffWnm9S9C7mITHx9dfmSWFyDLlfG2c9vOa5a9QG6fl/jPQ73I4tUvHJiLr8mc4BhS1iyTIfuWUH7TLFGgGc/4yBqzQ3IdfHhvMZbSlz7oQw4ylex2m3V+z4wH82pZ2rDBlxEQvvgMfrzcjZHlBTZkk5NJC77oJg5sgt87kpmLf7qUAfOaL0pYKoHlPJCjD/ohad+QLzuY//gHqc82Nj/ttBo9/xvJ9H/+ONYqGxWM+dAoediATt/OYWt4r4sdV5Pa03iMD/WB1rnyqfuqV+XbdHWJw/gqBtp0qw+UXez4/TlWm8YHPXAFM/dz8FLZXLPGV8f3Nhe72nH1juFdO53ru6/TPba/kZCaSZSiUAM2yuuD2LcVKj8WpFEQ/5fj6yR28EL7+x7l+OD3HdOrRhKUThsv9bWLHTcut39CWGq2vayxSplb7crGJXJ8rV0ZV5JRozr6xEt1GjfqgxS8XB9SQ+iCVxc7qf4UudkjAPm5u8tSA3aJgGfPBnIxKw+GkLVoNzd35SKcm4AlQ4q+9tqqZHWckewJnjxtH94FSXrt2rq87E0iSw/s7BwuJeBHJNfv0k52DUQtF932J/3Usb7s06f7ckG9Lz9d25ebIbJHeXGTh047Yzc3D8Qfskwgjy0JC4nJDQ+Zsm++uS7y3ACTJVLJDaP1FdtsELUss/DOO2sS+57YGp3Vcp9rdHHDaH20dt0bSKtpsv/4i58sOXH37p48XZv15fB5/J1pfeLBZuAHHjaDCv/KdjQRYNYNt/rgOJzrR+IaBqjvXqcic3dErx4kTH9EE8RGvMmVp3MXO9pPS7WrJfUTbzVWKXOri60cX3XYutjRPqrDxTvHB9XjlqrT1NUHUbw4Icv29OkTyTa8LefubwwRBCljPtSk7fGvjw15ZAgjIXMgbyCY+Dk9ZI6wc0ICGTWt/1jj89tvv5EMxy+EAH5siM2ROxw+S0ULP9ln+QHIJQgzsv2UqIVUou6J+MyyB5CF+EaGo273JMP2wu2LhmSCnKXPWSEtIfjIAoXUNOuqbgkRLLr4CTo/eycL18a3Vl2/dl0exPQ31TXpz/qe/CQdcpa1Q8kuXJUXD46C4GODPOPn7fx0H4LP33LGVseR0u1nCDTBHR/BnmP835MHskGikfHLeGh/SLZP5AFVf/8Pfz9yDYBv+Eu2KaQ11wSQmODYtjEmEPlkwf4gP6Mn05SlMrA73MQvxg+CkU1JQiVqIQvxH595SBZELYQlhLpmbDJmZyRzGqKRrGBIUbBmnIiZZTjM/BsaPdzRaxwyYVnOgwxV1mMlI5XrFUC98uiKZPNCer6U+SGEvpD1kKGWfBVaQshv7JApzDIREo5scm0jO5C0V2VJBvyDXDbjIf7xIDli43X6tF2aAh+J+/x5+ZJBMlTtdZEStZC7GyYW5q8lap+bbGG+bCA7l4ftYZw/cIeote/F5eHc8+fIOfnC4c0bN0xmrBK14Ml8wTeWZ7goDw0zm9MZYpdxQBYckIdgviIELsuQ8OUIm440pXbX0gh0+Kc6Tdf6IHruqm24PqSazfFV/epix/fH1ZHjg6+HY/XLtNUHxwGvkbicwKeB13DyOnb8XXfM/Lam4y6+drGDfcXL7d/FflMsamBI1DYKdm0Qb1McbpNxAejqypHo1wZEHUSbWF94tdkJYaqTNtTWWx2OtRhKEBm6MwleOXaGBp2dljAcybzdEb9GDvL0hKTniVfIn1K3CAgwySAmbWYtxO3Tp/zMHkKTn6Xx4A8yh2T9u0f89I2MgSUhQwdCgG7IhfSKZKyuV7dubZiLZcjV589tpk8ouu3tfbO8wuefk2VjL7rtcgXyQJbtgVxMD6Q/r0perAG4JPWQtIfkr9x7CDFM5ixP3OWmi+txS8qyDMI77/CTysP669d5WAU3EpYEZZ1aS9Sekpi25IYVf6236GFfiV9i5cWSDOfOWTJY7j162bDDiyUN5L5IYrVP8+ZiP7SpPKR6yoPbQjpK3QIjwDxOcK9NhqncJpNgZvFFEoNsE+sLrzY7IUCxPfUNx1oMJYgM3ZwErxw7Q4POTksYjmTe7ohfIwdhPRBakFFkyUEAKQkEsaYb5BHrcEIkQeKYzyjJCoSAImtynw+uyKY20PlCHuBFRqtdr1MITUiosU0+T5chxuyXpjQrcQRRZ8gz0YVPZEy+FMJx79WeIQNVFfW/Cqn1SAhECEk2yDTI3lOSBcs8Mj/3F2JS24kNQg0CGiKa5RJYW5S1RiEF6X9DyC98//XXR9VjIeiQ0QxfsCO7FEJQyUb1p68SLMHMkrI2axec7LIRdh1gcyFRGzRtMk78xH5dsFtbXzNxEAsPh6Id7M5KxqqSqm2+Mo5kWd8WYh+il0xTHvrmbwPRvSTEMWNnsk7FJlgZUlN8oh77PIQLHHlgGXGR5clGG7K8yIpm3HW5Ad4/h3S0ER/5p3MOQv75c/ugNchNxoU2NpanQB/ZsmSRsg0zgcU3/GfDd+YEZD1ZqrxuyDIM16VkDWN8s6SmXf6A5QKYR+jkPUIczKd1wd4Qy3LM2q/ExZxjSQPq8cv6Uy9FIb5BEBO32aQf7TwEj7lGH/qPb2BqH5Cnmcv4oBvEMmvn8l5wqk2zEug6f7XkfceXJXyBsijnLo0npcTnQwRSehzK0G+SmN2+XX049CayJ8pT9LfJTIJVxLvFa2oDova4TawvvNrshAB051aovZc6HBNDvRG1I4GOHITdTRCxb1Bx0gxGSoeAqVg3F2hfLtYWMJNdNWJv5CCsKkHkEC8RTpEPWYr1i2ESawvZya0b8WvkIKwpQWRmeIV8WSS8Qv6FUK2vsSZaxzrVVsh+qVt0BLi54yf1rA/LhS/ZpHIuWuKhXWQO8VM7bgLJpLFrwbLWK4Tn669vyENITsuN2AshPeMsJkTtjz9uy/psW+aim5sOrqchhrFJYgoP+GKNWV6vXkEgH848LsrlOlku+iVzRwhYHk7Ghq8QqhcurMkauKybZ3/axoU2yzWwJi5LNYg5KSFq1w2h+8MPu3LMk4QtaYy8ZrpC1rIeLnrJ1D1/Xv2za9cawxP+433JUg82/sP17EJqIWfZ6KP7IblSdzQQOJzV4u/IQdj/BJHDz0VUpnQImIp1i332xdoCZrKrRvwaOQirShA5xEuEU+RDlmL9YpjE2kJ2cutG/Bo5CGtKEJkZXiFfFgUvPoN4QbwZAkgITUhLl6QFYYgzQ9bu1hmbUmcf2nRItoVH4rAWwseSTFtmzU3WeVUSaByP+gtHPiDMBnFLdqb9XME/Xq/kIWPohHAbkll1jx2pJ+OWpRZYsoHPQ4gxsgvtT7v5rJYlDKSNrEsIL7JqlXSDeIPkYo1PsjxpR8ebb143a9SyjAJr09JGFiWxsJ7uT7LGKlmHHON+3+culhbAb8aJMWH8DIktRJoSfjUE5jwA0Weyh+WCBHLw1MqmyQCFeDbxix6ySokPPSkbsUFUQ9Q+fPjA4Bvqh28ye+TF+v1rhrxkiQkIRrUFpmQl83A0xpRxtP0sdsjxADXGjnbIVgh2lm0wma71HPHfZ+hAl8FK+ryQMaZ/LW7cRcbOIdEl5DfH+IM9fNT5CUmLj9dkrde/+d3vZDmMj824vyZZwJbAlGs36Wf1s+SWJfohpTVOq1My0PlSX6wjw1wzXwwINti1/jKn5X0mGLOMxcgm/lH/UpbWgKhlzJij/iaqZE5umDYykfHf3bBJBrPGN9pm5znvK+LRLwR0OQtX1sfcbeu6P6Jz5GBcY0vzsIOOeSzbdCjcsNNkS89QdAvJtLU3mEuqHrE3chDuniBy+LlIPCkdAqZi3WJ4xNoCZrKrRvwaOQirShA5xEuEU+RDlmL9YpjE2kJ2cutG/JKD0bNIrrYiXxAoCLQiwJt65I3X2qMIFASOBgJcYMt1tVwUW38hTMmoJWOTLE/dICshTV+8GAgxCmG7Kxes61LHAzD4+dmqrGHHxe+2kJ6ja8ypDi13dwfyU8FXcrPChTkZEpZ05Nqah39Bysq1ruxDGtuf+nMxzsUP/vJiKYarV+Wpv1c3ZH9VfCYbdU/I5FdyI8ZNCTctapEHpZFJ8/+z954LctxYmnaUY9GLVqI85dvtdM/O/Pn259z4XsBu9/a4bqnlRSOKFCV6V+47DyJP1kkkAgFERqSpQpCZQAAHx7xAuLeQCHyXn/+d52eAzI5lXd0DIXbZ56efNTENAfriBTOId+SGvl7/lheQXbzI247X3VIMYFOvl6s2/LTWpaVNpGrtI7rq2FneoX7ASnvwU/0lLQgUBAoCRwmBZb/v0msRP7HeEYLIkX9eB7BWLD+td+QRJ3nZoJv0lyRt95XYgBRyM1iFGIUcJT++tBl7Y7ykjasfXTOxpy+04jqKTv4QCZnEx98gKPGXuNxP3UWAaxLEGj9vZyMm1pNlXVl0Qm5BYkFiMsPzwkX5SMoMROppy4vF3n33XbmmysxQIWhZb/XEiW1HFjPTlqUYWPM1RII5ozN+EQsvAIPoBkPIPUhFfMdPfLT9AenHEhOsP4uvyLOurpulKn4zi1WXb+An/bFNxwrEPUtjQNI+lOUfGDNNG23YwN4tKTAi2ylTYhKiHJKb/aaNGN1LuETfSyFpiR8SnpfONW3oq8lGWVJAcKhH1OGoc2NI2tNXbskIUeTG2egXUvX9Wv1iLtbKff/6+46k5eVjrJlMPE6/G2eMtfoFco68ZQaz4IsPxI4uZp8zhrFS/6Krjol6Nkh4Hc+0U+xc5eir/uN7/UcPZEMyiDKDlzHB+snMlEYWnPkjAusyP5clPzg+/I0/AGxsPHQv5eOPIxDd9DPr5jLuYn3k6zpu++Nz1yjww5F23JAo8R5FBJaaqOXSNctfYto6zOkfCemBrZfLWF2b3kXVF7zykJ83Xjq28HIVx5fehdo48hAv0kcJAW5U+bC0AS/n4lmDJQbkntLdHHODzFbLQd6S50Vh3KDzsEB7ZOs1X1ka4MQJHgrjI4zZo8+fyzp5D/lZW/1TNo4odEF+8sxRf+oyq099lvtomZlRz+RliQPWef3hh2fVF188doRtvWxB3Vu4w/08N/hvv31S1p1jtg8/seOt3FvykMaDELNr+KlcPauYNXJ//JEXZRATb4tm3duT8nKRVxIfs2L4KeF0rOpfba/GtNZZ+1K+CwJDI8DRV+670lEueKVjheS88cKebs72aMe/51eZeaWc69n0nO/2RmVjH6RQ690FjgoXkHy1XCdVBzMWmQUJ8eNePkbFyI7FwxXLl1PPDpvI1SRbvTsm/RzxNSFZC8g3ZBmzZ8+cPSPXvnoNWWKAaIJ4Jk7IqydPZT3Qn+85eQjaM2dOu3VsISAvX7rsyC6IPEgu1rRlFuM1WecW4hCiDuIWQoyZmSwH4F5sJsQoJFgiNGOfUzKQpBBtkJT4Qwz4QazMrtwWAlnvNYiRn8njE7NpWauXD/WvyfqkLDmQuymGEJ+QeinknWsjfoKjI/pG/QCx+VTw/05e+vb3v/3NEedN/uAz/Y4uiGFeOPbDjRvOfqgNcmyQn2Rdj0umLh0d/65e6uQe0Am5Fjq0dVytVVevXJF7ps/cWr/vvf++WwKBvuaFX6xb/OsDWbuYvuCGUjbW0GU9Wgh9+gXy340FVI7UMgaZMcusYPL1xr2YiIyFR8UmoYq+pM+V4DXV46zTz1iXj2J2T95myzrU/EGBPyYwa9bfsD3+iLMQ4Tdv3pDPTUf409+6HXqtJUuajjAfJb06iU7FAcXk1Y6mWm/rkF3GzcUjX+p73z46/SOliovaitX17Udf+pzP8qUx9KVX9cQwidVp+z7TpSZqCXSoTlAQLeBapqlftyoHu/o/ROpjYm3E6qzcMuXxecjNYuKPH1s3pA996R4aq778LHrmgwA3oXw2N+slDSAX2fb2mDVT3wrUM0HrkU5e7j3tfbmTr2+A+XkkN8E8FLjixi90MOP10SNm2vDQVq9F1thgXFH7ywMExOmlSyfchzzE7I0bz6r/838eiF5mikw6AanM53e/23Hr6l67Jj/X3Gb9OXnpxhl+HljPLOaKRZzouHXrhVtWgSUSkKXNZ5/JzzQfPpHZwMwwrt+APHmVq32E/K7JX34mytIOsbNFjZk8vzrSHPyYwRzb8JFnlPFzSky41B07BIY+18dHs549atj96+YydsYy4bWM+Pg+zRMvf/zExp7v59D7eg11NFbwZFyfpJ2cdUaCSMGQdsxsdcsUCDmnZJ2nyu2CE9sYr3FGS7mu1OvjMlOQNTMhlrBhNyVqWaKAJQFca5FxxBV/QZW8I2rdzNCfHclJ3Wl5ORRELOuW8tN2Zp7qjE8IQog3CF0lyy7KrFtkeEkVhN3Nm7fkulsvfWD96SuPj8wC5gVvrM3LvsYKQeiWaDCYIAPJ9kxmoD4W8pmlAyB033nn3RmIWpnVK2u/MivzFbNpPez9WOkZXq7GEhXMXGWccf8DccvM2Bs/fF/9v//3lyBx6OtSgnNH2t69K8suBMhGbaPj2vknPk6OEJGiTD80Ig43oIWsHCnhvvCyzKb9VIjaTz/9VMjXd6T/zzvbvJROSUywZTxB4F+Tl9BdkyUzmOHM0hkQtbXikVZJIIfBAiKUPmTDFmO7nqnuiqa+mJFbL61QE7U1qTslNtJ/uJQEY/e+rNf87bffyrsVfnRrC0MuxzbwwrdHD3l53kM3i5pjmCimsIwpWnDdCPXBvFD9igmplmHU4uXXDebUDIqt7zOoaWxq8fCF/LqC1+T4acPLr+9zf+mJ2txguwwuf4Bam7aO/FHbZsErhIfF66hhRTxD4RXCctXxAyu2oxhbHVn55mby4sX96pNPWApgQ27+WSZg3/30X55LhGTkQbHGiVmsfD78cLP66KOTbn1Y1n1lhuzjxzvuBWEPH9azbUMPgLOizc349va+I5Z5gRgzaSGGuVdnuYNff92RWbCkzGTlBv6QrK1n/x7IgwOzd3bkAXLPkbSQy8Rw5QpLGsgLW57Wyy2Q/8c/nrm6a9dOOUKYdW7fffeUtJf1+QSc+/flwU9mBoOPPCO4hwWeK/jgK7i8fHkgeiv51MSqjwHkLC82Q/f77/MmZ2YT1Wvn+bJ2X55thDDmpS7MdFYi2EqUfEEgHYFZroshK1wzjvL1Yxa8QtdTi1cIz1UvGwqvEJarjpXvP4SYu34JQXV4VPlSh/uHmECmyXVnRGxBhnFdhhBjbVjW4IQQg0CyP8HnhU6XZSbkFXlpEvXYpx5ikBmpEMfMgHz44KH8MfOmXBtlSYN3aiIWEpNZspRxb6EvztqT2azvv39dlkS4KO1fE2flZ/FiH3KNJQYgUCFsua4q+XYYUTyXOrYgKB84Qvhm9cGHH7q4IQLxg2UaIJF5wRWzNZElRl6s9kB8ZB1Yliyo/WteMiDuqfQehCYO80W+bRMZ/HglJKMuD0AzcKMvIXzvy4vf8NMRuULiNm2025d6ZmXzc3zGQ+qm56fDsZXQUvxjVvbrV1+X8cAM65MOc0jizz//vLojaxL/dJcXqj1145sxCc7M4oZAbyJS63WfeUHfS8GkXh+XMc1yCXxY5sHdf+KiwditMywzoXkRGGM0pB9xlhdhSQ/6u15HedtNJuCPCvwRgtnA1Ldt9PVzGc+MGWbTQrizdcKyzdiS1OuIzhonxvdYu1idUbFSWfDKjQt5xdkP1tbl6vV1LeP+LHiF8LB4DRnvkSJqdfB17YwmoEMd1CS7SuUFr7zeKnil46VYpbcokquEADeR+pFnJ5nxAPG67QhMiNoHD3io4WeLkIH1aDh/fk1mlGzIA9fJ6vr1U46oPX2aNbwganeFqH0pN7C8ROHwJ2B9YiL3/XKDfSBEKDOA1x1Ry4xY1p7lBWUQqLdvH1S//FKvZ1avaYYHPOjWL5x4/XUeHnnolLc1y0vIIHshfS9f3pCbctbsO5AZEGuythgzIl7JW6tfyM/2duVNv9vyMMfaaeuOnEXrTz/tiC3WL4M8rtfavXQJPfVlGTL4wQOIa9bkrZ8Z3IOauTVjBghta6KWl4XwEFbjh42m7dat+qeQ+/v8pJHYjupVrgmBUt4XAnquJ80dRTH5WF1fvi9CT8ErD/WCVx5eSCtmLi/XashLZkTK/8YtfLzV13nILXTojFqIKghKPlyTLFHLOqy8MOnKlatuHVYM7giZWy9hIOtzylIMEGRuXVmZBfuukLMQm5C677zzjiM9WdMVvfy8/bvvv3PnlTdef8PJQJBtyUxdfoIOwYbtZ8+fyT3EY9F7OEuyMVBToXCQhuM/FN6VP4LiMxjwQi9iwr4lall3lpmmYAWRSczE+kjiqYlaXp7VTIYeWmvO4av63SxV14Ahfsg8XJlVy3qw9dqq3NuAIzM7f5Gbi8dCKhJPG/nqbMuXGw8ZRC3etOHrx4I82F59HaK2fqkcffzTTz85ovZnWb/1FxkfL4XIxK8zgv17770v91jcZ225fvJ1sk/fQO6/EtIUErse1/W6spC9rKPsSFjBzuJMXzNrGqIWGyGilp7BH0fUMh5lbNJmU15gxrrKrPF7T4jan7lBTNjwzR23ktb3fnWjXCwTTC1cxGKd60wMj1hdrp1lkle8SHNjjMnH6pYp/lxfVhmvI0XU5nZckS8IdEHgqJ7IumDR1AaM9MTYJFPKVxsBbhz5sNwaL8piDVaISmbRPnjwyhGf+mIuSFJewsVLw65d23bLAPASL37+/+zZrsxkfSFrxNazTPmp/xAbywGcO3cgD5C1vyx5gP81IfpKHqR4idiG+FS/kOuQqK1v7llfF1L1l1+YFfHSEaLnz285wvbNN0840lUmd8hNeiVEbk1+3rz5qvr66yeOQGXmLcQupC0znC5cgKjlAbZ+KRqEK+vm8uGFaT//zIPTSyGXmblyeDSJy+J3jRCkLDM9aqL2lCONwbr91o0H2/qlabx0TZ4nylYQKAgUBJYWgXLfld41YawOryHpmir3U/tH8hOMX2TmJSQV5BnrrL5//boj+u7dk/VCZaYpBCYffn7+5ptvyXXucEbtIyGtfpSfq7NWJzMEHXkpP+nmRVuQWpCtkF/MTIUERg/EJrMPbwmZy/JGkJ6QZTqbERLLkbRSzrqp5GsyulucbZhATjIrmI2fsv98/2eZ8XnWzd4El7ckZtZTvc+MSZY64KVRQmbW1+cLbk3dszJDFII5d7MknbsXSAyRduCEeL0mMEtNvCaE9ynBUQh1uRm6/sEH7oVijkhn9qaQmPQPWG8I7sxO3R4Rk/xih6UXwOGp9E8bsZsbpy+P75Cp2CHPS9fwhdncz56ecTNOIVbBlOUnrly94mbgEiN+h7YaEyYEQPA/lz+sPxqT/udlaYW33npbfvX1oRvbENm8vIyxSTl/QIB4bZqxi+5Hjx5Xt27fcuP/bfnDwzlZ7oJx8rr8oeGtt96q7t29J0uCbDlCH3KcNnw2N2UmMLOBJd3ckuUVJFaI6F/luNPZtKF4jkoZ56zEYX1UQi5xFASSEMi/YiSpTReyB2b45iJd1yzt1Y9ZdKR72l1S/UTDrL52bd+nD92RSGupvnaN1VrpqkN9QFdXHdaPIfPqax9+9qFjyFiL7n4Q4LmDmbGQhcwY3dhYExKQteN25KGM2QusxcrsCF68sSEPeVvuw7qwjx7VSx788MPz6rvvduUBaE3k+x853AhD1Mq9vLwQbNORoawbiw9Pnuw4UvT5c0Z/vQafzjhRhJg9wYPCq1fMuGX27wuJedMRppDPzCa+f59y1gFkFjFLIFTy08696r/+S2aryKzd69fPuKUPIKxPnjwts45Yr3bbzeYFMz7UQf6CC23u32fWDl7UN/PqDymY1jNqqxFRe1pI6HpNQCs3nV9zM4Lx9dGjfUeWQ0KHZ4hMty4lq4+AnueJZNajbZb26scsOubRG+rnIvHq04ehMVNf++jXrjrUhz76bGi80I+/XWPtwz/Fy/fhpfzsGpL2rsxkZGPm6+XLl6rPPv2s2hBC9fsffpDr3ilHPvGm+/fef0+usW9PELUQucyM/VF+rv5UiFWINwgtrjkP3bqyO44YRDcEISTtEyF3IXYhcyFnn8rLubiO68xGCF/IRUhDZioqIZmDhR9rrC1kGTbx/f7P94V4/lGI63Nu9jDkNS+7+pd/+Rf5Sf6d6q7M9oQAZNYmPr/99jtutjAzjYllnpvrV/nDMP7cunXbLdHwxhvX5I/Gp+TXTe9V//qv/+r6l6Uo6IvH0i/gysvR8JUlHV6TG6eNdekXeQHZk8dP3JIV7uf43OQkbDq2EE3FnDaMvUeypAUvPuNlc5CmF2V27fuCNTNUITYhlcGfWbfXr1+v3n7nbclfFN/D90L0B5t7oZqMM0h31g4mTpbW+Oijj9wYhXCn7rTYfU2IX8qvCLENacsYDG1o5mVhvDjsdflDxSeffFKtyVq54Mf2Qpb+YLvz4+siJ1jLGHcktMyyZuzjA8s9nD4lx4GQ5H//+98dIU6My7pp36b2ayyOrjr69CHm36x16id6usaqPszSXv2YRYf6MWSqfmJjVl+7tu/Th65YLZyo7ep4n+1sR/Spt+haHgTo464H6vJEMT9PCl7zw3pVLfGQxadeS7UmZFkvdXOzXlZAquRhgJ8A1mfY7e11uXnecOQi5G293AEzaZ/JiyFeycOezPp4Uq+ZSls27qlZx5UZuvJM6HQ/fPhKbnhZRzbviGbtViZZsOwBTSGSIUOZzXv79gtHWh4c8LO3mrT09TPLp57puiv+PndELaQzyyawhML2dr0MAT7v7hLHhrz4YlfKX44eMNekDbM/1kV+zc2uxY+dHTCpSVdm3IITBCy4QQwfPguxTu2ayNdLRTDjtiZweaCpZ+XSPmXDBgQ7djNhTFFfZAoCrQjUZ4VWsSKwwgjQx3ln6WUNVv9QNuyoDeE1rMUab2vD9+GFzCpkXdAbN244ouyCkE4QlNevX3eEFcsQQPqdFFIPYtm4iUAAAEAASURBVA8S7dq1NxzphHYIQmYR0v6urCmKPsipZ0K8sgwCpCyzOLneQoKxQZBB0mKXFCLu6dN6GQFIMmY0KkmLfgg9JeCcggG+DoSoZRYmyzQwm/aHGz84v5jNCUnIDOLf/e731aWLl6pLdy65F5zprNr333vPEbUXpQ7f0fFS1jJlfVXW+IVkHmpTXJi5/IO8PIxZvcwKvXz5ivj8evWHP/zBEbW//vLreAYnBOIpmXULYXhBXtoGwcz9z89CUPOzffrszoi4n8VvO+6m9MiNFCQ8/Y+vjDklZFkj+KSMOcYdYwmiFR+ZscpsWuJbF2K5CVcw4WVs9Uvobsof2t90bdAP4c7MbGaA84cF1U05M77BgbGq94cTMUg7sLst7XjhGYQ9LzdjzOLfy5fvy33XpsszW5w1mHXNZuxAFJMyY5gX9rH0x1dffjkFzTIW+OeNeflo8V+UD/OKtQ87Fq8+9BUdwyOQRNRqx9obrqYyK5PiPvKqS9NcHSl2mmTUJvV92VWdVh9l/n4Xm+hQ/ZpavegcalN7qr8vu6pX9fn72AuVqR+x9KjhFcIhtSyGk9b5eGmfaH1JCwIgoDeq3LSyjuqXXz53ZCFE4alTLCmAVE2myj2tyLNfb3UdROmem8nKWq23b/OCinXRoS+2qtvys/wff9yt/vrXh/Lgx5p0a7L/UtrVLzZRnSkpz0LPnvFyrt3qm2+eOxIUfRCed+/uyAMBa8zWL5LQm3Crl7Jnz9aEUN6Tm+0X4itLPOzIrFje6vtK1k7jTcpKINcBP3u24eSFjhVV8nNBWb+3JrPrNWnr9WRrPK0t1sG9efOlzFyR9e3kxV/MeOXhgrVkHz06qL76CqJYFq6VDTzrJSdkPbPE573vvnshvjNDiLaHDx3Wh5JfDQQ41MzhleQ08nrd0DRXR5KhBiG1SXVfdlWn1UeZv9/FJjpUv6ZWLzqH2tSe6u/LrupVff4+9kJl6kcsPWp4KQ42Zsr8ct1XTK18ah4d2l71aWp1hMpsfWre16O2tf0TIctuyKxZ1gCFZHpNiCQ2fjYPAQW5ykxDZtO6n4gLMXXxgixcLxuEK5/vhSCE9GKNV9Zw5VoGWQkhxixViFZIUPRDriEHscvLoiAFsQNp5whEIefYh+CE6EI/LxObx+awEp+x+Y9//MOZ3BWiUNerhShkZqR7eZgQdi8kLojEa9euVW+88YYj4YhdCcgbN284shCyDt0We79fusZX65RfAt3/Re4bvhLsuI8CZ35uvym/8nnX9dejq48dqf5ICF38g+zcls/588yoveD6R+4UHMFOP/PT/LaNGGwcTS2sjOZJIY+//vpruac87bDDJ5Yf+Pjjj8XnC27WKuOFWagQuedk6QIIfPxjaYfQfZz6zJi7detW9R//8e9uLNFvkOj0E+2xw/q4LGvBHycuCdEKMUw7Fz9/5TYb/krXujVq5ZZN7ml/dGMEWQjx10UXRO+WLGtAyj5/ZNiTvmcMYQeSluOM2cKUs5wDY32WTfG02KeWpdhFr+ojtXZS2s8io3ZVRx+2VafV1VRmZdSHWIq86tI0V0dMf1ud2kSuL7uq0+qjzN/vYhMdql9TqxedQ21qT/X3ZVf1qj5/H3t+WRJRq47S2AKn5aSqWGVsXVved7iLjjYboXr1mTr1ISSXU2Z1ajstC8UVKtN2TWlTHzTJD1E+JF7qr2Kj+FGuZSqTki4CL+szPvaFl8YbwkHLfNvaJjW1eKnO1LZF7nghwI3wgwdr8gBQvxhL7qPlBp/ZpXV64gSzZOoZrMz6ZEYqs2EhOR8/5oGMDw8+rEnHUgI1acgzALohJm/f3hOi9onoXJPZDPJTSXnh2L17EKL1zIZUxNElzx9ii5kxkL077saan/8/fFi/RIyZsKENX3jAev58TQhZfsK2I37viW8vHeHLEg+//MJ6t/VNNfJ8ZPKQ+0DQ0oaXh21t1TN7T59ed+Qzs1u5wWdjvVpmED98yBq18hNL4WIfP+aBAL/AY93VffnlS5Grf3aIX3kbZPOuPOTSD/USDXnti/SyIKA93+U8rSN9Fh1dcFB7tFUfuuixbaxOLdcyUt9OqEzbNaXoUJ1NMkOX+3F0tReLQ7GxMlqWY28ReFmf8bUvvGzcnG59O9SHymy7trzFC11D+O77YH1ussdapD8IUYssP+GGjGQG6RUhriDLIJcgnPhZOkSX/lSen8ZDaDIj8IfvWR7hjpCSD6p9IaUcUcvsVPm8kPVlIWvJ84dfJWqxefenu46oPSE3FErUQlwpYaZELS8Tm8em11ri+lKIWmJhSYAtITzfEcJTsWF2LeubQiZD1IIbOBEf+5DPd0ezjCGlIa3tpv2iqa3rmv/ll/vVwVf1H5IhJfngLx/8hODkg2/MegZzSEbkIBFZfuC54HzvZ1ljVZYc4P4mZ/OlQ7FNlMmBxpIb33z9jSNgWU4DEhUClQ9E50PGkxC1vMSNsafLYTCzG7whops2CFdmvRJHjcWbov+a00v/oZ/xxVgjfnTSf7QjPdRtvZY/PEi90y1LdnzxxRdODnn1vZ5Z+9L90YExzXjggw/M6MWOu3eUvmDJhVmJWo0fL0N9QJmNQOVzUqsjZCdHV6qs9dmPK1VHTE7jsHZUXstURstTUvV1Fh0pdnwZtUe5+uDL5O5bndpWy0h9O6EybdeUokN1NskMXe7H0dVeLA7FxspoWfNZLOCJOmuBs0oDTWYuUv1qG4Xq/KzKNQ6re1b9qtP6Zss0HlvfZz6ETahsFps+XrPqimESq5vFrrbtGxvVa/vc4tWXPatTbZIOiZfqtrb7isfGUPKrgYDeqL94se6I03q2aCU3zHtyI1/JDeeBpLyhGdJSXkoiP+PnI/ex7sNszhcvIDPXJVUy8jB29ENMQub+8MO+3PDKhV/0sJYs5CU3v+rDYavmXE3UYod1aQ/Ev5roxAc+z55BmNYEa0gLtph9WsuxZAHrvvEGa5Y6gGSt9Vif0Me6t/Ic5Ihc1sTd2ODt2fJwcYplGHYdRtiDAKgxQVe9DAQvJQObmoutdSFz9y448nBXH5V1PVrSNpns4zCsiVr0lm3VENDz8RB+q247Miiz+13toiOkK1SWakN1WnlbpvHY+j7zId9DZbPY7AN7tW+x0TKbLgIva79r3sZl8ZqlL5j1yew2iDdmef71r3+Vc7a8wV0uZN9++62bqZiK1+Mnj+XXHN9UF//yZ3cQ0O57WbuVn8CHNtYL/V7Wuzx58pQj+/jZOvtK8ChxOG4rvh7IdeqxrOv59TdfVxf/7/+Va91j2X8iv9C4JS9PmiQ0LV5jHZKxePETcYjYn+QvlF8LaYYvELXM9tvc3JDZpPXLp7g4c+27Jz/3hsTCx++/+7767rvvqh/v/OjIP0g1fLZ4/SzEn1uLU+RZVxTC9vPP/+7I4ftCLjIDFwKRWb3//u9/daQdszwhOtFNn+Cfbqq7r/5XvaSKF0QmpPMtIfogNHnB1s9C3oIRF+tdWdKhjrVuzbIDYMXMWeIj5q+++tLN6IRsZAkIu6md+7LEAliAJYQdJCozk31527YpD4GIH7Q/e+ase0kXS1GwT7+xtAPr8LIeKsShw0/Kuc/CNrOZv/vuW4c3sTMLVDeWcbh542b1l7/8xc20pQ++/MeXjkhFxvYF+8/lRWu35YVbf/vb39y4hsj+Ugh91jLm5WHM9kUH/Q4xzDFy4cJrbrZq/QeBTcFx12EJzmyQ5o8FH/xEn5vlLeQtax3zUi76Bux1ww54MDOYmcYQpa+/fseNb8Yv5DUfiHQmCEi3jvqUF+huy1g9Kcfy164PkXnJjRnb6BjkDxy3ZcYuuvZlDVpeeMdYgVAGD0fQiu+8pI4Y0MGL5wh8T8qeyVIft4Xs5fjrY/P7QHWC81Cb6ra2KbP7XW2jQ/VbHX3qR6+1E7Jnbc+aV/0Wnz7jCekKlaXGYbHRNrZM49G6vtOQ76GyWezavphFD20tNiFdTXglEbUhR9sMhpzILXNOq+cjJ3SXNORXrg1fRx/6fZ34RJnqzvUxVd7ply+4AfVBbZJqWao+Xy7UXvWH6vz2Tft+W91X3U3tZi3nwssWwkt9qCW6ffs6NB5Svy7VQqidlqn+VF3Zch5eam+WeLJ9KA2WBgFu7vkwyxTSkpd1ra1BQlbyIMtP/Jk5SirjXQYpZCX3nLwsjA/LGvCTfshYCFCOCuTY0MvGMfrwIT975Ga8HnEQrru7h0StyroGkS/u558+hRRGP77WwpCptR8QwxEFUoVdnk9evqyXIIBwrdtzE1/HMqkBIxC18gZfmXHLsgX1eQei+EDI2n3Bqm6BHvTy2dmpMQEj4gUb9JBCKv/0EzNucXYUhORyNvSCOXHXenNaF9mjjIA7yupDbTy8dJe024ibRMzX0Yd+XycWKVPdkx70t+f0y1foPoK6kF851kPtNaZQXapuv63uq+5UPblyq3bfdSCkEcQbP6//4YcbQkb9WcgXeYmRXMz4aT5kYur2WAhFfspdYyzf8v+7b7+T69Ikgar6ICC/EzKSNVx5mRI//WYfwg5CDRJ5apMyXtQF+YT+5/ICI9ZKvSmE5nP+Auht2u9arBpJqeNn/Y8dobRffS32scu6pcz2Oy0zACGtTsg6tZBLkE+QW5DYD+TlVBBVEHKsx8lsR0eqeT6zBunf/vbfQrzelWvhliPFv/n2G7dcAm+819meLJ/AC5ZOn+Zn7mccsQXJyExdfq7P5nzXAEaB6a7G4wRn+EKtzgCG3AQPCL87d36qbt286foIIt8RikLSsdYo8hB5L4TQJM9MUfoRfCAjIQ39fmAf3P72t787bFhzlba8xAycczf6ZFfITYhXNl7SdfX2VUdoMq7cDFq5WduUn+YzSxjyGRJe+5OxCNZ3hHRn7VTi1g3drNn75z//X7mvQv+BYHHLLevgx0U/8AcDlh1g9ij9ydgGD5Y6qMe13NvIOGEdY449xheEJ6Q2a9PyxwLGiht3ggV/RIHMhuzkc0ZmwPJCMdZPhlRn+Y6fpH8sUYsdxg1tmZHLHxCuXLnqxhZr80Ko8rIyMH8mxz5kNFhAEOM3f1SA/L0pfY5NiPDxJrrwh5e3PRP9ENPgd/KULCchBC/HjMNc/Ns/gKxlEkM9E/elvICOfN3+lvN5lrHr44+PWqbHxtjvvjMjA3ptVHuzxGNd1Di0rA/9vk50U6a61VbfqdOvRkZO6C5pyK9cH3wdfej3deITZao718dUeadfvnRs0U5tkob8StWNXKi96g/Vper22+q+6g7pSSJqQw2HLFPHh7Sx6rrBKNaxqx7fXPw/QiAuYiwcIfjmMtyOqhEIv/qenRHBh9mvvFiL2aOsg1ZHjgzPF/WLtmqSsCZZw7NYqeOZDtISotPOHqJOHzhScFVdEJS6vIHqo85+YvrwB+J0b2/D+VMTnXWLQx2CgrLArqpewqF+6RpHKrFAyNZLQIAPetmIdWenlq+x9LGpZxlD5lrbdev0b/Wv9hl/09sWyaOJQBkC7f0KRqNDtV24SIQRWDEQuU4wWw8iBpKqnmHIH7pkBp8QopA0qRvkC4SWvv2dsXTnxzuOTA3peCI/N78N2SNkHuQf5BEEF+RSPWNzcjS6PfGXdiwdAEnFjDwIKgjR50I65W7YcbP6ILuETN2T2YFnz511P9M+IzMzzwkpxs/Dd3brmbX4hr8QU7/ILFNISfYhxvSaa30AP2YZ49+mWzt1T17CdM8tmwCxDIkJyQkpBuaQZJBczEKm7cOHj5x+q3PoPH64/hfCnGsoZN4j8eOe4MNLuE4Jkbg9IrAhGOmPp0+eOjnIWmZ53rv3s8PIEZOCcWjjp/fM2mTmKwQo/cgLqrCduzGGaeeWXRAs8Rn9d366414aRh+CK/hC1jIDFAKW/uRDuwcPBW/BnJmr6NONWc+QuMSq15FffxU5GQOhDb0sa8EfQRjXrMnKchKQx/gIAc5GvIw3ZhYzI5nZsvjIh3Vr8Rk/8E1n09Yy2265AvxBB7FAekNU6+bGtSNeBVPBA7/vy8vSWH6A2bWQqujnmH0iM9Ihl/mDCf3FOrNb8sca/MVvbLLUh904ZvZlNjvxuDEiGIIthPhpGSPYYZxA1HJc6HFDv4APf1zhmOAPQkNsk2eOISxM61yxU/90AAOU6PEygOojo/K4j5u1jz/6sL62j7o0NGhyD2hfh23v1/U5knLt5MpbX7VtKB6ts/KxvK/DtvfrYnqoo21qm1w7Kp+qX33Vduz7bW2dytsUeV+mSYdfbvU05dGd2k79GEpefYzZ0TqV9VN8szIhX7U+VOfrm2U/2Y7c6PKXcV5GoQTSLHZL20UhoD1ez1Zlhi2TN5QE5N4bQpL0cJYo9fGRqA93mhKdttE0NWKrQ/OqQ9M2XdoOOZvX9pqG9BzKgxFEtsxnrSe4OPGaBCarmGh6qE11aHpYk56zPtp8uoYiuSgEeFDckdlOpHbzR4oejcj4dbbdrPlcO7ny1j9tG4pH66x8LO/rsO39upge6mib2ibXjsqn6ldftR37fltbp/I2Rd6XadLhl1s9TXl0p7ZTP4aSVx8b7cj1iXMkP/+GXGG9SvYhmZhhx9qdEJHaHn0hX6k/KSQN7SGZdGPWIEQTuvyNlzkxuw+Ch59FQxIzO5CfVbOuqbsGcFG1m/iGPHZOQ2TJBZcPM/v4OTXnDrtp65DPVo6ZoaccSSazGYVYgzSGyDojMyIhzpj5CKnqZiCKLVL9cK6CcArNAAZTPugjPmKCoMVf2kF0gT2xMJuSPB/qILQgyBwZHcDP+h/Ka+zUtcWPjC+/IUSgIxrl3nUbwvEEJHL9s3j6gJiYBQyp/FRiYoYqhDZ9DTEHke76R2IOXc91vKFHRqFbmoClLOh/2unm+6XloRTysiZH6zVoyZ90szx5eZj4LvvIMLMTfB1p6MjDmkCElGWWNZgroYo8442PIskMVMhT4vSxdWNHyFDGD7N3Gdv8EYG4sMc4AQ+OM5YmAMuamD0pmPKssDUmbFlW4KkcQ4xtcOUD5jqeqGcMcZxxnDoieAQM+vENYpZZtY4EFlscdxyr7DMO1S+We0Af45TlELDliFVJGd/2mux0ixzYMHbxHwKcffTy0jDscB4hVvQw+5340QPBDEnMx5LioT7V/vdxRlbrQu0oo42ViekI1TXp7VKufqTayZVXn2LttE5l21LfV9ver2vTlVOfaydX3vqibUPxaJ2Vj+V9Hba9XxfTQx1tU9vk2lH5VP3qq7Zj329r61Tepsj7MpTNTNSqI1a5lqkDsTqV6SPNtZMrrz7G2tk6lbepYmPltEzlYnUq00eaaydXXn2MtbN1Km9TxUbldN/KaB1loXorO0s+147K5/qk7ULx2LpQLNiyMr7tWF1IX9eyLDtys1SI2q5Il3YFgYLAcUKgfoiTl9TIw1zsPBur6xOvXDu58uprrJ2tU3mb6nXQymmZysXqVKaPNNdOrrz6GGtn61TepoqNyum+ldE6ykL1VnaWfK4dlc/1SduF4rF1oViwZWV827G6kL6uZbl2cuXVLyWhIM0goZglyLqpkGAQp8w+tqSVtiNVbGK2Y3VW16z5XDsp8mBSk7eyjIDMunQkpMyOhIQDH0g3S8panaF45oGXks2kEJyQicweVeKTlP61vqpfIZ+1LFe+rZ0jbkdE/baQ4vzBAMIaMhiC0+EqpCeb2g75qXXI2Xr+GMGL4Vi2oibeZekE0csfDiBO0W/7jvaxzbdTE7wbMj6EaJbjBhtKSr8SYpzZ1u4PGqM/rsR02zrfTlOdLdc88ae2t1hp+77SmA8hG7nyVoe2DcWjdVZe8ypvZbRMZWJ1KtNHmmsnV159jLWzdSpvU8XGymmZysXqVKaPNNdOrrz6GGtn61TepoqNyun+TEsfqBIMkUe5LaOcLVZXS7R/+47bFlqnZSEftM6mXf2KtdM6a0fz1i+Vs2VWrglLlWlLFZOQfq1THSEZrbNpzGcr5+dj7bTOb8N+ql/aNlde25EqJiEdWqfyIRmt6yNFPzZDdrQuZEflVUb3razW2bIu+Sb/0OXj1UV/aVMQKAgUBAoCcQT0fB4714fq4loPa/VcHtKhdSodktE6myIXu35YWZuPtdM6K69565fK2TIr18UvbU+qmIT0a53Kh2S0zqYxn62cn4+10zq/DfupfmnbXHltR6qYhHRoncqHZLSujxT92AzZ0bqQHZVXGd23slpny7rkm/xDl49Xin71K+RzrL2zJaRVPYP2uZslyuxKSDM3Y1HS0GbtxGzH6kJ6Q2WKh7Wpclqn+yEZrbNpil+8HIpZy6Tr66+qNZlVCfnmSFrBJWTbL1Ob1q+Y7Vid6oqljmDHR/EPUhZCkTKWHYCgdT/PNwqsX6Z4KtvVr6Z24MQ4Y9GFl7KOK+siQ5zyR4GapJ1yIVrgx4FuZs2ii5mzkLPodmMaktZo07yvAxGtU3GVcXrd+KBEjhvB2skSg9jFFseQi0UbJ6RoQ4/asU20zpZpXuVVRve1nlTrbFmXfJN/6PLxStGvfoV8TmmfK2PtxGzH6lJtKh7WprbVOt0PyWidTbv6FWunddaO5q1fKmfLrFxsbKhcLFVMQvq1TtuHZLTOpjGfrZyfj7XTOr8N+zG/xjNqQw39MhtwTKnfro/9mO1YXR+2u+pYlF9tdtvqu8Y7SzvrE3rmOb6sbd9urG6WeGdtu0i/YrZjdY0xlxm1jdCUioJAQaAgYBHgYQ4iAJJk6C12Po/VDe1XTP+i/Gqz21Yfi2moOusTNvz7n6Hsotfa9u3G6ob0qU33Iv2K2Y7VtcU0Wz3LQkxqcL4I8cS2OL/itgf3a/STeotMCvk2uF/WIT8/6kjXneRNH1rfve72tcxvf2rgWfRmdMPrPxs/mq0lH49Y3dirsX5aH7ZwuRHuY9meModW5nuex/2Y7VhdT6F3UrNIv2K2Y3WdAu2p0aL8arPbVt9T+FlqrE809M8hvjJ53Uu7kN+I/a7tQrpyy5pstwWbayck32Q7JGvLurazOrrkscsWwiZUVkv3950aN76or/1Zz9ekPig28/QrFSuisn7ltMtHJN5ikbbjnpXagkBBoCBQEOgLgaZzvV4r+7IT0tNkOyRry7q2szq65LHLFsImVFZL9/edGre9j+jPer4mH695+pWKFVFZv3La5SMSb7E8tvkpeNxXrV0en9Wj8PF5WDtDTkBRWLrG3bVdF6+dr4aYpVND56lQWRd7sTbJcRuM0derb57uNn+tfXuOaGw31u+QbxRrq0jGShRZv3LatfmQW7+KtpfR517He0Mndo27a7sGN5KLscsWwiZUVkv3950atz0WU6zLyu3pBBnKbbAKSoqhXmU8n32/erVllLl4Pdumeirr+3Xs8CLgTLwUxFFT3Z1fGvDZ78chnMGsw8pl0iwszbFofFasrG9p0RSpgkBBoCBQEFhaBOQ8b0717l5wHud5Z9OzHcNIr0EqY33Wsrmkns++X0P5IBxAue9KBNeNDfrJZdIa2TGf0SxNeaqU57OOLetbqqocORcvthMbqV8qntpO5XtLPZ99v3qz4yly8Xq2PZGJXd+vY4cXAWfipQCOmuru/NKAz34/DuEMZsszYzqyY7wSm/h96Nontu1VTAxb275fvdoyygpeBoyE7JD3XeZ90wmeFJGVQIADeVW3VfZ9EZgXvBaBerFZECgIFAQKAgWBQwRW+Vq8yr4f9sD8cgWv+WFdLA2PwCqP51X2ffienbZQ8JrGpJSsLgKrPJ5Tfd9kWkSqsHZlSF7Z9y76VG8sxeb4rwodfI7pTq1zPnSwrb6T6nYs8JKAidPGrfHH0pC89n2oLqYrpU51OhujHS1Lad+HDPYO5KuLXb/NcRhbfWBedBQECgIFgVVG4Dic67teG1076Vx7fTwWeEnAxGnjThnjIXmHVwddOfacjZHxkA8purrKYK/cd6Wj1xWvUL8ei2Ox4/hyOEtbi9uxwEsCJk4bd8roDMk7vDroyrHnbIyMh3xI0dVVBnvl3JWOXle8Qv16LI7FjuPL4SxtLW7HAi8JmDht3CmjMyTv8DK6NkNCKcobZbp42qhssqJ3XyfVJ+119WGqnfZEktVuQlM2u6mZqVUfPjioRnh1vTClBNGHryl2mmR6t3/Ej8UmHEt5QaAgUBA4Vggc8XN912vjVLvRfcSQY2PK5pDGGnT34YODaoRXue9qADpUXI7FECrNZQWvIDZTx/DoWAwK91Q4ZbMnvTlq+vDBQTXCq5y7MtAvx2IGWCJa8AriNXUMj47FoHBPhVM2e9Kbo6YPHxxUI7z03LWZ40SrbB9ethqZFtAxsCDz0w6llIycXYTPq4YXGDFg2QpeNQ6xb4tXTG6oulUbX0PhUPQWBAoCBYHBEVjERVGCWsnzfLmPSB6O9j5iEUNs1caXxSsZ5B4FVw0vF/oiBpYYXmWsFgHZquFlj8WCV/tJxuLVLt2/xKqNL4fAIgaWGF5lrBYB2arhZY9Fxas3olYV9n8IJ2gc9YSyzwktFi6yKLwcVAWv5P63eC2EJU72dFJwGcbXKuE1iV7ZKwgUBAoCy4/Aos7zDplyH5E8QOx9RLlPbYfN4rVK9xGLOh5XEa9FYVXOXe3Hn5WwY6ucuywy4bzFq5y7whjZ0lXEq5y7bA+25xeFlx1bq3zuOhovE1vUKGgfn0sn4aAa4VVgy+ieAlYGWCKaiZc7oeZZKNIFgYJAQaAgsCgEMs/xi3JzGew6qEZ4FdgyeqSAlQGWiBa80vAqOKXhpENqhFeBLRm2cixmQOVEy+BKQ6zglIaTSDmoRnitMmydZ9QqsbIMwdvOSOnBXN9z5X0ftD3lRx2vPmLtQ4ffB133u46t1L7uI1bVsapjaxn87jo+SruCQEGgIHAcEeh6bUw93896XdP29E2qzSH7cUi8+oi1Dx194dcVq9S+7iNW1bHKY6vglTZic/s6V973Qtun9o/fvu/9rsdjyrHRR6x96OgLs65YpfZ1H7GqjpT+6QuXJj0FryZkwuVd8Urt61nHhrbH+1Sb4Uj7KR0Srz5iTdHRaUatVdwPlIvRclTiWAx6xWpBoCBQECgIFAQKAgWBdATKfVc6VkWyIHAUEDgqx/xRieMojKkSQ0FgHggclWP+qMQxjz5fNhtJRC0dbDtZWXJN/aB8eepDZX67PvZT7OC3flJs5siiz/dBcdLU2nSy8kWqm99ey/tOU+3kxK8xapris++HttXU6nCy8kWqm99ey/tOU+yoz5q2+aBymrbJh3ygbVP7kHyorM1ul/oUO01+d7FX2hQECgIFgeOKQOh8GyobAp8UO3qdSj3nq3yqv74PakdTq8fJyhepbn57Le87TbWTE7/GqGmKz74f2lZTq8PJyhepbn57Le87TbGjPmva5oPKadomH/KBtk3tQ/Khsja7XepT7KjfmrbZUTlN2+R9H7Sdpn57X576UJnfro/9FDv4rZ8Umzmy6PN9UJw0tTadrHyR6ua31/K+01Q7OfFrjJqm+Oz7oW01tTqcrHyR6ua31/K+0xQ76rOmbT6onKZt8iEfaNvUPiQfKmuz26U+xY76rWmbHZXTtE3e90Hbaeq39+WpD5X57frYT7GD3/pJsZkjiz7fB8VJU2vTycoXqW5+ey3vO021kxO/xqhpis++H9pWU6vDycpXElGrDWmkW0gpdU7GaT/sDNtO2w+RzstOzPcmH5rwGusKNAwUjcX7zPRtpzVW43yT7UYdTQ1EZ6TKWJw922an0fcG07nyqGnzYSyDoHxUXlPqh9xy7XTBYEj/i+6CQEGgILAqCLjzLV/y0XOvpkPHMC87sTiafGi9rgQaBopipjvX9W2nNVbjaZPtRh1NDURnpMpYnD3bZqfR9wbTufKoafNhLIOgfFReU+qH3HLs5MafK0+c1p+m9k6GL/movKZDYuX7N7StJv1NsTbhNdYTaBgoGov3menbTmusxvkm2406mhqIzkiVsTh7ts1Oo+8NpnPlUdPmw1gGQfmovKbUD7nl2MmNP1eeOK0/Te2dDF/yUXlNh8TK929oW036m2JtwmusJ9AwUDQW7zPTt53WWI3zTbYbdYwaZBG1IWXoscadDF/yUXlNjb/JWau7rdEsdtp0p9a3+eDj5fTSKNAwUNTqRhe8uthpdSRRQG1r6jebwgvBBuGGYl/lxH4OXtqwix1t21fa5IONx8nwJR+V17SrH1Z/TMesdmK6S11BoCBQEDjWCMiJ2J6L3fmWL/nouVfTLjhZ3W3tZ7HTpju1vs0H4pmKiUaBhoGiVjemdEdaqH5NI6KDValtTX1DU3gh2CDcUOyrnNjPwUsbdrGjbftKm3yw8TgZvuSj8pp29cPqj+mY1U5Md5e6kD/+2HIyfMlH5TXtYjMVK3TPYqeLb6E2bT74eDkdNAo0DBSFTE6UdcGri50JozPsqG1NfVVTeCHYINxQ7Kuc2M/BSxt2saNt+0qbfLDxOBm+5KPymnb1w+qP6ZjVTkx3l7qQP/7YcjJ8yUflNe1iMxUrdM9ip4tvoTZtPvh4OR00CjQMFIVMTpR1wauLnQmjM+yobU19VVN4ISifpJeJNSl1RkZIHYiQymlqnQiV2fpQXjuBNLV9qlzIXl9lTT64eDy8QrKhshTfjjJeOgBC2ITKhsCrq50UX1JlYj4ceGMLnSH5UFmK/dzx1dVOii9FpiBQECgIHGsE5IRc7rsOR0DT9cZdt7xrY0g2VHaovTmXe11EU1dbzV7k1zT5YPFSR0OyobIUL3Lx6monxZdUmZgP5b5rGsUYXvoXk3LuOsStCS97LCpeIdlQ2aH25lzusYimrraavcivafLB4qWOhmRDZSle5OLV1U6KL6kyMR/KuWsaxRhe5dyVjpc9Fsu56xC3pvFl8fLPXUlE7aGJQA6revYKVM9SNKDqWdzqpW1TZ/Wi/KgpKWCl9eicDpjeu0POH/v7+9Xe7q7cBU5qbwtpUjp8KvJl0sBcDamcU28Ih1D7kNxqoBH3MhRrrEUIh5COkFxM76rUhWKN+R7CwdcRkonpXKW6UKx+mY3HxyIk68vQfn9vrzrQJyyrsKc8NkO+9KR+oWpCeC7UoWU2XsBK6505HTBHpjsGxGtA1WljYUCpI9P/A2I0Vl3AGkMRzczpgDky3TEgXgOqjg6BeVQemf5fEFiNRK29UY+B7OpiAjMGNqDqCc80XrWn+1ZI62yZ5q18k5wrb6pURTOkA6qe8CoUqy1T4Zg/Kh+TcXUxATXUMR1Q9YRHGiuFatOWqbDW6b5NVT4m4+piAlZhh/xwqg+qvX0hH3YkyuGMdIi4NCkIFAQKAsuFACTtwcG+/zetXp2c12nYv67pvg0m5ouVb5Jz5U2V1lDH/ICqJzwKxWrLVDjmj8rHZFxdTEANdUwHVD3hkcZKodq0ZSqsdbpvU5WPybi6mIBV2CE/oOoJb0KxapkKxnyxsjE5VxcTUGMd0wFVT3ik8ao93bdCWmfLNG/lm+RceVOlKpohHVD1hFehWG2ZCsf8UfmYjKuLCaihjumAqic80lgpVJu2TIW1TvdtqvIxGVcXE7AKO+QHVD3hTShWLVPBmC9WNibn6mICaqxjOqDqCY80XrWn+1ZI62yZ5q18k5wrb6pURTOkA6qe8CoUqy1T4Zg/Kh+TcXUNAo1ErRo/DqmCeBxiXbYYwb5hbC6bq0vhz1HF64AZtdX+1EwuxkbT8dk0bqx8k8xSdGYPToRitWVqIoaDlY/Jqa5VTkOx2jKNLYaDlY/Jqa5VTkOx2jKNLYaDlY/Jqa5VTW2cxECsfpnG1oSDlW+SUR2rntpYVz2WVfMf7I/6+OqzT446XvZY1FhtmWKpdbp/XNMQNscVi3nHXcZgHuJHHS97LGqstkzR0jrdP65pCJvjisW84+46BhtfJmZv4lCe0rkpMqnAdNWV6qv6Ye3YmG1eZWOplU/xIUUmZs/WzaLLxm91hvK+HRuzzdPW3/f12Xp+xdnmh2/b15ez31VXbjtf3sZs8/ju78fiQW/b5ttuk4/Vd9WV286PSzHR1PoYKtN6W5fqg29bdXVJu+pK9VV9snZszDavsrHUyqf4kCITs2frZtFl47c6Q3nfjo3Z5mnr7/v6bH05d7XjZfFL6TO/r2z73HxXXbnt/Lh0jGhq/Q6Vab2tS/XBt626uqRddaX6qj5ZOzZmm1fZWGrlU3xIkYnZs3Wz6LLxW52hvG/HxmzztPX3fX22vpy72vGy+KX0md9Xtn1uvquu3HZ+XDpGNLV+h8q03tal+uDbVl1d0q66Un1Vn6wdG7PNq2wstfIpPqTIxOzZull02fitzlDet2Njtnna+vu+Pltfzl3teFn8UvrM7yvbPjffVVduOz8uHSOaWr9DZVpv61J98G2rri5pV12pvqpP1o6N2eZVNpZa+RQfUmRi9mzdLLps/FZnKO/bsTHbPG39fV+fre9y7mokaieMjzyOBal1mvqO5uyrDk1T284ib4FUe5TZj5Y3pWMdOCKfFH9SZJrs+eW5ulReU19fbH8cqxHKwYpmToca19To06ytsnmtz0lte5vvqqOpna97VrwUWzeoRLmv3/oRq7NyKfmuunLbWflxrMZBLdPUVAWzyLkNxfKx+kc140TrNB1XdMioDk1TVcwiP47VGFOcNDVVwexYB47IJ8WfFJmgsUBhri6V1zSgsrFoHKuRUJxCdUZsnHVyalzTce1hxlbZ/KFEes62t/l0Dd36NYRJDl4q6waVOB7zPVaXEyeyXXXltrPy41iNs1qmqakKZpFzG4rlY/WPasaJ1mk6ruiQUR2apqqYRX4cqzGmOGlqqoLZsQ4ckU+KPykyQWOBwlxdKq9pQGVj0ThWI6E4heqM2Djr5NS4puPaw4ytsvlDifScbW/z6Rq69WsIkxy8VNYNKnE85nusLidOZLvqym1n5cexGme1TFNTFcwi5zYUy8fqH9WME63TdFzRIaM6NE1VMYv8OFZjTHHS1FQFs2MdOCKfFH9SZILGAoW5ulRe04DKxqJxrEZCcQrVGbFx1smpcU3HtYcZW2XzhxLpOdve5tM1dOvXECY5eKmsG1TieMz3WF1OnMh21ZXbzsqPYzXOapmmpiqYRc5tKJaP1T+qGSdap+m4okNGdWiaqmIW+XGsxpjipKmpCmbHOnBEPin+pMgEjQUKc3WpvKYBlY1F41iNhOIUqjNi46yTU+OajmsPM7ZK80GiVisPm45yUtFUl+qs1dmkS2VydabKY7fNtvowUypG2uyk+pziR1ddbe18vNrkY77G8PDtqB5rz+a1Pie17W2+q45QOz/GrnbQ7esa25OKprou9vrUhY85PjTZHseakWnUJRVNdTm+qitNurQ+V2eqPHbbbKsPM6VipM1Oqs8pfnTV1dbOx6tNPuZrDA/fjuqx9mxe63NS297mu+oItfNj7GoH3b6usT2paKrrYq9PXfiY40OT7XGsGZlGXVLRVJfjq7rSpEvrc3WmymO3zbb6MFMqRtrspPqc4kdXXW3tfLza5GO+xvDw7agea8/mtT4nte1tvquOUDs/xq520O3rGtuTiqa6Lvb61IWPOT402R7HmpFp1CUVTXU5vqorTbq0Pldnqjx222yrDzOlYqTNTqrPKX501dXWzserTT7mawwP347qsfZsXutzUtve5rvqCLXzY+xqB92+rrE9qWiq62KvT134mONDk+1xrBmZRl1S0VSX46u60qRL63N1pspjt822+jBTKkba7KT6nOJHV11t7Xy82uRjvsbw8O2oHmtP81Nr1KpiUhVSBS6VigOpCNWFyibamp2YnRw9RqXLJrVV4yKcJO8bMftGlSk12Qa8cu2qHTT7bf19Yz2aTWnn7KpxaZDSpsmoqiEN6lGBQGWgqMnMxMki1C5U1qjMVKS0cyGMAkyRN+qnsgrHSN1UPYG6uoChQNF0+1FJm50cXdZISjtn2wXRMCaswpZ8WxwOL3Eq5FeorMlczE6OHl9/Uls1LsJJ8r4Rs29UmVKTFYHQuT7XrtpBs9/W3zfWo9mUds6uGpcGKW2ajKoa0qAeFQhUBoqazJRzVxO+DYgp7E39koO9NZHSztkeGU6Rt/r9fFsc5dw1iZji1Yi7CJRzV42ZYkUaxEsFApWBosmOMHuqhqJQu1CZad6YTWnnbI8CTJFvNCYVGsdI3bSoVLi6gKFA0XT7UUmbnRxd1khKO2fbBRHuK6uvLd8WRzl3TSKoeDX2kwiUc1eNmWJFGsRLBQKVgaLJjjB7qoaiULtQmWnemE1p52yPAkyRbzQmFRrHSN20qFS4uoChQNF0+1FJm50cXdZISjtn2wUR7iurry3fFkc5d00iqHg19pMIlHNXjZliRRrESwUClX5RcEat7Rq/ga0r+fkjsMj+mNV2sH2wcDZcB1A5m0N9tvaD8/f7tLXiugo0y9WBi+yPWW0H2wcLZ8N8AJWzOdRnaz84f79PWyuuq0CzXB24yP6Y1XawfbBwNswHUDmbQ3229oPz9/u0teK6CjTL1YGL7I9ZbQfbBwtnw3wAlbM51GdrPzh/v09bK66rQLNcHbjI/pjVdrB9sLAd87WPP/pQed2otBUK2WqrjypfQCX+huLowxWLBfpCdlQmVNeHD6ukQ7FowopylVkFvPB1SD8Vi4IXCLRvbXi11bdbmK/EkOPLYkFUoXGsMqG6+SKxeGuKRRNWlKvMKuCFr0P6qVgUvECgfWvDq62+3cJ8JYYcXxYLogqNY5UJ1c0XicVbUyyasKJcZVYBL3wd0k/FouAFAu1bG15t9e0W5isx5PiyWBBVaByrTKhuvkgs3ppi0YQV5SqzCnjh65B+KhYFLxBo39rwaqtvtzBfiSHHl8WCqELjWGVCdfNFYvHWFIsmrChXGcVraumDpjC0QVP9qpUPGU+ObjokR37VcE7xNyf+VcArJ54UfHyZNv16kPvtlnW/LZ5Z/R5a/6z+5bYfMp4c3atwLOZimyt/1PDKiScXK+Tb9Jdz1ySqbXhNSi//3pDx5Ogu5672Y9GOplXAK6f/bWyp+Tb95dw1iWQbXpPSy783ZDw5ulfhWBy6N48aXjnxdMG2TX85d02i2obXpPTy7w0ZT47ucu7qdt/VuvRB6hDUztKUdnTKqp0AUuOdVU5x0hR9Ba92VAte6RiFsCrH4zR+ipOmSJRjcRonLVGcNC14KTLxtOAVx4daxUhTyvRYLOcu0JjcFCdNqVW8JiXLHggoTppSVvAChfhW8IrjQ61ipCllOrbKuQs0JjfFSVNqFa9JybIHAoqTppQVvEAhvhW84vhQqxhpSpmOrXLuAo3JTXHSlFrFa1Ky7IGA4qQpZQUvUIhvildvRC3mVOnY9KgnyoE+RmQiY/FyGBW8JvCxO2DVhJeVK/kaAYuVKxmNLXd2LCBNIdCEVzl3TUHlCixe5dwVxkhLwaoJL5Up6SECFitXWs5dh+AEck14lXNXACwpsniVc1cYIy0Fqya8VKakhwhYrFxpOXcdghPINeFVzl0BsKTI4lXOXWGMtBSsmvBSmZIeImCxcqXl3HUITiDXhFc5dwXAkiKLVzl3hTHSUrCyeCUvfaAKYingW+Vup4zaGGTjOnDjbXlsExjWRQv5nurPhXjRYnRZwGpxc+HVboCJF0uK1/r6erW+vrE8/tnz1pJitvAxpQ5YrCgreCky4dTiVbAKY2RLC14Wjepg/6Da39+vDg72XTnwTAwjdixmE63LjkXAQTUCbwJDKzTn/FR/ztl+krllASvJ2QUKuQEm9gtewU6YGuuKV1C6FFoEHFSjcbUsw2uqP63Dy5JfFrCWBY8mP9wAk8qCVxChqbGueAWlS6FFwEE1GlfLMrym+tM6vOB8b0QtQbLZYF0HLEkvqH/4uAwuhfxZBr/Ah039s/1Z1yzmW/1RjFyqO4txacKq+kfhot0K+bKseNVYrVXrGxvV5uZWtba2aPQmurXsFAQKAgWBpUJgb2+vqnZ3KhI915PqmXOZzvXqHwCqf4sEM+TPMvilmKh/tj+1bhGp+qMYLdPYAg/1j7z6SH4RW8iXZcVr0VjRP4oXqfqzTHipf/iq/pFf1BbyZxn8UjzUP9ufWreIVP1RjJZpbIGH+kdefSS/iC3ky7LitWis6B/Fi1T9WSa81D98Vf/IL2oL+bMMfike6p/tT61bRKr+KEa9EbWLCKbYLAgUBFYPAT0J4bk7McrZaH1tvdoQsrYQtavXn8XjgkBBYH4IHBwcVHvlD1rzA7xYKggcAQSm7ruOQEwlhIJAQeDoI1DOXUe/j0uEzQj0RtTC/DrSpdnW0tW4g3/ktDLX83Jy3vb6iKvglYeiw0uazLuv520vD5UiXRAoCBQECgJ9IMC5fnQL04e6uego9xF5MBe8OuAlTeZ9HzRve3mohKUXPbbKuSvcL6HSMr5CqDSXrSxeEtK8fZ+3veZeS68p5650rJBcNF553i5eepnwGvZlYovHOu6B6wkR0TQuXWoLTsljYHyQS6bANgnbKt4UTEZQ9goCBYGCwHIgsHLnU70garocMC6vFwWn5L5xUPElnwLbJGzR88SCwIr6NOn+cuwpTpouh1fL60XBKblvHFR8yafANglb9DyxILCiPk26vxx7ipOmy+HV8nqxRDj1StQuL+Lz/wvVMmOR4puehDRNaVNkyjjLHQNlfOUiVuQLAgWBgsBqIFDO73n9pHhpmtf6+EoXvPL6vuDVjlfBqB0jK6F4aWrrSr4ZgYJXMzahmoJXCJXJsoLRJB5te4qXpm3y867vbemDeTvexd6ydkKXWObRpuCVjnLBKh0rJAteeXgV6YJAQaAgsIoIlHN9Xq8VvNLxKlilY4VkwavglYdAnnQZX+l4FazSsUKy4FXwykMgT3qZx9exmVEb7DLtGU2DQqVwjEDBaQxFW8ZCZfNt7Up9QaAgUBAoCBQEjiwCekHU9MgG2lNgBadkIC1UNp+s4LgKFrDSel5x0jSt1fGVKjgl972FyuaTFRxXwQJWWs8rTpqmtTq+UkuE07GaUeuPONcPS9QZvn/Ltl/wyuuR8mLuPLyKdEGgIFAQKAgcbQTKfURe/xa8MvEq9/TJgJWxlQyVEyx4FbzyEMiTLs+M6XiVYzEdKyQLXquL1/GeUZvXb0W6IFAQKAgUBAoCBYGCQEGgIFAQKAgUBAoCBYGCQEGgIFAQKAgMgkASUcvLzxb1ArRc27nyQ6C6KB+cXfkiTdkW5afv26L8cHblizRlW5Sf1rdF+pBrO1fexlnyBYGCQEGgILAYBHLP3bnyQ0S1KB+cXfkiTdkW5afv26L8cHblizRlW5Sf1rdF+pBrO1fextlXfpE+5NrOle8LI6tnUT44u/JFmrItyk/ft0X54ezKF2nKtig/rW+L9CHXdq68jbOv/CJ9yLWdK98XRlbPonxwduWLNGVblJ++b138SCJq1VAqICo/a+rsjaJKsZ0iM6tPbe0X6oMa17TN2VF9pnii1jSxRdpOPsK9UBbq84L6zMXMl3xS4k+R8WAtuwWBgkBBoCCwYATcuZsv+aScx1Nkhg5poT6ocU0Tg80UT9SaJrZI20mDKhDGQn0e+TNvH5w9vuSTYjtFJgDtYEXz9sfZ40s+KbZTZAYDZ6R4oT6ocU0Tg80UT9SaJrZI20mDKhDGQn0e+TNvH5w9vuSTYjtFJgDtYEXz9sfZ40s+KbZTZAYDZ6R4oT6ocU0Tg80UT9SaJtbV9pioRUGbErfGRcCftnaBJklF4zU1JNNk2ypKkbHys+Sb8GrzYSisXCxqXNPEADPFW7WGYgyVoajNdlO7VidSBNqMN+jo2KxB2/RxR8xtcTf50Nau0YmWCmePL/k02bYqUmSsfMkXBAoCBYGCQDoCx/Fc33RtHF9vVEDTEZxDYeXUq3FNE7swU7xVayjGUBmK2mw3tWt1IkWgzXiDjo7NGrRN32MRc1vcTT60tWt0oqXC2eNLPk22rYoUGSufk/djLHjloFePLR9DNLT1WahNnuWItBrXNCJqqzLFbdNgPhRjqIzGbbab2gUN5xa2GW/Q17FZg7bp8xQxt8Xd5ENbu0YnWiqcPb7k02TbqkiRsfI5eT/GglcOeuXcFUPLH1vIhsoobxvjTe3cy8Rc5UjiIHBQxZSrYtKYHE522XJ15sqn+KQxqm637xcaRSpniiayg2LVZtx4kiFqWsWzCouN0ZXJV2hsoa3Jj5CuuPW8Wme3yXhAVYZooHW4KBjjqDCEV8yHoK6w2U6lMdshhbnyIR2lrCBQECgIFATCCHDOH+I8m6szVz4czWSpXs9Ut9v3C2kyKlvTjFUjdQejN7QgprqsyKx5pzNDcYZosmsKi43RlclX6D4CxU1+hHQlO5IguKx46fAJ4dWEFeHOBa8EXFUk5qvK5KZ+jG5/VFjwmkZT8dK+sHiFDjyVm9ZUl9C+Taapbazc6cxQnCEaMztRp1jZGBWv0NiicZMfIV0TxmbcWVa89CQUwqsJK6CYC14ZmMd8zVAzIerHqGMLoYLXBFRuR/HSvrB4hQ48lZvWVJfQvk2mqW2s3OnMUJwhGjM7UadY2RgVr9DYonGTHyFdaszNqLUNbV6FUtKu7VJ0L63MsQx6aXvj6DhWxtXR6csSSUGgIFAQGAiBY3mpsEHr3e34kVMevqSMz7jI7QzUAUXt0UHAjqujE1WvkShEmqLc5nOMdW2XY2PpZI9l0EvXC0fPoTKuWvtUIdKUBjbfqsAIdG1nVKxe9lgGvRzd5GbU4spo0kG2V6vcd+N7fOKPRO7XuX2/MNLeVnVsZlUsLK94xWII1VHW9NeFWDAhXTH5ZaubBa/ogGwIdNXxagirFBcECgIFgYKAh8Cqnu/1ukg4sRj8OrfvF6LEELGHug+Ep12r1qSg670tqpdh05hCoat/oTrKyn2XIjSZNuEVHZCTKsZ7IV3jyhXIdB5fHQPv2GwpkFSscCYWh1/n9v3CxIg6NkvUPqyY4hWLIVRHWTl3hfumCa/ogAyr6tKkQdNiijuPrxCICSF0bJageXgRxQpLsTj8OrfvFya627FZovZhxRSvWAyhOsr6PneNidphQy7ajxICDODQAI3FmCsf07UKdXqQ42sXvFYhxuJjQWAeCBwYImZWe2sdWBvsd2mnvrb5P4tutVHSgsDxRABC1tv0fCE3HUfp2tsllnLf5Y2NsjuBwNSxM1FbdgoC/SBQzl3tONpjsQte7RaOloTF62hFVqJZJgS6HIt933fNTNTqwdK3YykdlWs7Vz7Fh1yZRfqQaxv5RfSrxTTXZ9t21nxO/Iv0U+NUH9ifd7+p7VS7ufIaY0mPBwKQm0pwatpH5JCiSoxqGtLr21dZ2z7UTsvUZ6tH62yKPmSsfltf8gWBIAJyAuUcmnq+DeroWJh77s6VT3ZLCVm/QeiPMYsCS3zLjX+Bro6RzPV53LCHTE78i/RTQ1Uf2J/38ai2U+3mymuMfaaL9CHXdq58nziprkX6kGsb+dSxqPH1neb63Kf9nPgX6afGrD6wP+9+U9updnPlNcY+00X6kGs7V75PnFTXIn3ItY186ljU+PpOm3yeiah1Skeau0z1nSVIDShVR658qt4cuVXEC58XNXgtXvN2QsdLbvy58jnjp1VWnV5Uh4mDufHnyrdiUARWHgElN/10lsCUCF1fd8uyj4nRkE7frhKpqoM2Nh/SQdn+/r4jYVWfL4cO/VBHXm35smW/IDCFgJw8j+19VxNJOwWSKVjAxQaTOZvKL8DVsZvOB3VkzvcSajY3/lz5cbB9ZNTpOWNlXc+NP1fe2pol76Aa4XVsz10ZAK4iXosaW8Bq8SrPjAkDbXQszhsr61nueMmVt7ZmyduxVc5d7UiuIl6LGlugafHyj8eZiFruSxiwbPO+R3G2a9NJ31beAZLUql8h58MIqFHSrwHR1jTQbPwCdoVHAABAAElEQVS5Rn28hvK90a8BDTbhpb50Mb0wvGbpZA14xrQLXpj0MZvRjdJ8RRFQUvP8+f3qnXcOqjfeWKs2NtYqCNbQRLmcMPf2qurhw333efRoXdKN6uXLmrhFD7bZLl/eq95886C6eHGt2tqqP8K5CvFaVffv71c3bpBuOFmfsEXH5uZB9frre/I5qE6fXqtOnlyTskM7rqH5wuzOzkG1u7tfPXlyUD19elA9frxW4eOzZ8Td9agyRkr26CEgw2LeIwN7OedqK5/TLrmzUpQiMzBQTSZs/MkxjQT90AYOYdq9AQ024aVOdDE9GF6jP6hxDdre3naf9dE5eU8uKq9evZLPjvvD3P6BXCS6/BFBA++Y9oFXR9NZzfAz55nxwoWL1eUrl6tTJ09WYL2zs1s9ePCrfB7I9XI333ZGC+frSN4fWxlqZhLNxauLsaZj0cafq9fHC11z3QY02ISXxtfF9MLwmqWTNeAZ0z7wmtGFpOYOqpGzXXxOMtIg5Gw31IWKrbw/tkLyQ5Q5H0ZAjZLezTQdizb+XKM+XkP53uhXwOBMRC2GAjob7edWWMBCdkJlMRvIW53I5uqI6U+pG9KexkYashMqa/JZZVWnymm57g+ZOlsDGtTYQnjlmlV51QkuWjYkRla3szegUY0tZCJUZn3z8yqvOv36sn88EVCi9sKF/eqPfzxR/fM/n5MHYx6QZycsX7zYq7777ln17bfPq++/3xOSdq168eJwKQQQx/7Vqwdi90T1ySenqzNnNuSzKQ+I+/JgeFD97W9PpM2L6t69fUce215S3zc396t3362qP/3plJC1J6pLl05Up07VxO6kfL0HQfv06a6QtHvVTz+9rO7ceVXdurUnD6aVI2rRW8hai1zJc3HRc2jfaNhzcshGqCzmA/JWJ7K5Oib0qzJNJyobdiDPnCPyNZPxaf3qBmlIdahsWktdorKqU+W0XPeHTJ2tAQ1qbCG8cs2qvOoEFy3rCyP0Qcxubm5WZ8+cqV577bVqfaM+n+8ISfv48WO5bjxxxOGBnMutL334oPpCcYXKYjZVXnUiq2Wxdn3W5di7dOlS9dmnn1UXL12sXr18VT1//rz65puv5VpZ4+371RZXjm10I291ahnpvLZcn3P80thIQ3ZCZU36VVZ1qpyW6/6QqbM1oEGNLYRXrlmVV53gomVDYmR1O3sDGtXYQiZCZdY3P6/yqpN6LfNlh9of0l5bXLm2kbc6wSRXx6w4DmlPYyMN2QmVNcWjsqpT5bRc94dMna0GgzMTtUM77gM3qz1w6FvnrD4tc/uCV/feaTqBdNdYWhYEjj4CEJNbWwfyQLwhM1u3ZVbqpiNLR6sWCACQqzUOzLblo/vwMRCqe3scfZNn+mfP9hwheu/ey+rEiT0hWifra6J1vzp3rqref/9k9dvfnqvOnt0U+xtmxuuu+PVCbMrMKbdNE7Dofe21NZkRvC2f00LWbjv/9/drv/CRPD6vr6+5PL49e7YrpO6WzOR9IbNwX0gMu+7h/8WLdSGVNxYxUWsUY0mOEwJDXPN71ynHkD16R6eDqW5CRuWaZKYaLUFB73gtQUzzcoH+nq2v6+vJObkQnDt/vjpz+nR1QmbSMqvzvJC0r0nZBFErpOFT+TCr9tXOq+rRw0fVL7/+4srmFbNvZ3Nry/m7LT6fFN/x//mzZ9Vj8ZM/NO7LXwH3+IlIx+2MENZnzp6ttk+ccH+w5Jr26PGj6vGjR27ma0e1U80uXHit+vDDD6u33npLroEvHSkOMf7DDz9MyVIwxHEzhM6g80eksODVvSNnP3d1t11aLhaBIY6bIXQuFqVhrS8rXmOidoib2ZjOWJ3tCoDrssX0286IyTXZdW34EkVd/QvpjvkSq1Nds/gS0+/jlWvH6eZLGua21dhCacznWJ3q6uqL6kaPr0P3VYZUy9RuW+rajhrmtm3Srf5Q7+uM1Vl9fjtbF8ur/lD7UFlMV6k7+ghAmLIUALNMHzzgJ6U1oQkhywbBqSTn5uaGm20L4VmTtPtu9iuzZye3A5mNUxO1T57sysPqvjxQ1ssRHM5YZaQeCIlbCdG65WbCMpN3a2tdyiBZ10fEbSU2ab8mROqkFfbwbXNzTdqsC+HKZ8PlX76kTe0f8SGzvb3h9J87t+bIXGbeXr58wtnZ2HgqMq9khm0ln3WJrxwt02iXEh+B2Pk2Vmf1dB1pMf3o1HpNs+y4RtrSejvKTyiTHU4IdmNXnTCyKmWKxq1idSoUaqd1bWlMv7qKDnW9TZ+td7pHDWfx0eokH/M5Vqd6uvqiutHj69B9lSHVMrXblmobfr2wJteTN998q/rsN7+p3haSkFm0kLYnT24L8XnS1aPPLX0gMz1fvnrpZny+lBm2//jHF9Vf/vyX6lshRdUfZH1/YnXI6+a30/JYCqn8xrVr8kfC16urV67I8gFX5Fcat6qvvvqquvvTT4703BNf2dSPHDvo+/CDD6tLly/LtW3LLfvwxedfVF988bnDJOZbrM735bxg/t5771UffvSR4PuyeihEMCTt5uZWo5qcOKwS37atQ6fWa5pjx7XhSxrltLM+hPIxX2J1qmsWX2L60av1pLl2XNtRw9y2GlsoVZ9COmN1qivUTutiqepGxteh+ypDqmUxnbbOtR01zG1r9di8+kOZrzNWZ3X47WxdLK/6Q+0p03pNQ3Jd9cfaxepivsTqrM7cOLRtTP+seDndfImirv6pnzaN+RyrUx2z+BLT7+OVa8fp5ksa5rbV2PzUEbVjxVI7xCLJI599224/VhdskFDo4hnJNem3nZGgMizSpDwsHS1N8RkFPZoc+2Ntjwu9jMUr24cUA569tt2Yylhdm96+6i1e2TqXIYBsp9sbEFbTiaupvF1rkTiKCEBkPny4W929+0JmKrHswL6bOcsIOiRp69m0585tyoPbupuZCnkKIfvLLzyE6oirD6inT/cc8Yte+QWlPFDaA+3AzbBdW9t3xCo6IWvVlnI+LIVw9iyELTrWg0Qt/QGpDMHLB7IXUvbp0303a5bZs/gIkcuyCpCzyJDyuXoVIriexcuSCy9fsiTCgeOdyhIIR3G0DxOTjv6Q9lhdSD6lbPJoCp/rZ7ou4oQYsXbGfk1cQEY7MWMjAKyuUdFYpc3E6qxcTt7abmpnQ8j2IcVAk+GG8pjKWF2Dut6LLV7ZyiWANfnZxgn5Sx3k4zvvvlP96Y9/rD759NPqihCTFy5ckOvBaGyJcv7Ap9cY8vVata/k+nGy+u7b72SJnW+yXeirwclTLLvzevXxxx8L0fm+/ELkveq///u/q4cPHsqM34c1wSxEbdc+Y0mCTz/7VJb4eW+8fiyzir+WZQnkr6Azh4FfIH369BlZp/4NsfOOXAdfVefE99dklu3GaOmJmQ2NFFgc1Lave6axpcqalGt9RpriM+p6NDn2ztoeF3oZi1e2DykGPHttuzGVsbo2vX3VW7yydS5DANlOtzcgLHDxt1mwclCN8Cp8l49sZL+pMyJNmqpG8LvqmNpYXZPutnJru0nWjq9sH1IMNBluKHdErXNqdDSMkgbx/ooViJA9G2eovi8vYj7EbLh2QzoWMR4yq3iF6iKqsqtc3NIq286oQXa7bA/rBupnU/N54dVkv7V8QXg19c/S49UKaBFYFQR4EOalLbxEi3Vk9/aeuKUHTp8+XKOWJRB4TjtxYq36H//jNUd28tIuSM2HD19Vn3/+uPqv/3rsQrYP1hC+t2+/qn78kZeKrYv84Qu+eP4+e3ZfdO27Ga3MhGWDzKUdROvGRk2sXru2JQ+OO448ff4cAjV85KBTn+shZm/dYm3cp9Wvv+66D/q3t5lJuyFEwAln9+rVbclvV+fPb8rPPU8Kubsns2mfiqSsfXhQ+2RjQkfZCgKpCDBSOZ+HRqye59EVqqe8jy3mQxf9h75KTndsMFYp5JoelE1AWPlRXtXaKjURqrNys+bRn+HqobmRY0P7pwbVT93303nh5dtN3pcATmyfqN595x0had+tfv/731fXP/jAEYX81H9LlhNgjVSWDoCU5WVW/JLjtCyNcEqIUQheXjbG/ubW+MeKjeYVr6b+mQUvfLl48aJbMuCtt96srl17U64jd6qz52S5ApkR/OLFS+dXmw9Nzp89c9bpZLYrMbNW7/nzQqAerk/U1DSrfGd3R+4FnsmLNR+7WcAPhagF/wNe2mY2xYqiJjyNeOdsV7xcuyEdi0QUMqt4heoiqrKrXNzSKtvOqEF2u2wP6wbqZ1PzeeHVZL+1fEF4NfXPPPDSPmvyoQkz127UKLdtk862cmdThEL2FCt0hOrbdKfWx3yI6XDthnQsYjxkVvEK1UVUZVe5uKVVtp1Rg+x2EQ/HdxN9Ko3Ym6hqtDmvnujSCaMIGn2fiLC/nai9EV5D/HXIjyDqhy882u/SpkFVcnGTTQfVnPBq8qEtiK7t2vTG6ptsWrzyz1gxi6WuIBBGACLy2bMNITX3ZUbtnhCke0KUygVTBik8C2vA8sKu06cPHEn78cc8fEK8HrgZs59//qT63//7iShfdw/SSmyyhAIzaZ8/Z7Yqs2Fr8rde+uBAiNoDeSivZMmDepYr9ljvFqIWXRsbB440vnZtW2YpvZIHxn0ha3W9WXsE2XwdoxK1//mfj4Uo3pWHZpZ3qGNh2YPr1zerDz5gXdzzQthuyzq5W/KQfcrZ/uKL5+7B9HCJhjBupbQgkILA9OgctRpdF+dxnm/0ISWAJhmrlLzEM0pcC8JzIhlkrVU5ZXaEV7nvOkSmCS8H1ZzwavLh0MtwjnaQju8KSfs//+Vfqk8//UzOy9flenBJzv0b7uf9rI/6SH5+D3n44sVzuQ5tutm2zKJlWQRI0DNnhKjlgpWwNflq8epyPLJ27MWLl9zyDSzh8Oabb1Y3btyozp2Vl3OKn5tPD9dWb/Ih5v6Zs2eEqL3msAKzF3JhZZkCXbs31janblcukmD9WNa/haB99Kgmavf99XVHY6sLVjn+INsFr1na5fqn8lE/53Qsdo076rsG2HPaZNMei0Of65t8aAu1a7s2vbH6JpsWr84HS8ywqWvywYgEs13bBZUlFjbaLOeuKQQbsULyGJ670u4mpmDMK4iCHlJFAx28ofqWMts823aLbq3GvT51z+SzbawOZqQzNk+yNCReSQ6MhFysfMk2SuqdJfvuG6+Zw+sBrB5UzBxGUbDcCBySquuOVH31ihm2LEtw6DfLE8jkJkeUsowAL+ZiI2VW7ZMne9X9+zSoZ+eqTviZ3V3WlWU92/rjGsoX+nkB2LvvbslPRk+45Q9Y5/b27edCqj4X0vS0I05ZmoCXg739NjNzdWaPcU4Veim+oe/Roz2ZzXsgM2rXZIYQyziwdu6BPODvysP9S3mg3nHkMDN6eYkZLzNj5vBMF0TPl7J7PBDIPt/OOMxs82zbSV1SH+cqOmljcq+WqT3SGlrzcfuWrB0pVLnRbntSq2+Xa5CYsXmD1snicbyTxZ33uvrs2vEl2yipd5bsG4KVdVd5gRVEJC8UY/bsvbt3q7v37sl15b77QEyyLi3yr8lMUn6OT8rLxm7cuCkvEuNXEN23Mc4dwWIJB2YA1+QxBPK229+QNd2Z9arXxK4eQlxDBkNQo5s/IoJFR3en3FA9P/983y3Z8PP9n10/PH36tPrx9m25zstfOe02BswWpudtc7Wd3jpNcshjMdtnG3Ca+xNSMzaf0NW0MyReTTZD5S7WEcCjJCS28LK+8Zo5oB7A6kHFzGHkKsj2mQZ0XsfNNs+2nWiz77E1k8+2caL/VmzG5lZVY75vvBxR68bIaKCs9djTXVW5dg2NR246gBpEWusa0U2sULz6/utaLJ6YawWvGDrTdTGcdXzFZGJ109byS3iGZOtzfHX12bWLNF4GvGq0yvdRQYCHyJpUXXdLD3BN0usS5fzclJdykTKLdny8SB0TbXiGe/EC8pQZtYcPpcjVBG2dWsoAwvTChTWZKXvSEbG8AIxZsN9//6T6z/98UP3pTwejJRFYQ3ZbyNYdeYjn56PY16OguQfwi9m5+CvvRBH/NkZELW32ZU1dZg3vOL2sx7u+vikP1vWLyPQlail2mj0oNccFgcjpOgpB7FxvR3hMf6wuarytsukYizmNTnfi4MA/NEDWNROdsxBWMdPGXJS8GgwvidH5IF993keAYlefY+0Ur5hMrA6/Zt0YYpsbm27JANZevSyELUTkvXt3q79//ndZTue/ql9/+VXO1b840nBvj6UPWIP8pFv6gDVh+fCyq4cy85Mt22cZr7Spfz3hVAS/2vBiXEPIQqiyZA9+us/a4fUwqDixcF30MHsWcpYPdtA/vlAn6vHFfLx++ulO9Ze//Fn+YHlWrvl7grssOXT3p+qVR9S6dn7jkXLFit2QiLvfoK7pHDPSM0vifJCvvo7FWX2eBS/FIYSl1s2a9o2X+tPV51g7HV8xmVid+jZLqkO3r/GFL119du0ijReNl44tF2PEz9z+6Koqhpdi1dYfXW2nxKh49Tm22uKJ+XUc8ZqaUUunDNnpsQ5YuboC1sp1WXG4PwTsRaQ/rUVTQQAE6hmvOlvWYsLzICTszg6zaXmoPawlL89zUjdN1B5KifYR88sDcf1QfCDE67rMmt12hCxLKTx5siMzal/IjJ5HsiTCKVmWQN78LS8Zu3Bhy60py7q5Yk0+7RcCzEG4stbtiRMH8tkXH3jJWCUP+bw0ZU3S+gVkENA6O5gXielLz9RnG0fJFwSOPAL2AJ8KdnS3GrpppcydG8aZcWs9ZchZpj/2ZKy9ZFYVAchG1qPl5WGQg5CQT58+c+Trf/7HfwgB+0hexvWo2hWS1l03JNANIXeRc0TtG69XD359UD2RJRJiG3ZOyEzU7RPMdq3XtkUH14T6PF//AZKf+O/vC0HJEgAym5QZpfscD/ILDf6x0Q5fz8rs35qMXaveefttNzOYWE6IDcpZO/fK1Svya5C3q1OSZ/avbsxQfSV/QXxpPviBP6dOnXS6WYdXN2I9w1q8YhuSlpQ1cVmzliUQJjbxF7/5EMe+XKDt0gXOZ/EPUvyMrH2LPd0oEyeq57LswZ6sCYyfLIcA9rENf7a2wFU+ogM9GiP6TshsY2Ycq210OVhHWO8IIfz8+bPqmcycxt+pDWykkNnEYAw2NSnOkhL1yYh1dIlzz/VhncfepuDF+sYso8EntFnsdf1jxhk21uT+YF3ss+GzGwkjOzpGdkQ/frfhFLJdygoCQyEQP2qHstqsF3/qI6lZptSMEChgLWwoOKKWgQpbztZ10IYOwJgulY/J1B5NfiOfM1662rFWfR3OB/nK9T2k05WNAorp832wumJ556sIxHTb9l3txHQ4H+Qr1QerS/Pql9sfGC+1mZKqX11j0/bYUh3cg41CTHEhKGP1Wt1BYSlUefWhSc6W58hquy52tG1Jjx8CXcnJ+jmGB836E0Oufpip15/lRV6vvcZD3JrM3mGm60518+aeS5lhC1HLbNuzZ7fkIY2lFXgAw4YcQzq4A8YgaHlp2KVLzKTdF9170mZPytbF3rosebDtPu++e0r0rjuZX355JcsuvBDCmDVyy1YQmEYgNORi52WVj8lMW6mvTbRNbdfVzpRtVaTplECLUzgcaxvSZ8q0aWrc2lTNprbrakftkfo6nA/yleqD1aV51en22WnRp/K5NnPlu9oJxaW2OYdzvWBWLS/jghTj2sDaqMyk/UkWJH/+/IXsC3knxBjne22zvi4EnbR/LnW8cOzZM1lXvIZLTU6kG0IkMmP39asyC1fIXYjPc0K2Mkt1Q3Q58k0UsOzCy5cv3Czeb77+uvr2228d4QgRB1nLBgn58ccfV7/5zW8c+QtJeVX0snzDlStXHZEIQQj5/Ic//KG6fOly9fTZU7f2qzr14MEDWd7hnizvcNfFeVdiVQKWJSB+85vfVu++966Ku/3Lok/JTvDCh3/7t3+b0EsDsPr6q6+rr7/+Spb8+dXhQ1y190I0C2EKYc06uh9/8kn1jrzMTbdNWaphc3OrOhAd9MOTp0/kZaGfO8IcwrZpAxPWFr5y9ar88fUt98H2PVm+gj4GgwuyXAW2IXQZA/jzkr4WLH6VWdPMjObzYk8Wtvc2dECWXhQbH330kVur99Sp00KGnxL9QraLPGTsC+k7yG+I31c7r1ycEK9Pnjx2Szr8/e9/9zTXY7Am/zeqa4IJaybjryOERT/jk/GDx4xBiHxIaHz/+ptvKsYJf1BwdqUcX3I2xSK1nfZjqnzIF1+H80G++tDp7GGgRZ/vQ8jPUFmuj13tqG1tz77a5jw0ClHFslOr1+puUqTy6kOTnC3PkdV2XexoW1K/PT4UvssiNJlvwqtL36lm1en22RFlMX0qH5NR3TZFfqTeFjfmu9qxCn0dzgf5yvU9pNOViYHxjNpZlFoDqpg0Zap0Dqhqp4uvXey4GNQo8chHbWtqqmfLWuURTYliExq6+NrFDkZpF9q6+BDS02jACDf5YER6yQ5pZxa8Jvwa7cSOxQn5XpAJK5mXnbD1UnpUEOCmlE9oOyxvEAg1kpMK696eOSMPcPIir/Pnt+QhtSZLf/11V2bVrsmD8q48YDJDhQfjdSFqIWyZEQtRu+4e6A+vDtNGmE175gwP51tuCYSDgx0hA9ZlFhIP1Sfk4fSUPJCdkofLbVf+4MGOPFS+dOvgPn6MXZ1pNa27lBQEHAIJ53pFCtGcI4R2ufK06WKHdm4bxYMSzWqV86WLQ6pAU3VQUy330pZqT7re7eJeFztYo11o6+JDSE+jASPc5IMR6SU7pB0IONZxhXiE3IRkfCVr0TLzkSUPdnZ25fwdmtHJmuMv5GWWD1wbiDM3bqUDbB+gHyKPmZhXhUT86OOPHNEH2Xf58pXxDFWdCQnp+1TISV4ExgxJiEZersUyADrPE1Lygw8+qP6///W/hCg8I9clZnmelT8AnpfrlLw8TGxhF+Lys89+I9eZ9xyxB5Go221Z9xUi9cRXJxyRClHrZn8KkQmJ/Mc//VGW//lnFXezZ5lBC1Fbx7RWXRcfmNVr9dKAfXx4+JAXgQlpKdhA1OoGsXxSZtFCCP/xj3+s/umf/kmrnG52aPPkyRPXBw8fPHTE7zR9Om7myGuI6Q/Fp9/9/vfV7373++rWrVuO6OYXK5Cfb1570/nFjFtiYGPWL1jcvHlTZk3vuWUW6Fc35rj4jzZI7C3xGxu//e1vnc+vvXZBMH/N4caNAsTsE1mr+JmQ4o7gl75kVjMy9COEcBNRu3VC1hcWzCCZ//D7P7iZyuDNLGgwBzN8ZpwwFiBlmcUN6cwfFcAX3MENr+0Y1Bhiaa48urrY0XYhX7r4ENJTd16wZlx42LPjokEyQ9qZBa8Jv0Y7R+2ZkbAUI0176eQEvNSO9UHL2tIuvnaxgx+jUJxLVkcXH6JxWeURwUSxCQ1dfO1iB6O0C21dfAjpUQNjojYolFGIY2OnR17GnFX5mAzmVWebXJOrbXZiHaS2VXdXH7R9Y5qhuE1UfW6Ta/RlVNHUPgevNhud6pscM8oQURxM8VRWZRJUTrWloM1Om36tV11BIx0KJ/waBReLUeVjMrih/rbJNbmsdprqS3lBYN4IbGzwIq99IWf35SFKXpAis1nZWHKAF5XxvL2/vyUPWrwA7JU8oJ5ws2ohWS9c2JAHqQN5OOcFZuvycNR8ZGxv1y8h29k5Kw93O/KgyMvDavKWGbyXL59wJC0PXnfvvpCHyucyc+ixfJ7LQx1HXu2XPlA6J8vXsUdg4pw6Gn7No/DwmhWTAdS+zvVNdtAfq8OBul49OexqV65fTUoOxeuckBq6BuW0xpE3o8Rvyn6bGdXZJhfSbcua2kdcG/eV1dN7vskxYwgRxcEUT2VVJkHlVFsK2uy06dd61WWNMJN1d7cmviAq+UB6Msvz088+q+7//HP1s3z0J/xKqBI5pC7k2AHLEjDbVRz1Y2RWJOTeNSEJP/n0k+qTTz51M0mvXXtDfj5/2hFrEG9KxvHCrjNnTssfDjdlaYJXTuarr76svvzqK0dcQgjWZN2+tN0V0o6PzECVn91L1ZiAnIhRKvCVmZi60W7XkdDyk3mpYwMndLMMD2X4xQaneRi3K3L7teykXmqxsy9ryrvU+VX3wLgfa0NiT/5g6vQfogYJzQxUdIPd1pYs83DurPtDam15+ht14OWWd5AXvEFwgjnkak1aV3KtvSwvfzvvYiTSepmE7fESBtiln3+8fUt8WnPkOIQ9G/ohld99510ZE59Wn376qVtOAt0sMwE5yuxW8OdldOfPn3N9wwxglruArIUEPiU2Qht6WLriHSGTfyPE+icyy5iZwRC3zABmjEHgMzZ1HWKWvsDni5cuOoL+kcyoRYbtEM2QtTqeFLlw68PSJjvgFas71DBQrsm4MYcIfrZtKpOgMqiqzU6bfq1HeVcfQo5N+DVSHNOv8jEZ7Ki/bXIhnyhTO0316G/Srba1bZOc1uekE36NFMf0q3xMBvvqc5tck69tdhaF14S/GcG1ic6Kl/rVZCcHL9XVazpyrDeiFueagm1yvE3edUIPPdFkR1WHOkPrusTVFK8tb/LJyth8irzzWR1PaWANjPKxZqqa1JfTOtT4dSPVMyW5OpPkR07H/nLY5nSSnYCSVcPL+btAvAIQlqKCwMwIQNSePn0gD1M8CLJOHjNXIWr3HVHLxJ+Dg5qoZZYr69aeOsWMqzUhajeFqIVA5eexMoPmcJLQlF8QwFevslbehsjtO/3ynCV6NpzN06c3HVEMScvnm2+eymybZ9UXX+xWjx5tig/yuIhjZSsIeAjkjoo2eXuun+Vi3mRHr32kvozWEaIjbmyBxu0ayZffWOv9FDlnTDKwJ/7m6tyXX5NkwmlUtak+eZZizVR1yEOtQ11Mh2cueTdXZ5L8yOmlvO+S8cFaqMxI1Fm1Z4UghKj9TIjar4UAZGYnxOWOyB6MyEsA1bVIyUMshrCA9H1X1nH97NPPHPGLTmZYQrTRhpm7zJhlxiRrtZLy4q7z5847gg+CkMHM7NCn4seBXBOAc2/083dIPAjVem13OzrwqvarJnEhTg+X1KENbSFrx+XEJ599IVd5eaeW10QtRPCkficLKWv0YpN9/MMGSxjYdjVGtZ36GJVxbK5zkJMXLlxwOEA8ggezhCEpQ5vzSL6YFX1aiO/zMqtYiVowJo99SE3IcJaxYEkFyFFIVchc5LDJzNrvvv3WzQIGG4hajfjaG9dkhvGfqt/89jfV9esfyBr2b9RYSXyMD+SJg+UsmGWMTT74j136+OTJwzV/bSyQuYy3f/7TP1cfykxrZgXjE+QuZO9j0f9CsMBXxij6GKOQuJcuXnKzbk/fv+/uG0Jj0NpSvFxZm7BtaPKxZooXqS+ndajy64z6ztlcnUnyI6eX8tzVGam6YVL8xkabvINqQLx0/JD6vmiduuvXa/ksaa7ONnnnszreJhxxvKmpqib1ZbQOtX5dxFRyVa7OFHnnszqe0iDgbayZqib15bQOlX5dwEx2ka+zV6I225vUBr7Xqe0y5EKdoc1jdSqzVOkc8FqqeLs6A072iOuqp6Xdyo2fQDwOqhFeZXgFACpFK4kAL/a6ePFAZsRsyMMZPylkZuy+zJJ9JT+zfCUPaXIhXuOFMpUQqC/dzFeWRmCG7KVLJ6r3398W0hVZfjbZfDLhmXZ3l1lPrLW3J599edDiSJKf2krKC8N4uOZnmVtbvMBlQx4c+TC7q5IH+JWEtzi9ygjM4UQfvTZKpT2iJtyZ2MkAWdqtjZSSqH5X1lWnmp+1veo56ik4KfADxoqJ3C6BDHv46KGQdLfcT/4vCvF1WkgwXsD1Qk7EzIbkZVms8coM15dC3rkXcMmFgp+5s0wBJF1t+TBIiMU1+TC78j1ZegCClhdvsfwBBCRLGzALkg8/lYdI5ANhyPqkbrakkIyk38g6pG/KT+LxlZ/qQ94x+/Obb7525OS2LH3ADNKdnXfcerfC8jkyD9k7d36sfr73s7wk65kj+xT+u/JT/Ns//ig/x/9VyuWiJxsvLYNcffzosSwFcENsb7tyMP3ggw8dFvhDbMjhw1dffinXtrq9E5YvCOwfb//o8Hkla7X6RC5tmYUK7uAAOavb++9fr84J3ry47JBgrX/2rzKhFHJbl7CAzFTSHV8hUu/e/Umu8SzFUBO1LAvxhpCvkObIgjtLPtDv4Ea/8uFFYKwPC77XP/jA9SVtIWDv3LnjPo8kDgh31pK9fOWyW9LikvQd69miWwlW0tC2JWvyop81f+ln2vGHA9ZI/kls4D8f2kPSMuMYknlLdEPgY/ulyEOuJ2+5B0qy4iMmuMTnrmVD2kE1wmuI4WW7wj/X27plw6XVnyHA8oz6eNnqWJ2VW5r8HPBadKxLTdQ6/AfsBFWtt1N2gMbqFt1pTfbniZdipjhpSrlf1+TvosvngZdioaniRPr/s/cm3HLcyJVwcRFFSq21tVFSr17mc8/Yx/7/P8E+9rR93O7WtPaVokiRIinu5BcXmbdeVFQACSCRtbyH7K7CFnEj4gKVxQrhIdnHkmP75iVmf2m+YnZ7f2egNQP40YcLidq33z4vCdcXJGGLRO05+aHzdHXjxiM5cuBROPIAP+7u3Xsq58U+kh9QD+XPHuUp2HJGLY5B+M1vrojs09Vnn427giKOIkl7586TkOz96afH8oP8idgezrp99dWL8qMKZyLiRxx26l6SP4d9Kj/GsMtp+NPRGzewo6kffxCht3c3ZGDp+zy/5/i9h5J9KPnZ1CFxfC2oB3PqBKAxKYMtq8tx259oB2jiJ+RqhwgN1/DCxT6W3tggeXjvwWc6voB7gCZPLGkuNQZXkPS8IbsRP/nk07AjEjtgkZx9XxJ2OMsUyTskKe/Ljkg8KAoJMzykCg+f+uqrr1dfff04JCblZi3r+CQ4fIdgxyMSgTgfFX/Ojt2d2CmJ5Np//ucfw7mo9+4NCVQk4HBO6W9+85uw+xYJQ/wpP/78H+eW/lYSmEhuIgF6X5Ku2P2J65KcUXpRjgeAPBKiV2TXJh5Qhhhuy5mon0pcn332aXjYFBJ6vO7ekTgkSYvzX5GExoXdr9hdfPPHm/KXHX8RXm4O605IRPL1beHiVTlaAElK+PL111+t/v3f/z3s+CQucb6VJPDt27dCYtsmEJGoRWIRCeQ//8+fw/ES1MdD0/CQMfAGDpGcRBL25BNAyaEM8yxv2JQLOexqDQ/3khK68BVx//d//3eICX4/FtvYwfo3khjF3GCOcd4skqto49zha5LYRaIdRxsgYf3mL9+UebgaOECiFMl6JND/7d/+LeAjAYyk7Fu/fCvstsU5uUzowic8iAyld8HH12FbEvlIGGPusMb+/Of/Wf3Xf/2XHKuA/zjwIPiDmGAH8wy9r2QOQjJXYnz8JP6wNdolX2y3Lhmhd39KjbX2oxXeLvjibYMleULJPpYcaxVfa5xd86X5sHzpsdZxtsDbBVfwk2sHJTlh6Y21iG0JjF3yRV7IE0v027ElYj3oRO0SAZdiYkI4EaW6Xb4zkFo/qbHOXGegM7AsA0gIyW8cSb5ekB9kV+RHER4idk5+dD6TxOzw8DC0ZUNP+OGHxClejx8/FzmcUfuC/MC7Ig8oeSA/khLnHkgY0EGC9rvv8ATvx/J6IrthgC0/yuQIBZyHi4eV4YFjOAbhrbewUxdnHj6XhPHPgoAf/vEfd8sy1dE7AztiQP6xxX8Ew+LGv73WA+tKhVPjt+5YuAAwOseEC9o7d8lAanpTY9gNi52hH3/8V7k/4/iBl0JCFTtHkTBEchVJPSTK8GCsO3d+Wl3//rr8B7jvRf5SSI7evHlDvj/ubews5c7H1yTx9q6cRxsSv7JzFH9yjx2o2C355RdfBEzs0r1wXhKS8h0DuzjPFknRVyQRh928qCOBiN23SCJiByeSy8BBMhMvJA7feVt2hL7/wfpP7++KT0iYIqGIB6PhYVa8kKzEjmHs3MQLF74fkVRFYhM7XcELr/eFi58FD0lWnJMadtRKovUj2VELnzYuwRl2pd6T5KE6WmEUQkI57KiVRC7Oyr1+/fu1+tWr74cdx5izkOAUWyHBOfX5DInQQQf5ULxw5AP8BF8ff/xJSCqj/VTOJL4jiWpcSHbiaIW3hTs8uOsdOdLgDUl+Yp4QJx56hmMo3nj9jbBTFvMBnvCgNDyA7D//+MeQvEeSFDpIzt4QrjFn2KGMxCquVAyYdyRnmchHIhbrEnP2lcwD5hkvJMthG1gXZRcu/Lt7905IlOOMXCTZ+3V8DGBpb3zvqRBSY0rsTFU1J/arOzV2pkjKDFbzlanSxXbAwKlL1PIGhwWXe3FxxnRi/bn4hypXwxViSfGVGjtUHnL96nzlMjXI1fJVZqVLdwbqGRiOPsBZs5dlF82QqMXxA8ODvs7Lj/Pz8iPyqSRO8Werwxm2SN7ihV21b7/9opTy55By1i1+cIYfYI47SP7evi07oL59KD/qH8vrmfygXkki4Ek4G/eVVx4EnL//+5dlt5WcayfYV69eDonav/wFDybBD1zZiQOlfnUGDoyBmnt98t8KBNyKU7SgOOuiZQMiSY8BW8Zhf7Ydgz82GVopPL329FJjvhfH07tLvpAwvC5JV+wgRbLz9u2fwg5W/Ck6EmdIuCJ5igQfkmfY8fia7CrFw56wCxK7XZEI/ej/fRR2u2IhIZmG80hxjALOEMWfqQMDSTuM4XxRJIFR5wO9zsl3EL5LkGjFcQmwC3nc/6H/nsgjufvFF58HPSTm8P2DnZqiGJKr92VX55AYHR4C9kSShzjyAIlXJHmRXOQ1JCzljFqJ65m8cA1JwGGXMZKyTOBiDGesAhsymB+U2GF8x+BCVgZDIhZ8YZcuONEXdMX5IIOELnjnhWMg4FOLC7hDUvvm8FA4Oe4ByVPw9pI8sO3lX7wsSe1Xw1zAHh7khjNmcdYtErjgH20cV4EELRKxuJA0HZLmP4ZkNrjBg9Owg/qR2ETcSF6H+MVe7N8IAQxvIoMEOeQxL7iwXrDT99eyw/oWdnD/eGt1F8cxyI5uHCeBCzziHF3ME3QRV+uLM+fdg1K2Uven1FgK8xjGOl9ls9T5Wp6vqc9b6We7zOP9SR/z2jpViVpORM1SOK2LM4cL8FYaf0o+NZbjz6HLdL6mZ2jOZ3EavUt0BuYzgB828ltKfkDjT0WvyI8vJmqxs+acJFAvyG6mS/Ij6Yn8KDsn5Tkp8eeXJ4lanCeLs2TPnx9+kMd+hGFHLR5GhkTtN988k9c5+SGFP6XErt6n8sJRCKjjGIaXJAFwOeysBd6rr96WH2HYPXM+/BiL2ZjPSEfoDJQzMOde7/5bQQB9TJF2Fcp9HoBOrLC2cVYtOpvZ2/axBj7lTmps2/rx9eyCLyRqsTsWCUMkMrFb9ve///3qH/7wh5AgxVEFSJTyP5ghIYZEHc6ZRZIWCTmcaXvjxg/hvNLncu44LjwYDIle7LB8RXZsIvGG7x8k05AgRKIWfTinHPd6XtDBDs5L8kWF81HXiVp5qNjXkjxGAhgYSEIywQmLSMbCLyRnedQAksD3f74fdlyGRK3d+UqjqoSP4XgA4UVfPwsOE4+QwQt/kp+Lq7Gor3fzcvyeJD2xM3Rgkb115ZCo/Ul2pt4ICdXrkqjFBexw1IRwjMT7nTv/KyRT8VAvzDV2t+K8WSRqh922J4naELdwD75vSfIU8461gAvywzw8lHXxo8zDkNgOg4k3+INEL3hHohY2sH7eeefdcBQGfEXyGol4cAYbj2VuMde7uuBj6f0mJZ8a21VMS9rpfE2zC47mXKk1lBqbY3OfunP4Oo185M7FMX4WDyJRW0OcNylYfLWLt5UPnl+t+1r7WvOhbe1Da440XmtfTztfmrva+pzPYq3NrtcZyGXgnGRkLlx4FpKjL710IRw5gCQskqCXL1+QP2scdsu8/joe2PJUfsgNu2zfeedF+eF2AZuWQjJXTsILbfkrSflR90x+OMGD7TsEfmzhgWGPHuG1kh/V5+WHFY5ZOCc/qOELXitJDgxHLuDHNR5sBl+wY/e1157JLib86SZ2zuRG2eU6A3EGWn0vzrnXuz4IYEiYate3P1J6NL+unZ2yY2y6vuZb3pI08FvjXkdrHzwbrfpa+7oLvnCf5s5RHCfwTO7DSJahD3/6j6TdSy9dkcTZlZAkfRk7McdzbHGOKpKtH3zwfjja4AfRvytJNCTSXnxR/mLj9dfCg7Hwp+y4YAsv7MzEblscnYC2/hXz0ksvy5/bXwnnkYbknCQB4Qt8QoJ2kA9wk29ADtiwG5HOnbMYQgw3Ym662wF0uqZxRAKJa+xExTm8OLpCXzibGLuG78kD4R4/Ho5+QFIcyVa8sMP5vBxHgaMPcHwF5h/jSFZjVyuS+sDX84GkO5LMwGOyG/MGvNSFYyjwYLL/+dOfwhEXOG8YO3qxkxcJXCTv8eAzJH/xHwawvrCLF37gmIUbP9xYPRKb2L1Mf3LnNeWXHtvFZ1Hb23W987Vrxod/Ndd+tuFt6zlbioFWfuIzWMtXKx+W4kjjtvb1GO9de0/UcqG1mozaScDCaOWDXmSt6y35quGKPLGsxWjNSwyv8xVjxu8nXy3mtQWG72Xv7QzMYwA7YM+ffyY/kp/LD+/hoV5IjCIBi+Tom2/KAzquXJAfWPLnqPIgMPQjiTucITskanFOLXCw8/a113AUAs6wxarfXvn4/Y3zZpmoffToXEjW4pgFJI1x/ix2Ut2+/TScVwu7+D1/+TJ8uyA7fYZ4f/4Z/syLvWt3BnifR7m9Wsv5qcFI+gBACtSAp0JYY0sl1EdD+JDzUlV00RWUZoga2WWtfksfsp2tFGzp6y75wp/CIxGKBBySakjcIRGGhzl9IWfIXnrxkvxJ/ItyP35t9YbsjsVO2N/+9rehjYQrviPel+MKkFzD0QRIlOH8UyRwX5cHVL0qOzR1ohbJViRxkXxD0hffE/pCgg47KJEURNIPycDBPzy0bNhtqeVRB181nNE0yhp92N7lVeonzhRmcvPhwyEZC38RKxKpeJDbPTlO4PF4lADm8oLwj4exoY6zY5GgfV0S8iiRcEWCF2f/eolafJ/jP87iiIiQqBVcrCvMZerC/CJRiweeieFwzMIrOJtYErXh2AvZTY01hV3fOBrizk+ym1cStjdkp/BHH300nh0s61cWE9Zfy3mtXRctfUhx12Kspa9nia/aWPWc1WK0nDPtT+t6az9r+GrtQ2uONF5LX2u4gi8tfdCxldT3nqjVzoKQWjI1Tq93Bg6FAX7ID8WfXD/6ZzGXqS53jAy8+KKcS/fSM/mBjSdi48cwdsfgT0jxYJDH8sP8kfwQwjlv8kUdPsTDJ/nBA3n4SNgZ+ywkdIcdrxflzxIvyo6r4eFfSMZ6F3CAJ7//5XUuvHDuLK7hT16RzB00kcDFC8csXLqEIxewgxfJ5WG8v3cGWjGA1Xow/+6CI/z4WKdsew4Bu7Izx8euW80Al1AxgNykeW4pklzDn5Q/ke+FhyFZe/HihbC7EbsqcYzBXdnFiMQbkrSvSSIWu2qRdEWy9vtr34edjtck6QaZcM6pJP7OSR3YOL/0PnZ5YhekJNn4J/PaZ/nPeMNuznPDQ8KwsxN/so8XHyCm5Wvrmq+WH7Naf3L1Su5dSKri6AccGfBEjiHQFxLm2Pn6SGTwkC5cSM6uX2jL67zMAxK0TLbCPnauDrubT46skO5whUSpjOuEKcdiJZK6N8ID7T4OSX2suV/+8pdiV5LG49p5WY7XwAsX1iYSxTjS4ZEkoG9L0ha7f7E27c7hmM3efzgM6M/i4Xg17UnJZ3EaLV9C83Va7135bHTJ08hAVqKWHwT9IbB9bIMkLTdFGmWpj5J9U7pzx2mTOK3sEpd4bMOO7WObPkyVlAcmcdk3pTt3nPaA08qmh8k+bcPry4kHGNRlqXFzMGplaA/6rWwSU+Pl9uXEsU++cvzrMp2BuQzgR9NLLz2X5OoqJFixY1V+k8kPZTwR+ok8vfnn1eef/yw/hOXPB2Wn63BhdwrOs31BfoTjSdyXw4PEXnxRHjDyCs64fVF+yOPp0cPxB7BRcsE+dOR3vPw4w9m1w1m4/KGIhK38Rgt+luB22dPNgF5lXKk5EVOW+ijZl6M/R4Y2ibFlFx8GXBTcEhiG7bsVZxtyhGBfaOMtdHBUCUJJXZSA+AaGklmqSnvApx9zbXmY7NM2vL4c28CgLkuNm4NRK0N70J9jMyTfVtjFel/+o5rsrpXdi0iU4YFdSIxhly12NeK+jSMSfvf738lfP+BBkL8I59UikXrt+2shjGdhd+XwoK4gL8k7nL+KnZCff/bZ6pNPPwlnnG7FLAGEZK3YHD4W51Y/3fkpnAX77bffSjLuzpZKaUcrvrRdYmr+bR/b0NNyGienDpwcfSRgH8s5rjirF/OlrzAnmMcxqcqx8P07NmAHRw+E3dYihxUeEvCy4xm7pJFIjV3nxkQ7E7xWjlwgDuDflLWFf0Jg3WC+cTQGdvHi6A08yAz/QQAlXkgc42zdN998I+y0xdqE30hGI1FLbmBD27E+LNGmPWDTj7l2PEz2aRteX45tYFCXpcbNwaiVoT3ot7JJTI2X25cTx1nki/yVzhPngPoo2ZfD9RwZ2iRGK7vEJR7bsGP72KYPUyXlgUlc9k3pzh2nPeC0sulhsk/bsH3xbxYnSigDjCCOSHWXxqWdarAKRU1ShfpapZSbfcS6dvbAK+RGc8q+Etf12irRayXbam1pfzwe2Kf50jq59X3zletnl+sMlDKAH2S45PeOnPN2QV6XwnEG6MNZtN9//yAkaf/0p3vy4K/H4QcPxni99daw0/bxY/zJ6nlJ1l6WH+YX5U9gX5QdtY8lyftQdrZsfwLxIxsPKBseSoaHgwzn0uLYg+E1/PDDMQo4cgFn4uLC7l34PLiN4xHoSS87A/MZ0Pd6LK1h1c3HzUVI2ksObloo/VisY9UEFNjbtH66WuRGc8q+kkg1tSV6rWTrpnP4S4aw6xVJO3k9kiTtQ/lzdF7AvSO7FW9JQgy7GXEUwmU5vuB12Un7618/DQk1/Jn61avvhaQt9JDoxZ+0Y8fmM6njno4dtdj1+O2336z+8uc/r76ToxImL9F7IHoPZScuzyaN6QzfG5i54YUEM/6MP+wIHbK+G7/livkSX/h9GnwQANhARvkcxkbLwEW91UU/NS7w2U871iaSsEiCIoGpH9gG+eDrOh6jGYDlu1fOnMUxBg8k+YkHd+GvYPCXOEjS4mgL7JhG7OsLPMhr4PxkJy769GWshbWCh7LhmAvYuik7rl99Vc43fuUXYdf2e3L0AdYWdtoiYcvdtUjW3rhxM+zQxpm1+A8Jt7WhM1AHl2BXc8q+kvAtRoluC9nNFdICceDE4pIbzVeNtX3wpX22cdXEYHVacWNx0dZ80Y4nt1RfK770HOT4uo9Yc/w6BBlyozllX1GilpNrF9mSQdJp2oYtOj/XLuOw2MDVfSV2PEz2AYfxlGDmymps+s8+tnOxPDnGobHm4nuY7IMPxPf8mdtH7JbxTPnk2ZzS0ePkRvusx4mv+1rVia1te32t7HWczsASDODHJf5q8OrVF0KCFYlW/Oi6devR6ssvsZv2gSRcn8gZg7COROqw4kUt7Lp98gQPDVnJDpYX5YngwLooCd/L8oP7ofxIfxh+vGJcX/hBh924H354SX7YPQ07erE7B8lb2ZATErMvvHBh9Td/czns0IXuw4fP5If8E/lBjrNv8TCU4egEjdvrZ5cBs8SaEkFse6/X7VqDwAC+xvLsleB7mOwDDvFdTO2IK5Du1NiEYh/baYT0KOPQWHPxPUz2wRvipz2rGyV2y3imPPFsejo4bgZJtxflhUQqkqI4G5bc0GckXpGkfXB/ODMWOzWZgEUi9EU5yxbJ25C8E0OQQ+LsJyR3x6QvxnBkAo5XwO7bb775ZsMl2lxPxmg8JBvFJ9hH4te78B2HxCQeSokEI76PLsoXzcvycDIk9nDuLS7aYFzEAl+2j2OhFAEcEcFELb4jETdsXJQSu1eR5CYG7UCXc7GB17AR8BcwgjOBsYMaD+u6K2cXYw1glyv4xM7WFy/LGcXriFerC7L7Gjy/JDKYZ8w3dtTy3xMMmdyQK3CKNYcTlH66/VM43xaJ2ytX8OC6H8I6+v7771c/XP9Bkrg/yl/3vCd/GfR2SObiiIRf/epXYT3hTOWpS9O0tj8qsT2FkRq3sUGWNmvxPUz2afyUX7Vjnu9eXy2+pzcXn9zE+Ca+Z3tuH7G1ba+vxk4sLuBrezXY0CEG7aCPvqO+xEV82oaNlvFYLM9eSVzkRvvLPvpeglciS9+hQ/vsY7sEz8oyDo01F9/DZB/sE9/6kpWo1Y4SgH0xYMrNKQP2aAB/gWoDog9zbMQwYDY2NmXP00PfklytfaIR48SceNbYUtGwNIXxOfgak7Z2wtcYANcWbc+Nhzg2Ls0XZWpKi8t2K3zPp4Bt+FrSnudD7+sMtGBgSNSeC0naq1fxQwuJ2pUkah/LA2Owo/aRJGpXsrtWzhPkh2s0fPfuU0nWyg/3cw8kSYujEVZB/513XpTdtdhZMzwUzN7tcZTBG29ckiMSLkuS9on8qAIGkgJ4QAlfFwTz5ZCohd1Hj5ColYeViE08pOzhQ3mgjJxt26/OwJIMpO71GGuxAmMYc/A9TPSFeJYkDNg0YpyYE492WcPSFM3qMa0zVff00KfxpzCqxkcDh/jvLiTSkKRF4u2e/NcxnBcqR4qHS/OFRBoSszgW4eGjhxt/Do+HTF7CLlvushRtyP14S3Y4SqL2kcjj3o+k5pColTNJZSfkt5KoJffaFr5jcPG7CE0mSFkGAfWGfiRq4SMSqrhC0lAeWPaSStSiX9tCmz6gtGMYx4X9stiVSvtM1L4gyUg8gOu58EacQeMEy/ZzvEUZsBcyEI6/QKL2xg+SsL0bErUvvHBRvv9fkp2tr4bEPOcIsWAtXZIELY4rwK7rWKIWsppncPrkCc7Cl13Ycm4ujj7AsQrYuYv18r0cp4H1eVOS+1hPON4AyeJ3330vnGX74Ne/Xn0ta+nylcuAnr7Il3ZCtNBtuqaxHAmNQVMQm4OvMWkSfRqf/U3L0cAh3rtScVq+2F6Sr4Bt+Gptj3EwduKjtGOUmSo9PfYRfwqjZjxgjwa4vmgPJX2owaZODGMOvoeJPvpO24uUNGKcmBOP9lPD0hTG5+BrTNqa4isrUUvHCFpTlgTGQNbOS2WrL+JEiR3GRWwN6fXp8am6ntQpWW98Kg74F7XhOO90BbNTdjzf2Kd9iOFTNmUnGgeVG5Ta1zWc2zmMTsWzxiioJMwVoCTmvQglT5g8BN/HxkZfHkyX6gw0ZYA/XvlpYJtlzNjw4xLHFqzkXLcXwi5XJEuxoxbn037zzSM5wkD+vPQBHviCJ3dxtQ+IsolJfhw9l50scsagHJWAB5BhVyySvdiZK7/Npf1MfqSJZ+rGhqMMYO+DD67Ij7qnq7fewtOfcRQCHkRzXvQuhKQtzrvFTtoff3wsO3qHYxiuXcPuqSFJe3JmbizC3t8ZOGEg9b17IjXUuNJRhqUrla0+qzS2S+xAJSZPexEzk93B70mpuEDML2qsuWGHLh3nna6gMWVHw9q69iGGT52Unblc0Uaq1L6u5dzOYXQqnjVGQSVhbgvlBUmGvX/1/XDeLB7udeenO+GBYGH3quyEfSp/Nv9EEmhISCJxhiMOfvfb38lfSnwYzglFQu3+/Z/lu2Q4w/aBYOCCPnZH4kxa7I7En6bjQoLtvatXV3//v/5eEqkXh2MNRDbsmpVkJ/CQYGWS7pLs1MWu3NuCAf+Ai4dk2Qs+4sFZSPIhP+SLVQAAQABJREFUkYfkH87O/UAecoaY8OWE4x2QyMWuWyQEcTTDY7xkhy92CKcu+PfggRzBIPbhG5KQ78ih7//fP/zD6o3xIWsYY8IYvuIFPXsOLJKPl+WFOHFMgD7H9bXXX1thTpAIZjL4F3IEwDvCO3bw4go7hwUX2IiBO5ZT/uux3M8BuPoZiVo5ioBz+OTJ6yH2X/zildUHsgb+8If/Lf9R9U7Y6XzphUthTbz77rth1yviQwyxi36Aj7ffeiusLRy1EOZESiRu8W8KJH35ULMXLvF8XJyzfy5wAXkczYAdzfpKfg4ct5yuAAc/Y2PanlfXPkxhpOyQK89Gqz7t6xrT7RxGp+JZYxRUEuYKUMbv8yKNemHyEHwfGxt99dA705y7vlJr1waxxY10bPVZpbFdYgcqMXnai5iZ7F6aL/gXteE473SFGGLxTwYoAtqHGD5xUnaicVDZKdeJWip7DnDM0Q9dOgBPhvooPXzqeGPe95onB4xcO7TnycewqaPtoG7lianldR3yUzIcR2nxLdZW2yiYphZf+zFlh0r0C23isqSMV1LPs8MxTw99wJ+S4fiUL3Y8tE2naW64RTv0a2PQaVBeY+q6oxK6qIeGlddjnj7kp2Q4brE1njeW20ecHDuU7WVnoJQB/GjBi9dQVx0cGEv8aBxez+TH5XlJmF6UnSn4oTMkau/ceSLHF8iDPG6ekx+rw1l+BkJ+LD2XH2Ln5Qf3M/mxjUQtHgB2TnbFXpCdM0i24iiDIVELXfrIHbUXL56XH7f4s9ln8kMTssODw5DIhQx20f7885PVd989WP31r/fkdV/qeCK1/DnpU/zZpPWot88qA1gK8dV+MgaZ1LLxxrx15smBe/owZQeyuDz5GPagMbxTDy0rr8e0DuuQn5LhOEqLTxyUdiy0TadpavW1H1N2qES/tO0UvtXz7GhMyusS+FMyHJ/yxY6Htuk0Te3Khh8pOSp5fuXqIen4wYcfrP7lX/4lJP3u3rkryc47ITmKM2GxexYJSPzJ+yuvvCK7GN+Vv4L4/ep3v/2dHIXzZkjaIYGJYw6u/3B9nZCFDpKmSNTevnVbvkPuht2RSNQiyftP//RP8h8N3wg7JLFLkonNF8Uf7ICFrdfCOaWvrD7/4vPVF59/vvpBdlQiGWcTtYgfSUs8/AzJYfiD7z1gfCh/Fo8kLpKhFy++EGJEkvae/Ck//MMu4p8lwYtEX+oaErX3BfvBsGNUkovvvXd19Y//+I/yHyHfCn96D0wcF4DdoTd++GH1w7Mfgh/4UgzHJowGsPP49ddeF5wr66QvhhAHOLkkyUgkIeEzkrOvvvJqSHxCDxcSmPdxnqskgjFH8C334lrJkQ87aiXBDt9vC68/C7/YcY0kNc6P/bXsZP3nf/7nMMd3Zcct1tK777wbHiz3/gfvh0S0Z8f6gETtr3/zm9U//p//s/pZYsKcYL3ckbWINhK+eGGn7iuSIMYaQhtzjCQt/iPAQ5lz+Gsv+zkIbdNpmhsQ9BVlSo5KlEeb8iwp45XU8+xwzNNDH/CnZDg+5YsdD23TaZobbtEO/doYdBqU15i67qiELuqhYeX1mKcP+SkZjltsjeeN5fYRJ8eOlUWbdlhSJlam7HAspgsbKRmOoUz54431f3fFWN/mMvBnSDTNDbDceaES5dEmLkvKeCX1vPnnmKeHPuB7MutEbUxxqj/H8SmMszYem4yzxkNuvJqvfa0378OT6/+u5PbFjRffMfDl+d37Dp8B7CqV3ySye0SegP3TU0mu3pcfJ9jh80z+LPCh7HTd3EliI4LuIzkADjtob9x4FBKtSJB+991DaeOhYuflx96wg8fqPnuGZOp5+eH0PDw8DGfaIsGK3bHYBfvw4bDykcT94QfsNgLW87BjFg8gwwu7cNGHYwywkxfJ30ePcLSBPOH5p8fyg+yJnJV7f/Xxx/dXn376WHDPiQx2927v8LX+9XZnoDPgM6D/HeFL9F7NgOZrX/+22PW/I5B0Q3LwN5IoG74nHoXkX0iwSgIVRxggOYnkGB7w9Pbbb8lfSXwQErZIHGIMSdpvv/02vPDQMVzYGflckmw/SqL2Gxn76ssvV7+UhCaSmngI1N/+7d+GB0PhwVG3frwVkqw4DxXn3GIHKWy98cbrkhB8VRKFz9bJ3nvjrlLOG/nCzlL4fE3+TP7DWx+G5B1iwxmm2IGKCwlB7D5FEvnWmFhGQhUJP+wKTl1IBl6/fn11Xc5KZeIQieq/+7u/lzhel+++H1Z3kTSVZCGSvsNu4QdhB+9DwacPsIEE8geSyHz99Tfke1J21kqCkxf+nP/y5SvrRC1sIYbf/e738h0sO4PlQrI0JDKF6++E2/tyHvD6l/UIhLnUl2mGIcSNy8qGTvn5jAQtuEICFMcffPXV1+HcWMwf/ELS/h9kR/Gt27fCmnlBEuFvy9mx2Gn8xhtvhv/IirhTu2phCwlenDv7D3/432EeEBuS97fGBD/OvsXOY+zEBj7WBJLYSO5jfX137bvVzR9viq8nD8AbYjg772fx3lUzu/u6r3u+ep9JT26ffYfE1z55KLGtP4slemdVVvPF9bZO1LLDI0cr6nGtQxndR1mvj2O5JT/EHhbHiOXJcEyXkINurjx1U/Icsz5Bl2O2TlyWWo59pSXte1gcI6YnwzFd5sppHdShF+OZY56O7kvZTo1pjFSdnHhYHIO+Nx7DLZHVGCk9jGl/qKd1dJ3jupwa17JeXdu3WHoMunbcw+t9nYFSBpAwffz4/Orrrx+v/uM/bssP5wuS7HwWkqfXr+PHUDqpeePGs9Vf/nJPfuANZ8UigfrZZ4+kjd20SAT7Kxc/4nAkwv37z8NZtv/6r7fkRxp2+5wTXx7ID7inQf/69aerjz76Ofjz6qv4M9lh1y6SsvidjB+Fwy4hnGU3JIXlt1Y4TgFJ3mvXHkuyFg80Oyc+MUlbylKXP+0MYJXinuutVq+vlA/ezz0sjhHTk+GYLiEX81nL2XoKn2PWJ2BwzNZL8K1srE372iZlOca2J8MxXebKaR3UoRfjmWOeju5L2U6NaYxUnZx4WByDvjcewy2R1RjQw5+UI+GKM0CRIERSDMlM/Kk7EoNIfuGMWeyoxVECQwL1jdWrr70WkrR4KNjXX38l3yWfrb784suQUEUcSNBhp+ctOaf2k48/Xl0RG7//m78JuzGR5Lsqxy0g4YedmrCF3aFIvCFphx21SAzDHuwiGYmEJnaXMumnuUJMSCgiWfqlJIRx3AH8wg5M4CAmJG1fE5+R5HwsO2rxcKpXvnolJBwfPXosf1VyEzDRC7uCP/v0M8GU3ZzwccTGrtLXBRcPt0Iy91k4VkEetCbxI3GMBDISndgFDL7hNxK8f/t3fzfuksWDt04StcADNnfUhl2qIYn5h5A0h4PARCLztuDjeALEGoAxKJdOvA7f3wNblrNB1vaetPGdDd9Rfvfdd6s//em/Q1zYUY0kLebvoswpEuzYzQyfkYTG64qcFxviljUA7vXF9UpL+j8WYH7wHwewOxm7hcEpkrI4tgJJfiSBsVYRMNbWN998LX+F89fVN19/I7L3tJnJOu3TH63AMfZ5MhzTZa6c1kEderDp6XMMcvqysradktVjuXVy4tnhGLC88ZiNElmNkdLDmPaHelpH1zmuy6lxLevVtX2Lpcega8c9vBI5Tz9lA2PWJ2uPMh6O1+f5kOqjfQ+LY9T3ZDimS8hBN1eeuil5jlmfoMsxWycuSy3HvtKS9j0sjhHTk+GYLnPltA7q0IvxzDFPR/dZ25vfGFrS1K0BCwRxr8/AzG7GCCBwqQ+l8rQzVQJXL5Cl7Hh+aLut+fLs5fSl4rdc5eC1lNF8WVw9lorB6i3Ztnwdil825kP1y/rZ28fFwLCjFgnV87Jr6dnqP//znvygxa7TlfyYfi4/1BDPsPr4Q/YkwiEp+uOPzySR+kB+oA5/4okdrl98gXNnhwQwjiXw/gwJuLCPM2y/+uqpyNyVH17SK+Zu334mP3DxIJDzstsId45H8iPzsfyoxhEH3qdB2xjGHzzA+bj40bWSH9rnpDw5K9f35ySyXjubDHgrqzUTrf8dsZTPwN3Xd7a225qv2vlM8Wy5qrVRq6f5shh6LBWD1Zvbxj32oiRAsRsSiVEkCZGYQ1JzOGMVic3HYTcqErlIwL0ou14vSbIVO2mvXbsWkqNffP5FSNji2ARkCkOST5KVOF/2s88+DW6GP+OXJBsSlXgY1etyHisSv+FP1yXR+kheeOAYzm/FA86wAxZJvJBs5ZeO86UAvqCLh01B/ptffxP8QvIUxyf8QhKH2JGJ+LDbFQlkJKeRTP1ZdtJip+zUhcTo53L8AhLH4ObNN3FEwaXVLyUWPFwLyUMki4GJoxWuyS7PV8Qekqn3zw9ny8IGfH1V/Pnwgw9Xv5KkLPAQJy8kP5GYRDIWHAIP2Ejg8ogD7gi++crNkEDFkQ6Bb0kS47xd6EIGCXbEi4QpcHiF9TXOEfqRuMbO6EFHznuV+Q4PZIN96MoLie0///nPwTcc2YDY4DfmBmcCY1cvzsPnbmPMA+yeP/9UEuzynQ7jepFLE36gC/ECBzuH0YMY4Mt9HGkgJf5Ng9fLYhNJYMhjzdyWnbxfyy7fTz/5RHjAzuLhfGQBmby0K6gHTiJaqbGISlV3yg65qgJuoKT5snB6LBWD1Vuybfk6FL9szIfiVw5fu/C19WdxKZ9z+LJz3aqtP2+t+ar1McWz5SrHxkUGmQImkDYwRQh1liitz/QrJ4Y5/li7JVj75svjxusriWlKtoQvziEx98WX9dn6Rf+WKK3tlA3tV4leCrNmzNqmXyj71RlYigHsasVvrVu3cA4bznvFriXsrjknO0+G3bQ2ScsfONhte+/ec/khjYeC4Tw7HEGwCkcMPHu2+TATz3/g4NiCH3+EDzyPFgnWldi+ID8G4cOwc/aFF57Lj7Xn8mPKRQqdw2/t4ceX/GYO+viNdf8+ksJI1PZPk8de79stA/u611u7JVFDd1+fnpjtpf0p4Qu+UB68xnzG2JIXfSA31q9d2UZS72vZjfjHP/4xJASvSKIWSbbhIZQnXuKvIMLOxuHmLd8Dz0OCE7tYP5FEGRKT+JN14OkLiTacLQtdJPZwjAGSkUi4XZKHRIkhmYNh5yZ2oyLhGK5AzPCwqI9lRy6OKMCDrZ5IEg8X+SJ/SGIiefej7Iz9XHb3Iin7yzd/uXpFkpw4hgC7ZpFwfiZnyOI7DLtQkXxEAhY+pi54hF2jiBG7X5GgxQ7gSxIP2jiTdkiKynEP4j98AfY98QdJR8Ssr4AlRzScE07BAZKbvJC4RbJ86MN36vMQF45mwEPQcCEOHLOAnchIjOOBb0iW3rx5Q5LmX4QkOuYB5/oigY4ENhKxuMjXU+EAONj1+/FfP5Y5+deQ+MRxA19+9VU4JzYojG/Y3frN118Hv/DANzygDTuLcZ4u4kdCmMlgrJ8PP/yVvD4IXGFKwQv+513w9Sux+R//8e+y9tQDyKAjr3C+r3B4TtYA1hHixVwjfqw9JNrvyg5cHLdRe8EzcqMxvD49PrdORnLsQIbysBvzea5PU/r0gT5bv6b054xb2yks7VeJXgqzZszapl/krwYzV8faTunRL8hAbxf+ef5Yn+nX0v5Yu55vsb598+Vx4/XF/K/pL+GLc0g7U3zJv0BG0cwotIEpcDrRvHR8znR/niujXfxuzrFHGbq7F74cn+nXPDLS2sGsYzulRb9Gtf3cHB2f6VfK97ljmq+sxSUG4Re5gn3Ud+ErbK0vOqAMq+parFc6A+0YwArDj1Y81As7WbEIufqH5KZN0tI2+vHjBkcH4izbc+eGIwgwDjwkRpnQpY4uiYszY/HXobCPK/zwki8G7vaV30xhd+/gFz8kgyzfTxK06BkStcMnGDjARIz900S+erlnBriM1ZJU1eWcG+32f3dNUxyo6nxNEzVKaL7wj6chUfv16v/+8f+ud9RylycSq8MOyUshOYbE3iM5CgFJPzzMCglAHBmAXbXfyQvn0+JhX/qC7BNJsGF3JBJ5+PN07KLFObTYRfnSlZdWl2WXbviekv+g+EhsPBSdB5I8RQIV+p9++qn8tcUN+f76OSQEia8/i9i9ieQdys8kUYtEJHa+ImGLOPD9Mnw34XtGvqvkQWI3ZUcwdvzCXuyiGpKr3I2Lc2jxZ/fAxe5icV4wx7hFAQ8Uu3bte0ksI1F7ksCkjSHpe00ehCUP5pIkMnYa8xqS4ZsP0QRvSNjS/6eSGL0vxwPcl4egIWEKf54LVzdv3BSsi8Lbo9UNmZcfJIGJ5DKS0g9kx6vmC7tk4Rt2/P7147+GZCjmBhwiaQof9XVnPJ4C8wM9YCJJDQ7Cd7iQyuQvErUXxY+rcmQDxoZ/K4j/gUyNOnz7Yzf01yFR+x9hp/OLkrzGjme8XkAiWJLdSMJiLSBBDh/xwn8Y+PzzzyRRK+tL+LBrb9NSojX6pe+3mquE5qyhYNaxnQKlX6QSJftSek3HHJ934UMwy8AzDUKMKuAA9UxViLe56IAyrKptbDgowaxj2xFdd2m+9sIVPHF83gVftKvvA2tinAp9ort74Ws0rn2mX47LzbqCWcd2ygD9GtWSn8Xh6ANqpFDVGMQJrrqThrRck3qhz81seoFXggNqiTA25mejUelohVowO9pGUXPV6pXaGt0c1Gb6XGp7S74waO27Vl1qbW35iw5t2BXonZ2B1gwMiU35fRV++ACdSdQh0XrStpYxPuzIHX40UXfQY8LUap20B/0hsYudtfjhRQyW6MJxCrg4HhrmDVi8aB9t3c/xXnYGPAZO/b1ef8l5BBT2LcXXhpsbjUIHZ4gHs6NtFDVXrV6prdHNQW2mz6W2t+THoLH784bsxDz/yXBWLRJvSJwyUYbdo5dewK7R4U/qH8jOTST98GfmfKDVTz/dHhKx+HIyF3ZDIrH3s8hfl4Qtknkvya7Ry9g5KklaJGuvyJ/ShwdGyREBSBwDG0m5kKgVe9i1ix2dGOOuUmMmfOfgeweJRCRgcd2QnamIA8cphHDVdw/wsUMXyeWcP5nHLs4H8uBM7MDFzlIkCnFcBBLZ4btr5BN2n2O3MXwWbPiMpCgvfBaxE/SrL7+S3b8/ypEMeDCn++cnVNkqkbhFkhdHLOD4CRxV8FRiwzxg9y523yKJjvlB38Dd5q5hzAvmFDJIzIIP+IoXHu5mOYGP4BE/epEgvikPF8NchtjENjhAchaJVeyWBjZiC3MimEiGPxEOvQtzhh3IOJ4Cx15gpzLmDesD6w9Yj2XHLuyCdyRlkdzlfyzAbmbNsWfD9o0fv6F7o2Ell2sHs6NtFDVXrV6prdHNQW2mz6W2t+QLg9a+a9Wlvhe3/EWHNuwKLNhZaFvzpb069XzFAtckFNSX4mvDzY1GgXMzRYPZ0TaKmiuld1F9VxdhW1BMAr60dCa7CHBCeMPeRmNCseFwMFth21PpfMUnxuUrECY6MuiNx9HyRjYwNxp5+nOlgslKu1btLKytuXx3/eNmgInM2I86jtsodb+uU87r45guKcdSj7GeGqOMLWt0LEZvnx0GzsK9vva70X4vYlV0vuKfDZevM/bvLiTBbkmyD0mwixcvrC7IbkicP4tEGZK23FGLJFtIDkpSLOxsfPAwJGCRhEXCEGPuJQnB5/KjC8nEcF6rJGFfEBvY+YkdmfgzfyRt8b2GB5sN56UOu2lRR+JwSNg+XD0VX/nn9a4t6UTCDrs/oYOzd8MDyATbzjV23g4JQMS1eVyDxuZnEQlHYCNRCF0cGQCf8ZAri40lxF3BsEGf+VnEA9RwFAN200qKU5Kc2uJ0PfgiyWDgYi5gAxeOQUDyEr5h3sA55ie8RhmiY/fpU4npriSrn0riGYldJl7JOWVRYi0gAYv5woVjHZC0xo5kXOAinDMrD/zC+bXgBYlb+Iq5QOKXx1YEBfUGP5GMxy5e+I2EcPgPBrIGw38kkLWHuUeswAF3OMICO4mRsMV81FwbtG80atDqdILZCtueilA9XDLojdd5eKK1gbnROJFZshZMVtq1avws9vyNP2OdL58Xr9dyBZm+vjymhj6XL3Pvyn6YWNxMH6ligBNRpXy2lDpVlfMN4ry7QCVcV+sMHBoDtYnNWj0dfwsMjdfrnYHOwMIM9H9MZBN8FqlCsg/JR7xwf8cLf7qOnYwhaSZ1tNeJTUmqhZ2XUiIJhxd+lSaTjSKDHZxIsoWdmrAjs7J+cJgkAWEXyT78iTvwkVxEco5JyNxJhD9DIjl+nEEulpZjrCH2RGJX68Tq2BH6QF6tL8xR6hgHbW8djyQ6kexE0jV14UFyb7zx5up1OU7iJXl42gXZ/Yy5DPMvilgGSPL/QnZIv/7GG5LQleS7JMqBjXODcVQCdvp6F/zGzl68kFjHC2sP5/cimY0EOWSGBDJ2Vfs7cz3ss9J3Fu9dTeYWxPXfjE2o7CCKgf6BVGSkqx5VzRK1+Gwv9V9j0mGdZOtxgzmWewz+IbeveyIXwtFwNa4trIN9+HzMfE19dlqPB67Ghb2PuWodT8frDHQGOgOHygDusf3fXfmz0//dVcDVuLagsY/v8n3/uwvJNvwrPST8JBmJJGnY6SoJVCTkkNTFWDh+AMLyf34eoZl9iS522SIBh/NUgQkkrFXaQIlX7BpdDQ7sY65ifqX6ydU+/J3L18u/eHn17jvvrN67+t7qTXlI2xU5HgMP8fpBzofFhXXy2muvrq6+/8Hqgw/eX7399juh76YcvfD5F1+Ec4ax03fqGs7ilTN3xWGss/OPZO3J7mGcAYx1sj4LeApo5njgSzD2MVc1rnNtQXcfPh8zXzV8z9GZ+1mcY7tWl+trb2sLpInxfdiv4az/uyufNa4taHB+myVqNWi+S40keVdsBLcrGE7CruzBzvqmiLo4sA8fauLdl5+ar6MhSwjeF1/DAhsX2t6cqFlhXacz0BnoDBwfA3u7zfZ/d2UvFv3viP7vrmnaNF/7/MfMkCAbdjBGDjPYCqbq8yiGhqQvdkpuQU538LOIssqBaRNLSOzNVfJVGRSOPHj77bdWv/rVr1fvv381PBDuhhxXgJ2yuHDUwatyNMJ7V6+u3pGELo5JwHXrliRqP/989elnn65+zEjUDglZJGnxsLMAsfM3/Vns965p+jVf/bM4zdex/mY81ntXxowsIrIPvvRn8ZjvXdWJWhCwD+LdFTQ6UuJPif9hsmfGW2LPjbFRJzjCgsWVy1ep76Xygzeb7y0wNhHrWpqvXIRS30vlPT9aYHi4xX2BMNHKXVyjAfjfr85AZ6Az0Bk4EgbGe3zJrb7ke4rfCSX4lrkSe1a3ZRsx9H935TOq+crVKp3rUnnPjxYYHm5xXyBMtAo+LKW+l8rbGObqW7xZ7ZGnArpCPonyOMLgp5/uhMQszjLG8RI4UxbnE+PC0RV3755bXbt2LRyjcUkeKobjMz755JPVRx/9ZfXll1+Gh6ilYjgUvhBzv3elZmpzTPO1ORJvlc51qbxnuQWGh1vcFwgTLX64MgBKfS+Vty7M1bd4s9ojTwV0bdy7pmwjVlwl+IPGyfuh8IUYTsO9qypRy4k8pMk4WSLTtV37v2t7UwyUfABLfS+V93xtgeHh1vYdC1+18bXUC1wVEIa5LhBv6WrH6gx0BjoDnYFKBkrv27v+Xt+1vSkaS/gq9b1U3vO1BYaHW9t3LHzVxtdSL3BVQFjpXJfK29jm6lu8ue0CqoIp6z8eCPaTPKTtiuygxZ/1IlGLownwUC9eOCoD5+/euPFDOLpAUgarzz77bPX/Pvpo9bU8sAwPIItd1l5Mblf9JXyV+l4q78XcAsPDre07Fr5q42upF7gqIKx0rkvlbWxz9S3e3HYBVcHUrv3ftb0pPkv4KvW9VN7zNQejKlGLwAnuGT6WvpIJPJaYWvtZOtel8q397Xidgc5AZ6Az0BnoDBwmA/3fXdPzUvrvqFL5aQ+6RGdgm4Haz+5pWZ+MH0nW6z9cDw95w4PHrsjDwlIXzhd+Lq/vv78ur+9Xd+RBYXg43Gm8Sue6VP40ctZjWp4BfnZLLZ2W9VkbfylfxyxfOtel8rXcZCVqmZTVE63r2niQxZsIUIb6kGOf1mlVz7VT6kOpPP2gHksvziCLNxGiHPUhzz5Pd25frp1SH0rkPR9S+kEebyJEOWKwPZeXmH6OnVIfSuXpA3ykLkvP7yCPNxGiHDHY9vRa9OXYWdqHFnF0jM5AZ6AzcMgMpO7z8HvJ+yzv81N2Sn0olacf1GPpzdtZ54tc6Tmr5Sul53Ff2kdfU3ZSY569Unn60Pny2NzuI1+aZ13XGkEWbyJAGepDjn1ap1U914714d6YaP3x5o+rF+RYg4sXJ35K44Fx8rp//344IuGJHDj7DAcgjxdrtMOS47oMsngTIcpRH3Ls0zqt6rl2Sn0okfd8SOkHebyJEOWIwXYrfixOjp1SH0rl6QN8oy5L6y/aQR5vIkQ5YrDt6bXoy7FT6kOpvOdDDCPI4k0EKEN98MG+FtxYjFw7pT6UytMP6rG0/qIdZPEmQpSjPsbZh3rrK9dOqQ8l8p4PKf0gL28T3y4zqIKFlAczoA9ZVU9EkZ9nlK8ijiCcIHhXFO7KTjE3noLhyzQ9jSZ9pXbO4K2iCc8dpDPQGegMrBk4qi+ntdezK6XfN2uDZ5Svdfy5lQTBu6JwV3ZyKUnKGb5MM6k6Z3BXdub4GNU9ognGUQd4tbiq5+yI+GrBUzVGguBdUbgrO9UcaUXDl2lqyab1Xdlp6jTBjmqC6fT8snrOzihfxYyPBJ/PUUwlUYCjJyvI4k0pscoyxyZlLD77vZL4LD2Zpftom6W1Z+MJcnhTCqyytBiptp6LlBzGiM9ySn6JcdpmqW2QKx0TzoOC41qedZYaI1UnfkpGjxGfpR7bVZ22WWq7IR5503wFokSY8rbU+lP1Er7m2Jnyo493BjoDnYEzzYC5z4f7Ld5441VV1ZVN2bHd6xkjSxuojSfI4U0psMrSYqTawM+9iM8yV6+lHG2z1NjkSsfU/901MBTlS8jSfJ31f3d5PHGNcX2xHWTxppRYZUnZnNLip3SIzzIlu9QYbbO0dmw8QQ5vSoFVlhYj1d5YtylBZbLGzgR09jBts9SK5ErH1O9dA0NRvoQszVe/d+kVtVnn+mJv4BRvilxWWVI2p7T4KR3is0zJLjVG2yytHRtPkMObUmCVpcVItTfWbUpQmayxMwGdPUzbLLUiudIx8d6VlagFWAw4fMIFeQPckff0tZNeXWN6415fjR0PZ05fzIcQD97kpWODvNWx7Rx/iMkyR6fGTg5uiUzSBwRjAvLkvb5cHwx8Um2OnSRwwWDUBwbCUjAha+Vtu8B0EFXwSdW5dpLgfbAz0BnoDJxlBuRGrO/Fre71GjOX3kO418d8CPHgTV46ttZ8aewp3mK+Tum1HE/6MPKl7XnyXp/WSdVPDV8MhKUEDV4sN7ad4sYbU/De8Lpvrp010MyK50eIAW/y0vFA1srbdo47GjNHHjI1dnKxc+ViPoR48CYvHRvkrY5t59gmJsscnRo7ObglMkkfEIwJyJP3+nJ9MPBJtTl2ksAFg1EfGAhLwYSslbftAtNBVMEnVefaSYIXDHp+hBjwJi8dD2StvG3nmNaYOfKQqbGTi50rF/MhxIM3eenYIG91bDvHNjFZ5ujU2MnBLZFJ+oBgTECQTyZqjfyWL8Eg3uQV6lsS8zqWwCzxiJxN8UDMKbkQD97ktURsS2AyNlt6sbbma21z4cAWhg9htOBrzUeswkBYxuRm9i8MP9O7rt4Z6Ax0Bs4AA3IjXuJevARmyWy0/ndEiAdv8loitiUwY3y1+HeEh+HaWziwheFDSF6spevL5UZ3MhCWeqxhfWH4qKclfHl8a+AQA97ktUQ8S2Bq/6fqJVwB6yzx5cXamq/1/Cy8EBaGD2G04GvNR6zCQFjG5Gb2Lwwf9a5kfXl8a+AQA97ktUQ8S2Bq/6fqJVwB6yzx5cXamq/1/DgLIXpGLR1D6eilMNdjLSop2y3wgcFYUac93UcZjqFtL8qfJb50rIyfvOgx9umS8im5wHeKdA1YUV8QesMbL1b2UTDFA2Qon/L5tPBFTnrZGegMdAY6Aw4DcrNPfRc4GkVdS2LTEX6noU17ug/9ud+LU3LEB+YS19L48Jnc6FjZx5j0GPt0SfmUXIhlwYAWhNahNuUr5fNp4wskIiauFU1qat1QPiVDbI3Zup6aq1a2GKuOR/ehf4oHyk/JLR3P0vjkgiXtMX7045rigfIpuYBNAwNs0/cFoTf89GJlHwVTPECG8imfTxtfiBsxMXa0eaX4onxKBjgpLmlnTrk0PnxjrKjTnu6jDMfQthflzxJfOlbGT170GPt0SfmUXOA7QnpyRy0N0QjbvewMdAbyGGj92WmNlxdFl+oMdAY6A52BzkBnoDNw+Ay0/ndSa7xDY1DHx9+KLGt81Xg1+l2nM3BWGWj92WmNd2jzouPjPYtlja8ar0a/63QGWjMQ3VHLhc5F+1wq4WDbiAeUwzB1I6KT3XOwqJvjA2XpkNbRdY6nSsoDE1yBBPZ5erSdkvH0vL5aLOoBM8cPLW91cvS175An3rHxlRsr47NceW3NjVc/C3x5cfe+zkBnoDPQGfAZSH3H+Brx3jlY1M35bqQsPdE6us7xVEl5YB7bvyMQF/1PxdiaL+IdG185XIFHxoe61bFtyKQuyBOv85Vi6oRrzVf/zRjnjGsRfB3b2kJU9D8e4clnhzJaR9c5niohr9cWHEhhUDYlk7Knx2qxSvUoD9vWb9vW/nl1yBPv2NZXbqyMD/FbHdv2OGIfZYkHvvq9i+xsl5qvY1tbiIb+b0d20sO1wB6to+scT5WQJ14NX1k7ammBhlIO7XNsjn+lxE/GKc7k+JMjM2lrFGiJNWWzBV8Bg06znDCcKRZFmasP4BwMLdOCK9jN5Uvbht6cqxarVK9Ufk5MXbcz0BnoDHQG2jAw597d6rtxHYk4k+NPjswac6LSEmvCVNYPjCwMOs1yQilTLIoyVx/AORhaptXaOiv/7mrFV1gE40To+Ygujj0OzPGvKV/gQJzJ8SdHJpfSllhTNlvwlftZ1L7MjXGuPnzJwdAyLbiC3Vy+tG3ozblqsUr1tHwrvkLcI7DGn8PHUrpz/GvKFwIUZ3L8yZHJ5asl1pTNFnzlfha1L4zRTdRyUCuEugxgzBtnICy3dJ0ODwdixGDpqLpdlGfpCkmnjWFKPoaDfou1ISuDrWJM2aH/LDd8SDQozzImam1Pycdw0G+xtCz+SwPGU1eu7ZidXP05PkzFkMK2YymsGF+MkaXF9NoxO8Rg6el6fbnywW7MuAfc+zoDnYHOQGcgMMD7LMscWmK3W2KwzMGCDOVZxvRgV9ueko/hoN9ibcjKoLajx2iTpR7z6ik7xGDp6Xt9lGfpyaDP2p6Sj+F4WFo29u8ILZNr2/pMjFx9ynvlFEZszj2sqb4UVowv+sdyygbGY3aIwTIHCzK58naecvVifsTiQIDWFjFokyX7U2XMDjFYpjD0GOVZ6jFdtzFMyWtdW7dYG+My2CrGlB36z3LDh0SD8ixjotb2lHwMB/0WS8vGPotaJtd2zE6uvrZp61MYsN3qSmHF+KJ/LHN8idkhBsscLMjkytt5ytWL+RGLo9+7thmz3G9IyGCMS84Ryw09p5GyQwyWjrrbRXmWrpB0WttT8jEc9FssLRv7LGoZ2t5K1JJollop1KMD+R804BCGpbVDB23/VHtKL9jD22h4Sn7KHsdjccBObKzGdkss+D7lQ7CHt9HwlDz58MqY7xuyIuTJwW6ubU9f2yjBKtULtvEmr1o7tMk4WLJ/o4wM5nIFLEKw3MCXRgmW1s2KX4zG7GqsXu8MdAY6A52BbQZK7s+817K0aCVYWndKL9jD22h4Sl5jp+qxOGAnNlZjuyUW4pnyIdjD22h4Sr6KI60kdkZTurfo3zCevgZDDDVx5OgF23iTV4689svWGQdLOx7akcGS+AjB0topwdK6WfHD6Gi41g5t0n+W7F+X0YGy9UAYlmv8sVIbx5ResIe30fCUvPUr1o7FATuxsRrbLbEQy5QPwR7eRsNT8jF+0B/zfUNHhDw52M217elrGyVYpXrBNt7kVWuHNhkHS/ZvlJHBXK6ARQiWG/jSKMHSulnxw+houNYObdJ/luxfl9GBshgJw3KNP1Zq45jSC/bwNhqekrd+xdqxOGAnNlZjuyUWYpnyIdjD22h4Sj7GD/pjvm/oiJAnB7va9uQZtRB+Ht424N0GDGpwV8h0lsob9eKmjqel7ZZYqaB2ZYc+BL7QkMpc22ssgo+4Gyt1KTva5i7qc8mK+WhJbGDHQsZML9Ivxs/JAnj27OnqyePHci5Qg4AKHdU3yt1bL3T2AMQ7X2WTQL762prmjVxBsvPl8/VU7pXPn50whVopV6Xyvif5vbDHf0e2tN0SKxXNruzQh8AXGlKZa3uNRfARt/+7SxMyUbckzp0UMWchJzxoO7yAcVISoDPx+72r7bR6aJwXb2yJvvXUS2Wu7TWWdtR2LmVH29xFfS5ZMR8dvmKiuf0WMlevidwCxkl9gM7E7/euJrOZBOG8JIUaDq6nXipzba+xtH+2M9POVqLWcy70eQPKAf5syF28E3AKuX01J55cqzaOXGzyBTsWw7OdI+PptehrmTuzcZTyZfVj8eXKxfRr+3PjycH3YsjBL11b8MWzlePjXBnaffb02erxc0nUzgUs1NdcUXXXPtDuMZSdr7JZsnz1tZXmr/OV5gejz+VvpvAK9fA+/Ff5nLWVIzNCNi+C7UYOWJhcbL2+LIYXcI6Mp9eir/+7K5/F3PnPQfTmPAe/dG3BF89Wjo9zZXLiybXhxZCDT75QehjWfo6M1WnVzokn15aNIxebfMGOxfBs58h4ei36+r0rn8Xc+c9B9OY8B790bcEXz1aOj3NlcuLJteHFkINPvvq9K28hkC/Mi8e5na8cGavTqn2I966tRG2rYDtOZ6Az0BnIZeD582er509zpdvKlX6JtLV+fGidr7I5I1/7/MdHmcf7kyZX8KDztb956JY7A52BzkBnoDPQGegMdAY6A52B/THQLFGLH1X4kaV/XIUfXWOn7t9fuIdj2eODP1K9scPxfD+eWE762orPg+UKkp2vNF/jbWot1PlaU7FVia4vkfTGtgDOWIflpK+t+AKwXEGy85Xmq9+74vzYkej6EkFvzOqftbblpH8W4yvAcgXJzlear37vivNjR6LrSwS9Mat/1tqWk/5ZjK8AyxUkO19pvvq9K86PHYmuLxH0xqz+WWtbTrYeJjaHEAs+fNLnIJ4d3fVNUSqhfnZCnxdpJyuPP/LEMk/rzEj1e1f9VIclhTd59eVVwGMnK48s8sQyT+vMSPV7V/1UhyWFN3n15VXAYycrjyzyxDJP68xI9XtX/VSHJYU3efXlVcBjJyuPLPLEMk/rzEj1e1f9VIclhTd59eU1zWPTRO0W4VjJ8tpa0NN+LSKx5d8iVvJBtT+Bo85XlDxwFeMrqrTjAe3fjk1vmdvyZVxbh/JhtPO5FcCOO2J89XuXPxGar37v8jlir13rmi/K7LvU83lwvvR7V3JKtuZu5Cuss6Tmbga3/NuN2agV7Y/+LHa+tikDVzG+tqX306P9248HJ1a3fBk/i/3fXScc6VqMr/5Z1Cyd1DVf/d51wotXA1cxvjz5ffRp//ZhX9vc8qXfuzQ9W/UYX/3etUVV6NB89XuXzxF7wZXmq1milqAsYZCfcxrfZ0m/WO7TF9imHyzR1/kCC/lX58vnimuKJaTIFcp+bTJAnlhilHxtSu6nRb9Y7seLE6v0gyVGOl8n/OTUOl8+S1xTLCFFrlD2a5MB8sQSo+RrU3I/LfrFcj9enFilHywx0vk64Sen1vnyWeKaYgkpcoWyX5sMkCeWGCVfm5L7adEvlvvx4sQq/WCJkc7XCT85tc6XzxLXFEtIkSuU/dpkgDyxxCj52pTcT4t+sdyPFydW6QdLjHS+TviZqjVL1E4ZOtRxvXD24eOx3QT3zdc+5ujYbB76mtJrKFY/Ns734a/mbh/2D32dWU72zZf1p7e3GTj0NaXXUKy+HVXvsQxo7uzYLtqHvs4sB/vmy/rT29sMHPqa0msoVt+OqvdYBjR3dmwX7UNfZ5aDffNl/entbQYOfU3pNRSrb0fVeywDmjs7tov2oa8zy8G++aI/zRK1mAC+CH7oZZgEedvHZBwbV5jLzlfZin6OtbWPxSVuHtv6OoS1Bc6O5ToEvo6FK/jZ+SqbrX7vyufrENZWv3flzdexfS8iqkNYX3nsHoZUv3flz8MhrK1+78qbr37vyuOJUkfJl3wg+29GzmC67PeuND929BD4sj4dcvuQ+GqWqD1kwqO+hZmQUZZRwT4QGOg8ZS8ETZWuZwOcYkH9D3Nd72usYNK5qFgWqJ5J0c5T9rRrqnQ9G+AUC+r7la6HkDtZeTNPnljmaZ1dqc5T9txrqnQ9G+AUC+r7la6HkDtZeTNPnljmaZ1dqc5T9txrqnQ9G+AUC+r7la6HkDtZeTNPnljmaZ1dqQPi6cwkavnhZnl2V19e5OSJZZ7W2ZUiTyzPLhN5kYOnzlU+V5DsfHW+8hgok+K6YlmmffakwVPnKm/eyRPLPK2zK0WeWJ5dJvIiJ08s87TOrhR46lzlzT95YpmndXalyBPLs8tEXuTkiWWe1tmVAk+dq7z5J08s87TOrhR5YnloTJyZRC2IP9RJOLRFQX86X2Qir+x85fHUpcoZ6GurjLPOV+erjIEuvRQD/bNYxmznq/NVxkCXXoqB/lksY7bz1fkqY6BLL8VA/yyWMXvIfJ2pRO3WtHFmWG4J9I4NBsCTvDpdG6y4jcBR58vlxuvUfHnjvc8wwA8hSzPcm4aB/lk0hMSb+rPYl1ecJ45ovtjXywQDXFQsE6J9SBgAT/LqdE2vhsBR52uaqFFC85WtdJYF+SFkeZa5yIm9fxZzWAoy+rPYl9c0bZqvaekusf4HRF9ceYsBPMnrEOi6mOfx6ZQKE3AIs3Ak9Haqyiaq89X5KmMgX7rfu/K5gmT/LHa+yhgok+7rK5+vfu/K5wqSfW11vsoYKJPu6yufr37vyucKkn1tdb7KGCiT7usrn69+78rnCpKHtLbO9o7asnnr0p2BzkBnoDPQGegMdAY6A52BzkBnoDPQGegMdAY6A52BzkBnYBEGsnbU8uFnu84wB7t4E8M5tuknmMqRX4RRAaUfu/bhGPkiV/uYs1q+dj2vep0eAl/nMgmgr5niOsxm9X35ULu29vE50GR3vjQb6Tq52sec1a6vQ/gs7pOvfu9Kr2mM1q6tfcyrjoafx12v8WPki1ztY85q+dr1vHprq/OlWYnXub52PWe1a2sf86rZ63xpNtJ1crWPOatdX7v+HGgGD4Gv/u8uPSN+vXZt7eNzoCPg+tr1Gj9GvshV6ZwV7ajVRvRELV7fm+HyyA7C1YNwopy7nWtU8lSptvPwWhoMMY+B58SfI9PSvymsvfmzN8NTjGyPH4SrB+HENjcH11PJU6XawYVf4lCIeQw8J/4cmRL7c2X35s/eDJczdhCuHoQT5dztXKOSp0q1nYfX0mCIuSDwAtGWbkax9ubP3gxHqYgOHISrB+FElKLDGajkqVLtcOKu8CTEPAaeE3+OTIUb1Sp782dvhsupOghXD8KJcu5KNNaJWsQ6Fa+XMc/RK3FIywZ7ePMMa8GxTjGWjkhVlxej1wdw2mZpDcb0rFxNO9jEW8y4AaUYSzNc3bQxhra8obQXbbO04xbLjs9qw6i8YrYtNuVY2vHatuUlFTNts7Q2LZYdr20He3iTV8y2xs6R0fK5dY8br8/ief7k6Fmc3HawhzfPsANCMZaOSFWXF6PXB3DaZmkNxvSsXE072MRbzLgBpRhLM1zdtDGGtryhtBdts7TjFsuOz2rDqLxiti025Vja8dq25SUVM22ztDYtlh2vbQd7eJNXzLbGzpHR8rl1jxuvz+J5/uToWZzcdrCHN8+wA0Ixlo5IVZcXo9cHcNpmaQ3G9KxcTTvYxFvMuAGlGEszXN20MYa2vKG0F22ztOMWy47PasOovGK2LTblWNrx2rblJRUzbbO0Ni2WHa9tB3t4k1fMtsbOkdHyuXWPG6/P4nn+5OhZnNx2sIc3z7ADQjGWjkhVlxej1wdw2mZpDcb0rFxNO9jEW8y4AaUYSzNc3bQxhra8obQXbbO04xbLjs9qw6i8YrYtNuVY2vHatuUlFTNts7Q2LZYdr20He3iTV8y2xs6R0fK5dY8br8/ief7k6Fmc3HawhzfPsANCMZaOSFWXF6PXB3DaZmkNxvSsXE072MRbzLgBpRhLM1zdtDGGtryhtBdts7TjFovjIVEbAEeJGHgMmECeHsfmlLA7ZVvjl8hqvVhdx8V6KPHGDqMc8yEibrTnNQ+Jr3UkDJzlemCo7IuvUq7gbcxXE1J2k5SwDIpoyGujTyHGfKA8S6XSpFrKV6l8iZOMMZR4kxf7NE6OD56exqit59jW2JBveem4WA8l3thhDMZ8iIgb7XnNQ+JrHQkDZ7keGCr74quUK3gb89WElN0kJSyDIhry2uhTiDEfKM9SqTSplvJVKl/iJGMMJd7kxT6Nk+ODp6cxaus5tjU25FteOi7WQ4k3dhiDMR8i4kZ7XvOQ+FpHwsBZrgeGyr74KuUK3sZ8NSFlN0kJy6CIhrw2+hRizAfKs1QqTaqlfJXKlzjJGEOJN3mxT+Pk+ODpaYzaeo5tjQ35lpeOi/VQ4o0dxmDMh4i40Z7XPCS+1pEwcJbrgaGyL75KuYK3MV9NSNlNUsIyKKIhr40+hRjzgfIslUqTailfpfIlTjLGUOJNXuzTODk+eHoao7aeY1tjQ77lpeNiPZR4Y4cxGPMhIm605zUPia91JAyc5XpgqNTwFRK1QXGMOAZibG01a/W2gHbcEeFy7YWOS9eDwFbHWs2tFIq7GPvuLOFr7SsDZ7keSFcKxdNgxzQ6Bl4bf63evimaWlvaP8YYSrzJi31aLqdeq5eDvaTMFF86Ll0PPm11pD0tFE+D7Wm0hK+1iwyc5XogXSkUT4Md0+gYeG38tXr7pmhqbWn/GGMo8SYv9mm5nHqtXg72kjJTfOm4dD34tNWR9rRQPA22p9ESvtYuMnCW64F0pVA8DXZMo2PgtfHX6u2boqm1pf1jjKHEm7zYp+Vy6rV6OdhLykzxpePS9eDTVkfa00LxNNieRkv4WrvIwFmuB9KVQvE02DGNjoHXxl+rt2+KptaW9o8xhhJv8mKflsup1+rlYC8pM8WXjkvXg09bHWlPC8XTYHsaLeFr7SIDZ7keSFdS4uuHiaWEUvC1einMXY1xElCm4rBjoW07M52uVMtEX1as81XGL/lKzbk3Fvq8gQnzFSoTiLsbJleln0V4WBt3rd7uWIlbquUrxFwZeKVaPIgdjnS+ysgmX6k598ZCnzcwYb5CZQJxd8PkCmUqDm/M68vxvFYvB3tpmVq+QsyVgVeqLU1FFn7nK4umtRD5Ss25Nxb6vIE1sl+pUPGB9tBLrlCm4vDGvL6cEGr1crCXlqnlK8RcGXil2tJUZOF3vrJoWguRr9Sce2OhzxtYI/uVChUfaA+95AplKg5vzOvLCaFWLwd7aZlavkLMlYFXqi1NRRb+IfG1PqM2y/Mu1BnoDGQxwA85hHU9S7kLdQY6A52BPTGg71e6vid3utnOQGegM5DFgL5f6XqWchfqDHQGOgN7YkDfr3R9T+50s52BzsCBMLDeUVvrT7ih4E1S57vOnvNmlmu3VL6Wk5Te8z1xBZ9K4qcs9HL5hWzLK/iwJ75K46f8vrgC74fAV278na/hk3JUfGHSxOFcn4cI27yXrBfKwvI+fIXd4MOe+CqNn/L74upQ+MqNv/OFGcv/bB0EX3BCJjh3jkOAjd5K4qcsTO/DV9gNPuyJr9L4Kb8vrg6Fr9z4O1+YsfzP1kHwBSdkgnPnOATY6K0kfsrC9D58hd3gw574Ko2f8vvi6lD4yo2/84UZy/9sHQRfcEImOHeOQ4CN3kripyxM78NX2A0+RPiav6NWRwhrO7pKzZbKLxHG2geprOtLGHIwd23PcaG+64ic91zd2QffM17PepVmqQul8lVOxZT2ZLzUbKl8LNw5/WsfpLKuzwEs0N21vQLXpkWPyHnP1X7vik+xx1dcuvHInoyXmi2Vb8xSgFv7IJV1fQlDDuau7Tku1HcdkfOeq/3eFZ96j6+4dOORPRkvNVsq35ilALf2QSrr+hKGHMxd23NcqO86Iuc9V/u9Kz71Hl9x6cYjezJearZUvjFLAW7tg1TW9SUMOZi7tue4UN/lOD8/UYs7iryWurHAZ8fvYnvaP4upx+rZndYMdvAmr6VselzBM9pjOeWtljsEvqb8rR1fiq9af2bpYdLkpeduFp5RtuvADIdmjW09BzX6nh9ZfTAmr6VsxvgqtaflLaYey4q5UijYwZu8lrKp14F2k/ZY6jGvruUOgS/PxxZ9S/HVwrdiDEyavPTcFWMkFOw68ERrbOs5qNH3/MjqgzF5LWUzxlepPS1vMfVYVsyVQsEO3uS1lE29DrSbtMdSj3l1LXcIfHk+tuhbiq8WvhVjYNLkpeeuGCOhYNeBJ1pjW89Bjb7nR1YfjMlrKZsxvkrtaXmLqceyYq4UCnbwJq+lbOp1oN2kPZZ6zKtruUPgy/OxRd9SfLXwrRgDkyYvPXfFGAkFuw480Rrbeg5q9D0/svpgTF5L2YzxVWpPy1tMPZYVc6VQsIM3eS1lU68D7SbtsdRjXl3LHQJf1sfZRx/oAC343HZsEohbapvyGpd9xFy6XNIe40Lp2fH6UvFCnpiUK8WgXm25pD3GthRfS/ru8bkrex5fpbYpzzlAPOzzYluib0l7Oi7P91LblNe47PPwl+hb0h7jQunZ8fpSMUKemJQrxaBebbmkPca2FF9L+u7xuSt7Hl+ltinPOUA87PNiW6JvSXs6Ls/3UtuU17js8/CX6FvSHuNC6dnx+lIxQp6YlCvFoF5tuaQ9xrYUX0v67vG5K3seX6W2Kc85QDzs82Jbom9Jezouz/dS25TXuOzz8JfoW9Ie40Lp2fH6UjFCnpiUK8WgXm25pD3GthRfS/ru8bkrex5fpbYpzzlAPOzzYluib0l7Oi7P91LblNe47PPwl+hb0h7jQunZ8fpSMUKemJQrxaBebRmzN39Hba1HGXoxpzNUs0XsxOQq1url4h+KXKs5OGS+WsWIOdNYc2Keo7v02tExtrR1yDGXxrkUR9qPWr5q9bTtY6i3moND5qtVjJhPjTUn5jm6S68rHWNLW4ccc2mcS3Gk/ajlq1ZP2z6Geqs5OGS+WsWI+dRYc2Keo7v0utIxtrR1yDGXxrkUR9qPWr5q9bTtY6i3moND5qtVjJhPjTUn5jm6S68rHWNLW4ccc2mcS3Gk/ajlq1ZP2z6Geqs5aM1X2FEbQEfkc608lVnRzlrY1JieUKunx1J14nv67KMMSvalMDkW9OTtuSiV6FE/VtIfDzM1RjxPj2OpktiQ8TDQRxmWnlzMRtCRt5Z80Y+YzxxP+Zkai8WCfmLHbFu+Su2EB87BjiiW6sIn70r5nBrTWLW+pPCJSRmU7NO2Y/WgNyr3e1eMpZN+8tVybQF9nAJ37lJj9Kxkzqmj7aLuYaCP9ll6ctD3rqAjby35oh+w5/nCcW+MPqbGKOOVxMaYh4E+yqD0ZKAbu/q9K8bMdn/geSS737u2+bE95KvlZxE2xilw13pqjP6VfkaoR2y0PQz7WYzJEc+WS/A15TPHvXjoX2qMMl5JbIx5GJYvT8bDZV+/d5GJ6ayEVwYAAEAASURBVJJrC5L93pXPV793TXMFCa6vlnxN3T84nrpvpMZSkREbMh4G+iiD0pOBbuzq964YM9v9geeR7H7v2ubH9pCvlp9F2BinwF3rqTH6V/oZoR6x0fYw7GcxJkc8Wy7B19aOWh2EdeBY2joGXW/uf0NwDaXrzX2uBPQWdCXUmVDrfO1+mg/xc1PKgo5B10txJuUbgmsoXZ/0YUcC/bNYRnTnq4yvFtKH+LkpjUvHoOulOJPyDcE1lK5P+rAjgf5ZLCO681XGVwvpQ/zclMalY9D1UpxJ+YbgGkrXJ33YkUD/LJYR3fkq46uF9CF+bkrj0jHoeinOpHxDcA2l65M+7Ejg0D6LIVEbnMKbvHblIO2w1Pxj4vBfiJaeQNpmqX1I1YO8vLX8rzEpexiDzZifR8PXVJANxyf5amgrBpXyIaaD/rCuRDk23yndmjHaYakxjmVtgSzPfx1LqzrtsNS4x8JXv3fpWYvXwxzLmzfXca15I7AVsxfW1zz4LO2UDymAfu9KsbM5FuZ4JDo235sa81u0w1Ij9nuXZmOoj9OzPSA9R8OX6/0ynZN8LWN2AzXlw4agafR7lyEk0Qz3j5HoUE/IthqiHZYa92g+i57zOpCGdZiKmTsavhryMQU1ydcUQIPxlA8p+H7vSrGzORY+EyPRob45vEiLdlhqI0fzWfSc14E0rMNUzNzR8NWQj/WO2hQxDe1tQMUmYp2hxYxUXFFcB6tEVqvX6mmMZvVKnmrs18Zdq1fjY0onUBU+6cv/h4CUH1Nju+Zr0t4O1tikDxHSoFerG4Gc7I7aI08sJ5E2BaK4m2KhVSKr1Wv1NEazeiVPNfZr467Vq/ExpROowpu8dkhbyiV3bNd8TdrbAVmTPrhMDfetWt0I5GR31B55YjmJtCkQxd0UC60SWa1eq6cxmtUreaqxXxt3rV6NjymdQBXe5LVD2lIuuWO75mvS3g7ImvTBZarfuyK0RLtreY4CzhnYwbqie7Vx1+rRbqsyUIU3ee2QtmL3d83XpL0dkDXpQ4RF6NXqRiAnu6P2yBPLSaRNgSjuplholchq9Vo9jdGsXslTjf3auGv1Yj6uE7WIfan4i52mAkvjfYmfEQiDWN5szZf2U9ezPIOCvGJ6U3zF9LJsZwpN+ZAJsxar9Tno4U1eHkbOvFKP5dqpRpUcH0pN0VeWufpBHm8RxZJ5jUDkuhKVW4IvGiv2mQosCTSWp5EvHaqum9D9JhTkFdOb4ium5xur653yoRS11ueghzd5eRg5nwPqsSz1fUo+x4cpDDtOX1na8Vg7yOMtolgyrxGImOns/iX4ovFin6nAkkBjeRr50qHqugndb0JBXjG9Kb5ier6xut4pH0pRa30OeniTl4eR8zmgHstS36fkc3yYwrDj9JWlHY+1gzzeIool8xqBiJnO7l+CLxov9pkKLAk0lqeRLx2qrpvQ/SYU5BXTm+Irpucbq+ud8qEUtdbnoIc3eXkYOZ8D6rEs9X1KPseHKQw7Tl9Z2vFYO8jjLaJYMq8RiJjp7P4l+KLxYp+pwJJAY3ka+dKh6roJ3W9CQV4xvSm+Ynq+sbreKR9KUbceJtbywOBaQoJeRJkEoIyIBA5SY6UkWfngAx1paKgWKqVHNw+Br5ZrC3OSitvOmW7n6O2TL/4Xk0Pn65DWFua3JV85a0SvKdaDXkT50Piq/gAxWFVGQlYSfjWld0h8tVxbYCIVt8/U0Juj1+9dJwzG+DqktQVvW66vWMwnrPi1oBdRPjS+qj9ATuiRkB3Jza6U3iHx1XJtgYFU3JsMbbZy9Pq964SzGF+HtLbgbcv1FYv5hBW/FvQiyofGV/UHyAk9ErIjudmV0jskvlquLTCQinuToc1Wjl6/d51wFuPrkNYWvG25vmIxn7Di14JeRPnQ+Kr+ADmhR0J2JDe7UnqHxFfLtXVyRu3IRYqETbp6q9Wi5eLqjOYxsAu+9vo52KvxvDmA1CG4qX3Q9fwozqhkI7J28Vk8TTO0C74aTW0d7Xs1nu/yIbipfdD1/CjOqGQjsnbxWTxNM7QLvhpNbR3tezWe7/IhuKl90PX8KM6oZCOydvFZPE0ztAu+Gk1tHe17NZ7v8iG4qX3Q9fwozqhkI7J28Vk8TTMEvsKOWgQ19+EyG+SPjRSmli+Z/xJZxFVrB7q8iEHboWSDQoUlMYOaNKay75QvNVsqX2uH4VMfbdoOJRsULCw1Lia185Um0PKFyYhNgZaNycSslcjPsUP7xNB2U/cZ6qVKYgaZsZHC1PLaj5QNjJXIQr7WDnR5EYO2Q8kGhQpLYgY1afTPYprAzleaHztq+er3LsvQSXuLKxnq964TfmzN8tXvXZahzXbna5OPqZblq9+74oxtcSWi/d6Vz1e/d8W5wohdX52vMr76vSvOl11bkOz3rny++mcxzhVG7Ppan1GbVju7oxuELUlDpqFMsdme7srObEcdgF35vis7TojJrg2/NhpJtaMaPKVhNZ2DnXGUaShTbDYHu7Iz21EHYFe+78qOE2Kya8OvjUZS7agGT2lYTedgZxxlGsoUm83BruzMdtQBOGbfnXCKuzbi32gUQx2swikNqynfO+Mo01Cm2GwOdmVntqMOwK5835UdJ8Rk14ZfG42k2lENntKwms7BzjjKNJQpNpuDXdmpdbRZonZjkxYaGx3b7nGY5bbE0AMC55BIfJbWTgpbj8X0LV5uewNPGqn/GgNMyrP07ASu5E377cml+ojPUssGfN2h6nbM01fixdUNPGlstA0ax1ia4XUz+CxvKGsu4rO0GJYTPW7HYhhaJ7e+gYWGvDb6DBDHWJrhddP6vB7IrBCfpVVL4duxGIbFzGlvYKGx0bGNwGGW2xJDj/U5JhfrJz5LKwf82KXHYvox3an+DTxp9HtXmrEtvhLilGUZEw1rS970PMdkvX7is7QyAd92jm07FsOIqCe7N7DQkNdGn9HmGEszvG5an9cDmRXis7RqKXw7FsOwmDntDSw0Njq2ETjMclti6LE+x+Ri/cRnaeWAH7v0WEw/pjvVv4EnjX7vSjO2xVdCnLIsY6JhbcmbnueYbKo/ZifgRxTtWAwjop7s3sBCQ14bfUabYyzN8LppfV4PZFaIz9KqpfDtWAzDYua0N7DQ2OjYRuAwy22Jocf6HJOL9ROfpZUDfuzSYzH9mO5U/waeNPq9K83YFl8JccqyjImGtSVvep5jsl4/8VlamYBvO8e2HYthRNST3RtYaMhro89oc4ylGV43rc/rgcwK8VlatRS+HYthWMyc9gYWGhsd2wgcZrktMfRYn2NysX7is7RywI9deiymH9Od6t/Ak0a/d6UZs3ytjz5Iq+WNboBnqEzJh4Uzrp6prdIpczE7XJgorQzHgGvHUrZKxkpxJ+XptBdQgWNTdqbgp/QLXNkQLcHNkiVfG1bKGjE7GnoffMX8ikU3JR/iGYNa8rPo+ae5nPLT08/pK8Wdkt8VX7BjfTlGvtb/8vUCypnAUcZyYVWn4Kf0LV5uuwQ3S1ZPcq4TRi5mR0Pvg6+YX8b9dXNKPsQzBtXvXdv3izWRY2VXfHlra5ym4MnUvFq/c9uluJPydNoLKNcpkZuyMwU/pV/gyoZoCW6WLPnasFLWiNnR0PvgK+ZXLLop+RDPGFS/d+V9RvhviSX58tbWOE1hqqfmNbYepvpLcSfl6bQX0JQzanzKzhT8lL4yVVQtwc2SJV9FXmwKx+xo6H3wFfNr0/uT1pR8iGcMasnP4olHJzXN5ZSfJ1pltVLcKfld8QU71pdj5Iv3+VDagAqmckrV40vDT+lr2ZK6xm22o7bEgVzZ4Cje5KWdztWfktOYeqFCLzU2hbu3cTrNckFHLF/aVGpMy+29viBPFjrFSWps7xyNDoR48CYvG1sLHzUm+NCcpMZa2F4CI/iMN3lp/1vZ0piaK+CnxlrZb45Dp1k2N3ACaPk6Gdlcd7r/4OoL8mShj52vEA/e5GVjazGvGhNcab5SYy1sL4ERfMabvLT/rWxpTM0V8FNjrew3x6HTLJsbOAG0fJ2MbK473X9w9QV5stDHzleIB2/ysrG1mFeNCa40X6mxFraXwAg+401e2v9WtjSm5gr4qbFW9pvj0GmWzQ2cAFq+TkY2153uP7j6gjxZ6GPnK8SDN3nZ2FrMq8YEV5qv1FgL20tgBJ/xJi/tfytbGlNzBfzUWCv7zXHoNMvmBk4ALV8nI5vrTve3rB90ohaBYg6WnAeNbScjNdZyElphBa7kTfvdChs4AV8Bar5SY0rloKrBZ3lDucSV4iQ1toQvLTCtzy0wNYadh1OxvnSAjeuaL80VzKTGGrvRBC6sLXnTfjcBHkECvgLUfKXGlMpBVYPP8oZyiSvFSWpsCV9aYFqfW2BqDDsPp2J96QAb1zVfmiuYSY01dqMJXFhb8qb9bgI8ggR8Baj5So0plYOqBp/lDeUSV4qT1NgSvrTAtD63wNQYdh5OxfrSATaua740VzCTGmvsRhO4sLbkTfvdBHgECfgKUPOVGlMqB1UNPssbyiWuFCepsSV8aYFpfW6BqTHsPJyK9aUDbFzXfGmuYCY11tiNJnBhbcmb9rsJ8AgS8BWg5is1plSaVQ8+Udss0gRQaqJTYwnIPtQZ6AxUMKA/b7puoVJjVvY0t1M8pMZOMyc9ts7APhjQnzddt76kxqzsaW6neEiNnWZOemydgX0woD9vum59SY1Z2dPcTvGQGjvNnPTYOgP7YEB/3nTd+pIas7KnuZ3iITV2mjk59NianlG772BtxrvEn9QCTY2V2Dg02Vq+Unykxg4t/lJ/yFdpjCn51Fipf4cm3/nKnxFyBY3SNZGST43le3d4krV8pfhIjR0eA2Ueka/SGFPyqbEy7w5PuvOVPyfkChqlayIlnxrL9+7wJGv5SvGRGjs8Bso8Il+lMabkU2Nl3h2edOcrf07IFTRK10RKPjWW793hSdbyleIjNXZ4DJR5RL5KY0zJp8bKvDs86c5X/pyQK2iUromUfGos37vDk6zlK8VHaqwlA31HbUs2O9aZYEB/4M9EwBVBdo4qSOsqnYGFGeify2mCO0fTHHWJzsCuGeify2nGO0fTHHWJzsCuGeify2nGO0fTHHWJs8nAQSRq8QFt8SFldptlyZS28qHEZq1sC65gmzyxLPGnlQ8lNmtkW84reWJZ4s9Z46uGI/LZcs6IuVTZylfyxbLE31Y+lNislW31OSBPLEv8aeVDic0a2ZbzSp5Ylvhz1viq4Yh8tpwzYi5VtvKVfLEs8beVDyU2a2VbfQ7IE8sSf1r5UGKzRrblvJInliX+nDW+ajginy3njJhLla18JV8sS/xt5UOJzVrZVp8D8sSyxJ9WPpTYrJFtOa/kiWWJP2eNrxqOyGfLOSPmUmUrX8kXyxJ/W/lQYrNWttXngDyxLPGnlQ8lNrXs3hO1rQk4xknQEzJVJ18sp+Snxufw1cqHKR9bjLfy9TTzpTnS9Vr+wVUNX7TXwgdiLVG29q+Gq9Y+LMETMekrS/bXlnP4auVDre8leq18Pc18aY50vYRnLQuuavgiRgsfiLVE2dq/Gq5a+7AET8SkryzZX1vO4auVD7W+l+i18vU086U50vUSnrUsuKrhixgtfCDWEmVr/2q4au3DEjwRk76yZH9tOYevVj7U+l6i18rX08xXK444L+Cqhi/qt/aHuK3K1v7VcNXah1bceDj0laUnU9I3h69WPpT4S9mmidqaQDRxNfoMpLbclc0l7CyBOcXjEjaXwPTi2JUdbVvb1Gtdy5TWNWapbkre+reUnZQP2qb1J6U3d0zbzcXS/tXo59qJye3K5hJ2lsCM8cT+JWwugUl/dbkrOzGbeq1rmdL6UnFY/5ayk4pX27T+pPTmjmm7uVjavxr9XDsxuV3ZXMLOEpgxnti/hM0lMOmvLndlJ2ZTr3UtU1pfKg7r31J2UvFqm9aflN7cMW03F0v7V6OfaycmtyubS9hZAjPGE/uXsLkEJv3V5a7sxGzqta5lSutLxaH9g42l7KTi1Ta1PymdFmPabi6e9q9GP9dOTG5XNpewswRmjCf2L2GzBjMrUQtgDc627UNwuo/BTpX7WrzaV/ig/ZjyOTaey40nF8PU/dZPHYOWW6KubVk/au0RkyVwUOeLuLbN/qnS+qntTOnOHde2Wqwt+ENMluzz2rovN5Z98QVftb8t+dK4tGP7yGMuT5TTfmpMji9Valt2zmpt5nLjyeXYtH7qGHL058hoW9aPWlxisgQO6nwR17bZP1VaP7WdKd2549oW/GhxEZMlMFH32rov1/a++LIxtORL80A7to885vJEOe2nxuT4UqW2Zees1mYuN55cjk3rp44hR3+OjLZl/ajFJSZL4KDOF3Ftm/1TpfVT25nSnTuubcGPFhcxWQITda+t+3Jt74svG0NLvjQPtGP7yGMuT5TTfmpMji9Valt2zmpt5nLjyeXYtH7qGHL058hoW9aPWlxisgQO6nwR17bZP1VaP7WdKd2549oW/GhxEZMlMFH32rov1/a++LIxtORL80A7to885vJEOe2nxuT4UqW2Zees1mYuN55cjk3rp44hR3+OjLZl/ajFJSZL4KDOF3FtOytRS2Wv1Aa98dy+fS3eXP9ayrXirKVPh4yl+dL1Q/ZZ+6bXtu5vXT9GbjwOjo0v7e9pmQNvXtB32uOLxV3br/nS9Vq8Xevptb2k7WPkxuPj2PjS/p6WOfDmBX2nPb5Y3LX9mi9dr8XbtZ5e20vaPkZuPD6OjS/t72mZA29e0Hfa44vFXduv+dL1Wrxd6+m1vaTtY+TG4+PY+NL+npY58OYFfac9vljctf2aL9Yv5oDpRQV5tgnCMgerVOY5wMWgtQkc9pViUh76Izy71ouqFtvTox0YWZQrGhCD9IP22F4HWlHxMObiA9POAfsYToWrWSrB99E4Y5sbjzZMTN03F9/D3ClfEoz2YW485EZjso/YaHvjlEuVVo9tYrNMYdSO9XtXPnNhHvAmE2TniO18tG1JD4Nz741tI2z3QG90eT3IPnQQfz3YsBKwR+P0n/bYnmPOw5iL72Gij7gs5/gd0yW29sHri+mn+jUm5YiNtjdOuVRp9dgmNssURu1Yv3flMxfmAW8yQXaO2M5H25b0MDj33tg2wnYP9EaX14PsQwfx14MNKwF7NE7/aY/tOeY8jLn4Hib6iMtyjt8xXWJrH7y+mH6qX2NSjthoe+OUS5VWj21is0xh1I71e1c+c2Ee8CYTZOeI7Xy0bUkPg3PvjW0jbPdAb3R5Pcg+dBB/PdiwErBH4/Sf9tieY87DmIvvYaKPuCzn+B3TJbb2weuL6af6NSbliI22N065VGn12CY2yxRG7Vi/d+UzF+YBbzJBdo7YzkfblvQwOPfe2DbCdg/0RpfXg+xDB/HXg2Nl1o7aWmetE7H22ul1JSZZ3x+LobXJmJ16zxOajvNOVwIgb6gVpseN15fnVYFUIoDEUIGBTdElMGlhab6C73iTF+NgSR+OqdwJXyBkQZJiMbQ2GbOzyHw7zjtds023wvS48fpmO2wBEgEkhixKdnsJTBpfmq/gO97kxThY0odjKnfCFwhZkKRYDK1NxuwsMt+O807XbNOtMD1uvL7ZDluARACJIYuS3V4Ck8aX5iv4jjd5MQ6W9OGYyp3wBUIWJCkWQ2uTMTuLzLfjvNM123QrTI8br2+2wxYgEUBiyKJkt5fApPGl+Qq+401ejIMlfTimcid8gZAFSYrF0NpkzM4i8+0473TNNt0K0+PG69MOr3fU0glPgWNasbQODA/bw6EcyudsjIKhL4FVYgeQMXljdrR+UsT0iHkiWVdL4QORPGj00Gccp5zpXqtN2VkLjhUtT2wr47W1nh3H2JyL+rEYgU1fN2TGxkbf6IjXl2NHx2Hlgck+LefVIef5ANlcDA9X68fwIUNfKRPaY2OjL2ZE+ukn5ROiYcjGHGzKyJR+yg7Hpmynxq1fKVn6GnxnY1QIfVI33Wu4EjtQisnH8GkopkdMytWWKXxgkgeNH/qM45Qz3Wu1KTtrwbGi5YltZby21rPjGJtzUT8WI7Dp64bM2NjoGx3x+nLs6DisPDDZp+W8OuQ8HyCbi+Hhav0YPmToK2VCe2xs9MWMSD/9pHxCNAzZmINNGZnST9nh2JTt1Lj1KyVLX4PvbIwKoU/qpnsNV2IHSjH5GD4NxfSISbnaMoUPTPKg8UOfcZxypnutNmVnLThWtDyxrYzX1np2HGNzLurHYgQ2fd2QGRsbfaMjXl+OHR2HlQcm+7ScV4ec5wNkczE8XK0fw4cMfaVMaI+Njb6YEemnn5RPiIYhG3OwKSNT+ik7HJuynRq3fqVk6WvwnY1RIfRJ3XSv4UrsQCkmH8OnoZgeMSlXW6bwgUkeNH7oM45TznSv1absrAXHipYntpXx2lrPjmNszkX9WIzApq8bMmNjo290xOvLsaPjsPLAZJ+W8+qQ83yAbC6Gh6v1Y/iQoa+UCe2xsdEXMyL99JPyCdEwZGMONmVkSj9lh2NTtlPj1q+ULH0NvrMxKoQ+qZvuNVyJHSjF5GP4NBTTIyblassUPjDJg8YPfcZxypnutdqUnbXgWNHyxLYyXlvr2XGMlV5hR22NIg3B+RgplCE+S/bb0sOK9VldtInP0pPRfZRjiTHPntZBnfIs9bjXp8fn4k9hefjo8y76ytKT0X2UY4kxz57WQZ3yLPW416fHY75rGdZLsTzfvT7is5yyQzmvLMH37Hh92s4UX1P6KSzPd68PGCV2tLzVaxmPjg31mO9ajv6w1GO67mHF+rQe68Rnyf5YSTmWkPPsWX3Ks9TjXp8en4s/heXho8+76CtLT0b3UY4lxjx7Wgd1yrPU416fHo/5rmVYL8XyfPf6iM9yyg7lvLIE37Pj9Wk7U3xN6aewPN+9PmCU2NHyVq9lPDo21GO+azn6w1KP6bqHFevTeqwTnyX7YyXlWELOs2f1Kc9Sj3t9enwu/hSWh48+76KvLD0Z3Uc5lhjz7Gkd1CnPUo97fXo85ruWYb0Uy/Pd6yM+yyk7lPPKEnzPjten7UzxNaWfwvJ89/qAUWJHy1u9lvHo2FCP+a7l6A9LPabrHlasT+uxTnyW7I+VlGMJOc+e1ac8Sz3u9enxufhTWB4++ryLvrL0ZHQf5VhizLOndVCnPEs97vXp8ZjvWob1UizPd6+P+Cyn7FDOK0vwPTten7YzxdeUfgrL893rA0aJHS1v9VrGo2NDPea7lqM/LPWYrntYsT6txzrxWbI/VlKOJeQ8e1af8iz1uNenx+fiT2F5+OjzLvrK0pPRfZRjiTHPntZBnfIs9bjXp8djvodEbWxQAxx6fYqAlv6n+EqNeT6UynsYNX1z+NqVz7TDEnHquo07NWZlS9uaryXtaL9K7VCepcZiPTVGmX2UtX7V6u0jxphNvbZiMq36U3ylxjz7pfIeRk3fHL525TPtsEScum7jTo1Z2dK25mtJO9qvUjuUZ6mxWE+NUWYfZa1ftXr7iDFmU6+tmEyr/hRfqTHPfqm8h1HTN4evXflMOywRp67buFNjVra0rfla0o72q9QO5VlqLNZTY5TZR1nrV63ePmKM2dRrKybTqj/FV2rMs18q72HU9M3ha1c+0w5LxKnrNu7UmJUtbWu+lrSj/Sq1Q3mWGov11Bhl9lHW+lWrt48YYzb12orJtOpP8ZUa8+yXynsYNX1z+NqVz7TDEnGyvj76gB0eCRizgVp529Y4qTEtl6rTvofFMeh74zHcElmLkdLFmPYJulbetjV+akzLpeq072FxDPreeAy3RFZjpPQ4pn3y/KKcxmU9NUaZVKlte1hT4zFsDysmq/tTehzTPkGX/cSxbfZ7snosp65tWzupsSlsizUlz/GUHsa0T9Cx8rZNXE9Wj+XWad+zw7FSWx5Wrj8pXYxpnzy/pvRz/YjJ0b5nh2OeXzG8UlmN4/nAcY5pnzxblKOeLlNjWi5W17Y9rKnxGK6HFZPV/Sk9jmmfoMt+4tg2+z1ZPZZT17atndTYFLbFmpLneEoPY9on6Fh52yauJ6vHcuu079nhWKktDyvXn5QuxrRPnl9T+rl+xORo37PDMc+vGF6prMbxfOA4x7RPni3KUU+XqTEtF6tr2x7W1HgM18OKyer+lB7HtE/QZT9xbJv9nqwey6lr29ZOamwK22JNyXM8pYcx7RN0rLxtE9eT1WO5ddr37HCs1JaHletPShdj2ifPryn9XD9icrTv2eGY51cMr1RW43g+cJxj2ifPFuWop8vUmJaL1bVtD2tqPIbrYcVkdX9Kj2PaJ+iynzi2zX5PVo/l1LVtayc1NoVtsabkOZ7Sw5j2CTpW3raJ68nqsdw67Xt2OFZqy8PK9SelizHtk+fXlH6uHzE52vfscMzzK4b3/7P3NUiS8ziuMRtzkt13/yv2M1WJLJimKFKWbGelMiJN/YAgCMue3vpqu7NY5rE0YB97rMmqBRzywv+YmE4EwdVRN3h1/Wi9O/1ij3istd+p8alatF88f5Jf7N9TdbHGO8dP8YfP0p1+tGrf6Rd7xGOt+U6NT9Wi/eL5k/xi/56qizXeOX6KP3yW7vSjVftOv9gjHmvNd2p8qhbtF8+f5Bf791RdrPHO8VP84bN0px+t2nf6xR7xWGu+U+NTtWi/eP4kv9i/p+pijXeOn+IPn6U7/WjVvtMv9ojHWvOdGs9q+Z9/W2dec1yAG5WcaB5zjBhrzdCFOKKGxVF63i7RvllPybVIL1iz/GJtsyRke2ZNUY9naOfa0IQ4ox44M36xnkweao2KujZ0IY6qo3lK3e0iMfJhPVpzJH8UxnoWhZv1jarFPH/Jr9leiW/ZM8KaomeS78+oMdeGJsRRNSyejF+sJ5Nn1T2zpmtDF+IZbi+31N0uEiMf1qM1R/JHYda7K+ek5RffyxxbHJ09I6wpeibjauJIrg1NiHGWPDLjF+vJ5OVV+Rm6NnQh+tn9u6XudpEY+bAerTmSPwpjPYvCzfpG1WKev+TXbK/Et+wZYU3RM8n3Z9SYa0MT4qgaFk/GL9aTybPqnlnTtaEL8Qy3l1vqbheJkQ/r0Zoj+aMw692Vc9Lyi+9lji2Ozp4R1tQ6kz+/UdtCkVYmp+XrhtCK+Kp8iS5VM9L0Jbo8IR2aPbroXikrl+2bkcB+ZfKiupo4QzNrauZ3AkqvRm2PTnSxtm/y6+1Lomn26p1/5QBaEV+1L9GlakbavkSXJ6RDs0cX3Stl5bJ9MxLYr0xeVFcTZ2hmTc38TkDp1ajt0Yku1vZNfr19STTNXr3zrxxAK+Kr9iW6VM1I25fo8oR0aPboonulrFy2b0YC+5XJi+pq4gzNrKmZ3wkovRq1PTrRxdq+ya+3L4mm2at3/pUDaEV81b5El6oZafsSXZ6QDs0eXXSvlJXL9s1IYL8yeVFdTZyhmTU18zsBpVejtkcnuljbN/n19iXRNHv1zr9yAK2Ir9qX6FI1I21fossT0qHZo4vulbJy2b4ZCeyXl/c/5alldEBZDe4VCtDGICiOGMsag5KaHXWRgihixKtZfnEd3N/dmgiY/Cn15LJ9e2tz3vKrfcO+ya/ihjTMTbctqsJnPYs7SdCKuNucPOnwShRBKqKsrWdRXPA/yy/fH737TX6V3qVhblobYsxr8PXuMswie9m39e6yveLV5Re70R5/k1/FDWmYm25bVIWvd5dtHuxFFNR6d9le8eryi91oj7/Jr+KGNMxNty2qwte7yzYP9iIKar27bK941fPrv7zJSa2xziuHdrv82zb0Xosrsr/j3E0i2WMwZ8oecl9P+SV+jWk/zXLoOcig83C2JH35dTTR82vKw7hJ0DWPquaunKmvc3G+Ljlbuvhcm97sZ8oecte76+2rHmivcLYEd8n50oIumuu+o2V1Hvs16yWja0a1jsKdqa9z4dclZ0sXH2VIg+dM2UPuendV3dZe4WxJwiXnq6ps7obuO1pN57Ff6911dLHm1yVnSxc/ypuycqbsIXe9u6r3SHvFz+Il56uqbO6G7jtaTeexX+vddXSx5tclZ0sXP8qbsnKm7CF3vbuq90h7xc8izlf4HxOrVlkbfQ7ou9PH8hVZbBWPv6L5M03eZNbrnXxG+cp9sgM3nasnW1LTxlbxuIZf6y8HbjJrvbv++Am86Vx9oqtsFY8/sZdLNd9k1np3XXqXry9207m6vtHzFdkqHp9n/uMMN5m13l3rXP1xB8Lt8SOI8X/D2Q2gEOKnvw3o8O3ykMtlE4HGhhcZTFh03iRW/rJl+fznpvo/1XPXu7Sus5W7T/DrrndBTu0PWh6Du/TCr/Xuit259e6K+SSodbbiXrFfd70Lcmp/0OvdlXOt/JHnpj/3rHdX/F6td1fcK0HCr/XuivkGv9afu4J+FcPW/80YcWudrYhLvxj4td5dv554I/i13l2eS797f+HPXUN/o/amP/++/pTye2PWqO7A639vC4DH9Yy1s8z6+2dgvbuef4/5fcXj5yu/WeEy6+YbMLf8enfN9XcEOz+CPB7B/ac5lll/+vaud9fzby8/gjx+vvKbFS6zbr4Bc8uvd9dcf0ew8yPI4xHcV3J0/6BWmn5M4/LEbN/og5PVnsVbN/ApXhWPHu7XCL+te9Czxn5F87P6z56NbL1oHz04+FVigCCrPYu3JIzgsHi71h7+LEpP4tcTPjhbT37XP+lssV/R+5fVf/ZsZOtF++jBwa8SAwRZ7Vm8JWEEh8XbtSZGbd+n+9XV2+Ck4tHD/XrS2WK/orciq1/wZz7ZemdqtXLhV4kt8Laf1Z7FWxJGcFi8XWsPfxalJ/HrCR+crSe/6590ttiv6P3L6j97NrL1on304OBXiQGCrPYs3pIwgsPi7VoTo7bv0/3q6m1wUvHo4X5FzlbXD2qF+Emf131IS4r0wRgeZ4ohDzGTOwOb8SurOYv3+hvJ5dVp7V3h14heR3C0vIjsi1/ZT1Z7Fg89vXnIHx0zZ4trR/pgDI+ZpzVGHmILP3s/41dWcxbv9TqSy6vT2rvCrxG9juBoeRHZX++uiEs/mMzZYtbIvWYMj5mnNUYeYgs/ez/jV1ZzFu/1OpLLq9Pau8KvEb2O4Gh5Edlf766ISz+YzNli1si9ZgyPmac1Rh5iCz97P+NXVnMW7/U6ksur09q7wq8RvY7gaHkR2V/vrohLP5jM2WLWyL1mDI+ZpzVGHmILP3s/41dWcxbv9epxdf2gtvVQSUFdVM89wWf2MnVafYgOxvDY06g1tPI0XritNa9m716rTku7rpvFS35NQ42rhtdaZsxbtWuaW1oyeTUNFodga/iWpiv3Le1e/SweXK08y6+r/MvUafUh/TKGx/DCilpDK0/jhdNas2qdXWvVaWnX9bN4ya9pqHHV8FrLjHmrdk1zS0smr6bB4hBsDd/SdOW+pd2rn8WDq5Vn+XWVf5k6rT6kX8bwGF5YUWto5Wm8cFprVq2za606Le26fhYv+TUNNa4aXmuZMW/Vrmluacnk1TRYHIKt4Vuarty3tHv1s3hwtfIsv67yL1On1Yf0yxgewwsrag2tPI0XTmvNqnV2rVWnpV3Xz+Ilv6ahxlXDay0z5q3aNc0tLZm8mgaLQ7A1fEvTlfuWdq9+Fg+uVp7l11X+Zeq0+pB+GcNjeGFFraGVp/HCaa1Ztc6uteq0tOv6Wbzk1zTUuAQf+kGtADW5kFrEBacSkIu4pU75gB+xVqSmfQQetRHBWatZcNuF8RgjgmN0BD9ijb+mfQQetRGF06tXcNuF8TLGt6ZpxDpqItY4Pf06J4OVXNRGlDWXQ4Dbl/GvJUmd+onUcbUb6rJ4S0ONo3ikEsrapgPRkDRkCfyINdKa9hF41EYEZ61mwW0XxmOMCI7REfyINf6a9hF41EYUTq9ewW0XxssY35qmEeuoiVjj9PTrnAxWclEbUdZcDgFuX8a/liR16idSx9VuqMviLQ01juKRSihrmw5EQ9KQJfAj1khr2kfgURsRnLWaBbddGI8xIjhGR/Aj1vhr2kfgURtROL16BbddGC9jfGuaRqyjJmKN09OvczJYyUVtRFlzOQS4fRn/WpLUqZ9IHVe7oS6LtzTUOIpHKqGsbToQDUlDlsCPWCOtaR+BR21EcNZqFtx2YTzGiOAYHcGPWOOvaR+BR21E4fTqFdx2YbyM8a1pGrGOmog1Tk+/zslgJRe1EWXN5RDg9mX8a0lSp34idVzthros3tJQ4ygeqYSytulANCQNWQI/Yo20pn0EHrURwVmrWXDbhfEYI4JjdAQ/Yo2/pn0EHrURhdOrV3DbJfSD2prAtX50QExfn3scuMr7q+rc4+Kq+q0OrHN9352/yvur6tzn5Kr8jQ6sc33fXb/K+6vq3OfkqvyNDqxzfd9dv8r7q+rc5+Sq/I0OrHN9zV3/b6SMdzPwE1/5sbDgClYlqGmk5BuDnzxHOCKYN/HEgafjnzS0AYCR+I/mIgt7Ms584JXkRDgimEz9HqynQZ8t9DXaL08D9xTFcc7osafB9GtLeB25txSP4w0yBjhf0fwozig1bMnToP0qWJWgpildGb/O1EmJaoA9HevdtTfP9UqgrwcPOInr3bX3EDP9LMr6fzbDXhYCFvrftTeYBplnUdJwz4ji8qGnQftVsCpBTVP6M36dqZMS1QB7Ota7a2+e65VAXw8ecBLXu2vvIWb6WZT19e6CO8eo/SpnDAftBVfTI4mzst5djjlqC17JcsTzCEaVGD71NOizhb7Wu8u+DaZfm8Gyzj7z2GayV3G+ovlRnF1tzKqnQftVsCpBTVOiMn6dqZMS1QB7Otafu/bmuV4J9PXgASdR3l3nf6MWJ2uvZ8hsIvUQfVmSdz/b4D3eSHBTsnxfg2ezJvil6D/X1kojo89Xpczn+TaxkYnUt/j87mcbvMcTnsVbmptZlM2a4Jein9nJXO5KI+vdVbG94lcFnVqeSJ3SMQr87mcbvMcb+eizNUrvY3jYrAl+KfrHtJ0WUmlk9PmqlEnLvT1hYiMTqW+x7d3PNniPNyWjz9Ytzc0symZN8EvRz+xkLnelkdHnq1Jmbm8z2Cc2MpF6hhNNznc/2+A93rJGn62mkE8DsFkvv9zfqBV809QXoInrMEs4leYOllgK6nAfWAMD72GNY8uv0s+LpMXFvNFx4d/AM7i1BqvXjF/AelpLPx5Ai0rOC/9NfqF/SG61CbyLe226GBQ8EWfzW71iDbJbGgTfwgDQxKFoIgqn1pxIT0FRh/vAGoh4D2scW36Vfl4kLS7mjY4L/waewa01WL1m/ALW01r68QBaVHJe+G/yC/1DcqtN4F3ca9PFoOCJOJvf6hVrkN3SIPgWBoAmDkUTUTi15kR6Coo63AfWQMR7WOPY8qv08yJpcTFvdFz4N/AMbq3B6jXjF7Ce1tKPB9CikvPCf5Nf6B+SW20C7+Jemy4GBU/E2fxWr1iD7JYGwbcwADRxKJqIwqk1J9JTUNThPrAGIt7DGseWX6WfF0mLi3mj48K/gWdwaw1Wrxm/gPW0ln48gBaVnBf+m/xC/5DcahN4F/fadDEoeCLO5rd6xRpktzQIvoUBoIlD0UQUTq05kZ6Cog73gTUQ8R7WOLb8Kv28SFpczBsdF/4NPINba7B6zfgFrKe19FMBVH+jFsSIWjjmwlvhBuRUnM0v4qwerTWvEeARa9jZ/cy8F+gJPSLKOo+Bi8RW3l/1S3vj+eDtMc8VXl1xvtAT+kbEukRrDfvYQ8S6jn/BL6tHa033znPgEXmPx1f4xfVmjNEjotTgcaZmK++v+qU98nzw9pjnCq+kxlUf9I3Ida017GMPEes6/gW/rB6tNd07z4FH5D0eX+EX15sxRo+IUoPHmZqtvL/ql/bI88HbY54rvJIaV33QNyLXtdawjz1ErOv4F/yyerTWdO88Bx6R93h8hV9cb8YYPSJKDR5narby/qpf2iPPB2+Pea7wSmpc9UHfiFzXWsM+9hCxruNf8Mvq0VrTvfMceETe4/EVfnG9GWP0iCg1eJyp2cqr+VX9QS0/XELeKnBGvNVopJ6Vl12r1eH+R3Fmea7A1/qv1c7iazy8PoOT+e8cc2+9Z4rzhI857+xtRm3uDX0jcj1rDfu8F/WL64KnN47k8jTU6nD/Xr61V+O0sHevZbVm8ZH+ZnBG6l6B4d56zxTnCR9zXtHDlTW4N/SNyDqsNezzXtQvrgue3jiSy9NQq8P9e/nWXo3Twt69ltWaxUf6m8EZqXsFhnvrPVOcJ3zMeUUPV9bg3tA3Iuuw1rDPe1G/uC54euNILk9DrQ737+VbezVOC3v3WlZrFh/pbwZnpO4VGO6t90xxnvAx5xU9XFmDe0PfiKzDWsM+70X94rrg6Y0juTwNtTrcv5dv7dU4Lezda1mtWXykvx5O968+kJtXSF/M+i/kZlEoLvHMTRfOXi7kCUdEQwsf4ZBa8gG2cG4XifIPCtQ+rdq1PGu9lwt5RatFrNaAl2Xdmp6r1MMU+MK5XbyzJcmojbwDYWKhlwt5Uiqiw8NH8rklwb/5toHn1xsX1Ml19PgMF3IjvQKL+jpHz4GrxbdfL+KIXwLN1tH10UeWC3nCF9HQwkc4oB3YwrldJK53F9w5xoNf2wLWjujf59bDWHnWGu57lgt5whnJ9fCRfNYu+DffNog8i1GdXEeP3zW3jaxm5EbygEV9naPnwNWi4Avnizjil0CzdXR99JHlQp7wRTS08BEOaAe2cG4XievdBXeO8eDXtoC1I/r3ufUwVp61hvue5UKecEZyPXwkn7UL/s23DSLPYlQn19Hjd81tI6sZuZE8YFFf5+g5cLUo+ML5Io74JdBsHV0ffWS5kCd8EQ0tfIQD2oEtnNtF4np3wZ1jPPi1LWDtiP59bj2MlWet4b5nuZAnnJFcDx/JZ+2Cf/Ntg8izGNXJdfT4XXPbyGpGbiQPWNTXOXoOXC0KvnC+iCN+CTRbR9dHH1ku5AlfREMLH+GAdmAL53aRuN5dcOcYD35tC1g7on+fW2Cqv1FrJa+1nAP8YOQyn4ee1guIt4jh87rPK+Je8LDlWfYZhQfEiHvIn5iN8utPmHFTE3/peE3rBcRbxPCm2zW0LPcy6llc766ht2iROQ7w+XVgH7E1rRcQbxHDjzCkIZJ7We+uhllqe5RfinZNEw7w+U2kPRI6rRcQbxHDRxqQFMW9jHoW15+7kjdhwbsd4PPbTfKQxGm9gHiLGEZaPvxGLZLNFwXIt029L3PJ1es1EV6dLBdqRPNKbRIb1Yw6HL0+xJBSxihgLDHtYezVyXKBXPKKPixUImrLdm8tUIPL5Nk2a/8Vy8SD1IhenSwX6CN5pa5cXuBIDvit6PXx71VH19Bzi1ev1er0cIE7klvqvvqQvEgO+HWs9VBw22bZ3wroGjInCZr2MPfqZLlAHs0rtUms7gV8kej1IYaUMkYBY8kt59XJcqGQ5BV9WKhE1Jbt3lqgBpfJs22udxec+omeX+vdFfcKz6IcYH32ZC4+6/U9++/MuydZLrBG80ptEhvVjDocvT7gl/UbHtmaXp0sF/Sn/Hol9dZCTa+P4tdWwKphrYHTil6dLBf4I3mlrlxe4EgO+K3o9bHeXXvHPK/wLMp90fdE5nTL9qTGzKuT5QJ9NK/UJrG6F/BFotcH/Frvrl8nm35tN8O6H9baL+tx5NXJcoE9klfqyuUFjuSA34peH+vdtXfM8wrP4np3/XoW8Wu9uxJ+bQ+79bzrtepv1OKG/JZsjzR5O+Pnf6gtXA+X8LTySl/UXAtvabPWiPKw7e0dwI2FkVxSqtV/qSeXAYVNCi1gA5m4hi+8fTafubrHmwjdWpYr1EcI5FceQOEX8Hap+Fm/UIYosdSMPbVrdXq4RGArr9Sjoi18s+kXgCgPKd7eAdxYGMklpVr9l3pyGVDYpNACNpCJa/jC22fzmat7vInQrWW5Qn2EQH7lARR+AW+Xip/1C2WIEkvN2FO7VqeHSwS28ko9KtrCN5t+AYjykOLtHcCNhZFcUqrVf6knlwGFTQotYAOZuIYvvH02n7m6x5sI3VqWK9RHCORXHkDhF/B2qfhZv1CGKLHUjD21a3V6uERgK6/Uo6ItfLPpF4AoDyne3gHcWBjJJaVa/Zd6chlQ2KTQAjaQiWv4wttn85mre7yJ0K1luUJ9hEB+5QEUfgFvl4qf9QtliBJLzdhTu1anh0sEtvJKPSrawjebfgGI8pDi7R3AjYWRXFKq1X+pJ5cBhU0KLWADmTjly+E3aoVHEsFX5pioZD3lPL2n57qO3p81536CbYWkgIv5kYg9zBEzfiGnxoX90ZH7OVu7cFkCFbGalgwcZmtPU1braOCEeakdERmojT52dLtJnSRztsw6deqxO69+gm25tXUfZR4k/gS/uJ9gW65f2AQX8+s9zBEzfiEHdTCfHbmfs7ULlyVYEatpyVjvrpdxljmGp5mzhfsSpDaqnVh6FR1RW/dR5kHiT/CL+wm2Fbox4GJ+JGIPc8SMX8ipcWF/dOR+ztYuXJZARaymJWO9u17GWeYYnmbOFu5LkNqodmLpVXREbd1HmQeJP8Ev7ifYVujGgIv5kYg9zBEzfiGnxoX90ZH7OVu7cFkCFbGaloz17noZZ5ljeJo5W7gvQWqj2omlV9ERtXUfZR4k/gS/uJ9gW6EbAy7mRyL2MEfM+IWcGhf2R0fu52ztwmUJVMRqWjL0u+vwg1pB6UQ9t2qDOHMzIrxWrbNrI+taXNaa1pz1K8Kpa4yaj6ytufT8iZqzmkb2pLn03NKWPVvCEeG1ap1dG11X8+m5pfdb/bK8sda0Z1m/Ipy6xqj5yNqaS8+fqDmraWRPmkvPLW3ZsyUcEV6r1tm10XU1n55ber/VL8sba017lvUrwqlrjJqPrK259PyJmrOaRvakufTc0pY9W8IR4bVqnV0bXVfz6bml91v9sryx1rRnWb8inLrGqPnI2ppLz5+oOatpZE+aS88tbdmzJRwRXqvW2bXRdTWfnlt6v9UvyxtrTXuW9SvCqWuMmo+srbn0PKq5+lcfRAlaONygFu5b93tv3Lf6tfpuO1A7U+tZbHvHiOUXu3Ec187ZEblWlgMxB2pnaj2LMf+AWn7BCTvWzpmNXqvLgbYDtTO1nsW2d4xYfrEbx3HtnB2Ra2U5EHOgdqbWsxjzD6jlF5ywY+2c2ei1CgfM36jFZiZaN6Ac2u1S+0dWMvx/DWv69XrKrb+M+a/1n+1H+4WzJf9ZT+9luf8iXnsCv9azeLzb2itBLL+OPmHF9Gu9u2DPIWq/cLbWu+tgVVmo+bXeXUe/tFeCwPlafgX9Wu+uo1GvFX2+cLbWu8u2rObXehaPfmmvBIHztfwK+rXeXUejXiv6fOFsrXeXbVnNr/UsHv3SXgkC52v5FfRrvbuORr1W9Pma+xu1rxtRVbM23g6wVTx+A9bAdmCZZfuyVs85sM5V2D+2isdhgm8FLrO+9c7P7Xudq7C/bBWPwwTfClxmfeudn9v3Oldhf9kqHocJvhW4zPrWOz+373Wuwv6yVTwOE3wZcOgPasVwNr38Zuj2o2H90+G7PNb67tIhdbWW4pFcll/mbfH8MhMuXtT6Li5/KKf14HyVeEBfv6D1Xa9gX1HrWe+uvT88O3glm+vdxRbtxp5fO+BNE63vJhnvslrPene9rTEHB7/Ws2j6JIsHr2Rx+SUumB/PLzPh4kWt7+Lyh3Jaz3p3HSzaLRz8Ws/izh+eHLySzeUXW7Qbe37tgDdNtL6bZLzLaj3r3fW2xhwc/FrPoumTLB68ksXll7hgfrRfw35QK8TWpzzs1sbFazV9F8s4lGNdr3N7wNyxwLruqM81WQuPn+QX9LI+rF0daxqe+CzWtF7pWU3DE/260pdWLfbtSc8i62r1MHuftfD4SX7BA9aHtatjTcMTn8Wa1is9q2l4ol9X+tKqxb496VlkXa0eZu+zFh4/yS94wPqwdnWsaXjis1jTeqVnNQ1P9OtKX1q12LcnPYusq9XD7H3WwuMn+QUPWB/Wro41DU98Fmtar/SspuGJfl3pS6sW+/akZ5F1tXqYvc9aMB72g1ocUMTZzYzihxGj+LI8n+SXeHWHX+wRj7NeX41/gl9X93ym3t1+fdLZEp/veBb5/n6SX3efLfFt+cWnxx5/kkfcwd3n69N8W+8uPj3++O6zJeo+6Xw9wS//jj5r926/PulsyZ1b7674+b37bInSTzpfT/ArfnfvR97t1yedLblb690VP7N3ny1RivM17Ae1TBq34l5kObTb5Y7DKzcAN+FeFxLVXyd3+dX2rHi0/Gob9UKwX+GkgcBPexbhV4kDfYhQrXdXxKVfzKf5hbMl/8O4ztfvfayN2K8aZub6enfF3f20Z7F0JgdsPYuhm8zPYhmHssaBPu18sV/jXIgzrXdXzqtP86v8AWK9u0I3mZ/F9e5qW8Z+tdHjEZ/2LMKvdbaCZ0GM2r5P8GvoD2qD7d8CMx8q3AHEW5StosuB73KAn0Uef5cL8W5Nj/DOQozTLeRyYDnQ6QA/izzupPvzaaZHeGch/nkXVoPLgfsd4GeRx/cre6YC0yO8sxCfKX2pWg78KQf4WeTxn2pyYDOmR3hnIQ6st6jmOvDfufTPYjcP77MkPkbN8ip3K5Zfy6+cAzn0Ol9xv5ZXca8EufxafuUcyKHX+Yr7tbyKeyXI5dfyK+dADr3OV9yv5VXcK0Euv5ZfOQdy6HW+4n493auv+Y1a85bh7iCaoLW4HFgOLAce5gDeWYgPk7fkLAeWA8sB0wG8sxBN0FpcDiwHlgMPcwDvLMSHyVtylgPLgeWA6QDeWYgmaC0+0YGv/kFtOa/bZZ3b4NEUo5ZfIbPKmVp+hbwSEPsVTvpiIPwq8Yt9CLe+nsWUVeWB3Dxb56ttW/Hodb7a6IWAX+tsBc/C62wtv9p+4WytP6e2vRIE+xXL+G4U/FrPYvAciFHbd/nV9qt4tPxqG/VCsF/hpC8Gwq8Sv9iHcOsPeha/6q8+sG7QOrSWK/ba8sr2pba6/Ko5Y68vv2xfaqvLr5ozx/Xl1dETb2X55blz3Ft+HT3xVpZfnjv7veXV3o/WbPnVcmi/v/za+9GaLb9aDv3uL69+vYiMll8Rl34xy69fLyKj5VfEpR/Mk7x6/G/UZv/e4yw+fts+A5ntP4uf4cKdGu6s3evlXZql7l21e726My/rVRZ/Z28zamf7z+KfoHmkhif0n+3nLs1S967aWY+egM96lcU/oceRGrL9Z/EjtYLrTg131kb/2XiXZql7V+2sR0/AZ73K4p/Q40gN2f6z+JFawXWnhjtro/9svEuz1L2rdtajJ+CzXmXxT+hxpIZs/1n8SK3g6tEQ+kGtEPeQQ1hvLDW3y79gccAQe+ueyZPa+J7h6cktfW+XEgMEwCEGUoZDUBtxeAGHsNTcLtHagsPXoZ26Ba2IU4tp8lfz0dovuGa5dH6XhuLRdlnvrtjtfvsVg7+f2ZIXzBkNQ23E0fweX49fknOHVvSB2ohYvyS+mo/WfsEvkVYrcpeG4tF2We+u2p3Zr7/92i9XZwW/7SJWgRM3UBtxYqkDdam5XaK1BYfvgeyiBWhFvKjsT5lX89HaL/ilEnWxuzQUj7bLenfpO2LP337Z24fVgt9WEQ+ACxZQG/GCku8SpeZ2idYWHL5vkosH0Ip4aflX89HaL/ilEnWxuzQUj7bLenfpO2LP337Z24fVgt9WEQ+ACxZQGzFaMvSD2ijZwq2/i+cbzsCTfiX+G/xePV7jwDrX1/h8Z5V1j+90f9We5cA617OcfQ7vusfPuRdLyTgH1rke5+VTmdY9fuqdWbrOOLDO9Rn34rnvv6MWP+G1jLfWUMLLA6Y3St1/28Wrz9xRHOdExrrHMpdLRZunQ3NF6keNf/tvAABAAElEQVQxUvfT/PK8kr7/ul/oT3qFF2VNLtsC1mRfPnr+s/pztbh4/+z4P1vxl6wQlac1RGCA0CNzW2tIZRzWEL08YHqj1P20Z1F6XX793HH4UM6IXLYFrP0gjnOsI/7184X+pF940+uXxQUfR8T17oq7KPdyvbv+tl94Xmtd4nls4Wr53voTzhf6E53ocb276ncNfsErQVprYGAc1hC9PGB64xPOlmjXPZa5XDaBljfWGjzQXFgfET/RL88r8eSv+4X+pFd4Udbksi1gTfblo+c/qz9Xi4v3z47Xn7viDsp9Wn/u+tt+ec+idI7nUePKb9S+H/JtAGDcrh9kb16rjhbcwo/ed/tyN49KkvAjQWDlkX51Nt6ZFnDpF3K3X79KaHRF41QuM3yKX7CoRLlsX6xl+hFsb16rzt1euX25m8fOkvAjQWDlkX51Nt6ZFnDpF3K3X79KaHRF41QuM3yKX7CoRLlsX6xl+hFsb16rzt1euX25m8fOkvAjQWDlkX51Nt6ZFnDpF3K3X79KaHRF41QuM3yKX7CoRLlsX6xl+hFsb16rzt1euX25m8fOkvAjQWDlkX51Nt6ZFnDpF3K3X79KaHRF41QuM3yKX7CoRLlsX6xl+hFsb16rzt1euX25m8fOkvAjQWDlkX51Nu6llR/Ulmblsn17G+/NC9yLqRDPHCls9VXW5GJtOmqTcIfpvq2oX7teX17t1gItAI8YSHkURLxafsVvScsrZsKZKFEu2xdrjIuMe/Mi3DMxLb+svsqaXKxNR2wS7jDdtxX1a9fry6vdWqAF4BEDKY+CiFfLr/gtaXnFTDgTJcpl+2KNcZFxb16Eeyam5ZfVV1mTi7XpiE3CHab7tqJ+7Xp9ebVbC7QAPGIg5VEQ8Wr5Fb8lLa+YCWeiRLlsX6wxLjLuzYtwz8S0/LL6KmtysTYdsUm4w3TfVtSvXa8vr3ZrgRaARwykPAoiXi2/4rek5RUz4UyUKJftizXGRca9eRHumZiWX1ZfZU0u1qYjNgl3mO7bivq16/Xl1W4t0ALwiJzy/qsPrE0G1sa9eTW+K9dxEyR6fVh71lpEe29ehHs2ptevMz2fyZ3txyh+3aOeZ+qcyc3UGY3tPVuio7fn3rzRvffwLb9yrvX6deaMnMnNdXcfWveo5xllZ3IzdUZje8+W6OjtuTdvdO89fMuvnGu9fp05I2dyc93dh9Y96nlG2ZncTJ3R2N6zJTp6e+7NG917D9/yK+dar19nzsiZ3Fx396F1j3qeUXYmN1NnNLb3bImO3p5780b33sO3/Mq51uvXmTNSyx3yj4mhoZwN34leXuXu+6f6xbp5nOs+j76yVl7d8zKWX/F7sryKeyXIT/WLdfM4130efWWtvLrnZSy/4vdkeRX3SpCf6hfr5nGu+zz6ylp5dc/LWH7F78nyKu6VID/VL9bN41z3efSVtfLqnpex/Irfk+VV3CtB1vw6/YPaf8K8fWsFcjJz6FfpUBKwd+iEwFJ7uxTPsHhRzPafxc9o4+3XDPIGZ7b/LL5Rvmv7CX5FhcOvKH4Gbr274q6+z1YZxPNGIHFWoqWz+BEaNUfRul2imnX+mXm2/yz+jLZabvFpu5RYA01aR/9R+iw+ypvBrXdX3K1yprbL+nNXzLO3XzH4UBSeraIhwJzFByjTkCf4FRUNv6L4Gbj17oq7+j5bZRDPG4HEWYmWzuJHaNQcRet2iWrW+Wfm2f6z+DPaarnFp+1SYg00aR39R+mz+ChvBrfeXXG3ypnaLuvPXTHP3n4Z8NM/qDU4H79UDHm8ymcJXJ7134/ar7P3Mz43M3tOsvjndn6NsuVX3uflWd4zZKx3F5w4xnWujp54K8svzx17b3lm+xJZXe+uukvrXNW9sXaWX5Yr/tryzPfH213vrro761zVvbF2ll+WK/7a0zw7/YPa/8gbZfvOerGIYTXTXqV9x1+7Gsucs7RrYaWOFqJBJ+c1v9AjYqsM49gryeO9Fs+Z/VJnu8yqV/OKe4zWZhz7xetnvIjkllrbZVbNll9SN1qbcbf59RLMWiI+RzERvyJcL5lv6B1+FY+0kLeiMYOaX7g/iK1qjGOvJI/3Wjxn9kud7TKrXs0r7jFam3HsF6+f8SKSW2ptl1k1W35J3Whtxt3m10swa4n4HMVE/IpwvWS+oXf4VTzSQt6KxgxqfuH+ILaqMY69kjzea/Gc2S91tsusejWvuMdobcaxX7x+xotIbqm1XWbVbPkldaO1GXebXy/BrCXicxQT8SvC9ZL5ht7hV/FIC3krGjOo+YX7g9iqxjj2SvJ4r8VzZr/U2S6z6tW84h6jtRnHfvH6GS8iuaXWdplVs+WX1I3WZtxtfr0Es5aIz1FMxK8I10vmG3qHX8UjLeStaMyg5hfuD2KrGuPYK8njvRbPmf1SZ7tY9U7/oHZmI9qwMyYgV5ug58DNilJvVs2WX9m6Gj9Te81vraGGO7Ne8y1bW+P1/IzGaO4VNWt+RTUCp7XqOXAz46yaozzi3rVWPWfsjLHUm1Wz5Ve2rsbP1F7zWmuo4c6s13zL1tZ4PT+jMZp7Rc2aX1GNwGmteg7czDir5iiPuHetVc8ZO2Ms9WbVbPmVravxM7XXvNYaargz6zXfsrU1Xs/PaIzmXlGz5ldUI3Baq54DNzPOqjnKI+5da9Vzxs4YS71ZNVt+Zetq/EztNa+1hhruzHrNt2xtjdfzMxqjuVfUrPkV1Qic1qrnwM2Ms2qO8oh711r1nLEzxlJvVs2WX9m6Gj9Te81rrQG49w9qpelW40jKRI/T25MaNdGR+tF+WhpqtaL8tXxrvcXZ0gq/EK0atbUaN3O19NW4Zb3G7+W09jxOb0/zco96rzav8TOXYGq4Gq+s9+Z5nOCtYTI6uccan16v8TNXDaO59PyJfnFfWm9rHu3nSX61NLe0wi/Elke8X+NmrpY+5tPjGr/GZeYep7ena3CPeq82r/Ezl2BquBqvrPfmeZzgrWEyOrnHGp9er/EzVw2jufT8iX5xX1pvax7t50l+tTS3tMIvxJZHvF/jZq6WPubT4xq/xmXmHqe3p2twj3qvNq/xM5dgargar6z35nmc4K1hMjq5xxqfXq/xM1cNo7n0/Il+cV9ab2se7edJfrU0t7TCL8SWR7xf42aulj7m0+Mav8Zl5h6nt6drcI96rzav8TOXYGq4Gq+s9+Z5nOCtYTI6uccan16v8TNXDaO59PyJfnFfWm9rHu3nSX61NLe0wi/Elke8X+NmrpY+5tPjGr/GReflB7WF9KVqZAFwIbIorCHyHo/FODaP93rHmrOlQdcpeLlkEzVRYo5SiLXUHq/Aiai5R/lV49f1InNwIXIO1hB5j8e6L97zxuBF1Niee7DjEOLtW+PfYYMTcCFyGtYQeY/HV/jV0sB6ZFzwctm+2VzNxXNwIUb3GNfrF3Posea09Okcnhe8XLKJTJIcoxRiLb3nuQEnouYe5VeNX9eLzMGFyDlYQ+Q9Huu+eM8bgxdRY3vuwY5DiLdvjX+HDU7AhchpWEPkPR5f4VdLA+uRccHLZftmczUXz8GFGN1jXK9fzKHHmtPSp3N4XvByySYySXKMUoi19J7nBpyImnuUXzV+XS8yBxci52ANkfd4rPviPW8MXkSN7bkHOw4h3r41/h02OAEXIqdhDZH3eHyFXy0NrEfGBS+X7ZvN1Vw8BxdidI9xvX4xhx5rTkufzuF5wcslm8gkyTFKIdbSe54bcCJq7lF+1fh1vcgcXIicgzVE3uOx7ov3vDF4ETW25x7sOIR4+9b4d9jgBFyInIY1RN7j8RV+tTSwHhkXvFy2bzZXc/EcXIjRPcb1+sUceqw5LX06h+cFL5dsIpMkxyiFWEvveW7Aiai5R/lV49f1IvPyg1pulscRglmYM01yLo+Hax1oFuvksdY8sKSmDs+foMET+wR9pzScSvacee5eb8ucx+M7O/We35YuzuVxKy+9P9As1sljrWlgSU0dnj9Bgyf2CfpOaTiV7Dnz3L3eljmPx3d26j2/LV2cy+NWXnp/oFmsk8da08CSmjo8f4IGT+wT9J3ScCrZc+a5e70tcx6P7+zUe35bujiXx6289P5As1gnj7WmgSU1dXj+BA2e2CfoO6XhVLLnzHP3elvmPB7f2an3/LZ0cS6PW3np/YFmsU4ea00DS2rq8PwJGv4LteUfBcPkgug1X27cdvm3gTzcWZm93CWvN7lTtFcOfolZHq6z9Dutl7vk9Sa/q+cGXrl/rzfD7DPvafC6udovT+dVZ0v88HS4fvUmeqTOnlcOfq1316+BEb/Wuyvo13p3/Rq1jZ5wtkSQp2MnWE1m/2+QKufqXO8u7ZZ/X+HXenf9+uY9B+vPXb8+ycj1SgBywDaQhxPY2U8v/3p3xZ0vHvcaHS+zQ3rl1rtrZ1WZuH4Vw7Zn0QMdKdMrvfQlrzc5rdJ/J111tkR2b8uz76O21NMJv9b/zfjrWsSv2f/b6Gn4VXoclbze5CNdWXn/HbWV/Y9cZo94/ORmWCePQ5pf/yMSwn45iK3i8Zfb0m5/mdX2aACCn30eD6CeRsE6eRwquM5VyCYBsVU8DhN8K3CZdcmd52efx5cU7yzCOnkcolvnKmSTgNgqHocJvhW4zLrkzvOzz+NLincWYZ08DtGtcxWySUBsFY/DBN8KXGZdcuf52efxJcU7i7BOHofovvBcvX9QK72P7h83ADF0EzZQwW+XWl5Eay03qqGFi2hoceh90dyl+5Vo5UZ0Ig9R6zo7Lxq2i8RRH2hFjPIWvFy2r5X7GL+iDQVx6BUxmPbjkSRVEpdfeyeLTdulYld5BlrPQS13X6l/FrlnWXbR3KX7lWjlRnQiDzGru4UvGraLxFEfaEWM8ha8XLavlfsYv6INBXHoFTGY9uORJFUSl197J4tN26Vi13p37e36Mari12PO1iZEtIz64GwgRnkLXi7b18p9jF/RhoI49IoYTPvxSJIqicuvvZPFpu1SsWu9u/Z2/RhV8esxZ2sTIlpGfXA2EKO8BS+X7WvlPsavaENBHHpFDKb9eCRJlcTl197JYtN2qdi13l17u36Mqvj1mLO1CREtoz5T/zExEVk7fK0GanmZ5mscrdqt/aJBLhkxLdIT+9Jnq9eW1Fb+CXm/PrVEJIv0av4IvzavBtvVPCM1+2t+ZfT13quaJqwXDXLZvhk9yPdir+ZaXkZfjcPTG9krGuSSERMh7sRIn61eW1Jb+Z3SftJQHPEU2W9yr+aP8GvzarBdzTPy6+x+VPMro6/3Xu2VHGdFg1y2b0bPkem40qu5lpfRV+M4qsytFA1yyYjJlUihpc9Wry2prfyUIA1GcUS93znv1fwRfm1eDbareUZqt6HmV0Zf772qacJ60SCX7ZvRg3wv9mqu5WX01Tg8vZG9okEuGTER4k6M9NnqtSW1ld8p7ScNxRFPkf0m92r+CL82rwbb1Twjv87uRzW/Mvp679VeyXFWNMhl+2b0HJmOK72aa3kZfTWOo8rcStEgl4yYXIkUWvps9dqS2spPCdJgFEfU+x3z339M7NX9mQZEF39benr66NHXU6elvez3iCHijFeSdqaPjNQzdUydKI5IHmSGGb/O9nBSaqat432V4tv3jAb2KuJFBKOb6tHXU0fXZY6iQS7bt0cPuIWTv1ivRdZQw+j1Hn09dXRdc94jhogyXknamT4yUs/UMXWiOCJ5kBlm/Drbw0mpmbaO91WKb98zGtiriBcRjG6qR19PHV2XOYoGuWzfHj3gFk7+Yr0WWUMNo9d79PXU0XXNeY8YIsp4JWln+shIPVPH1IniiORBZpjx62wPJ6Vm2jreVym+fc9oYK8iXkQwuqkefT11dF3mKBrksn179IBbOPmL9VpkDTWMXu/R11NH1zXnPWKIKOOVpJ3pIyP1TB1TJ4ojkgeZYcavsz2clJpp63hfpfj2PaOBvYp4EcHopnr09dTRdZmjaJDL9u3RA27h5C/Wa5E11DB6vUdfTx1d15z3iCGijFeSdqaPjNQzdUydKI5IHmSG7Nf7rz4QzjO8u2ZRwVEFPKIDPWxltIIf8UAWWJBczi/1t8tIv/APLdTkoD5iDafXM15JLvgRNV9rjjxEwU/xyxGC2ogO9LDV41dPHRRGLqKsZzWAC5G58L8kuzUAXxF7iGrbnWa0gh/RJa5sIhdRYBkNFi1zwS8LhzXgEbEeiRmt4EeM8GuM5HJ+qb9dJPZ+mE/I17vLd/LglwMHFtGBHrYyZ0uSpUZPHRRGLqKsZzWAC5G5IHC3BuArYg9RbbvTjFbwI7rElU3kIgoso8GiZS74ZeGwBjwi1iMxoxX8iBF+jZFczi/1t4vE3g/zCfl6d/lOHvxy4MAiOtDDVuZsSbLU6KmDwshFlPWsBnAhMhcE7tYAfEXsIaptd5rRCn5El7iyiVxEgWU0WLTMBb8sHNaAR8R6JGa0gh8xwq8xksv5pf52kdj7YT4hX+8u38mDXw4cWEQHetjKnC1Jlho9dVAYuYiyntUALkTmgsDdGoCviD1Ete1OM1rBj+gSVzaRiyiwjAaLlrngl4XDGvCIWI/EjFbwI0b4NUZyOb/U3y4Sez/MJ+Tr3eU7qf16/6DWT/ve3Z1hM20IPgVB2GmlV9U5LdQg+GTtRjvppb/aPz+Lf7XH9M12EtgvB3Z+K3gzgrDTeq6qc1qoQfDJ2o120kt/tX9+Fv9qj+mb7SSwXw7s/FbwZgRhp/VcVee0UIPgk7Ub7aSX/mr//Cz+1R7TN9tJYL8c2Pmt4M0Iwk7ruarOaaEGwSdrN9pJL/3V/vlZ/Ks9pm+2k8B+ObDzW8GbEYSd1nNVnV6h/+1N1Hm7RncTjfyZByA/P9WXk7OBI3irkpfHh1LjeE949b5VK7PGfP+2Cc8tnta+5BTNF/hlaVl+He8aPGn5Ze0f2XIrb873oJ4fgJRknK//RBNUyVbaXX7tdO0mqoHXNAC57FkUSVoPfIR6vY/13sh8693VdvEv+8W9tZ2IId6c70E9LwApyevd9eNhxC94JS+WCN66O14ev580jveEV+9btTJrzLfeXW3n/rJf3FvbiRjizfke1PMCkJKM53H9uavuJXbg1Xp3xd6dV/llnfX1rsep/Y3wpOWXtf/L0jd6c74HdZ4ApCTjfK13V91L7MCr9e5a7y5+vuTPqZ/xG7V4e+FEXxzZtBmlh/NP9qtFP7wfZfow/lYjqm7v9KIyvfJCeaWHVyMz+vE4vb2Q+DtBN4sf9qxUPBzOP9mvFv3wfpRvw/hbjai6vdOLyvTKC+WVHl6NzOjH4/T2QuLvBN0sftizUvFwOP9kv1r0w/tRvg3jbzWi6vZOLyrTKy+UV3p4NTKjH4/T2wuJvxN0s/hhz0rFw+H8k/1q0Q/vR/k2jL/ViKrbO72oTK+8UF7p4dXIjH48Tm8vJP5O0M3ihz0rFQ+H80/2q0U/vB/lm/A/+ge1xQC5THKCaeVm8A3x9pSPj5kWzXJh8QPVMS17JSX0nt4fKGMc1csr1j6OfM/k+eHt7VnumxWPJvrF90D8YE94Txzgvfsc8SuzXz6yb5c98fzSe33V5mdd7Rd35HnJuEeNRfT2Ze2z9HnPm7c3S0+Wt3g00S++B/p54z3R/Wl+Zb2O4NkTzy+9F+G+A1P6kQs3NlAI0+rzo/f0/kAZ46heXrH2ceR7Js8Pb2/Pct+seDTRL74H4gd7wnviAO/d54hfmf3ykX277Innl97rqzY/62q/uCPPS8Y9aiyity9rn6XPe968vVl6srzFo4l+8T3Qzxvvie5P8yvrdQTPnnh+6b0I9x2Y0o9cuLGBQphWnx+9p/cHyihUj/5BrSiceB+KAWx4WaCLt0ewRw2v9Esfzk/z6wqv2BP2S9fmvUcdKBKjNdPWkKHmZ0+8vSHFJ5BozaNLCH/t4+3Vcu5ev9IvPlvS96f5dYVX7An7pWvz3t1nqFZfa67hetc1P3vi7fXWm52nNY+uJ/y1j7dXy7l7/Uq/+GxJ35/m1xVesSfsl67Ne3efoVp9rbmG613X/OyJt9dbb3ae1jy6nvDXPt5eLefu9Sv94rMlfX+aX1d4xZ6wX7o27919hmr1teYarndd87Mn3l5vvdl5WvPoesJf+3h7tZy716/0i8+W9H2lX4//QW32IGgzI/me4d5ehPvpmOXXdXfor5+l0U56fnl7o3VcxbeexZzTy6+cX2fQf/F5O+NHK9fzy9tr8T51fz2LuTuz/Mr5dQb9F5+3M360cj2/vL0W71P317OYuzPLr5xfZ9B/8Xk740cr1/PL22vxPnV/PYu5O/Opfg37x8Ryds1B4yZIzD6UHt7bm9PJNazLr5zP8EuyMmfCw3p7OXXPQ8OvbI8e3tt7ngNxRfBKYrZHD+/txdU9D7n8yt0T+CVZmTPhYb29nLrnoeFXtkcP7+09z4G4InglMdujh/f24uqeh1x+5e4J/JKszJnwsN5eTt3z0PAr26OH9/ae50BcEbySmO3Rw3t7cXXPQy6/cvcEfklW5kx4WG8vp+55aPiV7dHDe3vPcyCuCF5JzPbo4b29uLrnIT/Zrz/3G7XPOx5L0XJgObAcWA4sB5YDy4HlwHJgObAcWA4sB5YDy4HlwHJgObAc8B14xG/U4ifdZ3+SfyZ/lAbf7vO70ClMZ/pFvvD18EBHT67UvuozUmdvryM1zPZtpNblV/xu9XolFUbes7jiPBI6JfNMv8gXvh4e6OjJldpXfUbq7O11pIbZvo3UuvyK361er6TCyHsWV5xHQqdknukX+cLXwwMdPblS+6rPSJ29vY7UMNu3kVqXX/G71euVVBh5z+KK80jolMwz/SJf+Hp4oKMnV2pf9Rmps7fXkRpm+zZS6/Irfrd6vZIKI+9ZXHEeCZ2SeaZf5AtfDw909ORK7bOf23+jFgacbeRM/hM0nNF/Jrfn4H2iX0/Q/AQN3llhfTz2cmbuPUGD198T9D1Bg+fRzL317prp7p776eeM9fF438V1sydo8Lp9gr4naPA8mrm33l0z3d1zP/2csT4e77u4bvYEDV63T9D3BA2eRzP31rtrprt77qefM9bH430X182eoMHr9gn6nqDB82jm3qe+u0I/qJUbq2+unou51lrLdDbOqtPKP7vfo7lV0+rDqmOttbif5Bdraen29i0f9JrM9ZrHae2dzbc4vTWteZZfuo5o6ulV6+vh8Pxo7ek+tJ5WvrWvOQVj9WWtWXy8xvqsOoydMe7R3NJh9WHVsdZa3E/yi7W0dHv7lg96TeZ6zeO09s7mW5zemtY8yy9dRzT19Kr19XB4frT2dB9aTyvf2tecgrH6stYsPl5jfVYdxs4Y92hu6bD6sOpYay3uJ/nFWlq6vX3LB70mc73mcVp7Z/MtTm9Na57ll64jmnp61fp6ODw/Wnu6D62nlW/ta07BWH1ZaxYfr7E+qw5jZ4x7NLd0WH1Yday1FveT/GItLd3evuWDXpO5XvM4rb2z+Rant6Y1z/JL1xFNPb1qfT0cnh+tPd2H1tPKt/Y1p2Csvqw1i4/XWJ9Vh7Ezxj2aWzqsPqw61lqL+0l+sZaWbm/f8kGvyZzXQj+oRVEk6ij71hryWlEbAK5W3tl9riMatI4efuZEPtYQZR1jRGAjcYTOSB2NYa2jNIATUWpijMg6rDXe12N9X7P5mq93PtMvaEJvOmI/Eu/yC5pFo9YQ0d3CgF9HybPWWnzY1/cVXNifFbnOKL+YE7qxhijrGCMCG4nar0jOCAxrHaUBnIiiE2NE1m6t8b4e6/uazdd8vfOZfkETetMR+5F4l1/QLBq1hojuFgb8Okqetdbiw76+r+DC/qzIdUb5xZzQjTVEWccYEdhI1H5FckZgWOsoDeBEFJ0YI7J2a4339Vjf12y+5uudz/QLmtCbjtiPxLv8gmbRqDVEdLcw4NdR8qy1Fh/29X0FF/ZnRa4zyi/mhG6sIco6xojARqL2K5IzAsNaR2kAJ6LoxBiRtVtrvK/H+r5m8zVf73ymX9CE3nTEfiTe5Rc0i0atIaK7hQG/jpJnrbX4sK/vK7iwPytynVF+MSd0Yw1R1jFGBDYStV+RnBEY1jpKAzgRRSfGiKwda6kf1EIsIoqAjAtkx8zJuSO4mW/2uNYH6ko/M3uayY0eWj0CNyIuv2wXa/fgivtvKzq3WuvnHOtvNvgRZWfU2WLO34pzn3OuM2pc6wP8o/wCn45XnN1Wj1rTmfnyy3avdg+uuP+2onOrtX7Osf5mgx9RdkadLeb8rbjeXexFZHzF2a3dq4i+LGbU+arV/VS/avfgin5qXp5Zr/VzhpNzwY8oe6POFnNyzU+7F7U+0NMov8Cn4xV+tXrUms7Ml1+2e7V7cMX9txWdW631c471Nxv8iLIz6mwx52/F9ecu9iIyvuLs1u5VRF8WUztfoX9MzBIqa7NNKvzbReJ/XiK4pqUrY4yVP4Jf82LO3BmdUWzh3y7/toJWTaxF+TTOykdP1p7Ot+ZWHtbAbeWNWPP8goYzdTQH96P3onWsPKwxf5Qvg/uHAltBXRPzDJ/Gag6UE5ze07m1uZUna8xdyz2zXvi3i8T17mo7+fZruzm4Z2XtlYq1NpONsPLBb+3ZLPtVKw9r4N5njJt5fkHDmWqag/vRe9E6Vh7WmD/Kl8Gtd1fcrffZ2lLWu6vt29uv7TBb5xlrbSYbYeXjebH2bJb9qpWHNXDvM8bNPL+g4Uw1zcH96L1oHSsPa8wf5cvg1rsr7tb7bG0p693V9u3t13aYrfOMtTaTjbDy8bxYezbLftXKwxq49xnjZp5f0HCmmubgfvRetI6VhzXmj/JlcOvdFXfrfba2lPXuavv29ms7zNZ5xlqbyUZY+XherD2bZb9q5WEN3PuMn1nqN2otghlrED6De3EuB5YDYxzwXixjKnwey3p3fd49W4q/z4H17jre8/XuOnqyVpYDT3NgvbuOd2S9u46erJXlwNMcWO+u4x1Z766jJ2tl78D7N2rxAFmHBnv71NwMHBY/mPSezOW3Q/lT1rYFtfyGROq8wdtA41v8yNV5WJeIPV7LjJFf61G4rL2ifbvwXlmr4CN1WLeF51qM5bGVZ+3zWmbc4hcuy4eytl24Bx5rDZE6nKPxpd5LC+P0WOfxPvZ4LTsGh9erqfWVgDwTQ2IidQj+fm6i/Mj16mAP2J4IDuiyOPRe8UYtlrUtWS2/6SJ13uBtoPEtfuTqPKxLxB6vZcbIr/UoXNZe0b5deK+sVfCROqzbwnMtxvLYyrP2eS0zbvELl+VDWdsu3AOPtYZIHc7R+FLvpYVxeqzzeB97vJYdg8Pr1dT6SkCeiSExkToEfz83UX7kenWwB2xPBAd0WRx6r3ijFsvalqyW33SROm/wNtD4Fj9ydR7WJWKP1zJj5Nd6FC5rr2jfLrxX1ir4SB3WbeG5FmN5bOVZ+7yWGbf4hcvyoaxtF+6Bx1pDpA7naHyp99LCOD3WebyPPV7LjsHh9WpqfSUgz8SQmEgdgr+fmyg/cr062AO2J4IDuiwOvVe8UYtlbUtWy2+6SJ03eBtofIsfuToP6xKxx2uZMfJrPQqXtVe0bxfeK2sVfKQO67bwXIuxPLbyrH1ey4xb/MJl+VDWtgv3wGOtIVKHczS+1HtpYZwe6zzexx6vZcfg8Ho1tb4SkGdiSEykDsHfz02UH7leHewB2xPBAV0Wh94r3qjFsrYlq+U3XaTOG7wNNL7Fj1ydh3WJ2OO1zBj5tR6Fy9or2rcL75W1Cj5Sh3VbeK7FWB5bedY+r7XG5TdqQSxgHreSZV+Et8RnObmuxV+rl61Tw9f4oauWJ/venuxb/ci69WlxWTmWdmuNc7N1snjUsvKsNeAltrQztocrw49arTqCYwyPM/U4D7VbscWf4dRcMrfWLE2ZOpJfw+t6uhbn8VjjrLnVj8ZlOTnf4q/1k61Tw9f4oauWJ/venuxb/ci69WlxWTmWdmuNc7N1snjUsvKsNeAltrQztocrw49arTqCYwyPM/U4D7VbscWf4dRcMrfWLE2ZOpJfw+t6uhbn8VjjrLnVj8ZlOTnf4q/1k61Tw9f4oauWJ/venuxb/ci69WlxWTmWdmuNc7N1snjUsvKsNeAltrQztocrw49arTqCYwyPM/U4D7VbscWf4dRcMrfWLE2ZOpJfw+t6uhbn8VjjrLnVj8ZlOTnf4q/1k61Tw9f4oauWJ/venuxb/ci69WlxWTmWdmuNc7N1snjUsvKsNeAltrQztocrw49arTqCYwyPM/U4D7VbscWf4dRcMrfWLE2ZOpJfw+t6uhbn8VjjrLnVj8ZlOTnf4q/1k61Tw9f4oauWJ/venuxb/ci69WlxWTmWdmuNc7N1snjUsvKsNeAl1rSXH9TyJo+ZoDVGHiLjrTXej469Jr29Gj90IdZwet3DZ/eyeK2lNm/5wfueBou/F2/lWWuoiT1EWecxcIjeHjC1yH5ojOzxfqQOY3isub15Ng94RIvb27PwtTX2Q2O8PY3FvFcX5/EYvJGIPETOsdZ4Pzr2PPH2avzQhVjD6XUPn93L4rWW2rzlB+97Giz+XryVZ62hJvYQZZ3HwCF6e8DUIvuhMbLH+5E6jOGx5vbm2TzgES1ub8/C19bYD43x9jQW815dnMdj8EYi8hA5x1rj/ejY88Tbq/FDF2INp9c9fHYvi9daavOWH7zvabD4e/FWnrWGmthDlHUeA4fo7QFTi+yHxsge70fqMIbHmtubZ/OAR7S4vT0LX1tjPzTG29NYzHt1cR6PwRuJyEPkHGuN96NjzxNvr8YPXYg1nF738Nm9LF5rqc1bfvC+p8Hi78VbedYaamIPUdZ5DByitwdMLbIfGiN7vB+pwxgea25vns0DHtHi9vYsfG2N/dAYb09jMe/VxXk8Bm8kIg+Rc6w13o+OPU+8vRo/dCHWcHrdw2f3snitpTZv+cH7ngaLvxdv5VlrqIk9RFnH+D//7//+l3tAjhkZCAITOGHRq+3tTZASomRNknCXX1Zd1mbthxocDGJNV/vFtbUf3t5gC1J0d+ryant7qQYHg+/U5dX29gZbEKZjTZKkn4kwUScQ9a262LtDV60d1nS1Lq6t/fL2ar1csX6nLq+2t3eFL7Uad+ryant7tV5mr7MmqaWfiavqW3VZm7U/W5vFz5pk/0pdXFvX9fasPq5au1OXV9vbu8obq86durza3p7VxxVrrEnq6WditgbUt+pi7w5dtb5Z09W6uLb2y9ur9XLF+p26vNre3hW+1Grcqcur7e3Vepm9zpqkln4mrqpv1WVt1v5sbRY/a5L9lq5H/mNiVmOfttYyfmY/fAh4rGveqfGpWrRfT/JIe4a51oz1K+Kdta/o7xtr3Hnm+TzxWN+HOzU+VYv260keac8w15qxfkW8s/YV/X1jjTvPPJ8nHuv7cKfGp2rRfj3JI+0Z5loz1q+Id9a+or9vrHHnmefzxGN9H+7U+FQt2q8neaQ9w1xrxvoV8c7aV/T3jTXuPPN8nnis78OdGs9q+Z9/W2dec1xAGkWzkhPNY44RY60ZuqBtRA2Lo/S8XaJ9s56Sa5FesFbza3bpj/RL7q98yRycL1oaPuzxSp+v4aIihBWvWFuEJos541fJzRYchK+drSf6hZaf6Be0zYo95wtabvNrK1w7X9A2I/Z4xedd8m/5iF9UWDThS8vDh2f8KrnDFcUIa2eL72WMKYfq8QsVnugXtM2KH+nXJrp2vmb5JLw9XvF5l/xbPuIXFcZ7i7XR9rDhGb9K7jAlOaLa2XqiX+jsiX5B26zYc76g5Ta/tsK18wVtM2KPV3zeJf+Wj/hFhde7i8wwhrWzxffSSDu91HO+ULTkYnJxrPk1W8ZMv35+o5afmtndfDJ/h0+zHybLzl3NDs0WZ9daR+2d9q6iH56U9OwRfiU1D71Dd9Ye2shksg6f7jhbu5odmoe52FF7p32YkA8iSnr2CL+SmofejTtrD21kMlmHT3ecrV3NDs3DXOyovdM+TMgHESU9e4RfSc1D78adtYc2Mpmsw6c7ztauZofmYS521N5pHybkg4iSnj3Cr6TmoXfjztpDG5lM1uHTHWdrV7ND8zAXO2rvtDtC/kd+heQ/UfSLCHBEWRaN+ifZL/iQwLWK5iGsSRIRsX13WgIUwCNKSvErkHsaIkW3L9c+zRkl6KwNrYhSbqZfXKcYtS3s1qL9nsCVenLpKGylXO3Xida7UuHXencF7XudLeuseAzAIwp25tnaaenUvOPonXTWhk+IUn6mX1xnvbvaN9vyq501FlE0bJf17gr6KoaJX0E4YMAjyvrMZxF1S5Si25dr7/ZnTjprQyuiSJzpF9cpRm0Lu7WZHr24Sz25dBS2Uq726wKLdiXg13p37WypT15nyzor9aTf48h5M8/WTkun5h1H76SzNnxClPIz/eI6693VvtmWX+2ssYiiYbusd1fQVzFM/ArCAQMeUdZnPouoW6IU3b5ce7c/c9JZG1oRRaL267+8menhkCfM8pF42Cw7py+TaMO6ztQ/5L78+rdtHPbCiurAGZz1avbOGQ2cW6xaftkmv1Zrfk05XFtNrucKm7jZq+GQ9zpb691l36yaX+vd1fZrvbtsj3iVzxf7Neslw/VYx5XjXg2HvPXucm9bza/17rJtY7/4WVx+5fxa766jX3y2yu56dx1NopWaX+tZJJNoyH6tdxcZUxnW/FrvrqNh7FXZXe+uo0m0UvNrvbvIJBqyX9a7a9w/JoZKiCTiiiGemytqDalxk0+iXbz6JL+KVXLZvnfY9sl+yf2++vNJZ6t4g0OFeLFhH+vXxT5JuU9+Fu84Xp/s1w3H66P+d7H4g0OFeLFp690VN/yTn8U7jtcn+xU/FeOQH/ss3nG4Nts/1q9xRybM9MnP4h3H65P9Ch+KgcCPfRbvOFyb7x/r18AzE6X65GcRx+u/0WZbuEII1hZ48L78lQvymfXT+h/2sdc7/cJT/nF+jb0FIbZytPBWvOl8h4Qq0F1S4dfHna2bDFvvLnVwW9NPfde3+pqwj2exUN90vnvauksq/FrvrthdW++umE9v1Hp3va1oDfAsFtxdL4SWSGP/Lqnwa727jJtiLK13l2GKt7TeXZ47uz08i2XxrhfCTlFscpdU+LXeXbH7tN5dMZ/eqD/w7hr3G7VvV24Y3PWGuaHVVXI5sBz4Qw6sd9cfupmrleXAFzmw3l1fdLNXq8uBP+TAenf9oZu5WlkOfJED6931RTf7p9Xu36h9/ZD6lv9XdH2X5Nxm/mtMVnsWr/UhX9af8Ixl/zJt6I9qz+JrfkXr6fyR896zJRoi+uFVFG/1Bo5IPSt/5NpVfp3p9S/4Fe3/bK/IP3M+h56vaOOvotAfTcvidW9n8zXfmbn03PO/i1Iz4hd6jeIFpz/giNTTuaPnV/l1pte/4Fe0/7O9Il/OSbTm6DPFfOvPXeyGP77qWRQVvWcD56s333cgt3uVX2d6/Qt+Rfs/2yvyz5zP3Any0evd5fvDu1c9i1Izeh5Zn4xxvnrzNd+Z+VV+nen1L/gV7f9sr8iXMxGteeb8tHL/wrur6zdq+Ua0TLpqv+dAPLGPq/yK1sl6lMV7OkZyeXVaez1nq8U5Y/+b/OrttTdvxv0CZ8/5emIf6OcpMetRFu/1OZLLq9Pa6zlbLc4Z+9/kV2+vvXkz7hc4e87XE/tAP0+JWY+yeK/PkVxendZez9lqcc7Y/ya/envtzZtxv8DZc76e2Af6eUrMepTFe32O5PLqtPZ6zlaLc8b+N/nV22tv3oz7Bc6e8/XEPtDPU2LWoyze69PjCv2gVgiYBIcEURfXeNnnfI0fOc/Uqek/q0f3jzqIml/jZT/Th+bLzFt1apprNYBHrOF4XWtALqLGarzM9RrnjBpH6kAzYqs2cIgtvOzXerU4LM3WWqRuFhOpA82IrRrAIbbwWgPyEHW+xsu+rF3xydSp6T+rU/ePOoiaX+NlP9OH5svMW3Vqmms1gEes4Xhda0AuosZqvMz1GueMGkfqQDNiqzZwiC287Nd6tTgszdZapG4WE6kDzYitGsAhtvBaA/IQdb7Gy76sXfHJ1KnpP6tT9486iJpf42U/04fmy8xbdWqaazWAR6zheF1rQC6ixmq8zPUa54waR+pAM2KrNnCILbzs13q1OCzN1lqkbhYTqQPNiK0awCG28FoD8hB1vsbLvqxd8cnUqek/q1P3jzqIml/jZT/Th+bLzFt1apprNYBHrOF4XWtALqLGarzM9RrnjBpH6kAzYqs2cIgtvOzXerU4LM3WWqRuFhOpA82IrRrAIbbwWgPyEHW+xsu+rF3xydSp6T+rU/ePOoiaX+NlP9OH5svMW3Vqmms1gEes4Xhda0AuosYKPvSDWiRyAYtUcAUjl+0LvI7gGx2jdUR7Tb+lKYOHBs1Tq1fwcqFEDBE116g5+BFrvJn+haPWq8WP2ojAVDkEuH01XvKsNfCNjK06Ve0VERk8aiMKpeRbHAUjl+0LPKLkzfxk6ljaPW1ZvHCxnlp+wchl+wKvo6frzF60jmiv6bfqZ/DQoHlq9QpeLpSIIaLmGjUHP2KNN9O/cNR6tfhRGxGYKocAt6/GS561Br6RsVWnqr0iIoNHbUShlHyLo2Dksn2BR5S8mZ9MHUu7py2LFy7WU8svGLlsX+B19HSd2YvWEe01/Vb9DB4aNE+tXsHLhRIxRNRco+bgR6zxZvoXjlqvFj9qIwJT5RDg9tV4ybPWwDcytupUtVdEZPCojSiUkm9xFIxcti/wiJI385OpY2n3tGXxwsV6avkFI5ftC7yOnq4ze9E6or2m36qfwUOD5qnVK3i5UCKGiJpr1Bz8iDXeTP/CUevV4kdtRGCqHALcvhovedYa+EbGVp2q9oqIDB61EYVS8i2OgpHL9gUeUfJmfjJ1LO2etixeuFhPLb9g5LJ9gdfR03VmL1pHtNf0W/UzeGjQPLV6BS8XSsQQUXONmoMfscab6V84ar1a/KiNCEyVQ4DbN/WD2hoZFy0YuWxf4BEhala8qo6nv6WBvdrxGInG0i7FmlT5LfAHrB36cUxxtoZ2elUdT3RNA/tVMC8g8Ige94i9q+pEtdb0mH5tYOARo3V6cVfV8fS1NLBXOx4j0VjapViTKr8F/oC1Qz+OKc7W0E6vquOJrmlgvwrmBQQe0eMesXdVnajWmh7Trw0MPGK0Ti/uqjqevpYG9mrHYyQaS7sUa1Llt8AfsHboxzHF2Rra6VV1PNE1DexXwbyAwCN63CP2rqoT1VrTc/BLCDcw8IjROr24q+p4+loa2Ksdj5FoLO1SrEmV3wJ/wNqhH8cUZ2top1fV8UTXNLBfBfMCAo/ocY/Yu6pOVGtNz8EvIdzAwCNG6/Tirqrj6WtpYK92PEaisbRLsSZVfgv8AWuHfl6m/Of//d//HvYy/fxD9kbYY3SrFtG3oI/fL728Gsr+BceR5uCVYGfci4iGkZi3X5PP1vIrdtdwvv7C2ZKO17srdt+LV+/L9m6ZcABwtqTMBHqhvfSz3l05u6/y6y+cLXF2vbvi5+t9traU9e5q+/b2a3tYZjwvhf8lYwZ/u8OxiKv8+gteifPr3RU/f++ztaWsd1fbt7df693VNmtDXOXXeneFbsf7F03/gl/vs7W1vt5d7fv/9st4d6V+o7ZdaiyiCB9LudiWA8uB5cB0B9a7a7rFq8ByYDkwwYH17ppg6qJcDiwHpjuw3l3TLV4FlgPLgQkOrHfXBFP/COV/vT5wcLyf7stPygXnYbwa3t4Mzlo9q1esIcfTw9gaTtb/1TZR5EQs/Fv+xBJvdegXtTB/Axo6gEc+52Fc+tkuHgbYnlj4t8RZ/NBk9Yo1YCR6OoD3MKWf7eJhuF52PItX67B6xRqwLS3Ae7j17vpxE17JrOaXrK93196vmlfwUfzyMD9sfddyP7bUWfxQhbPBdbAGjETe53UZA+9hZG+2X1rXjLnVK9ZQz/NBMMB7uPXu+nETXsms5hfO1k/G+Gvhd+qPrIh+0SvmXAN7vIYx8B6m9LNdPAz4emLh3xJn8UOT1SvWgJHo6QDew5R+touH4XrZ8SxercPqFWvAtrQA7+HWu+vHTXgls5pfsr7+3LX3q+YVfJz95wi5b56GH7XnrjgbXAdrzMz7vC5j4D2M7M32S+uaMbd6xRrqeT4IBngPt95dP27CK5nV/MLZ+skYfy38Tv2RFdEvesWca2CP1zAG3sOUfraLhan+Ri2IUciLFrGHf9qe1au1NkK3eDXTr5nc6H+kNy2u2f3M5odnElu9MpbHnMdjxmB8ZT+oOSuiV0SuY61h39sDBvHT/bJ6tdbQ75koXs30ayY3+h7pTYtrdj+z+eGZxFavjOUx5/GYMRhf2Q9qzoroFZHrWGvY9/aAQfx0v6xerTX0eyaKVzP9msmNvkd60+Ka3c9sfngmsdUrY3nMeTxmDMZX9oOasyJ6ReQ61hr2vT1gED/dL6tXaw39noni1Uy/ZnKj75HetLhm9zObH55JbPXKWB5zHo8Zg/GV/aDmrIheEbmOtYZ9bw8YxE/3y+rVWkO/Z6J4NdOvmdzoe6Q3La5aP9Uf1HKCkLcKSFMRDJpvxV6ubF4Nz/23tMo+44WzxstcEQzjvXEvVzaP8dwzjz2d1p5wMm8vxsqz1iL1rDxZa+nkPF3H8yizF9EQwbBWb9zLpfv3asiexsMTRM631rDPe5oTGB17e9Q8Mu/lyubV8Ny/pU+vMV44a7ycF8Ew3hv3cmXzGM8989jTae0JJ/P2Yqw8ay1Sz8qTtZZOztN1PI8yexENEQxr9ca9XLp/r4bsaTw8QeR8aw37vKc5gdGxt0fNI/NermxeDc/9W/r0GuOFs8bLeREM471xL1c2j/HcM489ndaecDJvL8bKs9Yi9aw8WWvp5Dxdx/MosxfREMGwVm/cy6X792rInsbDE0TOt9awz3uaExgde3vUPDLv5crm1fDcv6VPrzFeOGu8nBfBMN4b93Jl8xjPPfPY02ntCSfz9mKsPGstUs/Kk7WWTs7TdTyPMnsRDREMa/XGvVy6f6+G7Gk8PEHkfGsN+7ynOYHRsbdHzSPzXq5sXg3P/Vv69BrjhbPGy3kRDOO9cS9XNo/x3DOPPZ3WnnAybwTj/tUHIqYQvli9X5FHYYlnmhDRvVzZPOClpqXZWhNs7aP9MklfyagtMVtH1+/lyuYBL/Utzdaa1oo5sIUTxFgE6GERMiVmpWq8nrdaBR7/EMOnPIutvrAPb2WOXrFXW+N9PRaOwvki/hS/omdrtl/mTXiZjNpRrfre8LyXK5sHvNQ+e76QXzhBjEVu7kFjyJSYlarxet5qE/j17mo59bMvfvHZWu8u3zftl3fAzzwHWkUvVzYPeKmPZ4m1WGu8z2NgCyeIscjAB40hU2JWqsbreatN4Ne7q+XUz774xWdrvbt837Rf3gE/8xxoFb1c2TzgpT6eJdZirfE+j4EtnCDGIgMfNIZMiVmpGq/nrTaBX++ullM/++IXn6317vJ90355B/zMc6BV9HJl84CX+niWWIu1xvs8BrZwghiLDKyMq79Ra+K3Aqhh7n/Q4hV9RGok7lXT3ZFcuhj3MrQOEdNQl3/UvNW/9MG9tPBdzW0FuAZzjKzXy5XJq/XBPZ0eO36d5r6Y4Aq/IjUy97hl0UguXYt7GVqHiGmoyz9q3upf+uBeWviu5rYCXIM5Rtbr5crk1frgnk6PHb9Oc19McIVfkRqZe9yyaCSXrsW9DK1DxDTU5R81b/UvfXAvLXxXc1sBrsEcI+v1cmXyan1wT6fHjl+nuS8muMKvSI3MPW5ZNJJL1+JehtYhYhrq8o+at/qXPriXFr6rua0A12COkfV6uTJ5tT64p9Njx6/T3BcTXOFXpEbmHrcsGsmla3EvQ+sQMQ11+cP88Bu1nGwK3ADWf2kwsYdyvwtenSwXWKN5+C9M8mPyaA5q6Ig+TB7xShKMOiZek9Pcq5PlAm0kr9Sl4pEc8FuRqI7b26bsy1/YrT/Gkobs5l6dLBeII3mlbmniJyuSA34d0YOsmzwbwHoWq3hd4DVv1TFrV7h4OZJXastlA0fwzK/HrT7kcFl+Zet6dbJc6CGat95dP45F/Cr3CTdrS4jk4H5YkaiO29um7K9314818Epmpu/iV+WemPgf2sO1VSfDxeSRvFJbLpU+mK81bvWx3l17B+GXeZ+2zbJv3BcTv6fezbw6WS4QR/JKXSoeyQG/FYnquL1tyv56d/1YA69kZvoufm0b1p619sN6vLbqZLiYPZJXastlA0fwzK/HrT7Wu2vvGPwyfd82y75xX0z8nno38+pkuUAcySt1qXgkB/xWJKrj9rYp++vd9WMNvJKZ6bv4tW1Ye9baD+vx2qqT4WL2SF6pLZcNHMEzvx63+ljvrr1j8Mv0fdss+8Z9MfF76t3Mq5PlAnEkr9Sl4pEc8FuRqI7b26bsR95dud+oPZZaKxc7gBt/cdlSbtSh3Wk3SM/2eDZ/p693sokwWutlq+c9otm6vLWzHIADdx7Vs8+iqd0gNXEwIBDP5gdKtCGbCKO1dl4W8Yhms6IX/hsduPOonn0WTe0GqYlL3Oyz+YlSdegmwmitju/deUSzveJX3jc5cOdRPfssmtoNUhOXuMln8xOl6tBNhNFaHd+784hme8WvvG9y4M6jevZZNLUbpCZO3eTDb9QKjySCr8wxeSWr6ZsSBWv7b+CLn+vw3vTxS2BEZ0uL5pC5/Bcr/qhp2cp4JQmF9xULwUUXq5/e0lYPFr+s6U/GL6uO5ps1Rz9WD9maVh/yX1/ghfDV6gBT22ctVh3enzkutbdLRGdLh+4D3JxXq/MpfsGoWh/ca2usOaJ+ZbwSDYX3FVuaRu5b/fTyWz1Y/LKmPxm/rDqab9Yc/Vg9ZGtafax3V91F7RfuBWfU7sunnK/17uK76Y+t++9n1Hf12RKkxW+dr085W+jH6qHujL1TuF4eAbHeXXDiGLVfuBeMrN2XTzlf693Fd9MfW/ffz6jv6rMlSIvfOl+fcrbQj9VD3Rl7p3C9PAJivbvgxDFqv3AvGFm7L59yvta7i++mP7buv59R39VnS5AWv3W+9Nk6/KAWZFzeIuJ9GYNYr3vzCK+X37s3u26GX3yL4qO4Xl9qeSPrWlzWGmvhsxX1q8XJ/KPHI2tbXNYa98B+8bo3bnF6uWf3RtbWXHpuaf0kvyL9WD1G1zL80WdRamd4o1ojuJF1LS5rjXXx2Yr61eJk/tHjkbUtLmuNe2C/eN0btzi93LN7I2trLj23tH6SX5F+rB6jaxn+6LMotTO8Ua0R3Mi6Fpe1xrr4bEX9anEy/+jxyNoWl7XGPbBfvO6NW5xe7tm9kbU1l55bWj/Jr0g/Vo/RtQx/9FmU2hneqNYIbmRdi8taY118tqJ+tTiZf/R4ZG2Ly1rjHtgvXvfGLU4v9+zeyNqaS88trZ/kV6Qfq8foWoY/+ixK7QxvVGsEN7KuxWWtsS4+W/Br2F99gOKIUliKcFEWs8Y/Diy/2ieBPeLxOl+2d+wRI9azyG78juEXouyss/XrT220/Ko587vOHvF4na9fj3jEHvH6enexG79j+IUoO+ts/fpTGy2/as78rrNHPF7n69cjHrFHvL7eXezG7xh+IcrOOlu//tRGy6+aM7/r7BGP1/n69YhH7BGvr3cXu/E7hl+IsrPO1q8/tdHyq+bM7zp7hPGwH9RKGZC+S75O7nrY3468B+IV+1U8Wn69/dEDzy+NXfOfs2Wdr/Us2qeDvSqI9SzaRm2r3rO4ztfRNs+vI3qt1PxaZ8s+G+vdZftirdbOlvxfWet8HR3z/Dqi10rNr3W27LOx3l22L9Zq7Wytd5fllv/nVDvju1dr52u9u+xzsd5dti/Wau1srXeX5dbx3TX07QA7OwAAI/tJREFUB7WHkoeTfECshZcDbBWPl0ENB5ZZDYPWdpcD61yFbWOreBwm+FbgMutb7/zcvte5CvvLVvE4TPCtwGXWt975uX2vcxX2l63icZjgW4HLrG+983P7Xucq7C9bxeMwwZcBzb+jtscD/q8uML5ETHpIB+dA4xMkWVrkL/1+ygf6RM8TZEEPtJSIyQNM0/rulqT1iFXyj9w9xTKt706/oEU0wJ8SMblT3Ks2ND5BkqVlvbvqh0T7tc5W3SvZsfxa7y7bM3glu3g3rPNleyWr8Ateydp6d4kL9kf7tc6W7RNWLb/Wuwvu7CO8klU8j+t87T3iGfyCV8U3njD4hjH0FV031NcloQcWrbOlHdrPLb/Wu2vvEWbwSubrfMGVeoRf8Kr4xpN66iU70Fd0XVLRLwI9sGjub9T6Wi7dReOXFg0Ue6qugPQFMRx4wv2sacBDb8i+dIn18fhSER9U7KkePVXXB93aR0l9wv2saVjvrkcdlbCY2v0ME0wCPlXXpHb/PO0T7mdNw3p3febxq93Pu7t5qq67ffnU+k+4nzUN6931maeqdj/v7uapuu72pVV/2A9q8UAjtgo/YV8Ozb/tcsfhgU+IT/CjpaH41QKt/bcDd/mFM4X4FvTwwfIrfoOKV9tF4tUfnCvEq+v31LvrbPVofULOXX7hTCE+wYuIhuVXxKUfTPFqu0i8+oNzhXh1/Z56d52tHq1PyLnLL5wpxCd4EdGw/Iq49IMpXm0XiVd/cK4Qr67fU++us9Wj9Qk5d/mFM4X4BC8iGpZfEZd+MMWr7SLx6g/OFeLV9Xvq3XW2LK3DflAr5J90E4oZOLGIlkMT1z7Sr82rO+wSrz7Jr+KRXG70a+LRHU7Nfg0nDxB+0tkq7RTDthFioMeRkI/068Zn8ZP84mfxjuP1SV7JM8V+jXzGolyf5tf7nXXH4dpM/Ui/Nq/usEu8+iS/+Fm8y6/oc/sEHPt1h55POlvFHxwqxItN+0i/Nq/usGu9u3KH89POVjlTcrnjcG1lP82vt0/Lr9iD8Tpbd9il311Df1Ab6/4e1Mc9VPfYtKqedGCds7aB7BGP25nfiVgefed9v7rrdc7ajrNHPG5nfidiefSd9/3qrtc5azvOHvG4nfmdiOXRd973q7te56ztOHvE43bmdyKWR3/rvg/7x8Q+wZZ1eON3aXkV90qQy6/lV86BHHqdr7hfy6u4V4Jcfi2/cg7k0Ot8xf1aXsW9EuTya/mVcyCHXucr7tfyKu6VIJdfy6+cAzn0Ol9xv57u1df8Rq15y3B3EE3QWnw7sHx6W9EaLKtaDlX2l3EVY9QyfEJU22uqHFg+KUPq02VV3Rt3Zxnn2vPehE+I7401MB1YPpm2WIvLKsuVwNoyLmDSBoFPiLGs70Utn8L3flkVtmoPXMbt/ajN4BNiDbfWfxx4kE9f/YPach+2y4Pux6MfkeVX7vb8R87WOl8h09bZCtn0Bi2/3laEBsuvkE1v0Hp3va1oDtbZalq0Ayy/dnY0J8uvpkU7wHp37exwJ+tsufYcNpdfB0vcheWXa89hc727DpZUF9bZqlpjbiy/TFuqi0/y66t/UCt3qNyM6q1aG9qB5Zd2ZM1HObDOVs7J5dfyK+fAQs9yYD2LOWeXX8uvnAMLPcuB9SzmnF1+Lb9yDiz0LAfWs5hzdvn1mX6FflD7+sfPch0OQmdr3/EvtOlWs5p1/pl5tvZT/DrTc29uj1fLr7jbWX/jzHHknRqytZ9ytu7S8al+xU/jOGSPV3fdV+76Lg2f6FdWM/t8dpytfdd95T6zmjn37Dhb+yl+ne27J7/Hq+VX3Omsv3HmOPJODdnaTzlbd+n4VL/ip3Ecsseru+4rd32Xhk/0K6uZfT47zta+675yn1nNnHt2nK39FL+yfYd+UAvSq5ss9RJ3AvoQofvKeHvtD/XrFt9eXmVrZ/Ejzx9qI47k9rhKPbls30jtCMarN3rvaj2lnlyChQFDHN1/hO/22iIgKAIwxEh/ozGojTia3+WTots3WzuLdzUkN1EbMZneDS/15LJ9I7UjmG4xHYlX6yn15BIsDBhiR4unU26vLQKCIgBDPN18BwFqI3ZQ9KdI0e2brZ3F9ws8ZqI24hExZ6XUk8v2jdSOYOYotVmv1lPqySVYGDBEu4u5q7fXFgFBEYAhznXGZkdtRBs1aVWKbt9s7Sx+pHrURhzJ7XGVenLZvpHaEYxXb/Te1XpKPbkECwOGOLr/CN/ttUVAUARgiJH+RmNQGzHKn/pB7W2/Nh0sHIRFvXFxNaOv1FAV+AgRe3U1v/aoi2edPnWmpZpr+XWFBhZc6r2KRmpHMMw/e3ybnmDhIGyITbWzdaWGaiOPELFXV/Nrj7p41ulTZ1qquZZfV2hgwaXeq2ikdgTD/LPHt+kJFg7ChthUO1tXaqg28ggRe3U1v/aoi2edPnWmpZpr+XWFBhZc6r2KRmpHMMw/e3ybnmDhIGyITbWzdaWGaiOPELFXV/Nrj7p41ulTZ1qquZZfV2hgwaXeq2ikdgTD/LPHt+kJFg7ChthUO1tXaqg28ggRe3U1v/ao+Oy/Ai2kL2b5y6z1x1h6QyDIw7zByUHhTBIn4SFFukf49W8rZtWz1lBIc2F9RCx1veKqSAKqMutT9CcI8Ht+AWMxWlwWrnet1PYEKOIEVGXWp1aP/16L1vnyNFhc9cr5nSf6VXp+Nb7eXcd7ijOBcwO/rLMl2cAdmX7/w6WHsfIia088W6Lb88vzAb4Lh4eT/Z7PY/16NW6dL8+Hb/QLZ0vu/3p3HZ8CnAmcG/hlna3i4ZHivaK53hsDBo99FqW3rXHLL3hqtQ+vZM/DWbmRtcf69Wp8+XW8i/pMlPlrcb276n7h+YFf1tmSbOCOTOvPXdobPWfP9DnlvRHjUtsToIokoCqzPrV6XP83Y9wvPIuSsd5dR99wvnB24dd6d9W9Kmfpte35BU+PTL/veeYC7vAbtbhJAERjb16U/5G4r2z6kXdiiVoORP8/IA5OfeVj/JVNH279WlgOPMKB3sexN+8RTfeK+Mqme81aecuBuQ70Po69eXO7mcz+lU1P9nTRLwc6Heh9HHvzOmU+I+0rm36G9eU3auWnvPLTcvl4P/H9QeyvWfw++94ZnzuvD70n89p/XWh1pLla+Cftwy+vh+LNJpoxZW278Fqkr5KnuCJ5T8F0+7U1LrnLr+Od1J6UM/Ja1HvH7P1KFr/PvneGsyUqvD70nszXu8u+d8Ub5WevXxaXXfWZqzhf0kftY/Uov6Gw3l22Y9rL4t9rUe/ZDL+rWfxv5v0jnC1R4vWh92S+3l32/SveKD97/bK47KrPXMX5kj5qH6vH9e6quXV8TnG2JMPz2WLM4i2Ou9ZwtqS+14fek/l6d9l3rXij/Oz1y+Kyqz5zFedL+qh9rB7Xu6vm1vE5xdmSDM9nizGLtzjuWsPZkvpeH3pP5uvdZd+14o3ys9cviwtV379RKyD5rk/MgW/2ih94yy3LG2vNytVrvXma5+o5e8RjS4fVo7Vm5eq13jzNc/W85ZGnR3r+1L69vmbtfbNXrXNmeWOtRe5Nb16EeyaGPeKxVdPq0VqzcvVab57muXre8sjTIz1/at9eX7P2vtmr1jmzvLHWIvemNy/CPRPDHvHYqmn1aK1ZuXqtN0/zXD1veeTpkZ4/tW+vr1l73+xV65xZ3lhrkXvTmxfhnolhj3hs1bR6tNasXL3Wm6d5rp63PPL0SM+f2rfX16y9b/aqdc4sb6y1yL2p5b1/UBshsTDSRKsRK2/EWrb2XTq516xmzj07zvafxZ/VZ+UvvyxX6mt33rNM7TvvK9y7U0O2dsZb9Dc6ZjWPrJ/tP4sfqRVcyy84EYt33rNM7TvvK5y8U0O2dsZb9Dc6ZjWPrJ/tP4sfqRVcyy84EYt33rNM7TvvK5y8U0O2dsZb9Dc6ZjWPrJ/tP4sfqRVcyy84EYt33rNM7TvvK5y8U0O2dsZb9Dc6ZjWPrJ/tP4sfqRVcNb9O/6C2/JR2Y39Ck2jWitCHaGFmr5Xactm+V+tAPcRWr8AhtvAz9kttudwgAiURW/0Bh9jCz9gvf6H8JuAODaiJOKO/4Zwidvs+XTP0IQ73IUBYastl+16tA/UQW3KBQ2zhZ+yX2nK5QQRKIrb6Aw6xhZ+xv95dSVflZm3fO+9ZRDH0IUZyRmNKbbls36t1oB5iqzfgEFv4GfultlxuEIGSiK3+gENs4Wfsr3dX0lW5Wdv3znsWUQx9iJGc0ZhSWy7b92odqIfY6g04xBZ+xn6pLZcbRKAkYqs/4BBb+Bn7692VdFVu1va9855FFEMfYiRnNKbUlsv2vVoH6iG2egMOsYWfsV9qy8UQcf4HtbXf1Z3RyQlOllnx4gR7LPWtYRu8x7HUW1Har8u1X15wrN2Xyb+sUN2frATjnVQnH72TFTu6fpCPZepnMUhxGvbWsA3e49Os8wm0X5drv7zgWE8vk39Zobo/WQnr3VX3EjvsqX4WgZkd3xq2wXs8u+gAfu3X5dovLzjANKK4TP5lhag5NcxKWO8uZaAxZU/1s2jApyy9NWyD93hKpbGk2q/LtV9ecKx/l8m/rFDdn6yE9e6qe4kd9lQ/i8DMjm8N2+A9nl10AL/263LtRsHyj4md6a1wGsRnODkXD6VVwlrjXD0WPPiwl+VAXm+Uv/R71od702X0vKUBeOaUHKy38kfsl1oTC3Jvuoyet/oBXjg93hbPmf2iAULOEFVy0ZdVwlqr0JRlwYMPMcvh8Uf2Sr2JRb2+smUFDz70luVAXm9c7664c+XeTLxBfBZ0GT1vqQZeOD3eFs+Z/aIBQs4QVXLRl1XCWqvQlGXBgw8xy+HxR/ZKvYlFvb6yZQUPPvSW5UBeb1zvrrhz5d5MvEF8FnQZPW+pBl44Pd4Wz5n9ogFCzhBVctGXVcJaq9CUZcGDDzHL4fFH9kq9iUW9vrJlBQ8+9JblQF5vXO+uuHPl3ky8QXwWdBk9b6kGXjg93hbPmf2iAULOEFVy0ZdVwlqr0JRlwYMPMcvh8Uf2Sr2JRb2+smUFDz70luVAXm9c7664c+XeVG7Q+d+ojetII/UhSxMYCRUfDORaWg6cc+CvnrVRz+Vf9UdOzSiP+AT+Zb+4zzW+34F11vx78Jf9We8u/96v3Wc78FefzVHP5V/1R07lKI/4hP9lv7jPNb7fgXXW/Hvwl/1Z7y7/3n/z7vsHtXJIRh8Uj9Pbww3BQ4mI9Uj0+Jmvt2ePP6LPwnic3h640Bci1iOxxq+5BJf9FO7t0pPr1Sq8FYC3hxT0hoj1SKz1wlwRDVat3jyLi9dqmgUTqYneEJnbG3vczOXhevm9PG/P0+LtgRN9IWI9Ej1+5hNcz8fj7+GTHI/T20M99IWI9Uis8WsuwWU/hXu79OR6tQpvBeDtIQW9IWI9Emu9MFdEg1WrN8/i4rWaZsFEanJvzNsae9zM6eG8Gr15vZyReugL0aul9zx+5hNcz8fj7+GTHI/T20M99IWI9Uis8WsuwWU/hXu79OR6tQpvBeDtIQW9IWI9Emu9MFdEg1WrN8/i4rWaZsFEaqI3ROb2xh43c3m4Xn4vz9vztHh74ERfiFiPRI+f+QTX8/H4e/gkx+P09lAPfSFiPRJr/JpLcNlP4d4uPblercJbAXh7SEFviFiPxFovzBXRYNXqzbO4eK2mWTCRmtwb87bGHjdzejivRm9eL2ekHvpC9GrpPY+f+QTX8/H4e/gkx+P09lAPfSFiPRJr/JpLcNlP4d4uPbm1WuUHtYWwsI8lR1FPsLcn+do4cHqROXnMOcxbwzCexwUvl2wik6gxU/FYwZoluS+dW5t79SRHOJm3hT/UQQLiAZBf8Ki8PV2J+9J7tTn4ETVOc9ZwOu89l4Ttm857ExwH4EJkhLXG+zzWvfFea1yrc5pTiLdvjb+ly9v3OL094ezpizl5zBqZt4ZhPI8LXi7ZRCZRY6bisYI1S3JfOrc29+pJjnAybwt/qIMExAMgv+BReXu6Evel92pz8CNqnOas4XTeey4J2zed9yY4DsCFyAhrjfd5rHvjvda4Vuc0pxBv3xp/S5e373F6e8LZ0xdz8pg1Mm8Nw3geF7xcsolMosZMxWMFa5bkvnRube7VkxzhZN4W/lAHCYgHQH7Bo/L2dCXuS+/V5uBH1DjNWcPpvPdcErZvOu9NcByAC5ER1hrv81j3xnutca3OaU4h3r41/pYub9/j9PaEs6cv5uQxa2TeGobxPC54uWQTmUSNmYrHCtYsyX3p3Nrcqyc5wsm8LfyhDhIQD4D8gkfl7elK3Jfeq83Bj6hxmrOG03nvuSRs33Tem+A4ABciI6w13uex7o33WuNandOcQrx9a/wtXd6+x+ntCWdPX8zJY9bIvDUM43lc8HLJJjKJGjMVjxWsWZL70rm1uVdPcoSTeVv4Qx0kIB4A+YXyg9oi6qWOBebp8hm1egN7rIpCbcQqsLbRnVgjbK9bJcWrK/yCOksD9syIBEQTNG6xVeYKv1gDj0NdSsL2TeeFyI+gVp0rzlZLw1H1z0rJk8v27eWocbfWa/Wu9KumoaX9crN+btFB1hXPIhdN+4UERCabMG6VucIv1sDjULuSsH3TeSHyI6hV58pn8ajOXyna5bJ9W334TPndWr0r/appaHbTndhkrgKsklc8iyzI0sD7hzESEA+AsQutMlf4xRp4HOpUErZvOi9EfgS16lz5LB7V+StFu1y2b6sPnym/W6t3pV81Dc1uuhObzFWAVfKKZ5EFWRp4/zBGAuIBMHahVeYKv1gDj0OdSsL2TeeFyI+gVp0rn8WjOn+laJfL9m314TPld2v1rvSrpqHZTXdik7kKsEpe8SyyIEsD7x/GSEA8APIL739MbCBnSIVXrxza7fJvA3m4UKEGqIe/5PQkNrR4226511M+2y9XgyP+SX7hbIncR/vl+Dljq3Zv4ZfEmX8xuPRU09DqtzevxVvb9+q9/dpAHq7GnVnv4S85PYkZYQrrliuGPfxZdBtQzQ6Y1srhbEmJ9e76Nbrl13p3tb0qZ+p1mX22pEztnsle7VNyehJrhIF1t9x6dx0crPm13l0Hq8pCy6/17vr1reaVIHC+1rsr5hd+s2e2X949+1V6HJW83uQjXWilVg5nS0ge7Veoy3Ggll/r3fXrdc0rQeB8zT5bUsvTIfvWp+T0JFpkwTW3XDHs4c+i20DQBIK9/45aWvv4IXvE4yc3xjp5HNKcTtiznkzfk10069XMeTy+SPbnlllmXXLv2GYeX1K8swjr5HGILp2wZz2Zvie7aNarmfN4fJHszy2zzLrk3rHNPL6keGcR1snjEF06Yc96Mn1PdtGsVzPn8fgi2Z9bZpl1yb1jm3l8SfHOIqyTxyG6dMKe9WT6nuyiWa9mzuPxRbI/t8wy65J7xzbz+JLinUVYJ49DdOmEPevJ9D3ZRbP3b9T+K//5o+8n7jWtvYZIXu2/Lrx+mF5KevzeXk1vdB3/BUT+88TIOr1cJa+SvPw63lXvN0PhV8XO5rk7VsuvzDhfXj+eQsmrPYuS9wi/RMQmtLdH6UN/erk8v+CV1PL4vT2tMzufcbZa/XgaS6+VhpdfR+fWu+voSW1FjtV6d9XcOa57fq1n0far9iJffhl+Vd7zgoRfDqRm9bFQ50rRIJdNhKcjQ9/LI3nr3RV32vMLZ0vYvPvh7cWV2MgZZ6vVj63kZ7X0Wml4+XV0bv256/+3dyU4kqQw8P+/XsxWMJFOsM2VdTQjdYGvcDggc6Xa1sxdk5ZHrtV5d7XUufstvc6zWNer9SL/Vb3+/WNiokeakge9S/Scp/HfkOcIRDp9ilgRrienS4G3Hu1bm99laj2Ln0CzcEibsr+P8KinpdejJLxmnyKWx/PEuxV469G+tfldqtaz+Ak0C4e0Kfv7CI96Wno9SsJr9ilieTxPvFuBtx7tW5vfpWo9i59As3BIm7K/j/Cop6XXoyS8Zp8ilsfzxLsVeOvRvrX5XarWs/gJNAuHtCn7+wiPelp6PUrCa/YpYnk8fzCef6NWLon8HxD5M3Nh9Dl6WJLv5WRS9CH5vXW9+dQubzEXuGYOMHRy0AYmp1uQyLdyGAv7zDUZ0brRPugnq8bIHNJHlANjYQ9M2LJaeMi3chhL76N1s32kr2Bc+r2Mi08TdGzwQpqHdeOAQmMVzN663nzdHnNhnszhZcCnayI2cJHrYY3MkbmmBh42OMg60kfXi42emQMMTuzYa60YvwaD/N62mWsCjNaN9mHOGiNzSB9RDoyFPTBhy2rhId/KYSy9j9bN9pG+gnHp9zIuPk3QscELaR7WjQMKjVUwe+t683V7zIV5MoeXAZ+uidjARa6HNTJH5poaeNjgIOtIH10vNnpmDjA4sWOvtWL8Ggzye9tmrgkwWjfahzlrjMwhfUQ5MBb2wIQtq4WHfCuHsfQ+WjfbR/oKxqXfy7j4NEHHBi+keVg3Dig0VsHsrevN1+0xF+bJHF4GfLomYgMXuR7WyByZa2rgYYODrCN9dL3Y6Jk5wODEjr3WivFrMMjvbZu5JsBo3Wgf5qwxMof0EeXAWNgDE7asFh7yrRzG0vto3Wwf6SsYl34v4+LTBB0bvJDmYd04oNBYBbO3rjdft8dcmCdzeBnw6ZqIDVzkelgjc2SuqYGHDQ6yjvTR9WKjZ+YAgxM79lorxq/BIL+3beaaAKN1o32Ys8bIHNJHlANjYQ9M2OXvqBXQZcDSJf3oZmgqK2JYOebte3gCH6uHreOtulm9Ln2kSavRJTGcdqnq0QuFQTpIL2urboRDAeVNQKsWB4Zp7XvOdaYP+gMDq/h7OACHV8bK9yo5Lj5OTnvEsKqwafacK/CxmsBOkDGOXnWxWCPOmNWLsXC/Lr6G0eLTSM/unvsFnJE+UtuqG+EALpdVGrSavBKd8AVOGz3nOtMHfYGBVfw9HIDDK2Phbl18nJz2iGFVYdPsOVfgYzWBnSBjHL3qYrFGnDGrF2Phfl18DaPFp5Ge3T33CzgjfaS2VTfCAVwuqzRoNXklOuELnDZ6znWmD/oCA6v4ezgAh1fGwt26+Dg57RHDqsKm2XOuwMdqAjtBxjh61cVijThjVi/Gwv26+BpGi08jPbt77hdwRvpIbatuhAO4XFZp0GrySnTCFzht9JzrTB/0BQZW8fdwAA6vjIW7dfFxctojhlWFTbPnXIGP1QR2goxx9KqLxRpxxqxejIX7dfE1jBafRnp299wv4Iz0kdpW3QgHcLms0iD9lC9qL8FZ43WqEbJeTkuIXoqtPha+Fevt7+a3CKpCL20VZ6+PopXNVb1r2MUXIBZIKXAznHv6lIa0melNMLfthdfLuPhUhRVTqc0Xk86r2T19avWs1yxWDT/7BDj9RPC9HObb7BcItPpY+FYs0LIvpUVQoXhpqzh7fRStbK7qXcMuvgCxQEqBm+Hc06c0pM1Mb4K5bS+8XsbFpyqsmEo97y4SxNNt1fm2+lj4VoxGWLNtEVToXtoqzl4fRSubq3rXsIsvQCyQUuBmOPf0KQ1pM9ObYG7bC6+XcfGpCiumUs+7iwTxdFt1vq0+Fr4VoxHWbFsEFbqXtoqz10fRyuaq3jXs4gsQC6QUuBnOPX1KQ9rM9CaY2/bC62VcfKrCiqnU8+4iQTzdVp1vq4+Fb8VohDXbFkGF7qWt4uz1UbSyuap3Dbv4XsTKPyZWAoOb3kEj+VmI9CGr9Zd5W5StPhA64ysQxMRtYaiysHnBvBh1iEDK/y/ERNz6i7zr6P+8Vh9LEyv2D318d+F1MeqYgZTH9Kpx+Uq9XqR33C9PDy9evwUxb+18rMpIfuabPmQ97y5Lzf9jRa8kbkTfGqJVl/FfRTrPitX69Pou/S5GHSmQct5dJF1Ir9chn3cXCdfYlmcxxc+7qyESuYte6SJG7iKVlq1VZ72frFgBn9hceF2MOmgg5by7SLqQXq9DPu8uEq6xLc9iip93V0Mkche90kWM3EUqLVurzno/WbECPrG58LoYddBAynl3kXQhvV6HfN5dJFxjW57FFD/vroZI5C56pYsYuYtUWrZWnfV+smIFfGJz4ZWMPb9RO0HwlB4Ffk0Bfqh/bbYd8xy9dqh6MI8C/QqcZ7FPs6NXn14n+yiwS4HzLPYpe/Tq0+tkHwV2KXCexT5lj159ep3s71Lgo7+ozd8qp4/R/7vgHQV/ay0POj/sEkNcxzzcd8Uz3/QB3qt5MK7WxIqt5rEKL3NOH8x9FbbgMC7frVpMx1fyWIWVn8NNeolWPXqtmmkXTp5FtOKhFjZj2NqziLiOLaSwFCrzTR/gvRQ8gTGu1sSKreaxCi9zTh/MfRW24DCufjfpmI6v5LEK67y74krm800f590V06zoFUvvzrKeNyvW3eihgqf14rG+Ui8hnX6YO880s39BFwj9LueeOlaKPmiT+aaP8+6KHUrRK5benaXvD98hK9bd6KGCp/Xisb5SLyGdfpg7zzSzf0EXCL5b4uSeOlaKPmiT+aaP8+6KHUrRK5benaXvD98hK9bdKFDw0V/UCn8WJDBPd8pu/G5CkwW757HwrdjkWNvKd3NmfH7QZSCObRtwMfBuzoxv6aVji8dcAsezLAFUILvxVbvt5u55LHwrtn3wwQa7OTO+ft44Nkj/8bLdnBnf0kvHHhci0JBnCaR3p+zG7yY0WbB7Hgvfik2Ota18N2fG188bx7YNuBh4N2fGt/TSscVjLoHjWZYAKpDd+KrddnP3PBa+Fds++GCD3ZwZXz9vHBuk/3jZbs6Mb+mlY48LEWjIswTSu1N243cTmizYPY+Fb8Umx7qVf/wXtTfGjmPkYbQEt2IOla8Iz+hV06bm+wohAiRFq116/aJuo3rhKCxNrBjqv22duVu1WX9RI55zRq+aNjUf9/vm/eizCE2wsgbwYeXYt+9H9cLcliZWDPXfts48i7VZf1EjnnNGr5o2NR/3++b96LMITbCyBvBh5di370f1wtyWJlYM9d+2zjyLtVl/USOec0avmjY1H/f75v3oswhNsLIG8GHl2LfvR/XC3JYmVgz137bOPIu1WX9RI55zRq+aNjUf91u1X/aPia0iNIODQ5C1V0Ar34rN8H137dFr7ATO/fJ1w93yM+8Z1vNmxe5I3+OBXuduxc7s6BXTSWed+6UVudu4W/eI77HeT1bMR/7cDOh17lbsjI5eMZ101rlfWpG7jbt1j/ge6/1kxXzkz82AXuduxc7o6BXTSWed+6UVudu4W/eI77HeT1bMR/7cDOh17lbsjL5Zr5/6jdpffSBj1/BkPaXAuWe+0kcjXyPOOHqxGme/S4Fzz3xlj0a+Rpxx9GI1zn6XAuee+coejXyNOOPoxWqc/S4Fzj3zlT0a+RpxxtGL1fjt/dt/oxbfcovMKy7eKAZ4jNY/dU3Ac4Veo7Ou5LBbt5Vc/5Jeo7PyeY5i4MxG65nDzj14So8VXEcxwGO0fqdGjA2eK/QanXUlB55tx34l17+k1+isfIajGDiz0XrmsHMPntJjBddRDPAYrd+pEWOD5wq9RmddyYFn27FfyfUv6TU6K5/hKAbObLSeOezcg6f0WMF1FAM8Rut3asTY4LlCr9FZV3Lg2XbsV3L9S3qNzspnOIqBMxutZw479+ApPVZwHcUAj9H6nRoxNniu0Gt01pUceLae/U/9Rm3P4JzLB8H+sz8K/FUF3vVMcF/e/9Vz8OY+GnkKnfhfU+BdzwT35f1f0z8679EoqtTJ+ysKvOuZ4L68/yu69855NOpV7OT/ugLveia4L+9/Xe/R+Y5Go8q9ry70Ra0crD7cqM8bjb/lrmF69bNxnou5zODW5tA+bUf7McdRjGgvnaf7MRed22NrXG0LVs0X6cEcRzEifWo5uh9zqeVHfBpTaqK+CD5zFNwn/3A/4cFcRnlEtanleT2Z30i9h+/FtV5efiRem0P7tB3BlZx36qU5M5co/1qextW21NR8NSztY46jGBozaut+zCWKofM0psSjPo1Vs5mj4D75h/sJD+YyyiOqTS3P68n8Ruo9fC+u9fLyI/HaHNqn7Qiu5LxTL82ZuUT51/I0rralpuarYWkfcxzF0JhRW/djLlEMnacxJR71aayazRwF98k/3E94MJdRHlFtanleT+Y3Uu/he3Gtl5cfidfm0D5tR3Al5516ac7MJcq/lqdxtS01NV8NS/uY4yiGxozauh9ziWLoPI0p8ahPY9Vs5ii4T/7hfsKDuYzyiGpTy/N6Mr+Reg/fi2u9vPxIvDaH9mk7gis579RLc2YuUf61PI2rbanRvv8Aqle/3qYFt0IAAAAASUVORK5CYII=",
              "mediaType": "image/png"
            }
          }
        },
        {
          "display": "see this pic what's wrong with ithttps://www.dropbox.com/scl/fi/vcr8tamm7iwplqkzc7zrz/Screenshot-2025-07-08-at-09.15.32.png?rlkey=p5ooo2ss1k11ev2s8rx5u43wb&dl=0",
          "pastedContents": {}
        },
        {
          "display": "go back through the commits retroactively;  you may have to do diffs to see what's really there.  then add changelog items to the bottom (honoring our same concepts from `make changes`)",
          "pastedContents": {}
        },
        {
          "display": "why aren't there items in the changelog from before june 26th?",
          "pastedContents": {}
        },
        {
          "display": "commit and deploy",
          "pastedContents": {}
        },
        {
          "display": "make it yesterday evening tho",
          "pastedContents": {}
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "mention which maps too\n\nand move the date to yesterrday",
          "pastedContents": {}
        },
        {
          "display": "edit latest visible changelog entry to not talk about the internal stuff, and instead give more ddtail about map adjustments",
          "pastedContents": {}
        },
        {
          "display": "# Update Changelog Command\n\nYou are tasked with updating the changelog files for the Flagger game project. Follow these instructions precisely.\n\n## Files to Update\n\n1. **JSON file**: `/Users/dorkitude/a/dev/flagger/public/changelog.json`\n2. **HTML file**: `/Users/dorkitude/a/dev/flagger/public/changelog.html`\n\n## Process\n\n1. First, check the current state of the changelog.json to see the last recorded commit\n2. Use `git log` to find all new commits since the last entry in the changelog\n3. Update both files with the new commits\n\n## JSON Format\n\nThe changelog.json file has this structure:\n```json\n{\n  \"entries\": [\n    {\n      \"commitId\": \"dd96050b3833eaa38545360f12a72c1884540a17\",\n      \"timestamp\": \"2025-07-02 07:32\",\n      \"category\": \"improvement\",\n      \"title\": \"Refactor enemy AI to use shared BaseEnemyAI class\",\n      \"emoji\": \"♻️\",\n      \"visible\": false,\n      \"details\": [\n        \"Consolidated enemy AI logic into a reusable BaseEnemyAI class\",\n        \"Reduced code duplication across enemy soldier types\",\n        \"Fixed one bug with enemy AI pathfinding;  more to fix though.\"\n      ]\n    }\n  ],\n  \"categories\": {\n    \"feature\": {\n      \"name\": \"New Feature\",\n      \"color\": \"var(--green)\"\n    },\n    \"fix\": {\n      \"name\": \"Bug Fix\",\n      \"color\": \"var(--red)\"\n    },\n    \"improvement\": {\n      \"name\": \"Gameplay\",\n      \"color\": \"var(--blue)\"\n    },\n    \"visual\": {\n      \"name\": \"Visual Update\",\n      \"color\": \"var(--pink)\"\n    },\n    \"audio\": {\n      \"name\": \"Audio\",\n      \"color\": \"var(--peach)\"\n    },\n    \"balance\": {\n      \"name\": \"Balance\",\n      \"color\": \"var(--yellow)\"\n    }\n  }\n}\n```\n\nEach entry must have:\n- `commitId`: Full commit hash\n- `timestamp`: Date and time in YYYY-MM-DD HH:MM format\n- `category`: One of: feature, fix, improvement, visual, audio, balance\n- `title`: Commit message without emoji (extract main message)\n- `emoji`: The emoji from the commit message (if any)\n- `visible`: true if affects gameplay, false if internal/development change\n- `details`: Array of 2-3 bullet points describing the change\n\n## Category Guidelines\n\nChoose the appropriate category based on the commit:\n- `feature`: New gameplay features, weapons, enemies, mechanics\n- `fix`: Bug fixes, crash fixes, error corrections\n- `improvement`: Code refactoring, optimizations, internal improvements\n- `visual`: UI changes, visual effects, graphics updates\n- `audio`: Sound effects, music, audio system changes\n- `balance`: Gameplay balance, difficulty adjustments, stat tweaks\n\n## HTML Format\n\nThe changelog.html displays entries from the JSON file dynamically. No manual HTML editing is required - the HTML file reads and renders the JSON data.\n\n## Steps to Execute\n\n1. Read the current changelog.json to find the most recent commit ID\n2. Run `git log --date=format:'%Y-%m-%d %H:%M' --pretty=format:\"%H|%s|%ad\" [last_commit]..HEAD` to get new commits\n3. For each new commit:\n   - Extract the emoji (if present) from the message\n   - Determine the appropriate category\n   - Create a title by removing the emoji from the message\n   - Generate 2-3 detail bullet points based on the commit message\n   - Set `visible: true` if it affects gameplay, `false` if it's internal/development\n4. Add new entries to the beginning of the entries array (newest first)\n5. Save the updated JSON file\n\n## Important Notes\n\n- Preserve all emojis in the emoji field\n- Maintain chronological order (newest first)\n- Only include commits that are NOT already in the changelog\n- Our audience is game players, so set `visible: false` for:\n  - Changelog updates\n  - Documentation changes\n  - Build/config changes\n  - Internal refactoring that doesn't affect gameplay\n- Do not modify existing entries or categories\n- The details array should explain the change in player-friendly terms",
          "pastedContents": {}
        },
        {
          "display": "commit changes",
          "pastedContents": {}
        },
        {
          "display": "Wait why did you change the structure in the changelog command??  Please repair the @COMMAND_UPDATE_CHANGELOG.md and make sure it's accurate!",
          "pastedContents": {}
        },
        {
          "display": "add a new optional JSON boolean property to the changelog.json called \"visible\" and make it so changelog.html ignores / doesn't render the ones with visible = false",
          "pastedContents": {}
        },
        {
          "display": "# Update Changelog Command\n\nYou are tasked with updating the changelog files for the Flagger game project. Follow these instructions precisely.\n\n## Files to Update\n\n1. **JSON file**: `/Users/dorkitude/a/dev/flagger/public/changelog.json`\n2. **HTML file**: `/Users/dorkitude/a/dev/flagger/public/changelog.html` (DO NOT MODIFY - it dynamically loads from JSON)\n\n## Process\n\n1. First, check the current state of the changelog.json to see the last recorded commit\n2. Use `git log` to find all new commits since the last entry in the changelog\n3. Update ONLY the JSON file with the new commits (the HTML loads data dynamically)\n\n## JSON Format\n\nThe changelog.json file has this structure:\n```json\n{\n  \"entries\": [\n    {\n      \"commitId\": \"633c1d71c536ffaf6d23fabb07f46aa81b57b5af\",\n      \"timestamp\": \"2025-06-29 10:00\",\n      \"category\": \"audio\",\n      \"title\": \"Add new sound effects and changelog link\",\n      \"emoji\": \"🎵\",\n      \"details\": [\n        \"Added laser and shield guard sound effects\",\n        \"Integrated changelog viewer in game interface\",\n        \"Enhanced audio feedback for combat actions\"\n      ]\n    }\n  ],\n  \"categories\": {\n    \"feature\": { \"name\": \"New Feature\", \"color\": \"var(--green)\" },\n    \"fix\": { \"name\": \"Bug Fix\", \"color\": \"var(--red)\" },\n    \"improvement\": { \"name\": \"Gameplay\", \"color\": \"var(--blue)\" },\n    \"visual\": { \"name\": \"Visual Update\", \"color\": \"var(--pink)\" },\n    \"audio\": { \"name\": \"Audio\", \"color\": \"var(--peach)\" },\n    \"balance\": { \"name\": \"Balance\", \"color\": \"var(--yellow)\" }\n  }\n}\n```\n\nEach entry must have:\n- `commitId`: Full commit hash\n- `timestamp`: Date and time in \"YYYY-MM-DD HH:MM\" format\n- `category`: One of: feature, fix, improvement, visual, audio, balance\n- `title`: Commit message without emoji (extract main message)\n- `emoji`: The emoji from the commit message\n- `details`: Array of 2-3 bullet points describing the changes\n\n## Category Mapping\n\nMap commit messages to categories based on emoji and content:\n- 🆕, ✨, 🎮 → \"feature\"\n- 🐛, 🔧, 🩹 → \"fix\"\n- ⚡, 🎯, 🚀 → \"improvement\"\n- 🎨, 💄, 🖼️ → \"visual\"\n- 🎵, 🔊, 🔇 → \"audio\"\n- ⚖️, 🔄, 💪 → \"balance\"\n\n## HTML File\n\nThe changelog.html file dynamically loads data from changelog.json using JavaScript. DO NOT modify this file - it automatically displays the JSON data with proper formatting.\n\n## Steps to Execute\n\n1. Read the current changelog.json to find the most recent commit ID\n2. Run `git log --pretty=format:\"%H|%s|%ad\" --date=format:\"%Y-%m-%d %H:%M\" [last_commit_id]..HEAD` to get new commits\n3. Parse the new commits and create entries with:\n   - Extract emoji from commit message\n   - Determine category based on emoji/content\n   - Create a descriptive title (commit message without emoji)\n   - Generate 2-3 detailed bullet points explaining the changes\n4. Add new entries to the beginning of the entries array (newest first)\n5. Save the updated JSON file\n\n## Important Notes\n\n- Preserve all emojis in the emoji field\n- The HTML file loads dynamically - never modify it\n- Maintain chronological order (newest first)\n- Only include commits that are NOT already in the changelog\n- Do not modify existing entries or the categories object\n- Ensure proper JSON formatting",
          "pastedContents": {}
        },
        {
          "display": "commit my changes",
          "pastedContents": {}
        },
        {
          "display": "commit these changes",
          "pastedContents": {}
        },
        {
          "display": "sometimes enemy pathfinding takes them too close to corners, so their hitbox gets caught and they get stuck.",
          "pastedContents": {}
        },
        {
          "display": "could we do more typing so this is caught statically?",
          "pastedContents": {}
        },
        {
          "display": "enemiy AIs are now aiming at the wrong spot",
          "pastedContents": {}
        },
        {
          "display": "# Update Changelog Command\n\nYou are tasked with updating the changelog files for the Flagger game project. Follow these instructions precisely.\n\n## Files to Update\n\n1. **JSON file**: `/Users/dorkitude/a/dev/flagger/public/changelog.json`\n2. **HTML file**: `/Users/dorkitude/a/dev/flagger/public/changelog.html` (DO NOT MODIFY - it dynamically loads from JSON)\n\n## Process\n\n1. First, check the current state of the changelog.json to see the last recorded commit\n2. Use `git log` to find all new commits since the last entry in the changelog\n3. Update ONLY the JSON file with the new commits (the HTML loads data dynamically)\n\n## JSON Format\n\nThe changelog.json file has this structure:\n```json\n{\n  \"entries\": [\n    {\n      \"commitId\": \"633c1d71c536ffaf6d23fabb07f46aa81b57b5af\",\n      \"timestamp\": \"2025-06-29 10:00\",\n      \"category\": \"audio\",\n      \"title\": \"Add new sound effects and changelog link\",\n      \"emoji\": \"🎵\",\n      \"details\": [\n        \"Added laser and shield guard sound effects\",\n        \"Integrated changelog viewer in game interface\",\n        \"Enhanced audio feedback for combat actions\"\n      ]\n    }\n  ],\n  \"categories\": {\n    \"feature\": { \"name\": \"New Feature\", \"color\": \"var(--green)\" },\n    \"fix\": { \"name\": \"Bug Fix\", \"color\": \"var(--red)\" },\n    \"improvement\": { \"name\": \"Gameplay\", \"color\": \"var(--blue)\" },\n    \"visual\": { \"name\": \"Visual Update\", \"color\": \"var(--pink)\" },\n    \"audio\": { \"name\": \"Audio\", \"color\": \"var(--peach)\" },\n    \"balance\": { \"name\": \"Balance\", \"color\": \"var(--yellow)\" }\n  }\n}\n```\n\nEach entry must have:\n- `commitId`: Full commit hash\n- `timestamp`: Date and time in \"YYYY-MM-DD HH:MM\" format\n- `category`: One of: feature, fix, improvement, visual, audio, balance\n- `title`: Commit message without emoji (extract main message)\n- `emoji`: The emoji from the commit message\n- `details`: Array of 2-3 bullet points describing the changes\n\n## Category Mapping\n\nMap commit messages to categories based on emoji and content:\n- 🆕, ✨, 🎮 → \"feature\"\n- 🐛, 🔧, 🩹 → \"fix\"\n- ⚡, 🎯, 🚀 → \"improvement\"\n- 🎨, 💄, 🖼️ → \"visual\"\n- 🎵, 🔊, 🔇 → \"audio\"\n- ⚖️, 🔄, 💪 → \"balance\"\n\n## HTML File\n\nThe changelog.html file dynamically loads data from changelog.json using JavaScript. DO NOT modify this file - it automatically displays the JSON data with proper formatting.\n\n## Steps to Execute\n\n1. Read the current changelog.json to find the most recent commit ID\n2. Run `git log --pretty=format:\"%H|%s|%ad\" --date=format:\"%Y-%m-%d %H:%M\" [last_commit_id]..HEAD` to get new commits\n3. Parse the new commits and create entries with:\n   - Extract emoji from commit message\n   - Determine category based on emoji/content\n   - Create a descriptive title (commit message without emoji)\n   - Generate 2-3 detailed bullet points explaining the changes\n4. Add new entries to the beginning of the entries array (newest first)\n5. Save the updated JSON file\n\n## Important Notes\n\n- Preserve all emojis in the emoji field\n- The HTML file loads dynamically - never modify it\n- Maintain chronological order (newest first)\n- Only include commits that are NOT already in the changelog\n- Do not modify existing entries or the categories object\n- Ensure proper JSON formatting",
          "pastedContents": {}
        },
        {
          "display": "commit the tesla coil change and the new map stuff, include the message \"Map balance and redesign for Tryhard Trellis and The Family Porkums\"",
          "pastedContents": {}
        },
        {
          "display": "Centralize this enemy AI stuff so we don't have to keep editing it in three places.  Remove the new unstuck stuff you did, which only seems to have made things worse.",
          "pastedContents": {}
        },
        {
          "display": "Make a new kind of line of sight checker that ignores creates, and let Teslas shoot over crates.",
          "pastedContents": {}
        },
        {
          "display": "enemy AI sometimes gets stuck trying to pathfind;  even if it's in pathfinding mode, we do need some level of unstuck-interrupt please.",
          "pastedContents": {}
        },
        {
          "display": "Can tesla coils shoot over crates?",
          "pastedContents": {}
        },
        {
          "display": "commit and deploy",
          "pastedContents": {}
        },
        {
          "display": "When i shoot 1 shot, then wait a while, it says \"reloading\" and the graphic updates at the bottom.  But my clip still seems to only have 2 shots remaining after that.",
          "pastedContents": {}
        },
        {
          "display": "Let's update it to match the original timing",
          "pastedContents": {}
        },
        {
          "display": "now it's too fast.  make me a chart of the exact bullet timings now vs. at the last commit",
          "pastedContents": {}
        },
        {
          "display": "Get rid of burstDelay entirely and rely on reload to create the timing.  The total time between shots 123 and shots 456 should be whateer the old burstDelay was.",
          "pastedContents": {}
        },
        {
          "display": "is burstDelay even used anymore though now that we have the Magazine?",
          "pastedContents": {}
        },
        {
          "display": "The delay feels too slow between bursts now.  For this gun, I want it to have the same timing as before",
          "pastedContents": {}
        },
        {
          "display": "# Update Changelog Command\n\nYou are tasked with updating the changelog files for the Flagger game project. Follow these instructions precisely.\n\n## Files to Update\n\n1. **JSON file**: `/Users/dorkitude/a/dev/flagger/public/changelog.json`\n2. **HTML file**: `/Users/dorkitude/a/dev/flagger/public/changelog.html` (DO NOT MODIFY - it dynamically loads from JSON)\n\n## Process\n\n1. First, check the current state of the changelog.json to see the last recorded commit\n2. Use `git log` to find all new commits since the last entry in the changelog\n3. Update ONLY the JSON file with the new commits (the HTML loads data dynamically)\n\n## JSON Format\n\nThe changelog.json file has this structure:\n```json\n{\n  \"entries\": [\n    {\n      \"commitId\": \"633c1d71c536ffaf6d23fabb07f46aa81b57b5af\",\n      \"timestamp\": \"2025-06-29 10:00\",\n      \"category\": \"audio\",\n      \"title\": \"Add new sound effects and changelog link\",\n      \"emoji\": \"🎵\",\n      \"details\": [\n        \"Added laser and shield guard sound effects\",\n        \"Integrated changelog viewer in game interface\",\n        \"Enhanced audio feedback for combat actions\"\n      ]\n    }\n  ],\n  \"categories\": {\n    \"feature\": { \"name\": \"New Feature\", \"color\": \"var(--green)\" },\n    \"fix\": { \"name\": \"Bug Fix\", \"color\": \"var(--red)\" },\n    \"improvement\": { \"name\": \"Gameplay\", \"color\": \"var(--blue)\" },\n    \"visual\": { \"name\": \"Visual Update\", \"color\": \"var(--pink)\" },\n    \"audio\": { \"name\": \"Audio\", \"color\": \"var(--peach)\" },\n    \"balance\": { \"name\": \"Balance\", \"color\": \"var(--yellow)\" }\n  }\n}\n```\n\nEach entry must have:\n- `commitId`: Full commit hash\n- `timestamp`: Date and time in \"YYYY-MM-DD HH:MM\" format\n- `category`: One of: feature, fix, improvement, visual, audio, balance\n- `title`: Commit message without emoji (extract main message)\n- `emoji`: The emoji from the commit message\n- `details`: Array of 2-3 bullet points describing the changes\n\n## Category Mapping\n\nMap commit messages to categories based on emoji and content:\n- 🆕, ✨, 🎮 → \"feature\"\n- 🐛, 🔧, 🩹 → \"fix\"\n- ⚡, 🎯, 🚀 → \"improvement\"\n- 🎨, 💄, 🖼️ → \"visual\"\n- 🎵, 🔊, 🔇 → \"audio\"\n- ⚖️, 🔄, 💪 → \"balance\"\n\n## HTML File\n\nThe changelog.html file dynamically loads data from changelog.json using JavaScript. DO NOT modify this file - it automatically displays the JSON data with proper formatting.\n\n## Steps to Execute\n\n1. Read the current changelog.json to find the most recent commit ID\n2. Run `git log --pretty=format:\"%H|%s|%ad\" --date=format:\"%Y-%m-%d %H:%M\" [last_commit_id]..HEAD` to get new commits\n3. Parse the new commits and create entries with:\n   - Extract emoji from commit message\n   - Determine category based on emoji/content\n   - Create a descriptive title (commit message without emoji)\n   - Generate 2-3 detailed bullet points explaining the changes\n4. Add new entries to the beginning of the entries array (newest first)\n5. Save the updated JSON file\n\n## Important Notes\n\n- Preserve all emojis in the emoji field\n- The HTML file loads dynamically - never modify it\n- Maintain chronological order (newest first)\n- Only include commits that are NOT already in the changelog\n- Do not modify existing entries or the categories object\n- Ensure proper JSON formatting",
          "pastedContents": {}
        },
        {
          "display": "commit this change and deploy",
          "pastedContents": {}
        },
        {
          "display": "Let's refactor how the player's main rifle handles bursts.\n\nIt should have a real reload system.  Any time it hasn't been fired for long enough, it should reload its magazine back to 3 rounds.  Give it a Magazine object, so we can upgrade it later.  The indicator at bottom of screen should show this.",
          "pastedContents": {}
        },
        {
          "display": "once he goes super-mode, miniboss should gain 3 health per tick not just 1",
          "pastedContents": {}
        },
        {
          "display": "what do they mean in plain english",
          "pastedContents": {}
        },
        {
          "display": "use render CLI to find the real service ID and update CLAUDE.md so it knows.",
          "pastedContents": {}
        },
        {
          "display": "Read this and give me some ideas for hooks:\n\nhttps://docs.anthropic.com/en/docs/claude-code/hooks",
          "pastedContents": {}
        },
        {
          "display": "commit the hitbox changes and push",
          "pastedContents": {}
        },
        {
          "display": "please move them both about 3px west, and 2px north",
          "pastedContents": {}
        },
        {
          "display": "please make them both 8.5",
          "pastedContents": {}
        },
        {
          "display": "please set both hitboxes to be 10px",
          "pastedContents": {}
        },
        {
          "display": "how do I add custom properties in the editor UI?",
          "pastedContents": {}
        },
        {
          "display": "Is there a way to add these to the map layer, so I can edit them in my mapping editor?   Maybe a custom object with certain name or class or something?",
          "pastedContents": {}
        },
        {
          "display": "expand diameter of EnemySoldier and AssaultSoldier hitboxes by 15px.  also move them north 15px to adjust for this.",
          "pastedContents": {}
        },
        {
          "display": "what would be the best way to put some text on the rendered map for the first map?",
          "pastedContents": {}
        },
        {
          "display": "clobber remote branch with what i currently have",
          "pastedContents": {}
        },
        {
          "display": "# Update Changelog Command\n\nYou are tasked with updating the changelog files for the Flagger game project. Follow these instructions precisely.\n\n## Files to Update\n\n1. **JSON file**: `/Users/dorkitude/a/dev/flagger/public/changelog.json`\n2. **HTML file**: `/Users/dorkitude/a/dev/flagger/public/changelog.html` (DO NOT MODIFY - it dynamically loads from JSON)\n\n## Process\n\n1. First, check the current state of the changelog.json to see the last recorded commit\n2. Use `git log` to find all new commits since the last entry in the changelog\n3. Update ONLY the JSON file with the new commits (the HTML loads data dynamically)\n\n## JSON Format\n\nThe changelog.json file has this structure:\n```json\n{\n  \"entries\": [\n    {\n      \"commitId\": \"633c1d71c536ffaf6d23fabb07f46aa81b57b5af\",\n      \"timestamp\": \"2025-06-29 10:00\",\n      \"category\": \"audio\",\n      \"title\": \"Add new sound effects and changelog link\",\n      \"emoji\": \"🎵\",\n      \"details\": [\n        \"Added laser and shield guard sound effects\",\n        \"Integrated changelog viewer in game interface\",\n        \"Enhanced audio feedback for combat actions\"\n      ]\n    }\n  ],\n  \"categories\": {\n    \"feature\": { \"name\": \"New Feature\", \"color\": \"var(--green)\" },\n    \"fix\": { \"name\": \"Bug Fix\", \"color\": \"var(--red)\" },\n    \"improvement\": { \"name\": \"Gameplay\", \"color\": \"var(--blue)\" },\n    \"visual\": { \"name\": \"Visual Update\", \"color\": \"var(--pink)\" },\n    \"audio\": { \"name\": \"Audio\", \"color\": \"var(--peach)\" },\n    \"balance\": { \"name\": \"Balance\", \"color\": \"var(--yellow)\" }\n  }\n}\n```\n\nEach entry must have:\n- `commitId`: Full commit hash\n- `timestamp`: Date and time in \"YYYY-MM-DD HH:MM\" format\n- `category`: One of: feature, fix, improvement, visual, audio, balance\n- `title`: Commit message without emoji (extract main message)\n- `emoji`: The emoji from the commit message\n- `details`: Array of 2-3 bullet points describing the changes\n\n## Category Mapping\n\nMap commit messages to categories based on emoji and content:\n- 🆕, ✨, 🎮 → \"feature\"\n- 🐛, 🔧, 🩹 → \"fix\"\n- ⚡, 🎯, 🚀 → \"improvement\"\n- 🎨, 💄, 🖼️ → \"visual\"\n- 🎵, 🔊, 🔇 → \"audio\"\n- ⚖️, 🔄, 💪 → \"balance\"\n\n## HTML File\n\nThe changelog.html file dynamically loads data from changelog.json using JavaScript. DO NOT modify this file - it automatically displays the JSON data with proper formatting.\n\n## Steps to Execute\n\n1. Read the current changelog.json to find the most recent commit ID\n2. Run `git log --pretty=format:\"%H|%s|%ad\" --date=format:\"%Y-%m-%d %H:%M\" [last_commit_id]..HEAD` to get new commits\n3. Parse the new commits and create entries with:\n   - Extract emoji from commit message\n   - Determine category based on emoji/content\n   - Create a descriptive title (commit message without emoji)\n   - Generate 2-3 detailed bullet points explaining the changes\n4. Add new entries to the beginning of the entries array (newest first)\n5. Save the updated JSON file\n\n## Important Notes\n\n- Preserve all emojis in the emoji field\n- The HTML file loads dynamically - never modify it\n- Maintain chronological order (newest first)\n- Only include commits that are NOT already in the changelog\n- Do not modify existing entries or the categories object\n- Ensure proper JSON formatting",
          "pastedContents": {}
        },
        {
          "display": "gs",
          "pastedContents": {}
        },
        {
          "display": "# Update Changelog Command\n\nYou are tasked with updating the changelog files for the Flagger game project. Follow these instructions precisely.\n\n## Files to Update\n\n1. **JSON file**: `/Users/dorkitude/a/dev/flagger/public/changelog.json`\n2. **HTML file**: `/Users/dorkitude/a/dev/flagger/public/changelog.html` (DO NOT MODIFY - it dynamically loads from JSON)\n\n## Process\n\n1. First, check the current state of the changelog.json to see the last recorded commit\n2. Use `git log` to find all new commits since the last entry in the changelog\n3. Update ONLY the JSON file with the new commits (the HTML loads data dynamically)\n\n## JSON Format\n\nThe changelog.json file has this structure:\n```json\n{\n  \"entries\": [\n    {\n      \"commitId\": \"633c1d71c536ffaf6d23fabb07f46aa81b57b5af\",\n      \"timestamp\": \"2025-06-29 10:00\",\n      \"category\": \"audio\",\n      \"title\": \"Add new sound effects and changelog link\",\n      \"emoji\": \"🎵\",\n      \"details\": [\n        \"Added laser and shield guard sound effects\",\n        \"Integrated changelog viewer in game interface\",\n        \"Enhanced audio feedback for combat actions\"\n      ]\n    }\n  ],\n  \"categories\": {\n    \"feature\": { \"name\": \"New Feature\", \"color\": \"var(--green)\" },\n    \"fix\": { \"name\": \"Bug Fix\", \"color\": \"var(--red)\" },\n    \"improvement\": { \"name\": \"Gameplay\", \"color\": \"var(--blue)\" },\n    \"visual\": { \"name\": \"Visual Update\", \"color\": \"var(--pink)\" },\n    \"audio\": { \"name\": \"Audio\", \"color\": \"var(--peach)\" },\n    \"balance\": { \"name\": \"Balance\", \"color\": \"var(--yellow)\" }\n  }\n}\n```\n\nEach entry must have:\n- `commitId`: Full commit hash\n- `timestamp`: Date and time in \"YYYY-MM-DD HH:MM\" format\n- `category`: One of: feature, fix, improvement, visual, audio, balance\n- `title`: Commit message without emoji (extract main message)\n- `emoji`: The emoji from the commit message\n- `details`: Array of 2-3 bullet points describing the changes\n\n## Category Mapping\n\nMap commit messages to categories based on emoji and content:\n- 🆕, ✨, 🎮 → \"feature\"\n- 🐛, 🔧, 🩹 → \"fix\"\n- ⚡, 🎯, 🚀 → \"improvement\"\n- 🎨, 💄, 🖼️ → \"visual\"\n- 🎵, 🔊, 🔇 → \"audio\"\n- ⚖️, 🔄, 💪 → \"balance\"\n\n## HTML File\n\nThe changelog.html file dynamically loads data from changelog.json using JavaScript. DO NOT modify this file - it automatically displays the JSON data with proper formatting.\n\n## Steps to Execute\n\n1. Read the current changelog.json to find the most recent commit ID\n2. Run `git log --pretty=format:\"%H|%s|%ad\" --date=format:\"%Y-%m-%d %H:%M\" [last_commit_id]..HEAD` to get new commits\n3. Parse the new commits and create entries with:\n   - Extract emoji from commit message\n   - Determine category based on emoji/content\n   - Create a descriptive title (commit message without emoji)\n   - Generate 2-3 detailed bullet points explaining the changes\n4. Add new entries to the beginning of the entries array (newest first)\n5. Save the updated JSON file\n\n## Important Notes\n\n- Preserve all emojis in the emoji field\n- The HTML file loads dynamically - never modify it\n- Maintain chronological order (newest first)\n- Only include commits that are NOT already in the changelog\n- Do not modify existing entries or the categories object\n- Ensure proper JSON formatting",
          "pastedContents": {}
        },
        {
          "display": "commit all changes",
          "pastedContents": {}
        },
        {
          "display": "commit these changes",
          "pastedContents": {}
        },
        {
          "display": "When the shield blocks 100% of damage, use a shield emoji in the float-text.",
          "pastedContents": {}
        },
        {
          "display": "Compiled with problems:X\n\nERROR in ./src/scripts/scenes/mainScene.ts (/Users/dorkitude/a/dev/flagger/src/scripts/scenes/mainScene.ts) 1212:2-28\n\n[tsl] ERROR in /Users/dorkitude/a/dev/flagger/src/scripts/scenes/mainScene.ts(1212,3)\n      TS2393: Duplicate function implementation.\n\n\nERROR in ./src/scripts/scenes/mainScene.ts (/Users/dorkitude/a/dev/flagger/src/scripts/scenes/mainScene.ts) 1465:2-28\n\n[tsl] ERROR in /Users/dorkitude/a/dev/flagger/src/scripts/scenes/mainScene.ts(1465,3)\n      TS2393: Duplicate function implementation.",
          "pastedContents": {}
        },
        {
          "display": "fix this:\n\n\nCompiled with problems:X\n\nERROR in ./src/scripts/scenes/mainScene.ts (/Users/dorkitude/a/dev/flagger/src/scripts/scenes/mainScene.ts) 361:11-37\n\n[tsl] ERROR in /Users/dorkitude/a/dev/flagger/src/scripts/scenes/mainScene.ts(361,12)\n      TS2339: Property 'setupTabVisibilityHandlers' does not exist on type 'MainScene'.\n\n\n\n",
          "pastedContents": {}
        },
        {
          "display": "\"delete that linear ticket and never make one in this project",
          "pastedContents": {}
        },
        {
          "display": "This looks great, now remove the excess logging or set it to a lower log-level.",
          "pastedContents": {}
        },
        {
          "display": "Sometimes when I command-tab away from the game, then command-tab back into my browser where the game is playing, I hear an insanely loud sound (like, whatever had been queued up previously, but at max volume instead of the adjusted volume)",
          "pastedContents": {}
        },
        {
          "display": "This works great, except that when you FIRST click the Custom Controls button, it goes straight into \"Press Any Key\" mode, as if you had clicked twice.",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +284 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "mainScene.ts:155 Tilemap has no tileset \"simple_tiles\". Its tilesets are [Tileset]\naddTilesetImage @ phaser.js:222217\ncreate @ mainScene.ts:155\ncreate @ phaser.js:198297\nbootScene @ phaser.js:198187\nstart @ phaser.js:198942\nprocessQueue @ phaser.js:197988\nupdate @ phaser.js:198232\nstep @ phaser.js:17199\nstep @ phaser.js:18235\nstep @ phaser.js:31347\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstart @ phaser.js:31401\nstart @ phaser.js:18044\nstart @ phaser.js:17139\ntexturesReady @ phaser.js:17119\nemit @ phaser.js:213\nupdatePending @ phaser.js:216447\nemit @ phaser.js:194\nimage.onload @ phaser.js:216593\naudioUtils.ts:19 The AudioContext was not allowed to start. It must be resumed (or created) after a user gesture on the page. https://developer.chrome.com/blog/autoplay/#web_audio\ncreateAndStartBufferSource @ phaser.js:207357\nplay @ phaser.js:207246\nplay @ phaser.js:203255\nplaySound @ audioUtils.ts:19\nfire @ TurretMachineGun.ts:55\nshoot @ standardTurret.ts:61\nupdate @ standardTurret.ts:34\neval @ mainScene.ts:370\nupdate @ mainScene.ts:368\nstep @ phaser.js:201006\nupdate @ phaser.js:198243\nstep @ phaser.js:17199\nstep @ phaser.js:18235\nstep @ phaser.js:31347\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\naudioUtils.ts:19 The AudioContext was not allowed to start. It must be resumed (or created) after a user gesture on the page. https://developer.chrome.com/blog/autoplay/#web_audio\ncreateAndStartBufferSource @ phaser.js:207357\nplay @ phaser.js:207246\nplay @ phaser.js:203255\nplaySound @ audioUtils.ts:19\nfire @ TurretMachineGun.ts:55\nshoot @ standardTurret.ts:61\nupdate @ standardTurret.ts:34\neval @ mainScene.ts:370\nupdate @ mainScene.ts:368\nstep @ phaser.js:201006\nupdate @ phaser.js:198243\nstep @ phaser.js:17199\nstep @ phaser.js:18235\nstep @ phaser.js:31347\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\naudioUtils.ts:19 The AudioContext was not allowed to start. It must be resumed (or created) after a user gesture on the page. https://developer.chrome.com/blog/autoplay/#web_audio\ncreateAndStartBufferSource @ phaser.js:207357\nplay @ phaser.js:207246\nplay @ phaser.js:203255\nplaySound @ audioUtils.ts:19\nfire @ TurretMachineGun.ts:55\nshoot @ standardTurret.ts:61\nupdate @ standardTurret.ts:34\neval @ mainScene.ts:370\nupdate @ mainScene.ts:368\nstep @ phaser.js:201006\nupdate @ phaser.js:198243\nstep @ phaser.js:17199\nstep @ phaser.js:18235\nstep @ phaser.js:31347\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\nrequestAnimationFrame\nstep @ phaser.js:31351\ncustomControlsDialog.ts:248 CustomControlsDialog shown: {containerPos: {…}, containerScrollFactor: 0, overlayBounds: Rectangle, panelBounds: Rectangle, actionRowCount: 10}\ncustomControlsDialog.ts:257 ActionRow moveForward: {x: 640, y: 210, scrollFactor: 0, bounds: Rectangle}\ncustomControlsDialog.ts:257 ActionRow moveBackward: {x: 640, y: 245, scrollFactor: 0, bounds: Rectangle}\ncustomControlsDialog.ts:257 ActionRow strafeLeft: {x: 640, y: 280, scrollFactor: 0, bounds: Rectangle}\ncustomControlsDialog.ts:257 ActionRow strafeRight: {x: 640, y: 315, scrollFactor: 0, bounds: Rectangle}\ncustomControlsDialog.ts:257 ActionRow rotateLeft: {x: 640, y: 350, scrollFactor: 0, bounds: Rectangle}\ncustomControlsDialog.ts:257 ActionRow rotateRight: {x: 640, y: 385, scrollFactor: 0, bounds: Rectangle}\ncustomControlsDialog.ts:257 ActionRow primaryFire: {x: 640, y: 420, scrollFactor: 0, bounds: Rectangle}\ncustomControlsDialog.ts:257 ActionRow primaryThrowable: {x: 640, y: 455, scrollFactor: 0, bounds: Rectangle}\ncustomControlsDialog.ts:257 ActionRow openSettings: {x: 640, y: 490, scrollFactor: 0, bounds: Rectangle}\ncustomControlsDialog.ts:257 ActionRow closeDialogs: {x: 640, y: 525, scrollFactor: 0, bounds: Rectangle}\ncustomControlsDialog.ts:32 Global pointer down in CustomControlsDialog: {x: 849.9704433497537, y: 245.9113300492611, worldX: 849.9704433497537, worldY: 3109.911330049261, camera: {…}}\ncustomControlsDialog.ts:32 Global pointer down in CustomControlsDialog: {x: 614.1477832512315, y: 529.6551724137931, worldX: 614.1477832512315, worldY: 3393.655172413793, camera: {…}}\ncustomControlsDialog.ts:32 Global pointer down in CustomControlsDialog: {x: 625.4975369458128, y: 452.72906403940885, worldX: 625.4975369458128, worldY: 3316.729064039409, camera: {…}}\ncustomControlsDialog.ts:32 Global pointer down in CustomControlsDialog: {x: 610.3645320197045, y: 253.47783251231527, worldX: 610.3645320197045, worldY: 3117.477832512315, camera: {…}}\ncustomControlsDialog.ts:32 Global pointer down in CustomControlsDialog: {x: 546.0492610837439, y: 611.6256157635468, worldX: 546.0492610837439, worldY: 3475.6256157635466, camera: {…}}\ncustomControlsDialog.ts:32 Global pointer down in CustomControlsDialog: {x: 547.3103448275862, y: 567.4876847290641, worldX: 547.3103448275862, worldY: 3431.4876847290643, camera: {…}}\ncustomControlsDialog.ts:32 Global pointer down in CustomControlsDialog: {x: 769.2610837438424, y: 556.1379310344828, worldX: 769.2610837438424, worldY: 3420.137931034483, camera: {…}}"
            }
          }
        },
        {
          "display": "commit this change",
          "pastedContents": {}
        },
        {
          "display": "not working.   add some logging so you can see what I'm clicking and where the buttons/rows are expecting clicks.",
          "pastedContents": {}
        },
        {
          "display": "update shield logic so that if shield is over 50%, it attempts to absorb ALL the damage.  then if it's below 50%, it only absorbs half the damage.",
          "pastedContents": {}
        },
        {
          "display": "looks okay now, on to click fix",
          "pastedContents": {}
        },
        {
          "display": "[Image #1] still weird",
          "pastedContents": {}
        },
        {
          "display": "[Image #1]\n\nyou moved the whoel box not just the click handling... now it's insane.",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "image",
              "content": "",
              "mediaType": "image/png"
            }
          }
        },
        {
          "display": "Is something different about how mouse clicks / button clicks are handled?",
          "pastedContents": {}
        },
        {
          "display": "make @src/scripts/objects/customControlsDialog.ts work exactly like @src/scripts/objects/settingsDialog.ts \n\nespecially regarding camera, scrollfactor, etc.  because the Settings Dialog works perfectly on tall maps, but Custom Controls does not.\n\nto avoid this becoming a problem in the future:    abstract the functionality out of Settings Dialog into a common class that CustomControls can then use.\n\n\nUltrathink.",
          "pastedContents": {}
        },
        {
          "display": "make @src/scripts/objects/customControlsDialog.ts work exactly like @src/scripts/objects/settingsDialog.ts \n\nespecially regarding camera, scrollfactor, etc.  because the Settings Dialog works perfectly on tall maps, but Custom Controls does not.\n\nto avoid this becoming a problem in the future:    abstract the functionality out of Settings Dialog into a common class that CustomControls can then use.",
          "pastedContents": {}
        },
        {
          "display": "completely revert to commit ace902e1958cc039f8d40a84df60f46393adc6f3 and blow away the most recent commit since then.",
          "pastedContents": {}
        },
        {
          "display": "why is this working perfectly on SettingsDialog, but badly on customControlsDialog?",
          "pastedContents": {}
        },
        {
          "display": "clicking them works fine on most maps, but not on tall map that has camera scroll stuff.\n\nliterally nothing has appeared in console.",
          "pastedContents": {}
        },
        {
          "display": "the click handlers don't work though",
          "pastedContents": {}
        },
        {
          "display": "all works fine now",
          "pastedContents": {}
        },
        {
          "display": "Compiled with problems:X\n\nERROR in ./src/scripts/objects/customControlsDialog.ts (/Users/dorkitude/a/dev/flagger/src/scripts/objects/customControlsDialog.ts) 65:52-64\n\n[tsl] ERROR in /Users/dorkitude/a/dev/flagger/src/scripts/objects/customControlsDialog.ts(65,53)\n      TS2551: Property 'scrollFactor' does not exist on type 'CustomControlsDialog'. Did you mean 'scrollFactorX'?\n\n",
          "pastedContents": {}
        },
        {
          "display": "why am i on a detached branch",
          "pastedContents": {}
        },
        {
          "display": "gs",
          "pastedContents": {}
        },
        {
          "display": "CustomControls is rendering in the wrong place when I click it.  If I'm 'n a big map, I can't even see it.  Please update it with some logging so you can help me fix it.",
          "pastedContents": {}
        },
        {
          "display": "now TAB does nothing so I can't see the dialog at all.",
          "pastedContents": {}
        },
        {
          "display": "nope still can't see it.  please just add logging of its actual position so i can paste you the logs.",
          "pastedContents": {}
        },
        {
          "display": "nope it's appearing way up at the top of the map, not wherever I am.",
          "pastedContents": {}
        },
        {
          "display": "still no shotgun sound coming through.  maybe the file is malformed somehow?",
          "pastedContents": {}
        },
        {
          "display": "this didn't fix it.  Just copy its positioning and scrollfactor and the rest from the SettingsDialog itself.  don't redo anything.",
          "pastedContents": {}
        },
        {
          "display": "why can't i hear shotguns with EnemySoldier fires?",
          "pastedContents": {}
        },
        {
          "display": "continue",
          "pastedContents": {}
        },
        {
          "display": "still not visible.",
          "pastedContents": {}
        },
        {
          "display": "still not showing up lol",
          "pastedContents": {}
        },
        {
          "display": "this is only a problem on Pork Tower map, the only map with scrolling.    so it's related to scrolling.",
          "pastedContents": {}
        },
        {
          "display": "when I click CustomControls, i can't see the dialog even though it's being created.",
          "pastedContents": {}
        },
        {
          "display": "Can't see the Custom Controls dialog on the Pork Tower map.  I think it's related to scrollFactor.  Please update my UI elements so the scrollFactor is always correct.",
          "pastedContents": {}
        },
        {
          "display": "wait now i see the dialog too!   must've been this last scrollfactor change?",
          "pastedContents": {}
        },
        {
          "display": "yes i see the test rectangle.",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 3,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "mainScene.ts",
        "player.ts",
        "grenade.ts",
        "teslaCoilTurret.ts",
        "enemySoldier.ts"
      ],
      "exampleFilesGeneratedAt": 1751989877653,
      "hasCompletedProjectOnboarding": true,
      "lastTotalWebSearchRequests": 0,
      "lastCost": 0.6078048000000001,
      "lastAPIDuration": 138839,
      "lastDuration": 159867,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 13474,
      "lastTotalOutputTokens": 1438,
      "lastTotalCacheCreationInputTokens": 11104,
      "lastTotalCacheReadInputTokens": 210056,
      "lastSessionId": "8b2fb7f7-7a2a-4bcf-b919-f583b776823f"
    },
    "/System/Volumes/Data/home": {
      "allowedTools": [],
      "history": [],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 1,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastCost": 0.0001944,
      "lastAPIDuration": 1120,
      "lastDuration": 6609,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 208,
      "lastTotalOutputTokens": 7,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "46eeb6e7-17c1-4747-995b-89bcc6a51b2d"
    },
    "/Users/dorkitude/a/dev/cootie": {
      "allowedTools": [],
      "history": [
        {
          "display": "investigate git log and describe the style of the commit messages thus far.  put those in CLAUDE.md as well.",
          "pastedContents": {}
        },
        {
          "display": "/init ",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 1,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "GameScene.ts",
        "level1.json",
        "Map.ts",
        "ResourceManager.ts",
        "main.ts"
      ],
      "exampleFilesGeneratedAt": 1751129460196,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 1.5359394499999999,
      "lastAPIDuration": 249905,
      "lastDuration": 38630104,
      "lastLinesAdded": 71,
      "lastLinesRemoved": 1,
      "lastTotalInputTokens": 17983,
      "lastTotalOutputTokens": 5300,
      "lastTotalCacheCreationInputTokens": 27395,
      "lastTotalCacheReadInputTokens": 437660,
      "lastSessionId": "cab141c1-3cee-40c4-ab4b-2bd8ec69b6e2"
    },
    "/Users/dorkitude/a/dev/f2": {
      "allowedTools": [],
      "history": [
        {
          "display": "tell me how the controller seettings work in this app.   tell me how it listens, how it decides what to do based on keyboard inputs.  use code samples in your explanation.  ultrathink.   save your results as KEYBOARD_WALKTHRU.md",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "mainScene.ts",
        "player.ts",
        "grenade.ts",
        "teslaCoilTurret.ts",
        "enemySoldier.ts"
      ],
      "exampleFilesGeneratedAt": 1751235686707,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 3.0657526499999994,
      "lastAPIDuration": 326673,
      "lastDuration": 833509,
      "lastLinesAdded": 362,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 16760,
      "lastTotalOutputTokens": 8488,
      "lastTotalCacheCreationInputTokens": 51293,
      "lastTotalCacheReadInputTokens": 1018021,
      "lastSessionId": "02cd673d-5fc0-4c8a-b603-1ebf2e1ad234"
    },
    "/Users/dorkitude/a/dev/unrealizedreturns.org": {
      "allowedTools": [],
      "history": [
        {
          "display": "deploy the fix",
          "pastedContents": {}
        },
        {
          "display": "The fonts don't work on people's iphones.  How can we fix this?",
          "pastedContents": {}
        },
        {
          "display": "commit, deploy, and keep checking on the deploy status until it's done.  then WGET to confirm the changes look right.",
          "pastedContents": {}
        },
        {
          "display": "since it worked, save this exact command to @CLAUDE.md ",
          "pastedContents": {}
        },
        {
          "display": "check again, tell me if you see my recent pageview",
          "pastedContents": {}
        },
        {
          "display": "check render logs for this app and tell me what's there",
          "pastedContents": {}
        },
        {
          "display": "Update the page to say Berkeley, California at the bottom",
          "pastedContents": {}
        },
        {
          "display": "Great, summarize this Render CLI usage info info into your CLAUDE.md.\n\nthis site deploys exclusively to render (which watches the main branch on github)",
          "pastedContents": {}
        },
        {
          "display": "do `brew install render` and help me use it",
          "pastedContents": {}
        },
        {
          "display": "we don't need requirements.txt, get rid of it.",
          "pastedContents": {}
        },
        {
          "display": "render deploy failing, fix:\n\n\n + itsdangerous==2.2.0\n + jinja2==3.1.6\n + markupsafe==3.0.2\n + werkzeug==3.1.3\n==> Uploading build...\n==> Uploaded in 5.0s. Compression took 1.0s\n==> Build successful 🎉\n==> Deploying...\n==> Running 'uv run gunicorn app:app'\n==> Exited with status 2\n==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys\nBytecode compiled 544 files in 890ms\nerror: Failed to spawn: `gunicorn`\n  Caused by: No such file or directory (os error 2)\n==> Running 'uv run gunicorn app:app'\nBytecode compiled 544 files in 977ms\nerror: Failed to spawn: `gunicorn`\n  Caused by: No such file or directory (os error 2)",
          "pastedContents": {}
        },
        {
          "display": "what should I type into Render's \"new project\" area to get this flask app to deploy",
          "pastedContents": {}
        },
        {
          "display": "/mcp-add",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "how do I add the MCP tool for Render.",
          "pastedContents": {}
        },
        {
          "display": "no I mean you put this file here @.claude/claude_desktop_config.json \n\n",
          "pastedContents": {}
        },
        {
          "display": "> test the mcp server, can you see my render projects?",
          "pastedContents": {}
        },
        {
          "display": "test the mcp server, can you see my render projects?",
          "pastedContents": {}
        },
        {
          "display": "open this new config in Cursor using `code x` command, so I can put my key in there",
          "pastedContents": {}
        },
        {
          "display": "make an overmind procfile so i can use \"overmind start\" to run the server",
          "pastedContents": {}
        },
        {
          "display": "can I set up an MCP server that's only used for this project, instead of going into global settings?",
          "pastedContents": {}
        },
        {
          "display": "set up the render MCP server\n\n{\n  \"mcpServers\": {\n    \"render\": {\n      \"url\": \"https://mcp.render.com/mcp\",\n      \"headers\": {\n        \"Authorization\": \"Bearer <YOUR_API_KEY>\"\n      }\n    }\n  }\n}",
          "pastedContents": {}
        },
        {
          "display": "this should use uv and pyproject.toml, not requirements.txt\n\nmake sure CLAUDE.md knows we use uv for everything.",
          "pastedContents": {}
        },
        {
          "display": "update gitignore to be for a basic flask app",
          "pastedContents": {}
        },
        {
          "display": "Give me a basic flask app serves up a homepage (index.html) with title \"Unrealized Returns\"\n\npage just has a big choice in the middle:    \"what are you doing here?\"       with options:   \"Found a zine and I'm curious\"          \"Found a zine and I'm a cop\"\n\nformer option goes to /about  (about.html)\nlatter option just sends them to yahoo.com\n\n\n\nTheming should be geocities-era timeless web\n\n",
          "pastedContents": {}
        },
        {
          "display": "/init ",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 3,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 7.446071649999994,
      "lastAPIDuration": 1237584,
      "lastDuration": 157111314,
      "lastLinesAdded": 47,
      "lastLinesRemoved": 8,
      "lastTotalInputTokens": 109690,
      "lastTotalOutputTokens": 14039,
      "lastTotalCacheCreationInputTokens": 153215,
      "lastTotalCacheReadInputTokens": 2470718,
      "lastSessionId": "b48dfd64-13d8-402b-912c-7829b6b2cf69"
    },
    "/Users/dorkitude/a/dev/tmp": {
      "allowedTools": [],
      "history": [
        {
          "display": "go through all the markdown files we currently have in output, and if they don't have a source URL, use google to find the original article so you can add the source URL to it.",
          "pastedContents": {}
        },
        {
          "display": "give me a standard gitignore file\n\nconnect this repo to a new PRIVATE repo in the Endgame-Labs org called \"autocrawl\"",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 1,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastCost": 1.3547380000000002,
      "lastAPIDuration": 174633,
      "lastDuration": 249440,
      "lastLinesAdded": 178,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 6908,
      "lastTotalOutputTokens": 5084,
      "lastTotalCacheCreationInputTokens": 17306,
      "lastTotalCacheReadInputTokens": 463285,
      "lastTotalWebSearchRequests": 0,
      "lastSessionId": "21eaaffa-d299-4606-a80c-3836572c4228"
    },
    "/Users/dorkitude/a/dev/autocrawl": {
      "allowedTools": [],
      "history": [
        {
          "display": "/status ",
          "pastedContents": {}
        },
        {
          "display": "/usage ",
          "pastedContents": {}
        },
        {
          "display": "/crawl retool.com",
          "pastedContents": {}
        },
        {
          "display": "/crawl hex.tech",
          "pastedContents": {}
        },
        {
          "display": "/crawl betterup.com",
          "pastedContents": {}
        },
        {
          "display": "/crawl accuristech.com",
          "pastedContents": {}
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "commit",
          "pastedContents": {}
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "/crawl navan.com",
          "pastedContents": {}
        },
        {
          "display": "delete all the .html and .pdf files in output/",
          "pastedContents": {}
        },
        {
          "display": "update this project to use uv for everything.",
          "pastedContents": {}
        },
        {
          "display": "update README.md and PROMPT_CRAWL.md to denote that we can now handle PDF files too via scrape.sh",
          "pastedContents": {}
        },
        {
          "display": "try the pdf file again now that i've updated scrape.sh",
          "pastedContents": {}
        },
        {
          "display": "update my scrape.sh to delete the source file when it's done, so we only keep markdown files",
          "pastedContents": {}
        },
        {
          "display": "when i run it against https://www.montecarlodata.com/wp-content/uploads/2022/03/The-Big-Book-of-Data-Observability.pdf i get a bunch of garbage in my markdown file.\n\nis there a better way to do PDF-to-text ?",
          "pastedContents": {}
        },
        {
          "display": "it's giving me gobbledygook\n\ndelete that file",
          "pastedContents": {}
        },
        {
          "display": "!code output/montecarlodata.com/www.montecarlodata.com-wp-content-uploads-2022-03-The-Big-Book-of-Data-Observability.pdf.md",
          "pastedContents": {}
        },
        {
          "display": "open it in cursor using `code x`",
          "pastedContents": {}
        },
        {
          "display": "open the new markdownt hat came from a pdf",
          "pastedContents": {}
        },
        {
          "display": "try the pdf file again now that i've updated scrape.sh",
          "pastedContents": {}
        },
        {
          "display": "pip install whatever you need.",
          "pastedContents": {}
        },
        {
          "display": "yes",
          "pastedContents": {}
        },
        {
          "display": "is it turning the PDF into markdown though?",
          "pastedContents": {}
        },
        {
          "display": "our @scrape.sh and @html_to_markdown.py combination fails when it encounters a binary such as a PDF.\n\nfix that.",
          "pastedContents": {}
        },
        {
          "display": "Update the @PROMPT_CRAWL.md so future crawlers will also perform about 20 web searches on `site:domain.com keywords`\n\nbrainstorm the right keyword ideas to come up with all 20.",
          "pastedContents": {}
        },
        {
          "display": "I wonder if you could find even more content by doing web searches for `site:montecarlodata.com` and various terms.",
          "pastedContents": {}
        },
        {
          "display": "put PROMPT_CRAWL.md into a secret gist, and put the gist url into my clipboard",
          "pastedContents": {}
        },
        {
          "display": "/crawl montecarlodata.com",
          "pastedContents": {}
        },
        {
          "display": "commit my staged files.",
          "pastedContents": {}
        },
        {
          "display": "I see you've created both betterup.com and www.betterup.com folders\n\nplease update the command and/or prompt to make sure everything from a given /crawl job is stored the a single folder.",
          "pastedContents": {}
        },
        {
          "display": "/crawl betterup.com",
          "pastedContents": {}
        },
        {
          "display": "you don't need a crawl.sh, i want claude to manage (by following @PROMPT_CRAWL.md  instructions) the crawling and just call out to scrape.sh as a tool.",
          "pastedContents": {}
        },
        {
          "display": "update my /scrape command to be called /crawl\n\nand make sure it uses @PROMPT_CRAWL.md ",
          "pastedContents": {}
        },
        {
          "display": "/scrape betterup.com",
          "pastedContents": {}
        },
        {
          "display": "update scrape.sh or the relevant python script so that the first line of the document is always the full URL.\n\nupdate it so that it doesn't make all the nested subfolders, but puts all the markdown outputs into the top level (output/[domain]/)",
          "pastedContents": {}
        },
        {
          "display": "let's shorten the prompt so that its main job is CRAWLING and finding the right kind of content.\n\nwhen it finds that content, it can use the tool at @scrape.sh\n\nmake sure and instruct it so that the files end up in the right place;  you may have to update scrape.sh to make that work.",
          "pastedContents": {}
        },
        {
          "display": "it should use beautifulsoup to parse the HTML and only get real content\n\nparagraphs, headers, divs with text\n\nno images no script tags etc",
          "pastedContents": {}
        },
        {
          "display": "scrape this page and write it all of its contents into tmp.md:\n\nhttps://www.betterup.com/customers/globalbusinessinsurer",
          "pastedContents": {}
        },
        {
          "display": "make me a scrape.sh file that takes in a URL and an output folder\n\nit will wget the whole page into the right place in output folder\n\nit will translate the page's content into markdown in the same folder.",
          "pastedContents": {}
        },
        {
          "display": "run the webfetch tool and put its exact output into a .html file so i can look at it.",
          "pastedContents": {}
        },
        {
          "display": "I can still see that you're paraphrasing instead of simply downloading the page.",
          "pastedContents": {}
        },
        {
          "display": "do you think claude will be able to parse the images that come back from the site too?",
          "pastedContents": {}
        },
        {
          "display": "commit what i have staged",
          "pastedContents": {}
        },
        {
          "display": "/crawl betterup.com",
          "pastedContents": {}
        },
        {
          "display": "seems many of our customers don't have sitemaps.  i am thinking we should ignore site map and just rely on spidering out through the site's navigation links, building a map as you go.\n\nplease update the prompt.",
          "pastedContents": {}
        },
        {
          "display": "/crawl betterup.com",
          "pastedContents": {}
        },
        {
          "display": "Update the prompt so that it first attempts to wget the sitemap (into the proper output directory)\n\nand also add your guidance to it.",
          "pastedContents": {}
        },
        {
          "display": "/crawl betterup.com",
          "pastedContents": {}
        },
        {
          "display": "What can I do in the PROMPT to make sure this doesn't happen again?",
          "pastedContents": {}
        },
        {
          "display": "let me stop you right there.\n\nwhy does @output/betterup.com/cloud-technology-sales-case-study.md file not contain the actual phrasing from the webpage?  I see this on the page:  \"A group of sales leaders across the global organization elected to receive 12 months of unlimited 1:1 BetterUp® coaching and specialty network coaching (Communication, Sleep, Nutrition). Each leader was matched with an ICF-certified Coach who addressed that leader’s highest-priority needs to help unlock their capability to drive revenue. With direct, ongoing, and focused support from a third party, sales leaders could focus on their skills development without the distractions of tactical issues that are likely to occur in 1:1 meetings with a supervisor.\"",
          "pastedContents": {}
        },
        {
          "display": "the betterup.com sitemap is too large.  what can we do about that?  perhaps we could wget the whole sitemap and iterate through it?",
          "pastedContents": {}
        },
        {
          "display": "/crawl betterup.com",
          "pastedContents": {}
        },
        {
          "display": "at the top of the prompt put \"Ultrathink.  Think step-by-step and take your time.  This job can take up to two hours.\"",
          "pastedContents": {}
        },
        {
          "display": "ultrathink.   think slowly and go step-by-step.\n\nI want you to crawl betterup.com's entire site, and see if there are any key pages that were missed by our crawl prompt @PROMPT_CRAWL.md \n\nI want you to update the prompt so claude does not miss these things in the future.",
          "pastedContents": {}
        },
        {
          "display": "go through all the markdown files we currently have in output, and if they don't have a source URL, use google to find the original article so you can add the source URL to it.",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastTotalWebSearchRequests": 20,
      "exampleFiles": [
        "PROMPT_CRAWL.md",
        "scrape.sh",
        "html_to_markdown.py",
        "README.md",
        ".gitignore"
      ],
      "exampleFilesGeneratedAt": 1752098366535,
      "lastCost": 10.908622449999992,
      "lastAPIDuration": 1327354,
      "lastDuration": 10221284,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 170236,
      "lastTotalOutputTokens": 37807,
      "lastTotalCacheCreationInputTokens": 186987,
      "lastTotalCacheReadInputTokens": 3037464,
      "lastSessionId": "ee4256b6-7e3f-465d-b179-4551c4816389"
    },
    "/Users/dorkitude/a/dev/bourd.ai": {
      "allowedTools": [],
      "history": [
        {
          "display": "update my db so everything Document that has a type \"podcast_episode\" is converted to \"audiobook_chapter\"",
          "pastedContents": {}
        },
        {
          "display": "I don't see the audio_extracted field in the crud UI",
          "pastedContents": {}
        },
        {
          "display": "I want to flatten my s3 bucket so all the files are in the root folder.  Give me a script that does that via aws CLI.",
          "pastedContents": {}
        },
        {
          "display": "give me a db crud UI in flask, just a hidden route /crud that works basically like railsadmin",
          "pastedContents": {}
        },
        {
          "display": "don't delete the MP3s though, keep those on my local disk",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +105 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "dorkitude ~/a/dev/bourd.ai/app [master] $ uv run python scripts/extract_audio_from_videos.py --max-videos 1\n2025-07-09 17:46:20,809 - __main__ - INFO - Loaded credentials from /Users/dorkitude/a/dev/bourd.ai/app/s3-bourdain-credentials.json\n2025-07-09 17:46:20,847 - __main__ - INFO - Processing videos from database where audio_extracted=False\nTraceback (most recent call last):\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/scripts/extract_audio_from_videos.py\", line 355, in <module>\n    main()\n    ~~~~^^\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/scripts/extract_audio_from_videos.py\", line 348, in main\n    extractor.process_videos_from_db(\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        prefix=args.prefix,\n        ^^^^^^^^^^^^^^^^^^^\n        max_videos=args.max_videos\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/scripts/extract_audio_from_videos.py\", line 257, in process_videos_from_db\n    videos = self.get_unprocessed_videos(prefix=prefix, limit=max_videos)\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/scripts/extract_audio_from_videos.py\", line 250, in get_unprocessed_videos\n    return query.all()\n           ~~~~~~~~~^^\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/query.py\", line 2704, in all\n    return self._iter().all()  # type: ignore\n           ~~~~~~~~~~^^\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/query.py\", line 2857, in _iter\n    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(\n                                                  ~~~~~~~~~~~~~~~~~~~~^\n        statement,\n        ^^^^^^^^^^\n        params,\n        ^^^^^^^\n        execution_options={\"_sa_orm_load_options\": self.load_options},\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py\", line 2365, in execute\n    return self._execute_internal(\n           ~~~~~~~~~~~~~~~~~~~~~~^\n        statement,\n        ^^^^^^^^^^\n    ...<4 lines>...\n        _add_event=_add_event,\n        ^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py\", line 2251, in _execute_internal\n    result: Result[Any] = compile_state_cls.orm_execute_statement(\n                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        self,\n        ^^^^^\n    ...<4 lines>...\n        conn,\n        ^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/context.py\", line 306, in orm_execute_statement\n    result = conn.execute(\n        statement, params or {}, execution_options=execution_options\n    )\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 1415, in execute\n    return meth(\n        self,\n        distilled_parameters,\n        execution_options or NO_OPTIONS,\n    )\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py\", line 523, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        self, distilled_params, execution_options\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 1637, in _execute_clauseelement\n    ret = self._execute_context(\n        dialect,\n    ...<8 lines>...\n        cache_hit=cache_hit,\n    )\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 1842, in _execute_context\n    return self._exec_single_context(\n           ~~~~~~~~~~~~~~~~~~~~~~~~~^\n        dialect, context, statement, parameters\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 1982, in _exec_single_context\n    self._handle_dbapi_exception(\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        e, str_statement, effective_parameters, cursor, context\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 2354, in _handle_dbapi_exception\n    raise exc_info[1].with_traceback(exc_info[2])\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 1963, in _exec_single_context\n    self.dialect.do_execute(\n    ~~~~~~~~~~~~~~~~~~~~~~~^\n        cursor, str_statement, effective_parameters, context\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/Users/dorkitude/a/dev/bourd.ai/app/.venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py\", line 943, in do_execute\n    cursor.execute(statement, parameters)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\nValueError: no such column: documents.audio_extracted\ndorkitude ~/a/dev/bourd.ai/app [master] $"
            }
          }
        },
        {
          "display": "/model ",
          "pastedContents": {}
        },
        {
          "display": "I'd like it to use the DB to decide, that way it only grabs files where audio_extracted is False.",
          "pastedContents": {}
        },
        {
          "display": "how is the script deciding which files to start with?",
          "pastedContents": {}
        },
        {
          "display": "it should also update the DB record for that video and set the \"audio_extracted\" boolean to true.   this is a new field you have to make, which will defualt to false.",
          "pastedContents": {}
        },
        {
          "display": "write me a script that will do the following:\n\nfor each video file in the s3 bucket, download it to the media directory.  then use ffmpeg to convert it to an mp3 file with the prefix \"extracted_audio_\".  then upload that mp3 file to the s3 bucket.  then delete the local copy of the video file.",
          "pastedContents": {}
        },
        {
          "display": "update my @scripts/s3_crawler.py script to ignore files starting with the prefix \"skip_me_\"",
          "pastedContents": {}
        },
        {
          "display": "What's the best way to turn an mp3 into a timestamped transcription of some kind?",
          "pastedContents": {}
        },
        {
          "display": "base it on the @scripts/s3_crawler.py script",
          "pastedContents": {}
        },
        {
          "display": "upload all the mp3s from @media/A_Cook's_Tour/ to the s3 bucket",
          "pastedContents": {}
        },
        {
          "display": "upload all of these files to the s3 bucket",
          "pastedContents": {}
        },
        {
          "display": "convert these all to mp3s",
          "pastedContents": {}
        },
        {
          "display": "update my templates so they all look like the tokyonight theme",
          "pastedContents": {}
        },
        {
          "display": "copy all the audio files from the Disc folders into ./\n\nname them like \"A_Cook's_Tour_01_03\"  where \"01\" is the dic and \"03\" is the part",
          "pastedContents": {}
        },
        {
          "display": "now upload them all into the S3 bucket",
          "pastedContents": {}
        },
        {
          "display": "rename these files to be simply  \"Kitchen Confidential Part 1.mp3\" etc",
          "pastedContents": {}
        },
        {
          "display": "ImportError: cannot import name 'User' from 'models' (/Users/dorkitude/a/dev/bourd.ai/app/models.py)",
          "pastedContents": {}
        },
        {
          "display": "give me a script to wipe the db",
          "pastedContents": {}
        },
        {
          "display": "the part where we infer content type should look at file extensions, i think",
          "pastedContents": {}
        },
        {
          "display": "let's update the homepage with a simple index that links to this page",
          "pastedContents": {}
        },
        {
          "display": "dorkitude ~/a/dev/bourd.ai/app [master] $ os\n[2] 96965\nsystem | Tmux socket name: overmind-app-hbNSUow_GuKWofVYrGKNr\nsystem | Tmux session ID: app\nsystem | Listening at ./.overmind.sock\nweb    | Started with pid 96972...\nweb    |  * Serving Flask app 'app.py'\nweb    |  * Debug mode: on\nweb    | Address already in use\nweb    | Port 5000 is in use by another program. Either identify and stop that program, or start the server with a different port.\nweb    | On macOS, try disabling the 'AirPlay Receiver' service from System Preferences -> General -> AirDrop & Handoff.\nweb    | Exited with code 1\n^C[2]  + terminated  ( while true; do; _set_title \"🧠 🧠 Overmind @ $folder 🧠 🧠\")\ndorkitude ~/a/dev/bourd.ai/app [master] $\n\n\nlet's use 5555",
          "pastedContents": {}
        },
        {
          "display": "kill whatever is using the port",
          "pastedContents": {}
        },
        {
          "display": "dorkitude ~/a/dev/bourd.ai/app [master] $ os\n[2] 96965\nsystem | Tmux socket name: overmind-app-hbNSUow_GuKWofVYrGKNr\nsystem | Tmux session ID: app\nsystem | Listening at ./.overmind.sock\nweb    | Started with pid 96972...\nweb    |  * Serving Flask app 'app.py'\nweb    |  * Debug mode: on\nweb    | Address already in use\nweb    | Port 5000 is in use by another program. Either identify and stop that program, or start the server with a different port.\nweb    | On macOS, try disabling the 'AirPlay Receiver' service from System Preferences -> General -> AirDrop & Handoff.\nweb    | Exited with code 1\n^C[2]  + terminated  ( while true; do; _set_title \"🧠 🧠 Overmind @ $folder 🧠 🧠\")\ndorkitude ~/a/dev/bourd.ai/app [master] $",
          "pastedContents": {}
        },
        {
          "display": "make me an overmind procfile that will run the flask server.",
          "pastedContents": {}
        },
        {
          "display": "how make me a simple flask html dashboard that shows what documents we have",
          "pastedContents": {}
        },
        {
          "display": "let's use libsql instead of turso because i just want to be local.  ",
          "pastedContents": {}
        },
        {
          "display": "let's get rid of postgres and instead use Turso\n\nhttps://docs.turso.tech/sdk/python/orm/sqlalchemy",
          "pastedContents": {}
        },
        {
          "display": "uv run python scripts/s3_crawler.py --dry-run",
          "pastedContents": {}
        },
        {
          "display": "bucket name should be bourdain",
          "pastedContents": {}
        },
        {
          "display": "try running\n\nuv run python scripts/s3_crawler.py --dry-run",
          "pastedContents": {}
        },
        {
          "display": "my crednetials are in s3-bourdain-credentials.json, reference those in the script?",
          "pastedContents": {}
        },
        {
          "display": "Make a python script that will crawl the S3 bucket & insert Document references for each file to the Document table in sqlalchemy.",
          "pastedContents": {}
        },
        {
          "display": "try running it",
          "pastedContents": {}
        },
        {
          "display": "help me use my AWS access key to create a less-permissive credential for use with my S3 bucket \"bourdain\"\n\nhttps://us-west-1.console.aws.amazon.com/s3/buckets/bourdain?region=us-west-1&tab=objects&bucketType=general\n\n",
          "pastedContents": {}
        },
        {
          "display": "fix favicons",
          "pastedContents": {}
        },
        {
          "display": "fix [Pasted text #1 +59 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "\nTypeError: create_app() takes 0 positional arguments but 2 were given\n10.220.160.181 - - [09/Jul/2025:23:10:39 +0000] \"GET / HTTP/1.1\" 500 0 \"-\" \"-\"\n     ==> Deploying...\n==> Running 'uv run gunicorn app:create_app --bind 0.0.0.0:$PORT'\nwarning: `VIRTUAL_ENV=/opt/render/project/src/.venv` does not match the project environment path `.venv` and will be ignored; use `--active` to target the active environment instead\nBytecode compiled 791 files in 375ms\n[2025-07-09 23:13:12 +0000] [94] [INFO] Starting gunicorn 23.0.0\n[2025-07-09 23:13:12 +0000] [94] [INFO] Listening at: http://0.0.0.0:10000 (94)\n[2025-07-09 23:13:12 +0000] [94] [INFO] Using worker: sync\n[2025-07-09 23:13:12 +0000] [95] [INFO] Booting worker with pid: 95\n[2025-07-09 23:13:14 +0000] [95] [ERROR] Error handling request /\nTraceback (most recent call last):\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 134, in handle\n    self.handle_request(listener, req, client, addr)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 177, in handle_request\n    respiter = self.wsgi(environ, resp.start_response)\nTypeError: create_app() takes 0 positional arguments but 2 were given\n127.0.0.1 - - [09/Jul/2025:23:13:14 +0000] \"HEAD / HTTP/1.1\" 500 0 \"-\" \"-\"\n     ==> Your service is live 🎉\n     ==> \n     ==> ///////////////////////////////////////////////////////////\n     ==> \n     ==> Available at your primary URL https://bourd.ai + 2 more domains\n     ==> \n     ==> ///////////////////////////////////////////////////////////\n     [GET]500bourd-ai.onrender.com/clientIP=\"34.82.26.101\" requestID=\"e2fef190-6408-4a69\" responseTimeMS=3 responseBytes=240 userAgent=\"Go-http-client/2.0\"\n[2025-07-09 23:13:19 +0000] [112] [ERROR] Error handling request /\nTraceback (most recent call last):\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 134, in handle\n    self.handle_request(listener, req, client, addr)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 177, in handle_request\n    respiter = self.wsgi(environ, resp.start_response)\nTypeError: create_app() takes 0 positional arguments but 2 were given\n10.220.220.70 - - [09/Jul/2025:23:13:19 +0000] \"GET / HTTP/1.1\" 500 0 \"-\" \"-\"\n[2025-07-09 23:14:17 +0000] [111] [INFO] Handling signal: term\n[2025-07-09 23:14:17 +0000] [112] [INFO] Worker exiting (pid: 112)\n[2025-07-09 23:14:17 +0000] [111] [INFO] Shutting down: Master\n     [GET]500bourd.ai/favicon.icoclientIP=\"135.180.163.49\" requestID=\"6d4d3998-a803-4cb9\" responseTimeMS=6 responseBytes=240 userAgent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36\"\n     [GET]500bourd.ai/clientIP=\"135.180.163.49\" requestID=\"6fb791b1-5bb4-442f\" responseTimeMS=33 responseBytes=240 userAgent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36\"\n[2025-07-09 23:14:35 +0000] [95] [ERROR] Error handling request /\nTraceback (most recent call last):\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 134, in handle\n    self.handle_request(listener, req, client, addr)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 177, in handle_request\n    respiter = self.wsgi(environ, resp.start_response)\nTypeError: create_app() takes 0 positional arguments but 2 were given\n10.220.111.7 - - [09/Jul/2025:23:14:35 +0000] \"GET / HTTP/1.1\" 500 0 \"-\" \"-\"\n[2025-07-09 23:14:35 +0000] [95] [ERROR] Error handling request /favicon.ico\nTraceback (most recent call last):\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 134, in handle\n    self.handle_request(listener, req, client, addr)\n10.220.111.7 - - [09/Jul/2025:23:14:35 +0000] \"GET /favicon.ico HTTP/1.1\" 500 0 \"-\" \"-\"\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 177, in handle_request\n    respiter = self.wsgi(environ, resp.start_response)\nTypeError: create_app() takes 0 positional arguments but 2 were given"
            }
          }
        },
        {
          "display": "commit and push",
          "pastedContents": {}
        },
        {
          "display": "run the flask server",
          "pastedContents": {}
        },
        {
          "display": "I set the env variable in the dashboard for SQLALCHEMY_DATABASE_URI and it's correct\n\nbut i'm still seeing this in the deploy logs:\n\n[Pasted text #1 +115 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "M\nMy Workspace\nbourd.ai\nMenu\nprodweb\nMenu\nbourd.ai\nMenu\n\nSearch\nCommand+\nK\n\nNew\n\n\nEnvironment\nbourd.ai\nEvents\nSettings\nMonitor\nLogs\nMetrics\nManage\nEnvironment\nShell\nScaling\nPreviews\nDisks\nJobs\n\nChangelog\nInvite a friend\n\nContact support\nRender Status\nWeb Service\nbourd.ai\nPython 3\nStarter\n\nConnect\n\nManual Deploy\ndorkitude / bourd.ai\nmaster\n\nbourd.ai\nInternal Address\nbourd-ai:10000\n\nHTTP\nJuly 9, 2025 at 4:05 PM\nfailed\n9b70d71\nnew favicon\n\nRollback\nExited with status 1 while running your code.\nRead our docs for common ways to troubleshoot your deploy.\nbourd.ai\nprodweb\nbourd.ai\n\nLogs\n\nAll logs\nSearch\nSearch\n\nJul 9, 4:04 PM - 4:07 PM\nPDT\nMenu\n\n==> Cloning from https://github.com/dorkitude/bourd.ai\n==> Checking out commit 9b70d71ce112f5a9ad97d36fcb663ed634c1841b in branch master\n==> Downloading cache...\n==> Transferred 137MB in 8s. Extraction took 2s.\n==> Using Python version 3.13.4 (default)\n==> Docs on specifying a Python version: https://render.com/docs/python-version\n==> Using Poetry version 2.1.3 (default)\n==> Docs on specifying a Poetry version: https://render.com/docs/poetry-version\n==> Using uv version 0.7.12 (default)\n==> Docs on specifying a uv version: https://render.com/docs/uv-version\n==> Running build command 'pip install uv && uv sync'...\nCollecting uv\n  Using cached uv-0.7.20-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\nUsing cached uv-0.7.20-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.4 MB)\nInstalling collected packages: uv\nSuccessfully installed uv-0.7.20\nwarning: `VIRTUAL_ENV=/opt/render/project/src/.venv` does not match the project environment path `.venv` and will be ignored; use `--active` to target the active environment instead\nResolved 27 packages in 1ms\nBytecode compiled 791 files in 95ms\n==> Uploading build...\n==> Uploaded in 6.6s. Compression took 1.6s\n==> Build successful 🎉\n==> Deploying...\n==> Running 'uv run gunicorn app:create_app --bind 0.0.0.0:$PORT'\nwarning: `VIRTUAL_ENV=/opt/render/project/src/.venv` does not match the project environment path `.venv` and will be ignored; use `--active` to target the active environment instead\nBytecode compiled 791 files in 482ms\nError: Either 'SQLALCHEMY_DATABASE_URI' or 'SQLALCHEMY_BINDS' must be set.\n==> Exited with status 1\n==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys\n==> Running 'uv run gunicorn app:create_app --bind 0.0.0.0:$PORT'\nwarning: `VIRTUAL_ENV=/opt/render/project/src/.venv` does not match the project environment path `.venv` and will be ignored; use `--active` to target the active environment instead\nBytecode compiled 791 files in 474ms\nError: Either 'SQLALCHEMY_DATABASE_URI' or 'SQLALCHEMY_BINDS' must be set.\nNeed better ways to work with logs? Try theRender CLIor set up a log stream integration \n\n0 services selected:\n\nMove\n\nGenerate Blueprint\n\n"
            }
          }
        },
        {
          "display": "i'll set it in the dashboard and redeploy.\n\ncheck my deploy status with render CLI.",
          "pastedContents": {}
        },
        {
          "display": "fix [Pasted text #1 +115 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "M\nMy Workspace\nbourd.ai\nMenu\nprodweb\nMenu\nbourd.ai\nMenu\n\nSearch\nCommand+\nK\n\nNew\n\n\nEnvironment\nbourd.ai\nEvents\nSettings\nMonitor\nLogs\nMetrics\nManage\nEnvironment\nShell\nScaling\nPreviews\nDisks\nJobs\n\nChangelog\nInvite a friend\n\nContact support\nRender Status\nWeb Service\nbourd.ai\nPython 3\nStarter\n\nConnect\n\nManual Deploy\ndorkitude / bourd.ai\nmaster\n\nbourd.ai\nInternal Address\nbourd-ai:10000\n\nHTTP\nJuly 9, 2025 at 4:02 PM\nfailed\n9b70d71\nnew favicon\n\nRollback\nExited with status 1 while running your code.\nRead our docs for common ways to troubleshoot your deploy.\nbourd.ai\nprodweb\nbourd.ai\n\nLogs\n\nAll logs\nSearch\nSearch\n\nJul 9, 4:01 PM - 4:04 PM\nPDT\nMenu\n\n==> Cloning from https://github.com/dorkitude/bourd.ai\n==> Checking out commit 9b70d71ce112f5a9ad97d36fcb663ed634c1841b in branch master\n==> Downloading cache...\n==> Transferred 137MB in 8s. Extraction took 3s.\n==> Using Python version 3.13.4 (default)\n==> Docs on specifying a Python version: https://render.com/docs/python-version\n==> Using Poetry version 2.1.3 (default)\n==> Docs on specifying a Poetry version: https://render.com/docs/poetry-version\n==> Using uv version 0.7.12 (default)\n==> Docs on specifying a uv version: https://render.com/docs/uv-version\n==> Running build command 'pip install uv && uv sync'...\nCollecting uv\n  Using cached uv-0.7.20-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\nUsing cached uv-0.7.20-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.4 MB)\nInstalling collected packages: uv\nSuccessfully installed uv-0.7.20\nwarning: `VIRTUAL_ENV=/opt/render/project/src/.venv` does not match the project environment path `.venv` and will be ignored; use `--active` to target the active environment instead\nResolved 27 packages in 0.90ms\nBytecode compiled 791 files in 107ms\n==> Uploading build...\n==> Uploaded in 4.8s. Compression took 1.7s\n==> Build successful 🎉\n==> Deploying...\n==> Running 'uv run gunicorn app:create_app --bind 0.0.0.0:$PORT'\nwarning: `VIRTUAL_ENV=/opt/render/project/src/.venv` does not match the project environment path `.venv` and will be ignored; use `--active` to target the active environment instead\nBytecode compiled 791 files in 395ms\nError: Either 'SQLALCHEMY_DATABASE_URI' or 'SQLALCHEMY_BINDS' must be set.\n==> Exited with status 1\n==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys\n==> Running 'uv run gunicorn app:create_app --bind 0.0.0.0:$PORT'\nwarning: `VIRTUAL_ENV=/opt/render/project/src/.venv` does not match the project environment path `.venv` and will be ignored; use `--active` to target the active environment instead\nBytecode compiled 791 files in 459ms\nError: Either 'SQLALCHEMY_DATABASE_URI' or 'SQLALCHEMY_BINDS' must be set.\nNeed better ways to work with logs? Try theRender CLIor set up a log stream integration \n\n0 services selected:\n\nMove\n\nGenerate Blueprint\n\n"
            }
          }
        },
        {
          "display": "you put them in weird places.  it should just be app/static/[files]  not app/static/app/static/[files]",
          "pastedContents": {}
        },
        {
          "display": "make me a favicon out of this:\n\n[Image #1]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "image",
              "content": "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",
              "mediaType": "image/png"
            }
          }
        },
        {
          "display": "now fix:\n\n[Pasted text #1 +41 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "\n[2025-07-09 22:48:18 +0000] [111] [INFO] Shutting down: Master\n     [GET]500bourd.ai/favicon.icoclientIP=\"135.180.163.49\" requestID=\"d1a0d577-c6db-473f\" responseTimeMS=10 responseBytes=240 userAgent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36\"\n     [GET]500bourd.ai/clientIP=\"135.180.163.49\" requestID=\"dab94c47-3dbc-4d4c\" responseTimeMS=3 responseBytes=240 userAgent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36\"\n[2025-07-09 22:49:06 +0000] [112] [ERROR] Error handling request /\n10.220.160.181 - - [09/Jul/2025:22:49:06 +0000] \"GET / HTTP/1.1\" 500 0 \"-\" \"-\"\nTraceback (most recent call last):\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 134, in handle\n    self.handle_request(listener, req, client, addr)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 177, in handle_request\n    respiter = self.wsgi(environ, resp.start_response)\nTypeError: create_app() takes 0 positional arguments but 2 were given\n[2025-07-09 22:49:06 +0000] [112] [ERROR] Error handling request /favicon.ico\nTraceback (most recent call last):\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 134, in handle\n    self.handle_request(listener, req, client, addr)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 177, in handle_request\n    respiter = self.wsgi(environ, resp.start_response)\nTypeError: create_app() takes 0 positional arguments but 2 were given\n10.220.118.171 - - [09/Jul/2025:22:49:06 +0000] \"GET /favicon.ico HTTP/1.1\" 500 0 \"-\" \"-\"\n     [GET]500bourd.ai/clientIP=\"135.180.163.49\" requestID=\"85a57958-85be-49d4\" responseTimeMS=3 responseBytes=240 userAgent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36\"\n     [GET]500bourd.ai/favicon.icoclientIP=\"135.180.163.49\" requestID=\"ef36b8d9-1b8a-48be\" responseTimeMS=3 responseBytes=240 userAgent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36\"\n[2025-07-09 22:50:55 +0000] [112] [ERROR] Error handling request /\n10.220.71.44 - - [09/Jul/2025:22:50:55 +0000] \"GET / HTTP/1.1\" 500 0 \"-\" \"-\"\nTraceback (most recent call last):\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 134, in handle\n    self.handle_request(listener, req, client, addr)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 177, in handle_request\n    respiter = self.wsgi(environ, resp.start_response)\nTypeError: create_app() takes 0 positional arguments but 2 were given\n[2025-07-09 22:50:55 +0000] [112] [ERROR] Error handling request /favicon.ico\nTraceback (most recent call last):\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 134, in handle\n    self.handle_request(listener, req, client, addr)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/workers/sync.py\", line 177, in handle_request\n    respiter = self.wsgi(environ, resp.start_response)\nTypeError: create_app() takes 0 positional arguments but 2 were given\n10.220.6.238 - - [09/Jul/2025:22:50:55 +0000] \"GET /favicon.ico HTTP/1.1\" 500 0 \"-\" \"-\""
            }
          }
        },
        {
          "display": "the script has no creds.  don't gitignore it.",
          "pastedContents": {}
        },
        {
          "display": "put those commands into a script called ./migrate\n\n(don't export the db URL, grab it from .env which is .gitignored)",
          "pastedContents": {}
        },
        {
          "display": "put those commands into a script called ./migrate\n\ngitignore it since it has credentials",
          "pastedContents": {}
        },
        {
          "display": "try again i needed to whitelist my ip",
          "pastedContents": {}
        },
        {
          "display": "db name is\n\nprod_r4vy\n\n\nexternal db url is postgresql://dorkitude:pOD6VUSp4o32EOkjFTWVwsyLEMWJPTzO@dpg-d1nchhc9c44c73f1em00-a.oregon-postgres.render.com/prod_r4vy",
          "pastedContents": {}
        },
        {
          "display": "i think the database is called dorkdb",
          "pastedContents": {}
        },
        {
          "display": "honestly I'd rather run migrations from here, since i'll be doing appdev directly against the production DB",
          "pastedContents": {}
        },
        {
          "display": "are we going to need a db migration setup?  i can add a command to the dashboard if so",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +171 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "\n + click==8.2.1\n + flask==3.1.1\n + flask-migrate==4.1.0\n + flask-sqlalchemy==3.1.1\n + greenlet==3.2.3\n + gunicorn==23.0.0\n + itsdangerous==2.2.0\n + jinja2==3.1.6\n + jmespath==1.0.1\n + mako==1.3.10\n + markupsafe==3.0.2\n + packaging==25.0\n + psycopg2-binary==2.9.10\n + python-dateutil==2.9.0.post0\n + python-dotenv==1.1.1\n + s3transfer==0.13.0\n + six==1.17.0\n + sqlalchemy==2.0.41\n + typing-extensions==4.14.1\n + urllib3==2.5.0\n + werkzeug==3.1.3\n==> Uploading build...\n==> Uploaded in 5.4s. Compression took 2.3s\n==> Build successful 🎉\n==> Deploying...\n==> Running 'uv run gunicorn app:create_app --bind 0.0.0.0:$PORT'\nwarning: `VIRTUAL_ENV=/opt/render/project/src/.venv` does not match the project environment path `.venv` and will be ignored; use `--active` to target the active environment instead\nBytecode compiled 791 files in 4.95s\nTraceback (most recent call last):\n  File \"/opt/render/project/src/app/.venv/bin/gunicorn\", line 10, in <module>\n    sys.exit(run())\n             ~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/wsgiapp.py\", line 66, in run\n    WSGIApplication(\"%(prog)s [OPTIONS] [APP_MODULE]\", prog=prog).run()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/base.py\", line 235, in run\n    super().run()\n    ~~~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/base.py\", line 71, in run\n    Arbiter(self).run()\n    ~~~~~~~^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/arbiter.py\", line 57, in __init__\n    self.setup(app)\n    ~~~~~~~~~~^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/arbiter.py\", line 117, in setup\n    self.app.wsgi()\n    ~~~~~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/base.py\", line 66, in wsgi\n    self.callable = self.load()\n                    ~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/wsgiapp.py\", line 57, in load\n    return self.load_wsgiapp()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/wsgiapp.py\", line 47, in load_wsgiapp\n    return util.import_app(self.app_uri)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/util.py\", line 370, in import_app\n    mod = importlib.import_module(module)\n  File \"/usr/local/lib/python3.13/importlib/__init__.py\", line 88, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<frozen importlib._bootstrap>\", line 1387, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 1360, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 1331, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 935, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 1026, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 488, in _call_with_frames_removed\n  File \"/opt/render/project/src/app/app.py\", line 3, in <module>\n    from models import db\n  File \"/opt/render/project/src/app/models.py\", line 20, in <module>\n    class Document(db.Model):\n    ...<16 lines>...\n        chunks = relationship(\"DocumentChunk\", back_populates=\"document\", cascade=\"all, delete-orphan\")\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/flask_sqlalchemy/model.py\", line 92, in __init__\n    super().__init__(name, bases, d, **kwargs)\n    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/flask_sqlalchemy/model.py\", line 144, in __init__\n    super().__init__(name, bases, d, **kwargs)\n    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/decl_api.py\", line 198, in __init__\n    _as_declarative(reg, cls, dict_)\n    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py\", line 244, in _as_declarative\n    return _MapperConfig.setup_mapping(registry, cls, dict_, None, {})\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py\", line 325, in setup_mapping\n    return _ClassScanMapperConfig(\n        registry, cls_, dict_, table, mapper_kw\n    )\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py\", line 572, in __init__\n    self._extract_mappable_attributes()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py\", line 1529, in _extract_mappable_attributes\n    raise exc.InvalidRequestError(\n    ...<2 lines>...\n    )\nsqlalchemy.exc.InvalidRequestError: Attribute name 'metadata' is reserved when using the Declarative API.\n==> Exited with status 1\n==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys\n==> Running 'uv run gunicorn app:create_app --bind 0.0.0.0:$PORT'\nwarning: `VIRTUAL_ENV=/opt/render/project/src/.venv` does not match the project environment path `.venv` and will be ignored; use `--active` to target the active environment instead\nBytecode compiled 791 files in 4.90s\nTraceback (most recent call last):\n  File \"/opt/render/project/src/app/.venv/bin/gunicorn\", line 10, in <module>\n    sys.exit(run())\n             ~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/wsgiapp.py\", line 66, in run\n    WSGIApplication(\"%(prog)s [OPTIONS] [APP_MODULE]\", prog=prog).run()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/base.py\", line 235, in run\n    super().run()\n    ~~~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/base.py\", line 71, in run\n    Arbiter(self).run()\n    ~~~~~~~^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/arbiter.py\", line 57, in __init__\n    self.setup(app)\n    ~~~~~~~~~~^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/arbiter.py\", line 117, in setup\n    self.app.wsgi()\n    ~~~~~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/base.py\", line 66, in wsgi\n    self.callable = self.load()\n                    ~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/wsgiapp.py\", line 57, in load\n    return self.load_wsgiapp()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/app/wsgiapp.py\", line 47, in load_wsgiapp\n    return util.import_app(self.app_uri)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/gunicorn/util.py\", line 370, in import_app\n    mod = importlib.import_module(module)\n  File \"/usr/local/lib/python3.13/importlib/__init__.py\", line 88, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<frozen importlib._bootstrap>\", line 1387, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 1360, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 1331, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 935, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 1026, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 488, in _call_with_frames_removed\n  File \"/opt/render/project/src/app/app.py\", line 3, in <module>\n    from models import db\n  File \"/opt/render/project/src/app/models.py\", line 20, in <module>\n    class Document(db.Model):\n    ...<16 lines>...\n        chunks = relationship(\"DocumentChunk\", back_populates=\"document\", cascade=\"all, delete-orphan\")\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/flask_sqlalchemy/model.py\", line 92, in __init__\n    super().__init__(name, bases, d, **kwargs)\n    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/flask_sqlalchemy/model.py\", line 144, in __init__\n    super().__init__(name, bases, d, **kwargs)\n    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/decl_api.py\", line 198, in __init__\n    _as_declarative(reg, cls, dict_)\n    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py\", line 244, in _as_declarative\n    return _MapperConfig.setup_mapping(registry, cls, dict_, None, {})\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py\", line 325, in setup_mapping\n    return _ClassScanMapperConfig(\n        registry, cls_, dict_, table, mapper_kw\n    )\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py\", line 572, in __init__\n    self._extract_mappable_attributes()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/opt/render/project/src/app/.venv/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py\", line 1529, in _extract_mappable_attributes\n    raise exc.InvalidRequestError(\n    ...<2 lines>...\n    )\nsqlalchemy.exc.InvalidRequestError: Attribute name 'metadata' is reserved when using the Declarative API."
            }
          }
        },
        {
          "display": "okay let's just get rid of render.yaml then and i'll do it via dashboard for now",
          "pastedContents": {}
        },
        {
          "display": "search their docs and the web / reddit to see what other people are doin about this",
          "pastedContents": {}
        },
        {
          "display": "I'd rather it be code-controlled though.",
          "pastedContents": {}
        },
        {
          "display": "the dashboard says i HAVE to have a build command and a start command\n\ncan i just put `echo \"hi\"` in there?",
          "pastedContents": {}
        },
        {
          "display": "how does the render.yaml interact with whatever i've put into the render dashboard under project settings?",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +15 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "==> Cloning from https://github.com/dorkitude/bourd.ai\n==> Checking out commit fddaa7f86f9ce4353e2a887511d1930d8bae0a39 in branch master\n==> Using Python version 3.13.4 (default)\n==> Docs on specifying a Python version: https://render.com/docs/python-version\n==> Using Poetry version 2.1.3 (default)\n==> Docs on specifying a Poetry version: https://render.com/docs/poetry-version\n==> Running build command 'pip install uv && uv sync'...\nCollecting uv\n  Downloading uv-0.7.20-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\nDownloading uv-0.7.20-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.4 MB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 18.4/18.4 MB 49.5 MB/s eta 0:00:00\nInstalling collected packages: uv\nSuccessfully installed uv-0.7.20\nerror: No `pyproject.toml` found in current directory or any parent directory\n==> Build failed 😞\n==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys"
            }
          }
        },
        {
          "display": "failed:\n\nExited with status 127 while building your code.\nRead our docs for common ways to troubleshoot your deploy.\n\n",
          "pastedContents": {}
        },
        {
          "display": "cehck on deploy status",
          "pastedContents": {}
        },
        {
          "display": "do it.",
          "pastedContents": {}
        },
        {
          "display": "no you need to move the app to the app directory.",
          "pastedContents": {}
        },
        {
          "display": "fix deploy:\n\n[Pasted text #1 +57 lines]",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "==> Cloning from https://github.com/dorkitude/bourd.ai\n==> Checking out commit f70c20e15530d367e4aab409b145f5ab8d014f20 in branch master\n==> Using Python version 3.13.4 (default)\n==> Docs on specifying a Python version: https://render.com/docs/python-version\n==> Using Poetry version 2.1.3 (default)\n==> Docs on specifying a Poetry version: https://render.com/docs/poetry-version\n==> Installing uv version 0.7.12...\n==> Using uv version 0.7.12 (default)\n==> Docs on specifying a uv version: https://render.com/docs/uv-version\n==> Running build command 'uv sync'...\nwarning: `VIRTUAL_ENV=/opt/render/project/src/.venv` does not match the project environment path `.venv` and will be ignored; use `--active` to target the active environment instead\nUsing CPython 3.13.4 interpreter at: /usr/local/bin/python3.13\nCreating virtual environment at: .venv\nResolved 27 packages in 1ms\nDownloading psycopg2-binary (2.9MiB)\nDownloading sqlalchemy (3.1MiB)\nDownloading botocore (13.2MiB)\n Downloading psycopg2-binary\n Downloading sqlalchemy\n Downloading botocore\nPrepared 25 packages in 931ms\nInstalled 25 packages in 161ms\nBytecode compiled 791 files in 1.99s\n + alembic==1.16.3\n + blinker==1.9.0\n + boto3==1.39.3\n + botocore==1.39.3\n + click==8.2.1\n + flask==3.1.1\n + flask-migrate==4.1.0\n + flask-sqlalchemy==3.1.1\n + greenlet==3.2.3\n + gunicorn==23.0.0\n + itsdangerous==2.2.0\n + jinja2==3.1.6\n + jmespath==1.0.1\n + mako==1.3.10\n + markupsafe==3.0.2\n + packaging==25.0\n + psycopg2-binary==2.9.10\n + python-dateutil==2.9.0.post0\n + python-dotenv==1.1.1\n + s3transfer==0.13.0\n + six==1.17.0\n + sqlalchemy==2.0.41\n + typing-extensions==4.14.1\n + urllib3==2.5.0\n + werkzeug==3.1.3\n==> Uploading build...\n==> Uploaded in 4.1s. Compression took 2.2s\n==> Build successful 🎉\n==> Deploying...\n==> Running 'gunicorn app:create_app --bind 0.0.0.0:$PORT'\nbash: line 1: gunicorn: command not found\n==> Exited with status 127\n==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys\n==> Running 'gunicorn app:create_app --bind 0.0.0.0:$PORT'\nbash: line 1: gunicorn: command not found"
            }
          }
        },
        {
          "display": "can you check the deploy status via CLI though?",
          "pastedContents": {}
        },
        {
          "display": "can you check it?",
          "pastedContents": {}
        },
        {
          "display": "okay commit and deploy, then check on the deployment.",
          "pastedContents": {}
        },
        {
          "display": "i want this to use uv for everything, not requirements.txt",
          "pastedContents": {}
        },
        {
          "display": "I don't think render has a service for this in my project yet\n\ncan you see that in the CLI?",
          "pastedContents": {}
        },
        {
          "display": "done\n\ncommit and deploy please",
          "pastedContents": {}
        },
        {
          "display": "okay my render DB is setup.  i think i'm going to need to configure the local envto hit the external URL, and the production env (which i need help setting up) to use the internal URL?",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastTotalWebSearchRequests": 0,
      "exampleFiles": [
        "routes.py",
        "models.py",
        "app.py",
        "uv.lock",
        "pyproject.toml"
      ],
      "exampleFilesGeneratedAt": 1752102284198,
      "lastCost": 1.53522105,
      "lastAPIDuration": 143404,
      "lastDuration": 3531016,
      "lastLinesAdded": 127,
      "lastLinesRemoved": 2,
      "lastTotalInputTokens": 11529,
      "lastTotalOutputTokens": 4035,
      "lastTotalCacheCreationInputTokens": 33105,
      "lastTotalCacheReadInputTokens": 415799,
      "lastSessionId": "56d14762-3464-4b8e-a969-33843ffcec9b"
    }
  },
  "cachedChangelog": "# Changelog\n\n## 1.0.44\n\n- New /export command lets you quickly export a conversation for sharing\n- MCP: resource_link tool results are now supported\n- MCP: tool annotations and tool titles now display in /mcp view\n- Changed Ctrl+Z to suspend Claude Code. Resume by running `fg`. Prompt input undo is now Ctrl+U.\n\n## 1.0.43\n\n- Fixed a bug where the theme selector was saving excessively\n- Hooks: Added EPIPE system error handling\n\n## 1.0.42\n\n- Added tilde (`~`) expansion support to `/add-dir` command\n\n## 1.0.41\n\n- Hooks: Split Stop hook triggering into Stop and SubagentStop\n- Hooks: Enabled optional timeout configuration for each command\n- Hooks: Added \"hook_event_name\" to hook input\n- Fixed a bug where MCP tools would display twice in tool list\n- New tool parameters JSON for Bash tool in `tool_decision` event\n\n## 1.0.40\n\n- Fixed a bug causing API connection errors with UNABLE_TO_GET_ISSUER_CERT_LOCALLY if `NODE_EXTRA_CA_CERTS` was set\n\n## 1.0.39\n\n- New Active Time metric in OpenTelemetry logging\n\n## 1.0.38\n\n- Released hooks. Special thanks to community input in https://github.com/anthropics/claude-code/issues/712. Docs: https://docs.anthropic.com/en/docs/claude-code/hooks\n\n## 1.0.37\n\n- Remove ability to set `Proxy-Authorization` header via ANTHROPIC_AUTH_TOKEN or apiKeyHelper\n\n## 1.0.36\n\n- Web search now takes today's date into context\n- Fixed a bug where stdio MCP servers were not terminating properly on exit\n\n## 1.0.35\n\n- Added support for MCP OAuth Authorization Server discovery\n\n## 1.0.34\n\n- Fixed a memory leak causing a MaxListenersExceededWarning message to appear\n\n## 1.0.33\n\n- Improved logging functionality with session ID support\n- Added prompt input undo functionality (Ctrl+Z and vim 'u' command)\n- Improvements to plan mode\n\n## 1.0.32\n\n- Updated loopback config for litellm\n- Added forceLoginMethod setting to bypass login selection screen\n\n## 1.0.31\n\n- Fixed a bug where ~/.claude.json would get reset when file contained invalid JSON\n\n## 1.0.30\n\n- Custom slash commands: Run bash output, @-mention files, enable thinking with thinking keywords\n- Improved file path autocomplete with filename matching\n- Added timestamps in Ctrl-r mode and fixed Ctrl-c handling\n- Enhanced jq regex support for complex filters with pipes and select\n\n## 1.0.29\n\n- Improved CJK character support in cursor navigation and rendering\n\n## 1.0.28\n\n- Slash commands: Fix selector display during history navigation\n- Resizes images before upload to prevent API size limit errors\n- Added XDG_CONFIG_HOME support to configuration directory\n- Performance optimizations for memory usage\n- New attributes (terminal.type, language) in OpenTelemetry logging\n\n## 1.0.27\n\n- Streamable HTTP MCP servers are now supported\n- Remote MCP servers (SSE and HTTP) now support OAuth\n- MCP resources can now be @-mentioned\n- /resume slash command to switch conversations within Claude Code\n\n## 1.0.25\n\n- Slash commands: moved \"project\" and \"user\" prefixes to descriptions\n- Slash commands: improved reliability for command discovery\n- Improved support for Ghostty\n- Improved web search reliability\n\n## 1.0.24\n\n- Improved /mcp output\n- Fixed a bug where settings arrays got overwritten instead of merged\n\n## 1.0.23\n\n- Released TypeScript SDK: import @anthropic-ai/claude-code to get started\n- Released Python SDK: pip install claude-code-sdk to get started\n\n## 1.0.22\n\n- SDK: Renamed `total_cost` to `total_cost_usd`\n\n## 1.0.21\n\n- Improved editing of files with tab-based indentation\n- Fix for tool_use without matching tool_result errors\n- Fixed a bug where stdio MCP server processes would linger after quitting Claude Code\n\n## 1.0.18\n\n- Added --add-dir CLI argument for specifying additional working directories\n- Added streaming input support without require -p flag\n- Improved startup performance and session storage performance\n- Added CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR environment variable to freeze working directory for bash commands\n- Added detailed MCP server tools display (/mcp)\n- MCP authentication and permission improvements\n- Added auto-reconnection for MCP SSE connections on disconnect\n- Fixed issue where pasted content was lost when dialogs appeared\n\n## 1.0.17\n\n- We now emit messages from sub-tasks in -p mode (look for the parent_tool_use_id property)\n- Fixed crashes when the VS Code diff tool is invoked multiple times quickly\n- MCP server list UI improvements\n- Update Claude Code process title to display \"claude\" instead of \"node\"\n\n## 1.0.11\n\n- Claude Code can now also be used with a Claude Pro subscription\n- Added /upgrade for smoother switching to Claude Max plans\n- Improved UI for authentication from API keys and Bedrock/Vertex/external auth tokens\n- Improved shell configuration error handling\n- Improved todo list handling during compaction\n\n## 1.0.10\n\n- Added markdown table support\n- Improved streaming performance\n\n## 1.0.8\n\n- Fixed Vertex AI region fallback when using CLOUD_ML_REGION\n- Increased default otel interval from 1s -> 5s\n- Fixed edge cases where MCP_TIMEOUT and MCP_TOOL_TIMEOUT weren't being respected\n- Fixed a regression where search tools unnecessarily asked for permissions\n- Added support for triggering thinking non-English languages\n- Improved compacting UI\n\n## 1.0.7\n\n- Renamed /allowed-tools -> /permissions\n- Migrated allowedTools and ignorePatterns from .claude.json -> settings.json\n- Deprecated claude config commands in favor of editing settings.json\n- Fixed a bug where --dangerously-skip-permissions sometimes didn't work in --print mode\n- Improved error handling for /install-github-app\n- Bugfixes, UI polish, and tool reliability improvements\n\n## 1.0.6\n\n- Improved edit reliability for tab-indented files\n- Respect CLAUDE_CONFIG_DIR everywhere\n- Reduced unnecessary tool permission prompts\n- Added support for symlinks in @file typeahead\n- Bugfixes, UI polish, and tool reliability improvements\n\n## 1.0.4\n\n- Fixed a bug where MCP tool errors weren't being parsed correctly\n\n## 1.0.1\n\n- Added `DISABLE_INTERLEAVED_THINKING` to give users the option to opt out of interleaved thinking.\n- Improved model references to show provider-specific names (Sonnet 3.7 for Bedrock, Sonnet 4 for Console)\n- Updated documentation links and OAuth process descriptions\n\n## 1.0.0\n\n- Claude Code is now generally available\n- Introducing Sonnet 4 and Opus 4 models\n\n## 0.2.125\n\n- Breaking change: Bedrock ARN passed to `ANTHROPIC_MODEL` or `ANTHROPIC_SMALL_FAST_MODEL` should no longer contain an escaped slash (specify `/` instead of `%2F`)\n- Removed `DEBUG=true` in favor of `ANTHROPIC_LOG=debug`, to log all requests\n\n## 0.2.117\n\n- Breaking change: --print JSON output now returns nested message objects, for forwards-compatibility as we introduce new metadata fields\n- Introduced settings.cleanupPeriodDays\n- Introduced CLAUDE_CODE_API_KEY_HELPER_TTL_MS env var\n- Introduced --debug mode\n\n## 0.2.108\n\n- You can now send messages to Claude while it works to steer Claude in real-time\n- Introduced BASH_DEFAULT_TIMEOUT_MS and BASH_MAX_TIMEOUT_MS env vars\n- Fixed a bug where thinking was not working in -p mode\n- Fixed a regression in /cost reporting\n- Deprecated MCP wizard interface in favor of other MCP commands\n- Lots of other bugfixes and improvements\n\n## 0.2.107\n\n- CLAUDE.md files can now import other files. Add @path/to/file.md to ./CLAUDE.md to load additional files on launch\n\n## 0.2.106\n\n- MCP SSE server configs can now specify custom headers\n- Fixed a bug where MCP permission prompt didn't always show correctly\n\n## 0.2.105\n\n- Claude can now search the web\n- Moved system & account status to /status\n- Added word movement keybindings for Vim\n- Improved latency for startup, todo tool, and file edits\n\n## 0.2.102\n\n- Improved thinking triggering reliability\n- Improved @mention reliability for images and folders\n- You can now paste multiple large chunks into one prompt\n\n## 0.2.100\n\n- Fixed a crash caused by a stack overflow error\n- Made db storage optional; missing db support disables --continue and --resume\n\n## 0.2.98\n\n- Fixed an issue where auto-compact was running twice\n\n## 0.2.96\n\n- Claude Code can now also be used with a Claude Max subscription (https://claude.ai/upgrade)\n\n## 0.2.93\n\n- Resume conversations from where you left off from with \"claude --continue\" and \"claude --resume\"\n- Claude now has access to a Todo list that helps it stay on track and be more organized\n\n## 0.2.82\n\n- Added support for --disallowedTools\n- Renamed tools for consistency: LSTool -> LS, View -> Read, etc.\n\n## 0.2.75\n\n- Hit Enter to queue up additional messages while Claude is working\n- Drag in or copy/paste image files directly into the prompt\n- @-mention files to directly add them to context\n- Run one-off MCP servers with `claude --mcp-config <path-to-file>`\n- Improved performance for filename auto-complete\n\n## 0.2.74\n\n- Added support for refreshing dynamically generated API keys (via apiKeyHelper), with a 5 minute TTL\n- Task tool can now perform writes and run bash commands\n\n## 0.2.72\n\n- Updated spinner to indicate tokens loaded and tool usage\n\n## 0.2.70\n\n- Network commands like curl are now available for Claude to use\n- Claude can now run multiple web queries in parallel\n- Pressing ESC once immediately interrupts Claude in Auto-accept mode\n\n## 0.2.69\n\n- Fixed UI glitches with improved Select component behavior\n- Enhanced terminal output display with better text truncation logic\n\n## 0.2.67\n\n- Shared project permission rules can be saved in .claude/settings.json\n\n## 0.2.66\n\n- Print mode (-p) now supports streaming output via --output-format=stream-json\n- Fixed issue where pasting could trigger memory or bash mode unexpectedly\n\n## 0.2.63\n\n- Fixed an issue where MCP tools were loaded twice, which caused tool call errors\n\n## 0.2.61\n\n- Navigate menus with vim-style keys (j/k) or bash/emacs shortcuts (Ctrl+n/p) for faster interaction\n- Enhanced image detection for more reliable clipboard paste functionality\n- Fixed an issue where ESC key could crash the conversation history selector\n\n## 0.2.59\n\n- Copy+paste images directly into your prompt\n- Improved progress indicators for bash and fetch tools\n- Bugfixes for non-interactive mode (-p)\n\n## 0.2.54\n\n- Quickly add to Memory by starting your message with '#'\n- Press ctrl+r to see full output for long tool results\n- Added support for MCP SSE transport\n\n## 0.2.53\n\n- New web fetch tool lets Claude view URLs that you paste in\n- Fixed a bug with JPEG detection\n\n## 0.2.50\n\n- New MCP \"project\" scope now allows you to add MCP servers to .mcp.json files and commit them to your repository\n\n## 0.2.49\n\n- Previous MCP server scopes have been renamed: previous \"project\" scope is now \"local\" and \"global\" scope is now \"user\"\n\n## 0.2.47\n\n- Press Tab to auto-complete file and folder names\n- Press Shift + Tab to toggle auto-accept for file edits\n- Automatic conversation compaction for infinite conversation length (toggle with /config)\n\n## 0.2.44\n\n- Ask Claude to make a plan with thinking mode: just say 'think' or 'think harder' or even 'ultrathink'\n\n## 0.2.41\n\n- MCP server startup timeout can now be configured via MCP_TIMEOUT environment variable\n- MCP server startup no longer blocks the app from starting up\n\n## 0.2.37\n\n- New /release-notes command lets you view release notes at any time\n- `claude config add/remove` commands now accept multiple values separated by commas or spaces\n\n## 0.2.36\n\n- Import MCP servers from Claude Desktop with `claude mcp add-from-claude-desktop`\n- Add MCP servers as JSON strings with `claude mcp add-json <n> <json>`\n\n## 0.2.34\n\n- Vim bindings for text input - enable with /vim or /config\n\n## 0.2.32\n\n- Interactive MCP setup wizard: Run \"claude mcp add\" to add MCP servers with a step-by-step interface\n- Fix for some PersistentShell issues\n\n## 0.2.31\n\n- Custom slash commands: Markdown files in .claude/commands/ directories now appear as custom slash commands to insert prompts into your conversation\n- MCP debug mode: Run with --mcp-debug flag to get more information about MCP server errors\n\n## 0.2.30\n\n- Added ANSI color theme for better terminal compatibility\n- Fixed issue where slash command arguments weren't being sent properly\n- (Mac-only) API keys are now stored in macOS Keychain\n\n## 0.2.26\n\n- New /approved-tools command for managing tool permissions\n- Word-level diff display for improved code readability\n- Fuzzy matching for slash commands\n\n## 0.2.21\n\n- Fuzzy matching for /commands\n",
  "changelogLastFetched": 1752108764396,
  "iterm2SetupInProgress": false,
  "iterm2BackupPath": "/Users/dorkitude/Library/Preferences/com.googlecode.iterm2.plist.bak",
  "shiftEnterKeyBindingInstalled": true,
  "lastReleaseNotesSeen": "1.0.44",
  "statsigModel": {
    "firstParty": "claude-sonnet-4-20250514",
    "bedrock": "us.anthropic.claude-sonnet-4-20250514-v1:0",
    "vertex": "claude-sonnet-4@20250514"
  },
  "isQualifiedForDataSharing": false,
  "maxSubscriptionNoticeCount": 0,
  "hasAvailableMaxSubscription": false,
  "hasAcknowledgedCostThreshold": true,
  "firstStartTime": "2025-05-13T17:36:43.991Z",
  "claudeMaxTier": "not_max",
  "hasSeenGAAnnounce": true,
  "fallbackAvailableWarningThreshold": 0.5,
  "subscriptionNoticeCount": 0,
  "hasAvailableSubscription": false,
  "recommendedSubscription": "",
  "mcpServers": {
    "linear-cloud": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "mcp-remote",
        "https://mcp.linear.app/sse"
      ],
      "env": {}
    }
  },
  "githubActionSetupCount": 1,
  "bypassPermissionsModeAccepted": true,
  "oauthAccount": {
    "accountUuid": "09f65c66-38b5-4b9e-91dc-bb30fe743a51",
    "emailAddress": "kyle@endgame.io",
    "organizationUuid": "5fd5af91-fc2b-4bf7-947b-eb9a711a59c8",
    "organizationRole": "admin",
    "workspaceRole": null,
    "organizationName": "kyle@endgame.io's Organization"
  }
}